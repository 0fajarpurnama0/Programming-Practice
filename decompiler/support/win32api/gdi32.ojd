
gdi32.o:     file format pe-i386

SYMBOL TABLE:
[  0](sec -2)(fl 0x00)(ty   0)(scl 103) (nx 1) 0x00000000 gdi32.c
File 
[  2](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 1) 0x00000000 _AbortDoc@4
AUX tagndx 0 ttlsiz 0x0 lnnos 0 next 0
[  4](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000007 _AbortPath@4
[  5](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000000e _AddFontResourceA@4
[  6](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000015 _AddFontResourceW@4
[  7](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000001c _AngleArc@24
[  8](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000023 _AnimatePalette@16
[  9](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000002a _Arc@36
[ 10](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000031 _ArcTo@36
[ 11](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000038 _BeginPath@4
[ 12](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000003f _BitBlt@36
[ 13](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000046 _CancelDC@4
[ 14](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000004d _CheckColorsInGamut@16
[ 15](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000054 _Chord@36
[ 16](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000005b _ChoosePixelFormat@8
[ 17](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000062 _CloseEnhMetaFile@4
[ 18](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000069 _CloseFigure@4
[ 19](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000070 _CloseMetaFile@4
[ 20](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000077 _CombineRgn@16
[ 21](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000007e _CombineTransform@12
[ 22](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000085 _CopyEnhMetaFileA@8
[ 23](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000008c _CopyEnhMetaFileW@8
[ 24](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000093 _CopyMetaFileA@8
[ 25](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000009a _CopyMetaFileW@8
[ 26](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000a1 _CreateBitmap@20
[ 27](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000a8 _CreateBitmapIndirect@4
[ 28](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000af _CreateBrushIndirect@4
[ 29](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000b6 _CreateColorSpaceA@4
[ 30](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000bd _CreateColorSpaceW@4
[ 31](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000c4 _CreateCompatibleBitmap@12
[ 32](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000cb _CreateCompatibleDC@4
[ 33](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d2 _CreateDCA@16
[ 34](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d9 _CreateDCW@16
[ 35](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000e0 _CreateDIBitmap@24
[ 36](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000e7 _CreateDIBPatternBrush@8
[ 37](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000ee _CreateDIBPatternBrushPt@8
[ 38](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000f5 _CreateDIBSection@24
[ 39](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000fc _CreateDiscardableBitmap@12
[ 40](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000103 _CreateEllipticRgn@16
[ 41](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000010a _CreateEllipticRgnIndirect@4
[ 42](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000111 _CreateEnhMetaFileA@16
[ 43](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000118 _CreateEnhMetaFileW@16
[ 44](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000011f _CreateFontA@56
[ 45](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000126 _CreateFontW@56
[ 46](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000012d _CreateFontIndirectA@4
[ 47](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000134 _CreateFontIndirectW@4
[ 48](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000013b _CreateHalftonePalette@4
[ 49](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000142 _CreateHatchBrush@8
[ 50](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000149 _CreateICA@16
[ 51](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000150 _CreateICW@16
[ 52](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000157 _CreateMetaFileA@4
[ 53](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000015e _CreateMetaFileW@4
[ 54](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000165 _CreatePalette@4
[ 55](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000016c _CreatePatternBrush@4
[ 56](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000173 _CreatePen@12
[ 57](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000017a _CreatePenIndirect@4
[ 58](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000181 _CreatePolygonRgn@12
[ 59](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000188 _CreatePolyPolygonRgn@16
[ 60](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000018f _CreateRectRgn@16
[ 61](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000196 _CreateRectRgnIndirect@4
[ 62](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000019d _CreateRoundRectRgn@24
[ 63](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001a4 _CreateScalableFontResourceA@16
[ 64](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ab _CreateScalableFontResourceW@16
[ 65](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001b2 _CreateSolidBrush@4
[ 66](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001b9 _DeleteColorSpace@4
[ 67](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001c0 _DeleteDC@4
[ 68](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001c7 _DeleteEnhMetaFile@4
[ 69](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ce _DeleteMetaFile@4
[ 70](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001d5 _DeleteObject@4
[ 71](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001dc _DescribePixelFormat@16
[ 72](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001e3 _DeviceCapabilitiesA@20
[ 73](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001f4 _DeviceCapabilitiesW@20
[ 74](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000205 _DPtoLP@12
[ 75](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000020c _DrawEscape@16
[ 76](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000213 _Ellipse@20
[ 77](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000021a _EndDoc@4
[ 78](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000221 _EndPage@4
[ 79](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000228 _EndPath@4
[ 80](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000022f _EnumEnhMetaFile@20
[ 81](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000236 _EnumFontFamiliesA@16
[ 82](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000023d _EnumFontFamiliesW@16
[ 83](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000244 _EnumFontFamiliesExA@20
[ 84](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000024b _EnumFontFamiliesExW@20
[ 85](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000252 _EnumFontsA@16
[ 86](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000259 _EnumFontsW@16
[ 87](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000260 _EnumICMProfilesA@12
[ 88](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000267 _EnumICMProfilesW@12
[ 89](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000026e _EnumMetaFile@16
[ 90](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000275 _EnumObjects@16
[ 91](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000027c _EqualRgn@8
[ 92](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000283 _Escape@20
[ 93](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000028a _ExcludeClipRect@20
[ 94](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000291 _ExcludeUpdateRgn@8
[ 95](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000298 _ExtCreatePen@20
[ 96](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000029f _ExtCreateRegion@12
[ 97](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002a6 _ExtEscape@24
[ 98](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ad _ExtFloodFill@20
[ 99](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002b4 _ExtSelectClipRgn@12
[100](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002bb _ExtTextOutA@32
[101](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c2 _ExtTextOutW@32
[102](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c9 _FillPath@4
[103](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002d0 _FillRect@12
[104](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002d7 _FillRgn@12
[105](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002de _FixBrushOrgEx@16
[106](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002e5 _FlattenPath@4
[107](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ec _FloodFill@16
[108](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002f3 _GdiComment@12
[109](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002fa _GdiFlush@0
[110](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ff _GdiGetBatchLimit@0
[111](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000304 _GdiSetBatchLimit@4
[112](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000030b _GetArcDirection@4
[113](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000312 _GetAspectRatioFilterEx@8
[114](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000319 _GetBitmapBits@12
[115](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000320 _GetBitmapDimensionEx@8
[116](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000327 _GetBkColor@4
[117](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000032e _GetBkMode@4
[118](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000335 _GetBoundsRect@12
[119](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000033c _GetBrushOrgEx@8
[120](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000343 _GetCharABCWidthsA@16
[121](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000034a _GetCharABCWidthsW@16
[122](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000351 _GetCharABCWidthsFloatA@16
[123](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000358 _GetCharABCWidthsFloatW@16
[124](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000035f _GetCharacterPlacementA@24
[125](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000366 _GetCharacterPlacementW@24
[126](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000036d _GetCharWidth32A@16
[127](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000374 _GetCharWidth32W@16
[128](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000037b _GetCharWidthA@16
[129](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000382 _GetCharWidthW@16
[130](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000389 _GetCharWidthFloatA@16
[131](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000390 _GetCharWidthFloatW@16
[132](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000397 _GetClipBox@8
[133](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000039e _GetClipRgn@8
[134](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003a5 _GetColorAdjustment@8
[135](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ac _GetColorSpace@4
[136](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003b3 _GetCurrentObject@8
[137](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ba _GetCurrentPositionEx@8
[138](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003c1 _GetCursor@0
[139](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003c6 _GetDCOrgEx@8
[140](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003cd _GetDeviceCaps@8
[141](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003d4 _GetDeviceGammaRamp@8
[142](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003db _GetDIBColorTable@16
[143](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003e2 _GetDIBits@28
[144](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003e9 _GetEnhMetaFileA@4
[145](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003f0 _GetEnhMetaFileW@4
[146](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003f7 _GetEnhMetaFileBits@12
[147](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003fe _GetEnhMetaFileDescriptionA@12
[148](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000405 _GetEnhMetaFileDescriptionW@12
[149](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000040c _GetEnhMetaFileHeader@12
[150](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000413 _GetEnhMetaFilePaletteEntries@12
[151](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000041a _GetEnhMetaFilePixelFormat@12
[152](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000421 _GetFontData@20
[153](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000428 _GetFontLanguageInfo@4
[154](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000042f _GetGlyphOutlineA@28
[155](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000436 _GetGlyphOutlineW@28
[156](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000043d _GetGraphicsMode@4
[157](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000444 _GetICMProfileA@12
[158](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000044b _GetICMProfileW@12
[159](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000452 _GetKerningPairsA@12
[160](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000459 _GetKerningPairsW@12
[161](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000460 _GetLogColorSpaceA@12
[162](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000467 _GetLogColorSpaceW@12
[163](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000046e _GetMapMode@4
[164](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000475 _GetMetaFileA@4
[165](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000047c _GetMetaFileW@4
[166](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000483 _GetMetaFileBitsEx@12
[167](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000048a _GetMetaRgn@8
[168](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000491 _GetMiterLimit@8
[169](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000498 _GetNearestColor@8
[170](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000049f _GetNearestPaletteIndex@8
[171](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004a6 _GetObjectA@12
[172](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ad _GetObjectW@12
[173](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004b4 _GetObjectType@4
[174](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004bb _GetOutlineTextMetricsA@12
[175](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004c2 _GetOutlineTextMetricsW@12
[176](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004c9 _GetPaletteEntries@16
[177](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004d0 _GetPath@16
[178](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004d7 _GetPixel@12
[179](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004de _GetPixelFormat@4
[180](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004e5 _GetPolyFillMode@4
[181](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ec _GetRasterizerCaps@8
[182](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004f3 _GetRandomRgn@12
[183](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004fa _GetRegionData@12
[184](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000501 _GetRgnBox@8
[185](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000508 _GetROP2@4
[186](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000050f _GetStockObject@4
[187](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000516 _GetStretchBltMode@4
[188](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000051d _GetSystemPaletteEntries@16
[189](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000524 _GetSystemPaletteUse@4
[190](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000052b _GetTextAlign@4
[191](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000532 _GetTextCharacterExtra@4
[192](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000539 _GetTextCharset@4
[193](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000540 _GetTextCharsetInfo@12
[194](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000547 _GetTextColor@4
[195](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000054e _GetTextExtentExPointA@28
[196](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000555 _GetTextExtentExPointW@28
[197](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000055c _GetTextExtentPointA@16
[198](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000563 _GetTextExtentPointW@16
[199](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000056a _GetTextExtentPoint32A@16
[200](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000571 _GetTextExtentPoint32W@16
[201](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000578 _GetTextFaceA@12
[202](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000057f _GetTextFaceW@12
[203](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000586 _GetTextMetricsA@8
[204](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000058d _GetTextMetricsW@8
[205](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000594 _GetViewportExtEx@8
[206](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000059b _GetViewportOrgEx@8
[207](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005a2 _GetWindowExtEx@8
[208](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005a9 _GetWindowOrgEx@8
[209](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b0 _GetWinMetaFileBits@20
[210](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b7 _GetWorldTransform@8
[211](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005be _IntersectClipRect@20
[212](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005c5 _InvertRgn@8
[213](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005cc _LineDDA@24
[214](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005d3 _LineTo@12
[215](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005da _LPtoDP@12
[216](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005e1 _MaskBlt@48
[217](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005e8 _ModifyWorldTransform@12
[218](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005ef _MoveToEx@16
[219](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005f6 _OffsetClipRgn@12
[220](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005fd _OffsetRgn@12
[221](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000604 _OffsetViewportOrgEx@16
[222](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000060b _OffsetWindowOrgEx@16
[223](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000612 _PaintRgn@8
[224](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000619 _PatBlt@24
[225](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000620 _PathToRegion@4
[226](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000627 _Pie@36
[227](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000062e _PlayEnhMetaFile@12
[228](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000635 _PlayEnhMetaFileRecord@16
[229](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000063c _PlayMetaFile@8
[230](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000643 _PlayMetaFileRecord@16
[231](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000064a _PlgBlt@40
[232](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000651 _PolyBezier@12
[233](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000658 _PolyBezierTo@12
[234](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000065f _PolyDraw@16
[235](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000666 _Polygon@12
[236](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000066d _Polyline@12
[237](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000674 _PolylineTo@12
[238](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000067b _PolyPolygon@16
[239](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000682 _PolyPolyline@16
[240](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000689 _PolyTextOutA@12
[241](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000690 _PolyTextOutW@12
[242](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000697 _PtInRegion@12
[243](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000069e _PtVisible@12
[244](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006a5 _RealizePalette@4
[245](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ac _Rectangle@20
[246](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006b3 _RectInRegion@8
[247](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ba _RectVisible@8
[248](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c1 _RemoveFontResourceA@4
[249](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c8 _RemoveFontResourceW@4
[250](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006cf _ResetDCA@8
[251](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006d6 _ResetDCW@8
[252](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006dd _ResizePalette@8
[253](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006e4 _RestoreDC@8
[254](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006eb _RoundRect@28
[255](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f2 _SaveDC@4
[256](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f9 _ScaleViewportExtEx@24
[257](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000700 _ScaleWindowExtEx@24
[258](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000707 _SelectClipPath@8
[259](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000070e _SelectClipRgn@8
[260](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000715 _SelectObject@8
[261](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000071c _SelectPalette@12
[262](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000723 _SetAbortProc@8
[263](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000072a _SetArcDirection@8
[264](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000731 _SetBitmapBits@12
[265](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000738 _SetBitmapDimensionEx@16
[266](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000073f _SetBkColor@8
[267](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000746 _SetBkMode@8
[268](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000074d _SetBoundsRect@12
[269](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000754 _SetBrushOrgEx@16
[270](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000075b _SetColorAdjustment@8
[271](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000762 _SetColorSpace@8
[272](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000769 _SetDeviceGammaRamp@8
[273](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000770 _SetDIBColorTable@16
[274](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000777 _SetDIBits@28
[275](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000077e _SetDIBitsToDevice@48
[276](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000785 _SetEnhMetaFileBits@8
[277](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000078c _SetGraphicsMode@8
[278](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000793 _SetICMMode@8
[279](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000079a _SetICMProfileA@8
[280](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007a1 _SetICMProfileW@8
[281](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007a8 _SetMapMode@8
[282](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007af _SetMapperFlags@8
[283](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007b6 _SetMetaFileBitsEx@8
[284](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007bd _SetMetaRgn@4
[285](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007c4 _SetMiterLimit@12
[286](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007cb _SetPaletteEntries@16
[287](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007d2 _SetPixel@16
[288](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007d9 _SetPixelFormat@12
[289](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007e0 _SetPixelV@16
[290](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007e7 _SetPolyFillMode@8
[291](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007ee _SetRectRgn@20
[292](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007f5 _SetROP2@8
[293](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007fc _SetStretchBltMode@8
[294](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000803 _SetSystemPaletteUse@8
[295](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000080a _SetTextAlign@8
[296](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000811 _SetTextCharacterExtra@8
[297](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000818 _SetTextColor@8
[298](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000081f _SetTextJustification@12
[299](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000826 _SetViewportExtEx@16
[300](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000082d _SetViewportOrgEx@16
[301](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000834 _SetWindowExtEx@16
[302](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000083b _SetWindowOrgEx@16
[303](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000842 _SetWinMetaFileBits@16
[304](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000849 _SetWorldTransform@8
[305](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000850 _StartDocA@8
[306](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000857 _StartDocW@8
[307](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000085e _StartPage@4
[308](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000865 _StretchBlt@44
[309](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000086c _StretchDIBits@52
[310](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000873 _StrokeAndFillPath@4
[311](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000087a _StrokePath@4
[312](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000881 _SwapBuffers@4
[313](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000888 _TextOutA@20
[314](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000088f _TextOutW@20
[315](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000896 _TranslateCharsetInfo@12
[316](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000089d _UnrealizeObject@4
[317](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008a4 _UpdateColors@4
[318](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ab _UpdateICMRegKeyA@16
[319](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008b2 _UpdateICMRegKeyW@16
[320](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008b9 _WidenPath@4
[321](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008c0 _wglCopyContext@12
[322](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008c7 _wglCreateContext@4
[323](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ce _wglCreateLayerContext@8
[324](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008d5 _wglDeleteContext@4
[325](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008dc _wglDescribeLayerPlane@20
[326](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008e3 _wglGetCurrentContext@0
[327](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008e8 _wglGetCurrentDC@0
[328](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ed _wglGetLayerPaletteEntries@20
[329](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008f4 _wglGetProcAddress@4
[330](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008fb _wglMakeCurrent@8
[331](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000902 _wglRealizeLayerPalette@12
[332](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000909 _wglSetLayerPaletteEntries@20
[333](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000910 _wglShareLists@8
[334](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000917 _wglSwapLayerBuffers@8
[335](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000091e _wglUseFontBitmapsA@16
[336](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000925 _wglUseFontBitmapsW@16
[337](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000092c _wglUseFontOutlinesA@32
[338](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000933 _wglUseFontOutlinesW@32
[339](sec  1)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .text
AUX scnlen 0x93a nreloc 0 nlnno 0
[341](sec  2)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .data
AUX scnlen 0x0 nreloc 0 nlnno 0
[343](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .bss
AUX scnlen 0x0 nreloc 0 nlnno 0
[345](sec  4)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stab
AUX scnlen 0xb0d0 nreloc 340 nlnno 0
[347](sec  5)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stabstr
AUX scnlen 0x1d2eb nreloc 0 nlnno 0


/cygdrive/c/cg/projects/recstudio4/support/win32api/gdi32.c:
typedef int32 int;
typedef int8 char;
typedef int32 long int;
typedef uint32 unsigned int;
typedef uint32 long unsigned int;
typedef int64 long long int;
typedef uint64 long long unsigned int;
typedef int16 short int;
typedef uint16 short unsigned int;
typedef int8 signed char;
typedef uint8 unsigned char;
typedef float float;
typedef double double;
typedef float96 long double;
typedef struct %anon1 { /* size 8 */
  int real; /* bitsize 32, bitpos 0 */
  int imag; /* bitsize 32, bitpos 32 */
} complex int;
typedef complex float0 complex float;
typedef complex float0 complex double;
typedef complex float0 complex long double;
typedef void void;
typedef char *__builtin_va_list;
typedef bool32 boolean;
typedef boolean _Bool;
struct _EXCEPTION_REGISTRATION_RECORD { /* id 0 */
};
 /usr/include/w32api/windef.h:
typedef long unsigned int DWORD;
typedef int WINBOOL;
typedef int *PWINBOOL;
typedef int *LPWINBOOL;
typedef WINBOOL BOOL;
typedef unsigned char BYTE;
typedef BOOL *PBOOL;
typedef BOOL *LPBOOL;
typedef short unsigned int WORD;
typedef float FLOAT;
typedef FLOAT *PFLOAT;
typedef BYTE *PBYTE;
typedef BYTE *LPBYTE;
typedef int *PINT;
typedef int *LPINT;
typedef WORD *PWORD;
typedef WORD *LPWORD;
typedef long int *LPLONG;
typedef DWORD *PDWORD;
typedef DWORD *LPDWORD;
typedef void const *PCVOID;
typedef void const *LPCVOID;
typedef int INT;
typedef unsigned int UINT;
typedef unsigned int *PUINT;
typedef unsigned int *LPUINT;
typedef unsigned int WPARAM;
typedef long int LPARAM;
typedef long int LRESULT;
typedef long int HRESULT;
typedef WORD ATOM;
typedef void *HGLOBAL;
typedef void *HLOCAL;
typedef void *GLOBALHANDLE;
typedef void *LOCALHANDLE;
typedef void *HGDIOBJ;
struct HACCEL__ { /* size 4 id 2 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HACCEL__ /* id 2 */ *HACCEL;
struct HBITMAP__ { /* size 4 id 3 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBITMAP__ /* id 3 */ *HBITMAP;
struct HBRUSH__ { /* size 4 id 4 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBRUSH__ /* id 4 */ *HBRUSH;
struct HCOLORSPACE__ { /* size 4 id 5 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HCOLORSPACE__ /* id 5 */ *HCOLORSPACE;
struct HDC__ { /* size 4 id 6 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDC__ /* id 6 */ *HDC;
struct HGLRC__ { /* size 4 id 7 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HGLRC__ /* id 7 */ *HGLRC;
struct HDESK__ { /* size 4 id 8 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDESK__ /* id 8 */ *HDESK;
struct HENHMETAFILE__ { /* size 4 id 9 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HENHMETAFILE__ /* id 9 */ *HENHMETAFILE;
struct HFONT__ { /* size 4 id 10 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HFONT__ /* id 10 */ *HFONT;
struct HICON__ { /* size 4 id 11 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HICON__ /* id 11 */ *HICON;
struct HKEY__ { /* size 4 id 12 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKEY__ /* id 12 */ *HKEY;
struct HMONITOR__ { /* size 4 id 13 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMONITOR__ /* id 13 */ *HMONITOR;
struct HTERMINAL__ { /* size 4 id 14 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTERMINAL__ /* id 14 */ *HTERMINAL;
struct HWINEVENTHOOK__ { /* size 4 id 15 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINEVENTHOOK__ /* id 15 */ *HWINEVENTHOOK;
typedef HKEY *PHKEY;
struct HMENU__ { /* size 4 id 16 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMENU__ /* id 16 */ *HMENU;
struct HMETAFILE__ { /* size 4 id 17 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMETAFILE__ /* id 17 */ *HMETAFILE;
struct HINSTANCE__ { /* size 4 id 18 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HINSTANCE__ /* id 18 */ *HINSTANCE;
typedef HINSTANCE HMODULE;
struct HPALETTE__ { /* size 4 id 19 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPALETTE__ /* id 19 */ *HPALETTE;
struct HPEN__ { /* size 4 id 20 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPEN__ /* id 20 */ *HPEN;
struct HRGN__ { /* size 4 id 21 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRGN__ /* id 21 */ *HRGN;
struct HRSRC__ { /* size 4 id 22 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRSRC__ /* id 22 */ *HRSRC;
struct HSTR__ { /* size 4 id 23 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HSTR__ /* id 23 */ *HSTR;
struct HTASK__ { /* size 4 id 24 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTASK__ /* id 24 */ *HTASK;
struct HWND__ { /* size 4 id 25 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWND__ /* id 25 */ *HWND;
struct HWINSTA__ { /* size 4 id 26 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINSTA__ /* id 26 */ *HWINSTA;
struct HKL__ { /* size 4 id 27 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKL__ /* id 27 */ *HKL;
typedef int HFILE;
typedef HICON HCURSOR;
typedef DWORD COLORREF;
typedef int (*FARPROC) (/* unknown */);
typedef int (*NEARPROC) (/* unknown */);
typedef int (*PROC) (/* unknown */);
struct tagRECT { /* size 16 id 28 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECT /* id 28 */ RECT;
typedef struct tagRECT /* id 28 */ *PRECT;
typedef struct tagRECT /* id 28 */ *LPRECT;
typedef RECT const *LPCRECT;
struct tagRECTL { /* size 16 id 29 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECTL /* id 29 */ RECTL;
typedef struct tagRECTL /* id 29 */ *PRECTL;
typedef struct tagRECTL /* id 29 */ *LPRECTL;
typedef RECTL const *LPCRECTL;
struct tagPOINT { /* size 8 id 30 */
  long int x; /* bitsize 32, bitpos 0 */
  long int y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINT /* id 30 */ POINT;
typedef struct tagPOINT /* id 30 */ POINTL;
typedef struct tagPOINT /* id 30 */ *PPOINT;
typedef struct tagPOINT /* id 30 */ *LPPOINT;
typedef struct tagPOINT /* id 30 */ *PPOINTL;
typedef struct tagPOINT /* id 30 */ *LPPOINTL;
struct tagSIZE { /* size 8 id 31 */
  long int cx; /* bitsize 32, bitpos 0 */
  long int cy; /* bitsize 32, bitpos 32 */
};
typedef struct tagSIZE /* id 31 */ SIZE;
typedef struct tagSIZE /* id 31 */ SIZEL;
typedef struct tagSIZE /* id 31 */ *PSIZE;
typedef struct tagSIZE /* id 31 */ *LPSIZE;
typedef struct tagSIZE /* id 31 */ *PSIZEL;
typedef struct tagSIZE /* id 31 */ *LPSIZEL;
struct tagPOINTS { /* size 4 id 32 */
  short int x; /* bitsize 16, bitpos 0 */
  short int y; /* bitsize 16, bitpos 16 */
};
typedef struct tagPOINTS /* id 32 */ POINTS;
typedef struct tagPOINTS /* id 32 */ *PPOINTS;
typedef struct tagPOINTS /* id 32 */ *LPPOINTS;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/winnt.h:
typedef char CHAR;
typedef short int SHORT;
typedef long int LONG;
typedef char CCHAR;
typedef char *PCCHAR;
typedef unsigned char UCHAR;
typedef unsigned char *PUCHAR;
typedef short unsigned int USHORT;
typedef short unsigned int *PUSHORT;
typedef long unsigned int ULONG;
typedef long unsigned int *PULONG;
typedef char *PSZ;
typedef void *PVOID;
typedef void *LPVOID;
typedef void *PVOID64;
typedef short unsigned int wchar_t;
typedef wchar_t WCHAR;
typedef WCHAR *PWCHAR;
typedef WCHAR *LPWCH;
typedef WCHAR *PWCH;
typedef WCHAR *NWPSTR;
typedef WCHAR *LPWSTR;
typedef WCHAR *PWSTR;
typedef WCHAR const *LPCWCH;
typedef WCHAR const *PCWCH;
typedef WCHAR const *LPCWSTR;
typedef WCHAR const *PCWSTR;
typedef CHAR *PCHAR;
typedef CHAR *LPCH;
typedef CHAR *PCH;
typedef CHAR *NPSTR;
typedef CHAR *LPSTR;
typedef CHAR *PSTR;
typedef CHAR const *LPCCH;
typedef CHAR const *PCSTR;
typedef CHAR const *LPCSTR;
typedef CHAR TCHAR;
typedef CHAR _TCHAR;
typedef TCHAR TBYTE;
typedef TCHAR *PTCH;
typedef TCHAR *PTBYTE;
typedef TCHAR *LPTCH;
typedef TCHAR *PTSTR;
typedef TCHAR *LPTSTR;
typedef TCHAR *LP;
typedef TCHAR *PTCHAR;
typedef TCHAR const *LPCTSTR;
typedef SHORT *PSHORT;
typedef LONG *PLONG;
typedef void *HANDLE;
typedef HANDLE *PHANDLE;
typedef HANDLE *LPHANDLE;
typedef DWORD LCID;
typedef PDWORD PLCID;
typedef WORD LANGID;
typedef long long int LONGLONG;
typedef long long unsigned int DWORDLONG;
typedef LONGLONG *PLONGLONG;
typedef DWORDLONG *PDWORDLONG;
typedef DWORDLONG ULONGLONG;
typedef DWORDLONG *PULONGLONG;
typedef LONGLONG USN;
typedef BYTE BOOLEAN;
typedef BYTE *PBOOLEAN;
typedef BYTE FCHAR;
typedef WORD FSHORT;
typedef DWORD FLONG;
typedef DWORD ACCESS_MASK;
typedef DWORD *PACCESS_MASK;
struct _GUID { /* size 16 id 33 */
  long unsigned int Data1; /* bitsize 32, bitpos 0 */
  short unsigned int Data2; /* bitsize 16, bitpos 32 */
  short unsigned int Data3; /* bitsize 16, bitpos 48 */
  unsigned char Data4[8]:uint32; /* bitsize 64, bitpos 64 */
};
typedef struct _GUID /* id 33 */ GUID;
typedef struct _GUID /* id 33 */ *REFGUID;
typedef struct _GUID /* id 33 */ *LPGUID;
struct _GENERIC_MAPPING { /* size 16 id 34 */
  ACCESS_MASK GenericRead; /* bitsize 32, bitpos 0 */
  ACCESS_MASK GenericWrite; /* bitsize 32, bitpos 32 */
  ACCESS_MASK GenericExecute; /* bitsize 32, bitpos 64 */
  ACCESS_MASK GenericAll; /* bitsize 32, bitpos 96 */
};
typedef struct _GENERIC_MAPPING /* id 34 */ GENERIC_MAPPING;
typedef struct _GENERIC_MAPPING /* id 34 */ *PGENERIC_MAPPING;
struct _ACE_HEADER { /* size 4 id 35 */
  BYTE AceType; /* bitsize 8, bitpos 0 */
  BYTE AceFlags; /* bitsize 8, bitpos 8 */
  WORD AceSize; /* bitsize 16, bitpos 16 */
};
typedef struct _ACE_HEADER /* id 35 */ ACE_HEADER;
typedef struct _ACE_HEADER /* id 35 */ *PACE_HEADER;
struct _ACCESS_ALLOWED_ACE { /* size 12 id 36 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ *PACCESS_ALLOWED_ACE;
struct _ACCESS_DENIED_ACE { /* size 12 id 37 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_DENIED_ACE /* id 37 */ ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_ACE /* id 37 */ *PACCESS_DENIED_ACE;
struct _SYSTEM_AUDIT_ACE { /* size 12 id 38 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_AUDIT_ACE /* id 38 */ SYSTEM_AUDIT_ACE;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
struct _SYSTEM_ALARM_ACE { /* size 12 id 39 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ SYSTEM_ALARM_ACE;
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ *PSYSTEM_ALARM_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE { /* size 48 id 40 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ *PACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE { /* size 48 id 41 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ ACCESS_DENIED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ *PACCESS_DENIED_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE { /* size 48 id 42 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ SYSTEM_AUDIT_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ *PSYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE { /* size 48 id 43 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ SYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ *PSYSTEM_ALARM_OBJECT_ACE;
struct _ACL { /* size 8 id 44 */
  BYTE AclRevision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  WORD AclSize; /* bitsize 16, bitpos 16 */
  WORD AceCount; /* bitsize 16, bitpos 32 */
  WORD Sbz2; /* bitsize 16, bitpos 48 */
};
typedef struct _ACL /* id 44 */ ACL;
typedef struct _ACL /* id 44 */ *PACL;
struct _ACL_REVISION_INFORMATION { /* size 4 id 45 */
  DWORD AclRevision; /* bitsize 32, bitpos 0 */
};
typedef struct _ACL_REVISION_INFORMATION /* id 45 */ ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION { /* size 12 id 46 */
  DWORD AceCount; /* bitsize 32, bitpos 0 */
  DWORD AclBytesInUse; /* bitsize 32, bitpos 32 */
  DWORD AclBytesFree; /* bitsize 32, bitpos 64 */
};
typedef struct _ACL_SIZE_INFORMATION /* id 46 */ ACL_SIZE_INFORMATION;
struct _FLOATING_SAVE_AREA { /* size 112 id 47 */
  DWORD ControlWord; /* bitsize 32, bitpos 0 */
  DWORD StatusWord; /* bitsize 32, bitpos 32 */
  DWORD TagWord; /* bitsize 32, bitpos 64 */
  DWORD ErrorOffset; /* bitsize 32, bitpos 96 */
  DWORD ErrorSelector; /* bitsize 32, bitpos 128 */
  DWORD DataOffset; /* bitsize 32, bitpos 160 */
  DWORD DataSelector; /* bitsize 32, bitpos 192 */
  BYTE RegisterArea[80]:uint32; /* bitsize 640, bitpos 224 */
  DWORD Cr0NpxState; /* bitsize 32, bitpos 864 */
};
typedef struct _FLOATING_SAVE_AREA /* id 47 */ FLOATING_SAVE_AREA;
struct _CONTEXT { /* size 716 id 48 */
  DWORD ContextFlags; /* bitsize 32, bitpos 0 */
  DWORD Dr0; /* bitsize 32, bitpos 32 */
  DWORD Dr1; /* bitsize 32, bitpos 64 */
  DWORD Dr2; /* bitsize 32, bitpos 96 */
  DWORD Dr3; /* bitsize 32, bitpos 128 */
  DWORD Dr6; /* bitsize 32, bitpos 160 */
  DWORD Dr7; /* bitsize 32, bitpos 192 */
  FLOATING_SAVE_AREA FloatSave; /* bitsize 896, bitpos 224 */
  DWORD SegGs; /* bitsize 32, bitpos 1120 */
  DWORD SegFs; /* bitsize 32, bitpos 1152 */
  DWORD SegEs; /* bitsize 32, bitpos 1184 */
  DWORD SegDs; /* bitsize 32, bitpos 1216 */
  DWORD Edi; /* bitsize 32, bitpos 1248 */
  DWORD Esi; /* bitsize 32, bitpos 1280 */
  DWORD Ebx; /* bitsize 32, bitpos 1312 */
  DWORD Edx; /* bitsize 32, bitpos 1344 */
  DWORD Ecx; /* bitsize 32, bitpos 1376 */
  DWORD Eax; /* bitsize 32, bitpos 1408 */
  DWORD Ebp; /* bitsize 32, bitpos 1440 */
  DWORD Eip; /* bitsize 32, bitpos 1472 */
  DWORD SegCs; /* bitsize 32, bitpos 1504 */
  DWORD EFlags; /* bitsize 32, bitpos 1536 */
  DWORD Esp; /* bitsize 32, bitpos 1568 */
  DWORD SegSs; /* bitsize 32, bitpos 1600 */
  BYTE ExtendedRegisters[512]:uint32; /* bitsize 4096, bitpos 1632 */
};
typedef struct _CONTEXT /* id 48 */ CONTEXT;
typedef CONTEXT *PCONTEXT;
typedef CONTEXT *LPCONTEXT;
struct _EXCEPTION_RECORD { /* size 80 id 49 */
  DWORD ExceptionCode; /* bitsize 32, bitpos 0 */
  DWORD ExceptionFlags; /* bitsize 32, bitpos 32 */
  struct _EXCEPTION_RECORD /* id 49 */ *ExceptionRecord; /* bitsize 32, bitpos 64 */
  PVOID ExceptionAddress; /* bitsize 32, bitpos 96 */
  DWORD NumberParameters; /* bitsize 32, bitpos 128 */
  DWORD ExceptionInformation[15]:uint32; /* bitsize 480, bitpos 160 */
};
typedef struct _EXCEPTION_RECORD /* id 49 */ EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *LPEXCEPTION_RECORD;
struct _EXCEPTION_POINTERS { /* size 8 id 50 */
  PEXCEPTION_RECORD ExceptionRecord; /* bitsize 32, bitpos 0 */
  PCONTEXT ContextRecord; /* bitsize 32, bitpos 32 */
};
typedef struct _EXCEPTION_POINTERS /* id 50 */ EXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *LPEXCEPTION_POINTERS;
union _LARGE_INTEGER { /* size 8 id 51 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  LONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _LARGE_INTEGER /* id 51 */ LARGE_INTEGER;
typedef union _LARGE_INTEGER /* id 51 */ *PLARGE_INTEGER;
union _ULARGE_INTEGER { /* size 8 id 53 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  ULONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _ULARGE_INTEGER /* id 53 */ ULARGE_INTEGER;
typedef union _ULARGE_INTEGER /* id 53 */ *PULARGE_INTEGER;
struct _LUID { /* size 8 id 55 */
  DWORD LowPart; /* bitsize 32, bitpos 0 */
  LONG HighPart; /* bitsize 32, bitpos 32 */
};
typedef struct _LUID /* id 55 */ LUID;
typedef struct _LUID /* id 55 */ *PLUID;
struct _LUID_AND_ATTRIBUTES { /* size 12 id 56 */
  LUID Luid; /* bitsize 64, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
};
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ LUID_AND_ATTRIBUTES;
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ *PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
struct _PRIVILEGE_SET { /* size 20 id 57 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  DWORD Control; /* bitsize 32, bitpos 32 */
  LUID_AND_ATTRIBUTES Privilege[1]:uint32; /* bitsize 96, bitpos 64 */
};
typedef struct _PRIVILEGE_SET /* id 57 */ PRIVILEGE_SET;
typedef struct _PRIVILEGE_SET /* id 57 */ *PPRIVILEGE_SET;
struct _SECURITY_ATTRIBUTES { /* size 12 id 58 */
  DWORD nLength; /* bitsize 32, bitpos 0 */
  LPVOID lpSecurityDescriptor; /* bitsize 32, bitpos 32 */
  BOOL bInheritHandle; /* bitsize 32, bitpos 64 */
};
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ SECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *PSECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *LPSECURITY_ATTRIBUTES;
enum _SECURITY_IMPERSONATION_LEVEL { SecurityAnonymous, SecurityIdentification, SecurityImpersonation, SecurityDelegation };
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
struct _SECURITY_QUALITY_OF_SERVICE { /* size 12 id 59 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 32 */
  SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode; /* bitsize 8, bitpos 64 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 72 */
};
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ SECURITY_QUALITY_OF_SERVICE;
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ *PSECURITY_QUALITY_OF_SERVICE;
typedef PVOID PACCESS_TOKEN;
struct _SE_IMPERSONATION_STATE { /* size 12 id 60 */
  PACCESS_TOKEN Token; /* bitsize 32, bitpos 0 */
  BOOLEAN CopyOnOpen; /* bitsize 8, bitpos 32 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 40 */
  SECURITY_IMPERSONATION_LEVEL Level; /* bitsize 32, bitpos 64 */
};
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ SE_IMPERSONATION_STATE;
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ *PSE_IMPERSONATION_STATE;
struct _SID_IDENTIFIER_AUTHORITY { /* size 6 id 61 */
  BYTE Value[6]:uint32; /* bitsize 48, bitpos 0 */
};
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ SID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *LPSID_IDENTIFIER_AUTHORITY;
typedef PVOID PSID;
struct _SID { /* size 12 id 62 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE SubAuthorityCount; /* bitsize 8, bitpos 8 */
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority; /* bitsize 48, bitpos 16 */
  DWORD SubAuthority[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _SID /* id 62 */ SID;
typedef struct _SID /* id 62 */ *PISID;
struct _SID_AND_ATTRIBUTES { /* size 8 id 63 */
  PSID Sid; /* bitsize 32, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 32 */
};
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ SID_AND_ATTRIBUTES;
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ *PSID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
struct _TOKEN_SOURCE { /* size 16 id 64 */
  CHAR SourceName[8]:uint32; /* bitsize 64, bitpos 0 */
  LUID SourceIdentifier; /* bitsize 64, bitpos 64 */
};
typedef struct _TOKEN_SOURCE /* id 64 */ TOKEN_SOURCE;
typedef struct _TOKEN_SOURCE /* id 64 */ *PTOKEN_SOURCE;
struct _TOKEN_CONTROL { /* size 40 id 65 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LUID ModifiedId; /* bitsize 64, bitpos 128 */
  TOKEN_SOURCE TokenSource; /* bitsize 128, bitpos 192 */
};
typedef struct _TOKEN_CONTROL /* id 65 */ TOKEN_CONTROL;
typedef struct _TOKEN_CONTROL /* id 65 */ *PTOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL { /* size 4 id 66 */
  PACL DefaultDacl; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ *PTOKEN_DEFAULT_DACL;
struct _TOKEN_GROUPS { /* size 12 id 67 */
  DWORD GroupCount; /* bitsize 32, bitpos 0 */
  SID_AND_ATTRIBUTES Groups[1]:uint32; /* bitsize 64, bitpos 32 */
};
typedef struct _TOKEN_GROUPS /* id 67 */ TOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *PTOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *LPTOKEN_GROUPS;
struct _TOKEN_OWNER { /* size 4 id 68 */
  PSID Owner; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_OWNER /* id 68 */ TOKEN_OWNER;
typedef struct _TOKEN_OWNER /* id 68 */ *PTOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP { /* size 4 id 69 */
  PSID PrimaryGroup; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ TOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ *PTOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES { /* size 16 id 70 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  LUID_AND_ATTRIBUTES Privileges[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _TOKEN_PRIVILEGES /* id 70 */ TOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *LPTOKEN_PRIVILEGES;
enum tagTOKEN_TYPE { TokenPrimary = 1, TokenImpersonation };
typedef enum tagTOKEN_TYPE TOKEN_TYPE;
typedef enum tagTOKEN_TYPE *PTOKEN_TYPE;
struct _TOKEN_STATISTICS { /* size 56 id 71 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ExpirationTime; /* bitsize 64, bitpos 128 */
  TOKEN_TYPE TokenType; /* bitsize 32, bitpos 192 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 224 */
  DWORD DynamicCharged; /* bitsize 32, bitpos 256 */
  DWORD DynamicAvailable; /* bitsize 32, bitpos 288 */
  DWORD GroupCount; /* bitsize 32, bitpos 320 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 352 */
  LUID ModifiedId; /* bitsize 64, bitpos 384 */
};
typedef struct _TOKEN_STATISTICS /* id 71 */ TOKEN_STATISTICS;
typedef struct _TOKEN_STATISTICS /* id 71 */ *PTOKEN_STATISTICS;
struct _TOKEN_USER { /* size 8 id 72 */
  SID_AND_ATTRIBUTES User; /* bitsize 64, bitpos 0 */
};
typedef struct _TOKEN_USER /* id 72 */ TOKEN_USER;
typedef struct _TOKEN_USER /* id 72 */ *PTOKEN_USER;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
struct _SECURITY_DESCRIPTOR { /* size 20 id 73 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  SECURITY_DESCRIPTOR_CONTROL Control; /* bitsize 16, bitpos 16 */
  PSID Owner; /* bitsize 32, bitpos 32 */
  PSID Group; /* bitsize 32, bitpos 64 */
  PACL Sacl; /* bitsize 32, bitpos 96 */
  PACL Dacl; /* bitsize 32, bitpos 128 */
};
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PSECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PISECURITY_DESCRIPTOR;
enum _TOKEN_INFORMATION_CLASS { TokenUser = 1, TokenGroups, TokenPrivileges, TokenOwner, TokenPrimaryGroup, TokenDefaultDacl, TokenSource, TokenType, TokenImpersonationLevel, TokenStatistics, TokenRestrictedSids, TokenSessionId, TokenGroupsAndPrivileges, TokenSessionReference, TokenSandBoxInert, TokenAuditPolicy, TokenOrigin };
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
enum _SID_NAME_USE { SidTypeUser = 1, SidTypeGroup, SidTypeDomain, SidTypeAlias, SidTypeWellKnownGroup, SidTypeDeletedAccount, SidTypeInvalid, SidTypeUnknown, SidTypeComputer };
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
struct _QUOTA_LIMITS { /* size 32 id 74 */
  long unsigned int PagedPoolLimit; /* bitsize 32, bitpos 0 */
  long unsigned int NonPagedPoolLimit; /* bitsize 32, bitpos 32 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 64 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 96 */
  long unsigned int PagefileLimit; /* bitsize 32, bitpos 128 */
  LARGE_INTEGER TimeLimit; /* bitsize 64, bitpos 192 */
};
typedef struct _QUOTA_LIMITS /* id 74 */ QUOTA_LIMITS;
typedef struct _QUOTA_LIMITS /* id 74 */ *PQUOTA_LIMITS;
struct _IO_COUNTERS { /* size 48 id 75 */
  ULONGLONG ReadOperationCount; /* bitsize 64, bitpos 0 */
  ULONGLONG WriteOperationCount; /* bitsize 64, bitpos 64 */
  ULONGLONG OtherOperationCount; /* bitsize 64, bitpos 128 */
  ULONGLONG ReadTransferCount; /* bitsize 64, bitpos 192 */
  ULONGLONG WriteTransferCount; /* bitsize 64, bitpos 256 */
  ULONGLONG OtherTransferCount; /* bitsize 64, bitpos 320 */
};
typedef struct _IO_COUNTERS /* id 75 */ IO_COUNTERS;
typedef struct _IO_COUNTERS /* id 75 */ *PIO_COUNTERS;
struct _FILE_NOTIFY_INFORMATION { /* size 16 id 76 */
  DWORD NextEntryOffset; /* bitsize 32, bitpos 0 */
  DWORD Action; /* bitsize 32, bitpos 32 */
  DWORD FileNameLength; /* bitsize 32, bitpos 64 */
  WCHAR FileName[1]:uint32; /* bitsize 16, bitpos 96 */
};
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ FILE_NOTIFY_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ *PFILE_NOTIFY_INFORMATION;
struct _TAPE_ERASE { /* size 8 id 77 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_ERASE /* id 77 */ TAPE_ERASE;
typedef struct _TAPE_ERASE /* id 77 */ *PTAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS { /* size 32 id 78 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  DWORD DefaultBlockSize; /* bitsize 32, bitpos 32 */
  DWORD MaximumBlockSize; /* bitsize 32, bitpos 64 */
  DWORD MinimumBlockSize; /* bitsize 32, bitpos 96 */
  DWORD MaximumPartitionCount; /* bitsize 32, bitpos 128 */
  DWORD FeaturesLow; /* bitsize 32, bitpos 160 */
  DWORD FeaturesHigh; /* bitsize 32, bitpos 192 */
  DWORD EOTWarningZoneSize; /* bitsize 32, bitpos 224 */
};
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ *PTAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS { /* size 32 id 79 */
  LARGE_INTEGER Capacity; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER Remaining; /* bitsize 64, bitpos 64 */
  DWORD BlockSize; /* bitsize 32, bitpos 128 */
  DWORD PartitionCount; /* bitsize 32, bitpos 160 */
  BOOLEAN WriteProtected; /* bitsize 8, bitpos 192 */
};
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ *PTAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION { /* size 16 id 80 */
  ULONG Type; /* bitsize 32, bitpos 0 */
  ULONG Partition; /* bitsize 32, bitpos 32 */
  ULONG OffsetLow; /* bitsize 32, bitpos 64 */
  ULONG OffsetHigh; /* bitsize 32, bitpos 96 */
};
typedef struct _TAPE_GET_POSITION /* id 80 */ TAPE_GET_POSITION;
typedef struct _TAPE_GET_POSITION /* id 80 */ *PTAPE_GET_POSITION;
struct _TAPE_PREPARE { /* size 8 id 81 */
  DWORD Operation; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_PREPARE /* id 81 */ TAPE_PREPARE;
typedef struct _TAPE_PREPARE /* id 81 */ *PTAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS { /* size 8 id 82 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  ULONG EOTWarningZoneSize; /* bitsize 32, bitpos 32 */
};
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ *PTAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS { /* size 4 id 83 */
  ULONG BlockSize; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ *PTAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION { /* size 24 id 84 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Partition; /* bitsize 32, bitpos 32 */
  LARGE_INTEGER Offset; /* bitsize 64, bitpos 64 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 128 */
};
typedef struct _TAPE_SET_POSITION /* id 84 */ TAPE_SET_POSITION;
typedef struct _TAPE_SET_POSITION /* id 84 */ *PTAPE_SET_POSITION;
struct _TAPE_WRITE_MARKS { /* size 12 id 85 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 64 */
};
typedef struct _TAPE_WRITE_MARKS /* id 85 */ TAPE_WRITE_MARKS;
typedef struct _TAPE_WRITE_MARKS /* id 85 */ *PTAPE_WRITE_MARKS;
struct _TAPE_CREATE_PARTITION { /* size 12 id 86 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  DWORD Size; /* bitsize 32, bitpos 64 */
};
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ TAPE_CREATE_PARTITION;
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ *PTAPE_CREATE_PARTITION;
struct _MEMORY_BASIC_INFORMATION { /* size 28 id 87 */
  PVOID BaseAddress; /* bitsize 32, bitpos 0 */
  PVOID AllocationBase; /* bitsize 32, bitpos 32 */
  DWORD AllocationProtect; /* bitsize 32, bitpos 64 */
  DWORD RegionSize; /* bitsize 32, bitpos 96 */
  DWORD State; /* bitsize 32, bitpos 128 */
  DWORD Protect; /* bitsize 32, bitpos 160 */
  DWORD Type; /* bitsize 32, bitpos 192 */
};
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ MEMORY_BASIC_INFORMATION;
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ *PMEMORY_BASIC_INFORMATION;
struct _MESSAGE_RESOURCE_ENTRY { /* size 6 id 88 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  BYTE Text[1]:uint32; /* bitsize 8, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ MESSAGE_RESOURCE_ENTRY;
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ *PMESSAGE_RESOURCE_ENTRY;
struct _MESSAGE_RESOURCE_BLOCK { /* size 12 id 89 */
  DWORD LowId; /* bitsize 32, bitpos 0 */
  DWORD HighId; /* bitsize 32, bitpos 32 */
  DWORD OffsetToEntries; /* bitsize 32, bitpos 64 */
};
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ MESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ *PMESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA { /* size 16 id 90 */
  DWORD NumberOfBlocks; /* bitsize 32, bitpos 0 */
  MESSAGE_RESOURCE_BLOCK Blocks[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ MESSAGE_RESOURCE_DATA;
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ *PMESSAGE_RESOURCE_DATA;
struct _LIST_ENTRY { /* size 8 id 91 */
  struct _LIST_ENTRY /* id 91 */ *Flink; /* bitsize 32, bitpos 0 */
  struct _LIST_ENTRY /* id 91 */ *Blink; /* bitsize 32, bitpos 32 */
};
typedef struct _LIST_ENTRY /* id 91 */ LIST_ENTRY;
typedef struct _LIST_ENTRY /* id 91 */ *PLIST_ENTRY;
struct _SINGLE_LIST_ENTRY { /* size 4 id 92 */
  struct _SINGLE_LIST_ENTRY /* id 92 */ *Next; /* bitsize 32, bitpos 0 */
};
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ SINGLE_LIST_ENTRY;
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ *PSINGLE_LIST_ENTRY;
union _SLIST_HEADER { /* size 8 id 93 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
  struct %anon94 { /* size 8 */
    SINGLE_LIST_ENTRY Next; /* bitsize 32, bitpos 0 */
    WORD Depth; /* bitsize 16, bitpos 32 */
    WORD Sequence; /* bitsize 16, bitpos 48 */
  }; /* bitsize 64, bitpos 0 */
};
typedef union _SLIST_HEADER /* id 93 */ SLIST_HEADER;
typedef union _SLIST_HEADER /* id 93 */ *PSLIST_HEADER;
struct _RTL_CRITICAL_SECTION_DEBUG { /* size 32 id 95 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD CreatorBackTraceIndex; /* bitsize 16, bitpos 16 */
  struct _RTL_CRITICAL_SECTION /* id 96 */ *CriticalSection; /* bitsize 32, bitpos 32 */
  LIST_ENTRY ProcessLocksList; /* bitsize 64, bitpos 64 */
  DWORD EntryCount; /* bitsize 32, bitpos 128 */
  DWORD ContentionCount; /* bitsize 32, bitpos 160 */
  DWORD Spare[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ RTL_CRITICAL_SECTION_DEBUG;
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ *PRTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION { /* size 24 id 96 */
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo; /* bitsize 32, bitpos 0 */
  LONG LockCount; /* bitsize 32, bitpos 32 */
  LONG RecursionCount; /* bitsize 32, bitpos 64 */
  HANDLE OwningThread; /* bitsize 32, bitpos 96 */
  HANDLE LockSemaphore; /* bitsize 32, bitpos 128 */
  DWORD Reserved; /* bitsize 32, bitpos 160 */
};
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ RTL_CRITICAL_SECTION;
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ *PRTL_CRITICAL_SECTION;
struct _EVENTLOGRECORD { /* size 56 id 97 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  DWORD Reserved; /* bitsize 32, bitpos 32 */
  DWORD RecordNumber; /* bitsize 32, bitpos 64 */
  DWORD TimeGenerated; /* bitsize 32, bitpos 96 */
  DWORD TimeWritten; /* bitsize 32, bitpos 128 */
  DWORD EventID; /* bitsize 32, bitpos 160 */
  WORD EventType; /* bitsize 16, bitpos 192 */
  WORD NumStrings; /* bitsize 16, bitpos 208 */
  WORD EventCategory; /* bitsize 16, bitpos 224 */
  WORD ReservedFlags; /* bitsize 16, bitpos 240 */
  DWORD ClosingRecordNumber; /* bitsize 32, bitpos 256 */
  DWORD StringOffset; /* bitsize 32, bitpos 288 */
  DWORD UserSidLength; /* bitsize 32, bitpos 320 */
  DWORD UserSidOffset; /* bitsize 32, bitpos 352 */
  DWORD DataLength; /* bitsize 32, bitpos 384 */
  DWORD DataOffset; /* bitsize 32, bitpos 416 */
};
typedef struct _EVENTLOGRECORD /* id 97 */ EVENTLOGRECORD;
typedef struct _EVENTLOGRECORD /* id 97 */ *PEVENTLOGRECORD;
struct _OSVERSIONINFOA { /* size 148 id 98 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
};
typedef struct _OSVERSIONINFOA /* id 98 */ OSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *POSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *LPOSVERSIONINFOA;
struct _OSVERSIONINFOW { /* size 276 id 99 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
};
typedef struct _OSVERSIONINFOW /* id 99 */ OSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *POSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *LPOSVERSIONINFOW;
struct _OSVERSIONINFOEXA { /* size 156 id 100 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 1184 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 1200 */
  WORD wSuiteMask; /* bitsize 16, bitpos 1216 */
  BYTE wProductType; /* bitsize 8, bitpos 1232 */
  BYTE wReserved; /* bitsize 8, bitpos 1240 */
};
typedef struct _OSVERSIONINFOEXA /* id 100 */ OSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *POSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *LPOSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW { /* size 284 id 101 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 2208 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 2224 */
  WORD wSuiteMask; /* bitsize 16, bitpos 2240 */
  BYTE wProductType; /* bitsize 8, bitpos 2256 */
  BYTE wReserved; /* bitsize 8, bitpos 2264 */
};
typedef struct _OSVERSIONINFOEXW /* id 101 */ OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *POSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *LPOSVERSIONINFOEXW;
struct _IMAGE_VXD_HEADER { /* size 196 id 102 */
  WORD e32_magic; /* bitsize 16, bitpos 0 */
  BYTE e32_border; /* bitsize 8, bitpos 16 */
  BYTE e32_worder; /* bitsize 8, bitpos 24 */
  DWORD e32_level; /* bitsize 32, bitpos 32 */
  WORD e32_cpu; /* bitsize 16, bitpos 64 */
  WORD e32_os; /* bitsize 16, bitpos 80 */
  DWORD e32_ver; /* bitsize 32, bitpos 96 */
  DWORD e32_mflags; /* bitsize 32, bitpos 128 */
  DWORD e32_mpages; /* bitsize 32, bitpos 160 */
  DWORD e32_startobj; /* bitsize 32, bitpos 192 */
  DWORD e32_eip; /* bitsize 32, bitpos 224 */
  DWORD e32_stackobj; /* bitsize 32, bitpos 256 */
  DWORD e32_esp; /* bitsize 32, bitpos 288 */
  DWORD e32_pagesize; /* bitsize 32, bitpos 320 */
  DWORD e32_lastpagesize; /* bitsize 32, bitpos 352 */
  DWORD e32_fixupsize; /* bitsize 32, bitpos 384 */
  DWORD e32_fixupsum; /* bitsize 32, bitpos 416 */
  DWORD e32_ldrsize; /* bitsize 32, bitpos 448 */
  DWORD e32_ldrsum; /* bitsize 32, bitpos 480 */
  DWORD e32_objtab; /* bitsize 32, bitpos 512 */
  DWORD e32_objcnt; /* bitsize 32, bitpos 544 */
  DWORD e32_objmap; /* bitsize 32, bitpos 576 */
  DWORD e32_itermap; /* bitsize 32, bitpos 608 */
  DWORD e32_rsrctab; /* bitsize 32, bitpos 640 */
  DWORD e32_rsrccnt; /* bitsize 32, bitpos 672 */
  DWORD e32_restab; /* bitsize 32, bitpos 704 */
  DWORD e32_enttab; /* bitsize 32, bitpos 736 */
  DWORD e32_dirtab; /* bitsize 32, bitpos 768 */
  DWORD e32_dircnt; /* bitsize 32, bitpos 800 */
  DWORD e32_fpagetab; /* bitsize 32, bitpos 832 */
  DWORD e32_frectab; /* bitsize 32, bitpos 864 */
  DWORD e32_impmod; /* bitsize 32, bitpos 896 */
  DWORD e32_impmodcnt; /* bitsize 32, bitpos 928 */
  DWORD e32_impproc; /* bitsize 32, bitpos 960 */
  DWORD e32_pagesum; /* bitsize 32, bitpos 992 */
  DWORD e32_datapage; /* bitsize 32, bitpos 1024 */
  DWORD e32_preload; /* bitsize 32, bitpos 1056 */
  DWORD e32_nrestab; /* bitsize 32, bitpos 1088 */
  DWORD e32_cbnrestab; /* bitsize 32, bitpos 1120 */
  DWORD e32_nressum; /* bitsize 32, bitpos 1152 */
  DWORD e32_autodata; /* bitsize 32, bitpos 1184 */
  DWORD e32_debuginfo; /* bitsize 32, bitpos 1216 */
  DWORD e32_debuglen; /* bitsize 32, bitpos 1248 */
  DWORD e32_instpreload; /* bitsize 32, bitpos 1280 */
  DWORD e32_instdemand; /* bitsize 32, bitpos 1312 */
  DWORD e32_heapsize; /* bitsize 32, bitpos 1344 */
  BYTE e32_res3[12]:uint32; /* bitsize 96, bitpos 1376 */
  DWORD e32_winresoff; /* bitsize 32, bitpos 1472 */
  DWORD e32_winreslen; /* bitsize 32, bitpos 1504 */
  WORD e32_devid; /* bitsize 16, bitpos 1536 */
  WORD e32_ddkver; /* bitsize 16, bitpos 1552 */
};
typedef struct _IMAGE_VXD_HEADER /* id 102 */ IMAGE_VXD_HEADER;
typedef struct _IMAGE_VXD_HEADER /* id 102 */ *PIMAGE_VXD_HEADER;
struct _IMAGE_FILE_HEADER { /* size 20 id 103 */
  WORD Machine; /* bitsize 16, bitpos 0 */
  WORD NumberOfSections; /* bitsize 16, bitpos 16 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD PointerToSymbolTable; /* bitsize 32, bitpos 64 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 96 */
  WORD SizeOfOptionalHeader; /* bitsize 16, bitpos 128 */
  WORD Characteristics; /* bitsize 16, bitpos 144 */
};
typedef struct _IMAGE_FILE_HEADER /* id 103 */ IMAGE_FILE_HEADER;
typedef struct _IMAGE_FILE_HEADER /* id 103 */ *PIMAGE_FILE_HEADER;
struct _IMAGE_DATA_DIRECTORY { /* size 8 id 104 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ *PIMAGE_DATA_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER { /* size 224 id 105 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD ImageBase; /* bitsize 32, bitpos 224 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  DWORD SizeOfStackReserve; /* bitsize 32, bitpos 576 */
  DWORD SizeOfStackCommit; /* bitsize 32, bitpos 608 */
  DWORD SizeOfHeapReserve; /* bitsize 32, bitpos 640 */
  DWORD SizeOfHeapCommit; /* bitsize 32, bitpos 672 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 704 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 736 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 768 */
};
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ IMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ *PIMAGE_OPTIONAL_HEADER32;
struct _IMAGE_OPTIONAL_HEADER64 { /* size 240 id 106 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  ULONGLONG ImageBase; /* bitsize 64, bitpos 192 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  ULONGLONG SizeOfStackReserve; /* bitsize 64, bitpos 576 */
  ULONGLONG SizeOfStackCommit; /* bitsize 64, bitpos 640 */
  ULONGLONG SizeOfHeapReserve; /* bitsize 64, bitpos 704 */
  ULONGLONG SizeOfHeapCommit; /* bitsize 64, bitpos 768 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 832 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 864 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 896 */
};
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ IMAGE_OPTIONAL_HEADER64;
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ *PIMAGE_OPTIONAL_HEADER64;
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;
struct _IMAGE_ROM_OPTIONAL_HEADER { /* size 56 id 107 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD BaseOfBss; /* bitsize 32, bitpos 224 */
  DWORD GprMask; /* bitsize 32, bitpos 256 */
  DWORD CprMask[4]:uint32; /* bitsize 128, bitpos 288 */
  DWORD GpValue; /* bitsize 32, bitpos 416 */
};
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ *PIMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_DOS_HEADER { /* size 64 id 108 */
  WORD e_magic; /* bitsize 16, bitpos 0 */
  WORD e_cblp; /* bitsize 16, bitpos 16 */
  WORD e_cp; /* bitsize 16, bitpos 32 */
  WORD e_crlc; /* bitsize 16, bitpos 48 */
  WORD e_cparhdr; /* bitsize 16, bitpos 64 */
  WORD e_minalloc; /* bitsize 16, bitpos 80 */
  WORD e_maxalloc; /* bitsize 16, bitpos 96 */
  WORD e_ss; /* bitsize 16, bitpos 112 */
  WORD e_sp; /* bitsize 16, bitpos 128 */
  WORD e_csum; /* bitsize 16, bitpos 144 */
  WORD e_ip; /* bitsize 16, bitpos 160 */
  WORD e_cs; /* bitsize 16, bitpos 176 */
  WORD e_lfarlc; /* bitsize 16, bitpos 192 */
  WORD e_ovno; /* bitsize 16, bitpos 208 */
  WORD e_res[4]:uint32; /* bitsize 64, bitpos 224 */
  WORD e_oemid; /* bitsize 16, bitpos 288 */
  WORD e_oeminfo; /* bitsize 16, bitpos 304 */
  WORD e_res2[10]:uint32; /* bitsize 160, bitpos 320 */
  LONG e_lfanew; /* bitsize 32, bitpos 480 */
};
typedef struct _IMAGE_DOS_HEADER /* id 108 */ IMAGE_DOS_HEADER;
typedef struct _IMAGE_DOS_HEADER /* id 108 */ *PIMAGE_DOS_HEADER;
struct _IMAGE_OS2_HEADER { /* size 64 id 109 */
  WORD ne_magic; /* bitsize 16, bitpos 0 */
  CHAR ne_ver; /* bitsize 8, bitpos 16 */
  CHAR ne_rev; /* bitsize 8, bitpos 24 */
  WORD ne_enttab; /* bitsize 16, bitpos 32 */
  WORD ne_cbenttab; /* bitsize 16, bitpos 48 */
  LONG ne_crc; /* bitsize 32, bitpos 64 */
  WORD ne_flags; /* bitsize 16, bitpos 96 */
  WORD ne_autodata; /* bitsize 16, bitpos 112 */
  WORD ne_heap; /* bitsize 16, bitpos 128 */
  WORD ne_stack; /* bitsize 16, bitpos 144 */
  LONG ne_csip; /* bitsize 32, bitpos 160 */
  LONG ne_sssp; /* bitsize 32, bitpos 192 */
  WORD ne_cseg; /* bitsize 16, bitpos 224 */
  WORD ne_cmod; /* bitsize 16, bitpos 240 */
  WORD ne_cbnrestab; /* bitsize 16, bitpos 256 */
  WORD ne_segtab; /* bitsize 16, bitpos 272 */
  WORD ne_rsrctab; /* bitsize 16, bitpos 288 */
  WORD ne_restab; /* bitsize 16, bitpos 304 */
  WORD ne_modtab; /* bitsize 16, bitpos 320 */
  WORD ne_imptab; /* bitsize 16, bitpos 336 */
  LONG ne_nrestab; /* bitsize 32, bitpos 352 */
  WORD ne_cmovent; /* bitsize 16, bitpos 384 */
  WORD ne_align; /* bitsize 16, bitpos 400 */
  WORD ne_cres; /* bitsize 16, bitpos 416 */
  BYTE ne_exetyp; /* bitsize 8, bitpos 432 */
  BYTE ne_flagsothers; /* bitsize 8, bitpos 440 */
  WORD ne_pretthunks; /* bitsize 16, bitpos 448 */
  WORD ne_psegrefbytes; /* bitsize 16, bitpos 464 */
  WORD ne_swaparea; /* bitsize 16, bitpos 480 */
  WORD ne_expver; /* bitsize 16, bitpos 496 */
};
typedef struct _IMAGE_OS2_HEADER /* id 109 */ IMAGE_OS2_HEADER;
typedef struct _IMAGE_OS2_HEADER /* id 109 */ *PIMAGE_OS2_HEADER;
struct _IMAGE_NT_HEADERS { /* size 248 id 110 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS /* id 110 */ IMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS /* id 110 */ *PIMAGE_NT_HEADERS32;
struct _IMAGE_NT_HEADERS64 { /* size 248 id 111 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ IMAGE_NT_HEADERS64;
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ *PIMAGE_NT_HEADERS64;
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;
struct _IMAGE_ROM_HEADERS { /* size 76 id 112 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 0 */
  IMAGE_ROM_OPTIONAL_HEADER OptionalHeader; /* bitsize 448, bitpos 160 */
};
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ IMAGE_ROM_HEADERS;
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ *PIMAGE_ROM_HEADERS;
struct _IMAGE_SECTION_HEADER { /* size 40 id 113 */
  BYTE Name[8]:uint32; /* bitsize 64, bitpos 0 */
  union %anon114 { /* size 4 */
    DWORD PhysicalAddress; /* bitsize 32, bitpos 0 */
    DWORD VirtualSize; /* bitsize 32, bitpos 0 */
  } Misc; /* bitsize 32, bitpos 64 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 96 */
  DWORD SizeOfRawData; /* bitsize 32, bitpos 128 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRelocations; /* bitsize 32, bitpos 192 */
  DWORD PointerToLinenumbers; /* bitsize 32, bitpos 224 */
  WORD NumberOfRelocations; /* bitsize 16, bitpos 256 */
  WORD NumberOfLinenumbers; /* bitsize 16, bitpos 272 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ IMAGE_SECTION_HEADER;
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ *PIMAGE_SECTION_HEADER;
struct _IMAGE_SYMBOL { /* size 18 id 115 */
  union %anon116 { /* size 8 */
    BYTE ShortName[8]:uint32; /* bitsize 64, bitpos 0 */
    struct %anon117 { /* size 8 */
      DWORD Short; /* bitsize 32, bitpos 0 */
      DWORD Long; /* bitsize 32, bitpos 32 */
    } Name; /* bitsize 64, bitpos 0 */
    PBYTE LongName[2]:uint32; /* bitsize 64, bitpos 0 */
  } N; /* bitsize 64, bitpos 0 */
  DWORD Value; /* bitsize 32, bitpos 64 */
  SHORT SectionNumber; /* bitsize 16, bitpos 96 */
  WORD Type; /* bitsize 16, bitpos 112 */
  BYTE StorageClass; /* bitsize 8, bitpos 128 */
  BYTE NumberOfAuxSymbols; /* bitsize 8, bitpos 136 */
};
typedef struct _IMAGE_SYMBOL /* id 115 */ IMAGE_SYMBOL;
typedef struct _IMAGE_SYMBOL /* id 115 */ *PIMAGE_SYMBOL;
union _IMAGE_AUX_SYMBOL { /* size 18 id 118 */
  struct %anon119 { /* size 18 */
    DWORD TagIndex; /* bitsize 32, bitpos 0 */
    union %anon120 { /* size 4 */
      struct %anon121 { /* size 4 */
        WORD Linenumber; /* bitsize 16, bitpos 0 */
        WORD Size; /* bitsize 16, bitpos 16 */
      } LnSz; /* bitsize 32, bitpos 0 */
      DWORD TotalSize; /* bitsize 32, bitpos 0 */
    } Misc; /* bitsize 32, bitpos 32 */
    union %anon122 { /* size 8 */
      struct %anon123 { /* size 8 */
        DWORD PointerToLinenumber; /* bitsize 32, bitpos 0 */
        DWORD PointerToNextFunction; /* bitsize 32, bitpos 32 */
      } Function; /* bitsize 64, bitpos 0 */
      struct %anon124 { /* size 8 */
        WORD Dimension[4]:uint32; /* bitsize 64, bitpos 0 */
      } Array; /* bitsize 64, bitpos 0 */
    } FcnAry; /* bitsize 64, bitpos 64 */
    WORD TvIndex; /* bitsize 16, bitpos 128 */
  } Sym; /* bitsize 144, bitpos 0 */
  struct %anon125 { /* size 18 */
    BYTE Name[18]:uint32; /* bitsize 144, bitpos 0 */
  } File; /* bitsize 144, bitpos 0 */
  struct %anon126 { /* size 16 */
    DWORD Length; /* bitsize 32, bitpos 0 */
    WORD NumberOfRelocations; /* bitsize 16, bitpos 32 */
    WORD NumberOfLinenumbers; /* bitsize 16, bitpos 48 */
    DWORD CheckSum; /* bitsize 32, bitpos 64 */
    SHORT Number; /* bitsize 16, bitpos 96 */
    BYTE Selection; /* bitsize 8, bitpos 112 */
  } Section; /* bitsize 128, bitpos 0 */
};
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ IMAGE_AUX_SYMBOL;
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ *PIMAGE_AUX_SYMBOL;
struct _IMAGE_COFF_SYMBOLS_HEADER { /* size 32 id 127 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 0 */
  DWORD LvaToFirstSymbol; /* bitsize 32, bitpos 32 */
  DWORD NumberOfLinenumbers; /* bitsize 32, bitpos 64 */
  DWORD LvaToFirstLinenumber; /* bitsize 32, bitpos 96 */
  DWORD RvaToFirstByteOfCode; /* bitsize 32, bitpos 128 */
  DWORD RvaToLastByteOfCode; /* bitsize 32, bitpos 160 */
  DWORD RvaToFirstByteOfData; /* bitsize 32, bitpos 192 */
  DWORD RvaToLastByteOfData; /* bitsize 32, bitpos 224 */
};
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ IMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ *PIMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_RELOCATION { /* size 10 id 128 */
  union %anon129 { /* size 4 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
    DWORD RelocCount; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD SymbolTableIndex; /* bitsize 32, bitpos 32 */
  WORD Type; /* bitsize 16, bitpos 64 */
};
typedef struct _IMAGE_RELOCATION /* id 128 */ IMAGE_RELOCATION;
typedef struct _IMAGE_RELOCATION /* id 128 */ *PIMAGE_RELOCATION;
struct _IMAGE_BASE_RELOCATION { /* size 8 id 130 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD SizeOfBlock; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ *PIMAGE_BASE_RELOCATION;
struct _IMAGE_LINENUMBER { /* size 6 id 131 */
  union %anon132 { /* size 4 */
    DWORD SymbolTableIndex; /* bitsize 32, bitpos 0 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  } Type; /* bitsize 32, bitpos 0 */
  WORD Linenumber; /* bitsize 16, bitpos 32 */
};
typedef struct _IMAGE_LINENUMBER /* id 131 */ IMAGE_LINENUMBER;
typedef struct _IMAGE_LINENUMBER /* id 131 */ *PIMAGE_LINENUMBER;
struct _IMAGE_ARCHIVE_MEMBER_HEADER { /* size 60 id 133 */
  BYTE Name[16]:uint32; /* bitsize 128, bitpos 0 */
  BYTE Date[12]:uint32; /* bitsize 96, bitpos 128 */
  BYTE UserID[6]:uint32; /* bitsize 48, bitpos 224 */
  BYTE GroupID[6]:uint32; /* bitsize 48, bitpos 272 */
  BYTE Mode[8]:uint32; /* bitsize 64, bitpos 320 */
  BYTE Size[10]:uint32; /* bitsize 80, bitpos 384 */
  BYTE EndHeader[2]:uint32; /* bitsize 16, bitpos 464 */
};
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ *PIMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_EXPORT_DIRECTORY { /* size 40 id 134 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD Base; /* bitsize 32, bitpos 128 */
  DWORD NumberOfFunctions; /* bitsize 32, bitpos 160 */
  DWORD NumberOfNames; /* bitsize 32, bitpos 192 */
  DWORD AddressOfFunctions; /* bitsize 32, bitpos 224 */
  DWORD AddressOfNames; /* bitsize 32, bitpos 256 */
  DWORD AddressOfNameOrdinals; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ IMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ *PIMAGE_EXPORT_DIRECTORY;
struct _IMAGE_IMPORT_BY_NAME { /* size 4 id 135 */
  WORD Hint; /* bitsize 16, bitpos 0 */
  BYTE Name[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ *PIMAGE_IMPORT_BY_NAME;
struct _IMAGE_THUNK_DATA32 { /* size 4 id 136 */
  union %anon137 { /* size 4 */
    DWORD ForwarderString; /* bitsize 32, bitpos 0 */
    DWORD Function; /* bitsize 32, bitpos 0 */
    DWORD Ordinal; /* bitsize 32, bitpos 0 */
    DWORD AddressOfData; /* bitsize 32, bitpos 0 */
  } u1; /* bitsize 32, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ IMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ *PIMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64 { /* size 8 id 138 */
  union %anon139 { /* size 8 */
    ULONGLONG ForwarderString; /* bitsize 64, bitpos 0 */
    ULONGLONG Function; /* bitsize 64, bitpos 0 */
    ULONGLONG Ordinal; /* bitsize 64, bitpos 0 */
    ULONGLONG AddressOfData; /* bitsize 64, bitpos 0 */
  } u1; /* bitsize 64, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ IMAGE_THUNK_DATA64;
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ *PIMAGE_THUNK_DATA64;
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;
struct _IMAGE_IMPORT_DESCRIPTOR { /* size 20 id 140 */
  union %anon141 { /* size 4 */
    DWORD Characteristics; /* bitsize 32, bitpos 0 */
    DWORD OriginalFirstThunk; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD ForwarderChain; /* bitsize 32, bitpos 64 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD FirstThunk; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ IMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ *PIMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR { /* size 8 id 142 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD NumberOfModuleForwarderRefs; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_FORWARDER_REF { /* size 8 id 143 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ *PIMAGE_BOUND_FORWARDER_REF;
typedef void (*PIMAGE_TLS_CALLBACK) (/* unknown */);
struct _IMAGE_TLS_DIRECTORY32 { /* size 24 id 144 */
  DWORD StartAddressOfRawData; /* bitsize 32, bitpos 0 */
  DWORD EndAddressOfRawData; /* bitsize 32, bitpos 32 */
  DWORD AddressOfIndex; /* bitsize 32, bitpos 64 */
  DWORD AddressOfCallBacks; /* bitsize 32, bitpos 96 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 128 */
  DWORD Characteristics; /* bitsize 32, bitpos 160 */
};
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ IMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ *PIMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64 { /* size 40 id 145 */
  ULONGLONG StartAddressOfRawData; /* bitsize 64, bitpos 0 */
  ULONGLONG EndAddressOfRawData; /* bitsize 64, bitpos 64 */
  ULONGLONG AddressOfIndex; /* bitsize 64, bitpos 128 */
  ULONGLONG AddressOfCallBacks; /* bitsize 64, bitpos 192 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 256 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ IMAGE_TLS_DIRECTORY64;
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ *PIMAGE_TLS_DIRECTORY64;
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY { /* size 16 id 146 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  WORD NumberOfNamedEntries; /* bitsize 16, bitpos 96 */
  WORD NumberOfIdEntries; /* bitsize 16, bitpos 112 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ IMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ *PIMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY { /* size 8 id 147 */
  union %anon148 { /* size 4 */
    struct %anon149 { /* size 4 */
      DWORD NameOffset; /* bitsize 31, bitpos 0 */
      DWORD NameIsString; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
    DWORD Name; /* bitsize 32, bitpos 0 */
    WORD Id; /* bitsize 16, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  union %anon150 { /* size 4 */
    DWORD OffsetToData; /* bitsize 32, bitpos 0 */
    struct %anon151 { /* size 4 */
      DWORD OffsetToDirectory; /* bitsize 31, bitpos 0 */
      DWORD DataIsDirectory; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING { /* size 4 id 152 */
  WORD Length; /* bitsize 16, bitpos 0 */
  CHAR NameString[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ *PIMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U { /* size 4 id 153 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WCHAR NameString[1]:uint32; /* bitsize 16, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ *PIMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_RESOURCE_DATA_ENTRY { /* size 16 id 154 */
  DWORD OffsetToData; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
  DWORD CodePage; /* bitsize 32, bitpos 64 */
  DWORD Reserved; /* bitsize 32, bitpos 96 */
};
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ *PIMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY { /* size 64 id 155 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  DWORD DeCommitFreeBlockThreshold; /* bitsize 32, bitpos 192 */
  DWORD DeCommitTotalFreeThreshold; /* bitsize 32, bitpos 224 */
  PVOID LockPrefixTable; /* bitsize 32, bitpos 256 */
  DWORD MaximumAllocationSize; /* bitsize 32, bitpos 288 */
  DWORD VirtualMemoryThreshold; /* bitsize 32, bitpos 320 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 352 */
  DWORD Reserved[4]:uint32; /* bitsize 128, bitpos 384 */
};
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ *PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct %anon156 { /* size 96 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  ULONGLONG DeCommitFreeBlockThreshold; /* bitsize 64, bitpos 192 */
  ULONGLONG DeCommitTotalFreeThreshold; /* bitsize 64, bitpos 256 */
  ULONGLONG LockPrefixTable; /* bitsize 64, bitpos 320 */
  ULONGLONG MaximumAllocationSize; /* bitsize 64, bitpos 384 */
  ULONGLONG VirtualMemoryThreshold; /* bitsize 64, bitpos 448 */
  ULONGLONG ProcessAffinityMask; /* bitsize 64, bitpos 512 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 576 */
  WORD CSDFlags; /* bitsize 16, bitpos 608 */
  WORD Reserved1; /* bitsize 16, bitpos 624 */
  ULONGLONG EditList; /* bitsize 64, bitpos 640 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 704 */
} IMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct %anon156 *PIMAGE_LOAD_CONFIG_DIRECTORY64;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY { /* size 20 id 157 */
  DWORD BeginAddress; /* bitsize 32, bitpos 0 */
  DWORD EndAddress; /* bitsize 32, bitpos 32 */
  PVOID ExceptionHandler; /* bitsize 32, bitpos 64 */
  PVOID HandlerData; /* bitsize 32, bitpos 96 */
  DWORD PrologEndAddress; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ *PIMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY { /* size 8 id 158 */
  unsigned int FuncStart; /* bitsize 32, bitpos 0 */
  unsigned int PrologLen; /* bitsize 8, bitpos 32 */
  unsigned int FuncLen; /* bitsize 22, bitpos 40 */
  unsigned int ThirtyTwoBit; /* bitsize 1, bitpos 62 */
  unsigned int ExceptionFlag; /* bitsize 1, bitpos 63 */
};
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_DEBUG_DIRECTORY { /* size 28 id 159 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Type; /* bitsize 32, bitpos 96 */
  DWORD SizeOfData; /* bitsize 32, bitpos 128 */
  DWORD AddressOfRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 192 */
};
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ *PIMAGE_DEBUG_DIRECTORY;
struct _FPO_DATA { /* size 16 id 160 */
  DWORD ulOffStart; /* bitsize 32, bitpos 0 */
  DWORD cbProcSize; /* bitsize 32, bitpos 32 */
  DWORD cdwLocals; /* bitsize 32, bitpos 64 */
  WORD cdwParams; /* bitsize 16, bitpos 96 */
  WORD cbProlog; /* bitsize 8, bitpos 112 */
  WORD cbRegs; /* bitsize 3, bitpos 120 */
  WORD fHasSEH; /* bitsize 1, bitpos 123 */
  WORD fUseBP; /* bitsize 1, bitpos 124 */
  WORD reserved; /* bitsize 1, bitpos 125 */
  WORD cbFrame; /* bitsize 2, bitpos 126 */
};
typedef struct _FPO_DATA /* id 160 */ FPO_DATA;
typedef struct _FPO_DATA /* id 160 */ *PFPO_DATA;
struct _IMAGE_DEBUG_MISC { /* size 16 id 161 */
  DWORD DataType; /* bitsize 32, bitpos 0 */
  DWORD Length; /* bitsize 32, bitpos 32 */
  BOOLEAN Unicode; /* bitsize 8, bitpos 64 */
  BYTE Reserved[3]:uint32; /* bitsize 24, bitpos 72 */
  BYTE Data[1]:uint32; /* bitsize 8, bitpos 96 */
};
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ *PIMAGE_DEBUG_MISC;
struct _IMAGE_FUNCTION_ENTRY { /* size 12 id 162 */
  DWORD StartingAddress; /* bitsize 32, bitpos 0 */
  DWORD EndingAddress; /* bitsize 32, bitpos 32 */
  DWORD EndOfPrologue; /* bitsize 32, bitpos 64 */
};
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ *PIMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64 { /* size 24 id 163 */
  ULONGLONG StartingAddress; /* bitsize 64, bitpos 0 */
  ULONGLONG EndingAddress; /* bitsize 64, bitpos 64 */
  union %anon164 { /* size 8 */
    ULONGLONG EndOfPrologue; /* bitsize 64, bitpos 0 */
    ULONGLONG UnwindInfoAddress; /* bitsize 64, bitpos 0 */
  }; /* bitsize 64, bitpos 128 */
};
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ IMAGE_FUNCTION_ENTRY64;
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ *PIMAGE_FUNCTION_ENTRY64;
struct _IMAGE_SEPARATE_DEBUG_HEADER { /* size 48 id 165 */
  WORD Signature; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  WORD Machine; /* bitsize 16, bitpos 32 */
  WORD Characteristics; /* bitsize 16, bitpos 48 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 64 */
  DWORD CheckSum; /* bitsize 32, bitpos 96 */
  DWORD ImageBase; /* bitsize 32, bitpos 128 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 160 */
  DWORD NumberOfSections; /* bitsize 32, bitpos 192 */
  DWORD ExportedNamesSize; /* bitsize 32, bitpos 224 */
  DWORD DebugDirectorySize; /* bitsize 32, bitpos 256 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 288 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 320 */
};
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ *PIMAGE_SEPARATE_DEBUG_HEADER;
enum _CM_SERVICE_NODE_TYPE { DriverType = 1, FileSystemType, Win32ServiceOwnProcess = 16, Win32ServiceShareProcess = 32, AdapterType = 4, RecognizerType = 8 };
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
enum _CM_SERVICE_LOAD_TYPE { BootLoad, SystemLoad, AutoLoad, DemandLoad, DisableLoad };
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
enum _CM_ERROR_CONTROL_TYPE { IgnoreError, NormalError, SevereError, CriticalError };
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
struct _NT_TIB { /* size 28 id 166 */
  struct _EXCEPTION_REGISTRATION_RECORD /* id 0 */ *ExceptionList; /* bitsize 32, bitpos 0 */
  PVOID StackBase; /* bitsize 32, bitpos 32 */
  PVOID StackLimit; /* bitsize 32, bitpos 64 */
  PVOID SubSystemTib; /* bitsize 32, bitpos 96 */
  union %anon167 { /* size 4 */
    PVOID FiberData; /* bitsize 32, bitpos 0 */
    DWORD Version; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 128 */
  PVOID ArbitraryUserPointer; /* bitsize 32, bitpos 160 */
  struct _NT_TIB /* id 166 */ *Self; /* bitsize 32, bitpos 192 */
};
typedef struct _NT_TIB /* id 166 */ NT_TIB;
typedef struct _NT_TIB /* id 166 */ *PNT_TIB;
struct _REPARSE_DATA_BUFFER { /* size 24 id 168 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  union %anon169 { /* size 16 */
    struct %anon170 { /* size 16 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      ULONG Flags; /* bitsize 32, bitpos 64 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 96 */
    } SymbolicLinkReparseBuffer; /* bitsize 128, bitpos 0 */
    struct %anon171 { /* size 10 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 64 */
    } MountPointReparseBuffer; /* bitsize 80, bitpos 0 */
    struct %anon172 { /* size 1 */
      BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
    } GenericReparseBuffer; /* bitsize 8, bitpos 0 */
  }; /* bitsize 128, bitpos 64 */
};
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ REPARSE_DATA_BUFFER;
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ *PREPARSE_DATA_BUFFER;
struct _REPARSE_GUID_DATA_BUFFER { /* size 28 id 173 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  GUID ReparseGuid; /* bitsize 128, bitpos 64 */
  struct %anon172 { /* size 1 */
    BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
  } GenericReparseBuffer; /* bitsize 8, bitpos 192 */
};
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ REPARSE_GUID_DATA_BUFFER;
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ *PREPARSE_GUID_DATA_BUFFER;
struct _REPARSE_POINT_INFORMATION { /* size 4 id 174 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 0 */
  WORD UnparsedNameLength; /* bitsize 16, bitpos 16 */
};
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ REPARSE_POINT_INFORMATION;
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ *PREPARSE_POINT_INFORMATION;
union _FILE_SEGMENT_ELEMENT { /* size 8 id 175 */
  PVOID64 Buffer; /* bitsize 32, bitpos 0 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
};
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ FILE_SEGMENT_ELEMENT;
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ *PFILE_SEGMENT_ELEMENT;
enum _JOBOBJECTINFOCLASS { JobObjectBasicAccountingInformation = 1, JobObjectBasicLimitInformation, JobObjectBasicProcessIdList, JobObjectBasicUIRestrictions, JobObjectSecurityLimitInformation, JobObjectEndOfJobTimeInformation, JobObjectAssociateCompletionPortInformation, JobObjectBasicAndIoAccountingInformation, JobObjectExtendedLimitInformation, JobObjectJobSetInformation, MaxJobObjectInfoClass };
typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION { /* size 48 id 176 */
  LARGE_INTEGER TotalUserTime; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER TotalKernelTime; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ThisPeriodTotalUserTime; /* bitsize 64, bitpos 128 */
  LARGE_INTEGER ThisPeriodTotalKernelTime; /* bitsize 64, bitpos 192 */
  DWORD TotalPageFaultCount; /* bitsize 32, bitpos 256 */
  DWORD TotalProcesses; /* bitsize 32, bitpos 288 */
  DWORD ActiveProcesses; /* bitsize 32, bitpos 320 */
  DWORD TotalTerminatedProcesses; /* bitsize 32, bitpos 352 */
};
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION { /* size 48 id 177 */
  LARGE_INTEGER PerProcessUserTimeLimit; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER PerJobUserTimeLimit; /* bitsize 64, bitpos 64 */
  DWORD LimitFlags; /* bitsize 32, bitpos 128 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 160 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 192 */
  DWORD ActiveProcessLimit; /* bitsize 32, bitpos 224 */
  long unsigned int Affinity; /* bitsize 32, bitpos 256 */
  DWORD PriorityClass; /* bitsize 32, bitpos 288 */
  DWORD SchedulingClass; /* bitsize 32, bitpos 320 */
};
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ JOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST { /* size 12 id 178 */
  DWORD NumberOfAssignedProcesses; /* bitsize 32, bitpos 0 */
  DWORD NumberOfProcessIdsInList; /* bitsize 32, bitpos 32 */
  long unsigned int ProcessIdList[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ JOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS { /* size 4 id 179 */
  DWORD UIRestrictionsClass; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ JOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION { /* size 20 id 180 */
  DWORD SecurityLimitFlags; /* bitsize 32, bitpos 0 */
  HANDLE JobToken; /* bitsize 32, bitpos 32 */
  PTOKEN_GROUPS SidsToDisable; /* bitsize 32, bitpos 64 */
  PTOKEN_PRIVILEGES PrivilegesToDelete; /* bitsize 32, bitpos 96 */
  PTOKEN_GROUPS RestrictedSids; /* bitsize 32, bitpos 128 */
};
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ JOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION { /* size 4 id 181 */
  DWORD EndOfJobTimeAction; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT { /* size 8 id 182 */
  PVOID CompletionKey; /* bitsize 32, bitpos 0 */
  HANDLE CompletionPort; /* bitsize 32, bitpos 32 */
};
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION { /* size 96 id 183 */
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
};
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION { /* size 112 id 184 */
  JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
  long unsigned int ProcessMemoryLimit; /* bitsize 32, bitpos 768 */
  long unsigned int JobMemoryLimit; /* bitsize 32, bitpos 800 */
  long unsigned int PeakProcessMemoryUsed; /* bitsize 32, bitpos 832 */
  long unsigned int PeakJobMemoryUsed; /* bitsize 32, bitpos 864 */
};
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_JOBSET_INFORMATION { /* size 4 id 185 */
  DWORD MemberLevel; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ JOBOBJECT_JOBSET_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ *PJOBOBJECT_JOBSET_INFORMATION;
enum _LATENCY_TIME { LT_DONT_CARE, LT_LOWEST_LATENCY };
typedef enum _LATENCY_TIME LATENCY_TIME;
typedef enum _LATENCY_TIME *PLATENCY_TIME;
enum _SYSTEM_POWER_STATE { PowerSystemUnspecified, PowerSystemWorking, PowerSystemSleeping1, PowerSystemSleeping2, PowerSystemSleeping3, PowerSystemHibernate, PowerSystemShutdown, PowerSystemMaximum };
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject } POWER_ACTION;
typedef (enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject }) *PPOWER_ACTION;
enum _DEVICE_POWER_STATE { PowerDeviceUnspecified, PowerDeviceD0, PowerDeviceD1, PowerDeviceD2, PowerDeviceD3, PowerDeviceMaximum };
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef struct %anon186 { /* size 8 */
  DWORD Granularity; /* bitsize 32, bitpos 0 */
  DWORD Capacity; /* bitsize 32, bitpos 32 */
} BATTERY_REPORTING_SCALE;
typedef struct %anon186 *PBATTERY_REPORTING_SCALE;
struct _POWER_ACTION_POLICY { /* size 12 id 187 */
  POWER_ACTION Action; /* bitsize 32, bitpos 0 */
  ULONG Flags; /* bitsize 32, bitpos 32 */
  ULONG EventCode; /* bitsize 32, bitpos 64 */
};
typedef struct _POWER_ACTION_POLICY /* id 187 */ POWER_ACTION_POLICY;
typedef struct _POWER_ACTION_POLICY /* id 187 */ *PPOWER_ACTION_POLICY;
struct _SYSTEM_POWER_LEVEL { /* size 24 id 188 */
  BOOLEAN Enable; /* bitsize 8, bitpos 0 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 8 */
  ULONG BatteryLevel; /* bitsize 32, bitpos 32 */
  POWER_ACTION_POLICY PowerPolicy; /* bitsize 96, bitpos 64 */
  SYSTEM_POWER_STATE MinSystemState; /* bitsize 32, bitpos 160 */
};
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ SYSTEM_POWER_LEVEL;
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ *PSYSTEM_POWER_LEVEL;
struct _SYSTEM_POWER_POLICY { /* size 232 id 189 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  POWER_ACTION_POLICY PowerButton; /* bitsize 96, bitpos 32 */
  POWER_ACTION_POLICY SleepButton; /* bitsize 96, bitpos 128 */
  POWER_ACTION_POLICY LidClose; /* bitsize 96, bitpos 224 */
  SYSTEM_POWER_STATE LidOpenWake; /* bitsize 32, bitpos 320 */
  ULONG Reserved; /* bitsize 32, bitpos 352 */
  POWER_ACTION_POLICY Idle; /* bitsize 96, bitpos 384 */
  ULONG IdleTimeout; /* bitsize 32, bitpos 480 */
  UCHAR IdleSensitivity; /* bitsize 8, bitpos 512 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 520 */
  UCHAR Spare2[2]:uint32; /* bitsize 16, bitpos 528 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 576 */
  SYSTEM_POWER_STATE ReducedLatencySleep; /* bitsize 32, bitpos 608 */
  ULONG WinLogonFlags; /* bitsize 32, bitpos 640 */
  ULONG Spare3; /* bitsize 32, bitpos 672 */
  ULONG DozeS4Timeout; /* bitsize 32, bitpos 704 */
  ULONG BroadcastCapacityResolution; /* bitsize 32, bitpos 736 */
  SYSTEM_POWER_LEVEL DischargePolicy[4]:uint32; /* bitsize 768, bitpos 768 */
  ULONG VideoTimeout; /* bitsize 32, bitpos 1536 */
  BOOLEAN VideoDimDisplay; /* bitsize 8, bitpos 1568 */
  ULONG VideoReserved[3]:uint32; /* bitsize 96, bitpos 1600 */
  ULONG SpindownTimeout; /* bitsize 32, bitpos 1696 */
  BOOLEAN OptimizeForPower; /* bitsize 8, bitpos 1728 */
  UCHAR FanThrottleTolerance; /* bitsize 8, bitpos 1736 */
  UCHAR ForcedThrottle; /* bitsize 8, bitpos 1744 */
  UCHAR MinThrottle; /* bitsize 8, bitpos 1752 */
  POWER_ACTION_POLICY OverThrottled; /* bitsize 96, bitpos 1760 */
};
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ SYSTEM_POWER_POLICY;
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ *PSYSTEM_POWER_POLICY;
struct _SYSTEM_POWER_CAPABILITIES { /* size 76 id 190 */
  BOOLEAN PowerButtonPresent; /* bitsize 8, bitpos 0 */
  BOOLEAN SleepButtonPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN LidPresent; /* bitsize 8, bitpos 16 */
  BOOLEAN SystemS1; /* bitsize 8, bitpos 24 */
  BOOLEAN SystemS2; /* bitsize 8, bitpos 32 */
  BOOLEAN SystemS3; /* bitsize 8, bitpos 40 */
  BOOLEAN SystemS4; /* bitsize 8, bitpos 48 */
  BOOLEAN SystemS5; /* bitsize 8, bitpos 56 */
  BOOLEAN HiberFilePresent; /* bitsize 8, bitpos 64 */
  BOOLEAN FullWake; /* bitsize 8, bitpos 72 */
  BOOLEAN VideoDimPresent; /* bitsize 8, bitpos 80 */
  BOOLEAN ApmPresent; /* bitsize 8, bitpos 88 */
  BOOLEAN UpsPresent; /* bitsize 8, bitpos 96 */
  BOOLEAN ThermalControl; /* bitsize 8, bitpos 104 */
  BOOLEAN ProcessorThrottle; /* bitsize 8, bitpos 112 */
  UCHAR ProcessorMinThrottle; /* bitsize 8, bitpos 120 */
  UCHAR ProcessorMaxThrottle; /* bitsize 8, bitpos 128 */
  UCHAR spare2[4]:uint32; /* bitsize 32, bitpos 136 */
  BOOLEAN DiskSpinDown; /* bitsize 8, bitpos 168 */
  UCHAR spare3[8]:uint32; /* bitsize 64, bitpos 176 */
  BOOLEAN SystemBatteriesPresent; /* bitsize 8, bitpos 240 */
  BOOLEAN BatteriesAreShortTerm; /* bitsize 8, bitpos 248 */
  BATTERY_REPORTING_SCALE BatteryScale[3]:uint32; /* bitsize 192, bitpos 256 */
  SYSTEM_POWER_STATE AcOnLineWake; /* bitsize 32, bitpos 448 */
  SYSTEM_POWER_STATE SoftLidWake; /* bitsize 32, bitpos 480 */
  SYSTEM_POWER_STATE RtcWake; /* bitsize 32, bitpos 512 */
  SYSTEM_POWER_STATE MinDeviceWakeState; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE DefaultLowLatencyWake; /* bitsize 32, bitpos 576 */
};
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ SYSTEM_POWER_CAPABILITIES;
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ *PSYSTEM_POWER_CAPABILITIES;
struct _SYSTEM_BATTERY_STATE { /* size 32 id 191 */
  BOOLEAN AcOnLine; /* bitsize 8, bitpos 0 */
  BOOLEAN BatteryPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN Charging; /* bitsize 8, bitpos 16 */
  BOOLEAN Discharging; /* bitsize 8, bitpos 24 */
  BOOLEAN Spare1[4]:uint32; /* bitsize 32, bitpos 32 */
  ULONG MaxCapacity; /* bitsize 32, bitpos 64 */
  ULONG RemainingCapacity; /* bitsize 32, bitpos 96 */
  ULONG Rate; /* bitsize 32, bitpos 128 */
  ULONG EstimatedTime; /* bitsize 32, bitpos 160 */
  ULONG DefaultAlert1; /* bitsize 32, bitpos 192 */
  ULONG DefaultAlert2; /* bitsize 32, bitpos 224 */
};
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ SYSTEM_BATTERY_STATE;
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ *PSYSTEM_BATTERY_STATE;
enum _POWER_INFORMATION_LEVEL { SystemPowerPolicyAc, SystemPowerPolicyDc, VerifySystemPolicyAc, VerifySystemPolicyDc, SystemPowerCapabilities, SystemBatteryState, SystemPowerStateHandler, ProcessorStateHandler, SystemPowerPolicyCurrent, AdministratorPowerPolicy, SystemReserveHiberFile, ProcessorInformation, SystemPowerInformation, ProcessorStateHandler2, LastWakeTime, LastSleepTime, SystemExecutionState, SystemPowerStateNotifyHandler, ProcessorPowerPolicyAc, ProcessorPowerPolicyDc, VerifyProcessorPowerPolicyAc, VerifyProcessorPowerPolicyDc, ProcessorPowerPolicyCurrent };
typedef enum _POWER_INFORMATION_LEVEL POWER_INFORMATION_LEVEL;
struct _SYSTEM_POWER_INFORMATION { /* size 16 id 192 */
  ULONG MaxIdlenessAllowed; /* bitsize 32, bitpos 0 */
  ULONG Idleness; /* bitsize 32, bitpos 32 */
  ULONG TimeRemaining; /* bitsize 32, bitpos 64 */
  UCHAR CoolingMode; /* bitsize 8, bitpos 96 */
};
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ SYSTEM_POWER_INFORMATION;
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ *PSYSTEM_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY_INFO { /* size 20 id 193 */
  ULONG TimeCheck; /* bitsize 32, bitpos 0 */
  ULONG DemoteLimit; /* bitsize 32, bitpos 32 */
  ULONG PromoteLimit; /* bitsize 32, bitpos 64 */
  UCHAR DemotePercent; /* bitsize 8, bitpos 96 */
  UCHAR PromotePercent; /* bitsize 8, bitpos 104 */
  UCHAR Spare[2]:uint32; /* bitsize 16, bitpos 112 */
  ULONG AllowDemotion; /* bitsize 1, bitpos 128 */
  ULONG AllowPromotion; /* bitsize 1, bitpos 129 */
  ULONG Reserved; /* bitsize 30, bitpos 130 */
};
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ PROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ *PPROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_POWER_POLICY { /* size 76 id 194 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 32 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 40 */
  ULONG Reserved; /* bitsize 32, bitpos 64 */
  ULONG PolicyCount; /* bitsize 32, bitpos 96 */
  PROCESSOR_POWER_POLICY_INFO Policy[3]:uint32; /* bitsize 480, bitpos 128 */
};
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ PROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ *PPROCESSOR_POWER_POLICY;
struct _ADMINISTRATOR_POWER_POLICY { /* size 24 id 195 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 0 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 32 */
  ULONG MinVideoTimeout; /* bitsize 32, bitpos 64 */
  ULONG MaxVideoTimeout; /* bitsize 32, bitpos 96 */
  ULONG MinSpindownTimeout; /* bitsize 32, bitpos 128 */
  ULONG MaxSpindownTimeout; /* bitsize 32, bitpos 160 */
};
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ ADMINISTRATOR_POWER_POLICY;
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ *PADMINISTRATOR_POWER_POLICY;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef OSVERSIONINFOA *POSVERSIONINFO;
typedef OSVERSIONINFOA *LPOSVERSIONINFO;
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *POSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *LPOSVERSIONINFOEX;
 /usr/include/string.h:
 /usr/include/sys/reent.h:
typedef long unsigned int __ULong;
struct _Bigint { /* size 24 id 196 */
  struct _Bigint /* id 196 */ *_next; /* bitsize 32, bitpos 0 */
  int _k; /* bitsize 32, bitpos 32 */
  int _maxwds; /* bitsize 32, bitpos 64 */
  int _sign; /* bitsize 32, bitpos 96 */
  int _wds; /* bitsize 32, bitpos 128 */
  __ULong _x[1]:uint32; /* bitsize 32, bitpos 160 */
};
struct __tm { /* size 36 id 197 */
  int __tm_sec; /* bitsize 32, bitpos 0 */
  int __tm_min; /* bitsize 32, bitpos 32 */
  int __tm_hour; /* bitsize 32, bitpos 64 */
  int __tm_mday; /* bitsize 32, bitpos 96 */
  int __tm_mon; /* bitsize 32, bitpos 128 */
  int __tm_year; /* bitsize 32, bitpos 160 */
  int __tm_wday; /* bitsize 32, bitpos 192 */
  int __tm_yday; /* bitsize 32, bitpos 224 */
  int __tm_isdst; /* bitsize 32, bitpos 256 */
};
struct _on_exit_args { /* size 264 id 198 */
  void *_fnargs[32]:uint32; /* bitsize 1024, bitpos 0 */
  void *_dso_handle[32]:uint32; /* bitsize 1024, bitpos 1024 */
  __ULong _fntypes; /* bitsize 32, bitpos 2048 */
  __ULong _is_cxa; /* bitsize 32, bitpos 2080 */
};
struct _atexit { /* size 400 id 199 */
  struct _atexit /* id 199 */ *_next; /* bitsize 32, bitpos 0 */
  int _ind; /* bitsize 32, bitpos 32 */
  void (*_fns[32]) (/* unknown */):uint32; /* bitsize 1024, bitpos 64 */
  struct _on_exit_args /* id 198 */ _on_exit_args; /* bitsize 2112, bitpos 1088 */
};
struct __sbuf { /* size 8 id 200 */
  unsigned char *_base; /* bitsize 32, bitpos 0 */
  int _size; /* bitsize 32, bitpos 32 */
};
typedef long int _fpos_t;
typedef long long int _fpos64_t;
struct __sFILE { /* size 92 id 201 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  void *_cookie; /* bitsize 32, bitpos 224 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 256 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 288 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 320 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 352 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 384 */
  unsigned char *_up; /* bitsize 32, bitpos 448 */
  int _ur; /* bitsize 32, bitpos 480 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 512 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 536 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 544 */
  int _blksize; /* bitsize 32, bitpos 608 */
  int _offset; /* bitsize 32, bitpos 640 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 672 */
  void *_lock; /* bitsize 32, bitpos 704 */
};
struct __sFILE64 { /* size 104 id 203 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 224 */
  void *_cookie; /* bitsize 32, bitpos 256 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 288 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 320 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 352 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 384 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 416 */
  unsigned char *_up; /* bitsize 32, bitpos 480 */
  int _ur; /* bitsize 32, bitpos 512 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 544 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 568 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 576 */
  int _blksize; /* bitsize 32, bitpos 640 */
  int _flags2; /* bitsize 32, bitpos 672 */
  long long int _offset; /* bitsize 64, bitpos 704 */
  _fpos64_t (*_seek64) (/* unknown */); /* bitsize 32, bitpos 768 */
  void *_lock; /* bitsize 32, bitpos 800 */
};
typedef struct __sFILE64 /* id 203 */ __FILE;
struct _glue { /* size 12 id 204 */
  struct _glue /* id 204 */ *_next; /* bitsize 32, bitpos 0 */
  int _niobs; /* bitsize 32, bitpos 32 */
  __FILE *_iobs; /* bitsize 32, bitpos 64 */
};
struct _rand48 { /* size 14 id 205 */
  short unsigned int _seed[3]:uint32; /* bitsize 48, bitpos 0 */
  short unsigned int _mult[3]:uint32; /* bitsize 48, bitpos 48 */
  short unsigned int _add; /* bitsize 16, bitpos 96 */
};
struct _reent { /* size 1064 id 202 */
  int _errno; /* bitsize 32, bitpos 0 */
  __FILE *_stdin; /* bitsize 32, bitpos 32 */
  __FILE *_stdout; /* bitsize 32, bitpos 64 */
  __FILE *_stderr; /* bitsize 32, bitpos 96 */
  int _inc; /* bitsize 32, bitpos 128 */
  char _emergency[25]:uint32; /* bitsize 200, bitpos 160 */
  int _current_category; /* bitsize 32, bitpos 384 */
  char const *_current_locale; /* bitsize 32, bitpos 416 */
  int __sdidinit; /* bitsize 32, bitpos 448 */
  void (*__cleanup) (/* unknown */); /* bitsize 32, bitpos 480 */
  struct _Bigint /* id 196 */ *_result; /* bitsize 32, bitpos 512 */
  int _result_k; /* bitsize 32, bitpos 544 */
  struct _Bigint /* id 196 */ *_p5s; /* bitsize 32, bitpos 576 */
  struct _Bigint /* id 196 */ **_freelist; /* bitsize 32, bitpos 608 */
  int _cvtlen; /* bitsize 32, bitpos 640 */
  char *_cvtbuf; /* bitsize 32, bitpos 672 */
  union %anon206 { /* size 240 */
    struct %anon207 { /* size 208 */
      unsigned int _unused_rand; /* bitsize 32, bitpos 0 */
      char *_strtok_last; /* bitsize 32, bitpos 32 */
      char _asctime_buf[26]:uint32; /* bitsize 208, bitpos 64 */
      struct __tm /* id 197 */ _localtime_buf; /* bitsize 288, bitpos 288 */
      int _gamma_signgam; /* bitsize 32, bitpos 576 */
      long long unsigned int _rand_next; /* bitsize 64, bitpos 640 */
      struct _rand48 /* id 205 */ _r48; /* bitsize 112, bitpos 704 */
      struct %anon208 { /* size 8 */
        int __count; /* bitsize 32, bitpos 0 */
        union %anon209 { /* size 4 */
          unsigned int __wch; /* bitsize 32, bitpos 0 */
          unsigned char __wchb[4]:uint32; /* bitsize 32, bitpos 0 */
        } __value; /* bitsize 32, bitpos 32 */
      } _mblen_state; /* bitsize 64, bitpos 832 */
      struct %anon208 _mbtowc_state; /* bitsize 64, bitpos 896 */
      struct %anon208 _wctomb_state; /* bitsize 64, bitpos 960 */
      char _l64a_buf[8]:uint32; /* bitsize 64, bitpos 1024 */
      char _signal_buf[24]:uint32; /* bitsize 192, bitpos 1088 */
      int _getdate_err; /* bitsize 32, bitpos 1280 */
      struct %anon208 _mbrlen_state; /* bitsize 64, bitpos 1312 */
      struct %anon208 _mbrtowc_state; /* bitsize 64, bitpos 1376 */
      struct %anon208 _mbsrtowcs_state; /* bitsize 64, bitpos 1440 */
      struct %anon208 _wcrtomb_state; /* bitsize 64, bitpos 1504 */
      struct %anon208 _wcsrtombs_state; /* bitsize 64, bitpos 1568 */
    } _reent; /* bitsize 1664, bitpos 0 */
    struct %anon210 { /* size 240 */
      unsigned char *_nextf[30]:uint32; /* bitsize 960, bitpos 0 */
      unsigned int _nmalloc[30]:uint32; /* bitsize 960, bitpos 960 */
    } _unused; /* bitsize 1920, bitpos 0 */
  } _new; /* bitsize 1920, bitpos 704 */
  struct _atexit /* id 199 */ *_atexit; /* bitsize 32, bitpos 2624 */
  struct _atexit /* id 199 */ _atexit0; /* bitsize 3200, bitpos 2656 */
  void (**_sig_func) (/* unknown */); /* bitsize 32, bitpos 5856 */
  struct _glue /* id 204 */ __sglue; /* bitsize 96, bitpos 5888 */
  __FILE __sf[3]:uint32; /* bitsize 2496, bitpos 6016 */
};
 /usr/include/sys/_types.h:
typedef long int _off_t;
typedef long long int _off64_t;
typedef int _ssize_t;
typedef struct %anon208 _mbstate_t;
typedef void *_flock_t;
typedef void *_iconv_t;
 /usr/include/sys/lock.h:
typedef void *_LOCK_T;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h:
typedef unsigned int wint_t;
typedef unsigned int size_t;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/basetsd.h:
typedef int LONG32;
typedef int *PLONG32;
typedef int INT32;
typedef int *PINT32;
typedef unsigned int ULONG32;
typedef unsigned int *PULONG32;
typedef unsigned int DWORD32;
typedef unsigned int *PDWORD32;
typedef unsigned int UINT32;
typedef unsigned int *PUINT32;
typedef int INT_PTR;
typedef int *PINT_PTR;
typedef unsigned int UINT_PTR;
typedef unsigned int *PUINT_PTR;
typedef long int LONG_PTR;
typedef long int *PLONG_PTR;
typedef long unsigned int ULONG_PTR;
typedef long unsigned int *PULONG_PTR;
typedef short unsigned int UHALF_PTR;
typedef short unsigned int *PUHALF_PTR;
typedef short int HALF_PTR;
typedef short int *PHALF_PTR;
typedef long unsigned int HANDLE_PTR;
typedef ULONG_PTR SIZE_T;
typedef ULONG_PTR *PSIZE_T;
typedef LONG_PTR SSIZE_T;
typedef LONG_PTR *PSSIZE_T;
typedef ULONG_PTR DWORD_PTR;
typedef ULONG_PTR *PDWORD_PTR;
typedef long long int LONG64;
typedef long long int *PLONG64;
typedef long long int INT64;
typedef long long int *PINT64;
typedef long long unsigned int ULONG64;
typedef long long unsigned int *PULONG64;
typedef long long unsigned int DWORD64;
typedef long long unsigned int *PDWORD64;
typedef long long unsigned int UINT64;
typedef long long unsigned int *PUINT64;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stdarg.h:
typedef __builtin_va_list __gnuc_va_list;
typedef __gnuc_va_list va_list;
 wingdi.c:
struct _ABC { /* size 12 id 211 */
  int abcA; /* bitsize 32, bitpos 0 */
  UINT abcB; /* bitsize 32, bitpos 32 */
  int abcC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABC /* id 211 */ ABC;
typedef struct _ABC /* id 211 */ *LPABC;
struct _ABCFLOAT { /* size 12 id 212 */
  FLOAT abcfA; /* bitsize 32, bitpos 0 */
  FLOAT abcfB; /* bitsize 32, bitpos 32 */
  FLOAT abcfC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABCFLOAT /* id 212 */ ABCFLOAT;
typedef struct _ABCFLOAT /* id 212 */ *LPABCFLOAT;
struct tagBITMAP { /* size 24 id 213 */
  LONG bmType; /* bitsize 32, bitpos 0 */
  LONG bmWidth; /* bitsize 32, bitpos 32 */
  LONG bmHeight; /* bitsize 32, bitpos 64 */
  LONG bmWidthBytes; /* bitsize 32, bitpos 96 */
  WORD bmPlanes; /* bitsize 16, bitpos 128 */
  WORD bmBitsPixel; /* bitsize 16, bitpos 144 */
  LPVOID bmBits; /* bitsize 32, bitpos 160 */
};
typedef struct tagBITMAP /* id 213 */ BITMAP;
typedef struct tagBITMAP /* id 213 */ *PBITMAP;
typedef struct tagBITMAP /* id 213 */ *LPBITMAP;
struct tagBITMAPCOREHEADER { /* size 12 id 214 */
  DWORD bcSize; /* bitsize 32, bitpos 0 */
  WORD bcWidth; /* bitsize 16, bitpos 32 */
  WORD bcHeight; /* bitsize 16, bitpos 48 */
  WORD bcPlanes; /* bitsize 16, bitpos 64 */
  WORD bcBitCount; /* bitsize 16, bitpos 80 */
};
typedef struct tagBITMAPCOREHEADER /* id 214 */ BITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 214 */ *LPBITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 214 */ *PBITMAPCOREHEADER;
struct tagRGBTRIPLE { /* size 3 id 215 */
  BYTE rgbtBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbtGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbtRed; /* bitsize 8, bitpos 16 */
};
typedef struct tagRGBTRIPLE /* id 215 */ RGBTRIPLE;
typedef struct tagRGBTRIPLE /* id 215 */ *LPRGBTRIPLE;
struct tagBITMAPFILEHEADER { /* size 14 id 216 */
  WORD bfType; /* bitsize 16, bitpos 0 */
  DWORD bfSize; /* bitsize 32, bitpos 16 */
  WORD bfReserved1; /* bitsize 16, bitpos 48 */
  WORD bfReserved2; /* bitsize 16, bitpos 64 */
  DWORD bfOffBits; /* bitsize 32, bitpos 80 */
};
typedef struct tagBITMAPFILEHEADER /* id 216 */ BITMAPFILEHEADER;
typedef struct tagBITMAPFILEHEADER /* id 216 */ *LPBITMAPFILEHEADER;
typedef struct tagBITMAPFILEHEADER /* id 216 */ *PBITMAPFILEHEADER;
struct _BITMAPCOREINFO { /* size 16 id 217 */
  BITMAPCOREHEADER bmciHeader; /* bitsize 96, bitpos 0 */
  RGBTRIPLE bmciColors[1]:uint32; /* bitsize 24, bitpos 96 */
};
typedef struct _BITMAPCOREINFO /* id 217 */ BITMAPCOREINFO;
typedef struct _BITMAPCOREINFO /* id 217 */ *LPBITMAPCOREINFO;
typedef struct _BITMAPCOREINFO /* id 217 */ *PBITMAPCOREINFO;
struct tagBITMAPINFOHEADER { /* size 40 id 218 */
  DWORD biSize; /* bitsize 32, bitpos 0 */
  LONG biWidth; /* bitsize 32, bitpos 32 */
  LONG biHeight; /* bitsize 32, bitpos 64 */
  WORD biPlanes; /* bitsize 16, bitpos 96 */
  WORD biBitCount; /* bitsize 16, bitpos 112 */
  DWORD biCompression; /* bitsize 32, bitpos 128 */
  DWORD biSizeImage; /* bitsize 32, bitpos 160 */
  LONG biXPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG biYPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD biClrUsed; /* bitsize 32, bitpos 256 */
  DWORD biClrImportant; /* bitsize 32, bitpos 288 */
};
typedef struct tagBITMAPINFOHEADER /* id 218 */ BITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 218 */ *LPBITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 218 */ *PBITMAPINFOHEADER;
struct tagRGBQUAD { /* size 4 id 219 */
  BYTE rgbBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbRed; /* bitsize 8, bitpos 16 */
  BYTE rgbReserved; /* bitsize 8, bitpos 24 */
};
typedef struct tagRGBQUAD /* id 219 */ RGBQUAD;
typedef struct tagRGBQUAD /* id 219 */ *LPRGBQUAD;
struct tagBITMAPINFO { /* size 44 id 220 */
  BITMAPINFOHEADER bmiHeader; /* bitsize 320, bitpos 0 */
  RGBQUAD bmiColors[1]:uint32; /* bitsize 32, bitpos 320 */
};
typedef struct tagBITMAPINFO /* id 220 */ BITMAPINFO;
typedef struct tagBITMAPINFO /* id 220 */ *LPBITMAPINFO;
typedef struct tagBITMAPINFO /* id 220 */ *PBITMAPINFO;
typedef long int FXPT16DOT16;
typedef long int *LPFXPT16DOT16;
typedef long int FXPT2DOT30;
typedef long int *LPFXPT2DOT30;
struct tagCIEXYZ { /* size 12 id 221 */
  FXPT2DOT30 ciexyzX; /* bitsize 32, bitpos 0 */
  FXPT2DOT30 ciexyzY; /* bitsize 32, bitpos 32 */
  FXPT2DOT30 ciexyzZ; /* bitsize 32, bitpos 64 */
};
typedef struct tagCIEXYZ /* id 221 */ CIEXYZ;
typedef struct tagCIEXYZ /* id 221 */ *LPCIEXYZ;
struct tagCIEXYZTRIPLE { /* size 36 id 222 */
  CIEXYZ ciexyzRed; /* bitsize 96, bitpos 0 */
  CIEXYZ ciexyzGreen; /* bitsize 96, bitpos 96 */
  CIEXYZ ciexyzBlue; /* bitsize 96, bitpos 192 */
};
typedef struct tagCIEXYZTRIPLE /* id 222 */ CIEXYZTRIPLE;
typedef struct tagCIEXYZTRIPLE /* id 222 */ *LPCIEXYZTRIPLE;
typedef struct %anon223 { /* size 108 */
  DWORD bV4Size; /* bitsize 32, bitpos 0 */
  LONG bV4Width; /* bitsize 32, bitpos 32 */
  LONG bV4Height; /* bitsize 32, bitpos 64 */
  WORD bV4Planes; /* bitsize 16, bitpos 96 */
  WORD bV4BitCount; /* bitsize 16, bitpos 112 */
  DWORD bV4V4Compression; /* bitsize 32, bitpos 128 */
  DWORD bV4SizeImage; /* bitsize 32, bitpos 160 */
  LONG bV4XPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG bV4YPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD bV4ClrUsed; /* bitsize 32, bitpos 256 */
  DWORD bV4ClrImportant; /* bitsize 32, bitpos 288 */
  DWORD bV4RedMask; /* bitsize 32, bitpos 320 */
  DWORD bV4GreenMask; /* bitsize 32, bitpos 352 */
  DWORD bV4BlueMask; /* bitsize 32, bitpos 384 */
  DWORD bV4AlphaMask; /* bitsize 32, bitpos 416 */
  DWORD bV4CSType; /* bitsize 32, bitpos 448 */
  CIEXYZTRIPLE bV4Endpoints; /* bitsize 288, bitpos 480 */
  DWORD bV4GammaRed; /* bitsize 32, bitpos 768 */
  DWORD bV4GammaGreen; /* bitsize 32, bitpos 800 */
  DWORD bV4GammaBlue; /* bitsize 32, bitpos 832 */
} BITMAPV4HEADER;
typedef struct %anon223 *LPBITMAPV4HEADER;
typedef struct %anon223 *PBITMAPV4HEADER;
typedef struct %anon224 { /* size 124 */
  DWORD bV5Size; /* bitsize 32, bitpos 0 */
  LONG bV5Width; /* bitsize 32, bitpos 32 */
  LONG bV5Height; /* bitsize 32, bitpos 64 */
  WORD bV5Planes; /* bitsize 16, bitpos 96 */
  WORD bV5BitCount; /* bitsize 16, bitpos 112 */
  DWORD bV5Compression; /* bitsize 32, bitpos 128 */
  DWORD bV5SizeImage; /* bitsize 32, bitpos 160 */
  LONG bV5XPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG bV5YPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD bV5ClrUsed; /* bitsize 32, bitpos 256 */
  DWORD bV5ClrImportant; /* bitsize 32, bitpos 288 */
  DWORD bV5RedMask; /* bitsize 32, bitpos 320 */
  DWORD bV5GreenMask; /* bitsize 32, bitpos 352 */
  DWORD bV5BlueMask; /* bitsize 32, bitpos 384 */
  DWORD bV5AlphaMask; /* bitsize 32, bitpos 416 */
  DWORD bV5CSType; /* bitsize 32, bitpos 448 */
  CIEXYZTRIPLE bV5Endpoints; /* bitsize 288, bitpos 480 */
  DWORD bV5GammaRed; /* bitsize 32, bitpos 768 */
  DWORD bV5GammaGreen; /* bitsize 32, bitpos 800 */
  DWORD bV5GammaBlue; /* bitsize 32, bitpos 832 */
  DWORD bV5Intent; /* bitsize 32, bitpos 864 */
  DWORD bV5ProfileData; /* bitsize 32, bitpos 896 */
  DWORD bV5ProfileSize; /* bitsize 32, bitpos 928 */
  DWORD bV5Reserved; /* bitsize 32, bitpos 960 */
} BITMAPV5HEADER;
typedef struct %anon224 *LPBITMAPV5HEADER;
typedef struct %anon224 *PBITMAPV5HEADER;
struct tagFONTSIGNATURE { /* size 24 id 225 */
  DWORD fsUsb[4]:uint32; /* bitsize 128, bitpos 0 */
  DWORD fsCsb[2]:uint32; /* bitsize 64, bitpos 128 */
};
typedef struct tagFONTSIGNATURE /* id 225 */ FONTSIGNATURE;
typedef struct tagFONTSIGNATURE /* id 225 */ *LPFONTSIGNATURE;
typedef struct %anon226 { /* size 32 */
  UINT ciCharset; /* bitsize 32, bitpos 0 */
  UINT ciACP; /* bitsize 32, bitpos 32 */
  FONTSIGNATURE fs; /* bitsize 192, bitpos 64 */
} CHARSETINFO;
typedef struct %anon226 *LPCHARSETINFO;
struct tagCOLORADJUSTMENT { /* size 24 id 227 */
  WORD caSize; /* bitsize 16, bitpos 0 */
  WORD caFlags; /* bitsize 16, bitpos 16 */
  WORD caIlluminantIndex; /* bitsize 16, bitpos 32 */
  WORD caRedGamma; /* bitsize 16, bitpos 48 */
  WORD caGreenGamma; /* bitsize 16, bitpos 64 */
  WORD caBlueGamma; /* bitsize 16, bitpos 80 */
  WORD caReferenceBlack; /* bitsize 16, bitpos 96 */
  WORD caReferenceWhite; /* bitsize 16, bitpos 112 */
  SHORT caContrast; /* bitsize 16, bitpos 128 */
  SHORT caBrightness; /* bitsize 16, bitpos 144 */
  SHORT caColorfulness; /* bitsize 16, bitpos 160 */
  SHORT caRedGreenTint; /* bitsize 16, bitpos 176 */
};
typedef struct tagCOLORADJUSTMENT /* id 227 */ COLORADJUSTMENT;
typedef struct tagCOLORADJUSTMENT /* id 227 */ *LPCOLORADJUSTMENT;
struct _devicemodeA { /* size 156 id 228 */
  BYTE dmDeviceName[32]:uint32; /* bitsize 256, bitpos 0 */
  WORD dmSpecVersion; /* bitsize 16, bitpos 256 */
  WORD dmDriverVersion; /* bitsize 16, bitpos 272 */
  WORD dmSize; /* bitsize 16, bitpos 288 */
  WORD dmDriverExtra; /* bitsize 16, bitpos 304 */
  DWORD dmFields; /* bitsize 32, bitpos 320 */
  union %anon229 { /* size 16 */
    struct %anon230 { /* size 16 */
      short int dmOrientation; /* bitsize 16, bitpos 0 */
      short int dmPaperSize; /* bitsize 16, bitpos 16 */
      short int dmPaperLength; /* bitsize 16, bitpos 32 */
      short int dmPaperWidth; /* bitsize 16, bitpos 48 */
      short int dmScale; /* bitsize 16, bitpos 64 */
      short int dmCopies; /* bitsize 16, bitpos 80 */
      short int dmDefaultSource; /* bitsize 16, bitpos 96 */
      short int dmPrintQuality; /* bitsize 16, bitpos 112 */
    }; /* bitsize 128, bitpos 0 */
    POINTL dmPosition; /* bitsize 64, bitpos 0 */
    DWORD dmDisplayOrientation; /* bitsize 32, bitpos 0 */
    DWORD dmDisplayFixedOutput; /* bitsize 32, bitpos 0 */
  }; /* bitsize 128, bitpos 352 */
  short int dmColor; /* bitsize 16, bitpos 480 */
  short int dmDuplex; /* bitsize 16, bitpos 496 */
  short int dmYResolution; /* bitsize 16, bitpos 512 */
  short int dmTTOption; /* bitsize 16, bitpos 528 */
  short int dmCollate; /* bitsize 16, bitpos 544 */
  BYTE dmFormName[32]:uint32; /* bitsize 256, bitpos 560 */
  WORD dmLogPixels; /* bitsize 16, bitpos 816 */
  DWORD dmBitsPerPel; /* bitsize 32, bitpos 832 */
  DWORD dmPelsWidth; /* bitsize 32, bitpos 864 */
  DWORD dmPelsHeight; /* bitsize 32, bitpos 896 */
  union %anon231 { /* size 4 */
    DWORD dmDisplayFlags; /* bitsize 32, bitpos 0 */
    DWORD dmNup; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 928 */
  DWORD dmDisplayFrequency; /* bitsize 32, bitpos 960 */
  DWORD dmICMMethod; /* bitsize 32, bitpos 992 */
  DWORD dmICMIntent; /* bitsize 32, bitpos 1024 */
  DWORD dmMediaType; /* bitsize 32, bitpos 1056 */
  DWORD dmDitherType; /* bitsize 32, bitpos 1088 */
  DWORD dmReserved1; /* bitsize 32, bitpos 1120 */
  DWORD dmReserved2; /* bitsize 32, bitpos 1152 */
  DWORD dmPanningWidth; /* bitsize 32, bitpos 1184 */
  DWORD dmPanningHeight; /* bitsize 32, bitpos 1216 */
};
typedef struct _devicemodeA /* id 228 */ DEVMODEA;
typedef struct _devicemodeA /* id 228 */ *LPDEVMODEA;
typedef struct _devicemodeA /* id 228 */ *PDEVMODEA;
struct _devicemodeW { /* size 220 id 232 */
  WCHAR dmDeviceName[32]:uint32; /* bitsize 512, bitpos 0 */
  WORD dmSpecVersion; /* bitsize 16, bitpos 512 */
  WORD dmDriverVersion; /* bitsize 16, bitpos 528 */
  WORD dmSize; /* bitsize 16, bitpos 544 */
  WORD dmDriverExtra; /* bitsize 16, bitpos 560 */
  DWORD dmFields; /* bitsize 32, bitpos 576 */
  union %anon229 { /* size 16 */
    struct %anon230 { /* size 16 */
      short int dmOrientation; /* bitsize 16, bitpos 0 */
      short int dmPaperSize; /* bitsize 16, bitpos 16 */
      short int dmPaperLength; /* bitsize 16, bitpos 32 */
      short int dmPaperWidth; /* bitsize 16, bitpos 48 */
      short int dmScale; /* bitsize 16, bitpos 64 */
      short int dmCopies; /* bitsize 16, bitpos 80 */
      short int dmDefaultSource; /* bitsize 16, bitpos 96 */
      short int dmPrintQuality; /* bitsize 16, bitpos 112 */
    }; /* bitsize 128, bitpos 0 */
    POINTL dmPosition; /* bitsize 64, bitpos 0 */
    DWORD dmDisplayOrientation; /* bitsize 32, bitpos 0 */
    DWORD dmDisplayFixedOutput; /* bitsize 32, bitpos 0 */
  }; /* bitsize 128, bitpos 608 */
  short int dmColor; /* bitsize 16, bitpos 736 */
  short int dmDuplex; /* bitsize 16, bitpos 752 */
  short int dmYResolution; /* bitsize 16, bitpos 768 */
  short int dmTTOption; /* bitsize 16, bitpos 784 */
  short int dmCollate; /* bitsize 16, bitpos 800 */
  WCHAR dmFormName[32]:uint32; /* bitsize 512, bitpos 816 */
  WORD dmLogPixels; /* bitsize 16, bitpos 1328 */
  DWORD dmBitsPerPel; /* bitsize 32, bitpos 1344 */
  DWORD dmPelsWidth; /* bitsize 32, bitpos 1376 */
  DWORD dmPelsHeight; /* bitsize 32, bitpos 1408 */
  union %anon231 { /* size 4 */
    DWORD dmDisplayFlags; /* bitsize 32, bitpos 0 */
    DWORD dmNup; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 1440 */
  DWORD dmDisplayFrequency; /* bitsize 32, bitpos 1472 */
  DWORD dmICMMethod; /* bitsize 32, bitpos 1504 */
  DWORD dmICMIntent; /* bitsize 32, bitpos 1536 */
  DWORD dmMediaType; /* bitsize 32, bitpos 1568 */
  DWORD dmDitherType; /* bitsize 32, bitpos 1600 */
  DWORD dmReserved1; /* bitsize 32, bitpos 1632 */
  DWORD dmReserved2; /* bitsize 32, bitpos 1664 */
  DWORD dmPanningWidth; /* bitsize 32, bitpos 1696 */
  DWORD dmPanningHeight; /* bitsize 32, bitpos 1728 */
};
typedef struct _devicemodeW /* id 232 */ DEVMODEW;
typedef struct _devicemodeW /* id 232 */ *LPDEVMODEW;
typedef struct _devicemodeW /* id 232 */ *PDEVMODEW;
struct tagDIBSECTION { /* size 84 id 233 */
  BITMAP dsBm; /* bitsize 192, bitpos 0 */
  BITMAPINFOHEADER dsBmih; /* bitsize 320, bitpos 192 */
  DWORD dsBitfields[3]:uint32; /* bitsize 96, bitpos 512 */
  HANDLE dshSection; /* bitsize 32, bitpos 608 */
  DWORD dsOffset; /* bitsize 32, bitpos 640 */
};
typedef struct tagDIBSECTION /* id 233 */ DIBSECTION;
struct _DOCINFOA { /* size 20 id 234 */
  int cbSize; /* bitsize 32, bitpos 0 */
  LPCSTR lpszDocName; /* bitsize 32, bitpos 32 */
  LPCSTR lpszOutput; /* bitsize 32, bitpos 64 */
  LPCSTR lpszDatatype; /* bitsize 32, bitpos 96 */
  DWORD fwType; /* bitsize 32, bitpos 128 */
};
typedef struct _DOCINFOA /* id 234 */ DOCINFOA;
typedef struct _DOCINFOA /* id 234 */ *LPDOCINFOA;
struct _DOCINFOW { /* size 20 id 235 */
  int cbSize; /* bitsize 32, bitpos 0 */
  LPCWSTR lpszDocName; /* bitsize 32, bitpos 32 */
  LPCWSTR lpszOutput; /* bitsize 32, bitpos 64 */
  LPCWSTR lpszDatatype; /* bitsize 32, bitpos 96 */
  DWORD fwType; /* bitsize 32, bitpos 128 */
};
typedef struct _DOCINFOW /* id 235 */ DOCINFOW;
typedef struct _DOCINFOW /* id 235 */ *LPDOCINFOW;
struct tagEMR { /* size 8 id 236 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
};
typedef struct tagEMR /* id 236 */ EMR;
typedef struct tagEMR /* id 236 */ *PEMR;
struct tagEMRANGLEARC { /* size 28 id 237 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlCenter; /* bitsize 64, bitpos 64 */
  DWORD nRadius; /* bitsize 32, bitpos 128 */
  FLOAT eStartAngle; /* bitsize 32, bitpos 160 */
  FLOAT eSweepAngle; /* bitsize 32, bitpos 192 */
};
typedef struct tagEMRANGLEARC /* id 237 */ EMRANGLEARC;
typedef struct tagEMRANGLEARC /* id 237 */ *PEMRANGLEARC;
struct tagEMRARC { /* size 40 id 238 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  POINTL ptlStart; /* bitsize 64, bitpos 192 */
  POINTL ptlEnd; /* bitsize 64, bitpos 256 */
};
typedef struct tagEMRARC /* id 238 */ EMRARC;
typedef struct tagEMRARC /* id 238 */ *PEMRARC;
typedef struct tagEMRARC /* id 238 */ EMRARCTO;
typedef struct tagEMRARC /* id 238 */ *PEMRARCTO;
typedef struct tagEMRARC /* id 238 */ EMRCHORD;
typedef struct tagEMRARC /* id 238 */ *PEMRCHORD;
typedef struct tagEMRARC /* id 238 */ EMRPIE;
typedef struct tagEMRARC /* id 238 */ *PEMRPIE;
struct _XFORM { /* size 24 id 239 */
  FLOAT eM11; /* bitsize 32, bitpos 0 */
  FLOAT eM12; /* bitsize 32, bitpos 32 */
  FLOAT eM21; /* bitsize 32, bitpos 64 */
  FLOAT eM22; /* bitsize 32, bitpos 96 */
  FLOAT eDx; /* bitsize 32, bitpos 128 */
  FLOAT eDy; /* bitsize 32, bitpos 160 */
};
typedef struct _XFORM /* id 239 */ XFORM;
typedef struct _XFORM /* id 239 */ *PXFORM;
typedef struct _XFORM /* id 239 */ *LPXFORM;
struct tagEMRBITBLT { /* size 96 id 240 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 704 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 736 */
};
typedef struct tagEMRBITBLT /* id 240 */ EMRBITBLT;
typedef struct tagEMRBITBLT /* id 240 */ *PEMRBITBLT;
struct tagLOGBRUSH { /* size 12 id 241 */
  UINT lbStyle; /* bitsize 32, bitpos 0 */
  COLORREF lbColor; /* bitsize 32, bitpos 32 */
  LONG lbHatch; /* bitsize 32, bitpos 64 */
};
typedef struct tagLOGBRUSH /* id 241 */ LOGBRUSH;
typedef struct tagLOGBRUSH /* id 241 */ *PLOGBRUSH;
typedef struct tagLOGBRUSH /* id 241 */ *LPLOGBRUSH;
typedef LOGBRUSH PATTERN;
typedef LOGBRUSH *PPATTERN;
typedef LOGBRUSH *LPPATTERN;
struct tagEMRCREATEBRUSHINDIRECT { /* size 24 id 242 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  LOGBRUSH lb; /* bitsize 96, bitpos 96 */
};
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 242 */ EMRCREATEBRUSHINDIRECT;
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 242 */ *PEMRCREATEBRUSHINDIRECT;
typedef LONG LCSCSTYPE;
typedef LONG LCSGAMUTMATCH;
struct tagLOGCOLORSPACEA { /* size 328 id 243 */
  DWORD lcsSignature; /* bitsize 32, bitpos 0 */
  DWORD lcsVersion; /* bitsize 32, bitpos 32 */
  DWORD lcsSize; /* bitsize 32, bitpos 64 */
  LCSCSTYPE lcsCSType; /* bitsize 32, bitpos 96 */
  LCSGAMUTMATCH lcsIntent; /* bitsize 32, bitpos 128 */
  CIEXYZTRIPLE lcsEndpoints; /* bitsize 288, bitpos 160 */
  DWORD lcsGammaRed; /* bitsize 32, bitpos 448 */
  DWORD lcsGammaGreen; /* bitsize 32, bitpos 480 */
  DWORD lcsGammaBlue; /* bitsize 32, bitpos 512 */
  CHAR lcsFilename[260]:uint32; /* bitsize 2080, bitpos 544 */
};
typedef struct tagLOGCOLORSPACEA /* id 243 */ LOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEA /* id 243 */ *LPLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW { /* size 588 id 244 */
  DWORD lcsSignature; /* bitsize 32, bitpos 0 */
  DWORD lcsVersion; /* bitsize 32, bitpos 32 */
  DWORD lcsSize; /* bitsize 32, bitpos 64 */
  LCSCSTYPE lcsCSType; /* bitsize 32, bitpos 96 */
  LCSGAMUTMATCH lcsIntent; /* bitsize 32, bitpos 128 */
  CIEXYZTRIPLE lcsEndpoints; /* bitsize 288, bitpos 160 */
  DWORD lcsGammaRed; /* bitsize 32, bitpos 448 */
  DWORD lcsGammaGreen; /* bitsize 32, bitpos 480 */
  DWORD lcsGammaBlue; /* bitsize 32, bitpos 512 */
  WCHAR lcsFilename[260]:uint32; /* bitsize 4160, bitpos 544 */
};
typedef struct tagLOGCOLORSPACEW /* id 244 */ LOGCOLORSPACEW;
typedef struct tagLOGCOLORSPACEW /* id 244 */ *LPLOGCOLORSPACEW;
struct tagEMRCREATECOLORSPACE { /* size 600 id 245 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
  LOGCOLORSPACEW lcs; /* bitsize 4704, bitpos 96 */
};
typedef struct tagEMRCREATECOLORSPACE /* id 245 */ EMRCREATECOLORSPACE;
typedef struct tagEMRCREATECOLORSPACE /* id 245 */ *PEMRCREATECOLORSPACE;
struct tagEMRCREATEDIBPATTERNBRUSHPT { /* size 32 id 246 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 246 */ EMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 246 */ *PEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH { /* size 32 id 247 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEMONOBRUSH /* id 247 */ EMRCREATEMONOBRUSH;
typedef struct tagEMRCREATEMONOBRUSH /* id 247 */ *PEMRCREATEMONOBRUSH;
struct tagPALETTEENTRY { /* size 4 id 248 */
  BYTE peRed; /* bitsize 8, bitpos 0 */
  BYTE peGreen; /* bitsize 8, bitpos 8 */
  BYTE peBlue; /* bitsize 8, bitpos 16 */
  BYTE peFlags; /* bitsize 8, bitpos 24 */
};
typedef struct tagPALETTEENTRY /* id 248 */ PALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 248 */ *LPPALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 248 */ *PPALETTEENTRY;
struct tagLOGPALETTE { /* size 8 id 249 */
  WORD palVersion; /* bitsize 16, bitpos 0 */
  WORD palNumEntries; /* bitsize 16, bitpos 16 */
  PALETTEENTRY palPalEntry[1]:uint32; /* bitsize 32, bitpos 32 */
};
typedef struct tagLOGPALETTE /* id 249 */ LOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *NPLOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *PLOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *LPLOGPALETTE;
struct tagEMRCREATEPALETTE { /* size 20 id 250 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  LOGPALETTE lgpl; /* bitsize 64, bitpos 96 */
};
typedef struct tagEMRCREATEPALETTE /* id 250 */ EMRCREATEPALETTE;
typedef struct tagEMRCREATEPALETTE /* id 250 */ *PEMRCREATEPALETTE;
struct tagLOGPEN { /* size 16 id 251 */
  UINT lopnStyle; /* bitsize 32, bitpos 0 */
  POINT lopnWidth; /* bitsize 64, bitpos 32 */
  COLORREF lopnColor; /* bitsize 32, bitpos 96 */
};
typedef struct tagLOGPEN /* id 251 */ LOGPEN;
typedef struct tagLOGPEN /* id 251 */ *PLOGPEN;
typedef struct tagLOGPEN /* id 251 */ *LPLOGPEN;
struct tagEMRCREATEPEN { /* size 28 id 252 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  LOGPEN lopn; /* bitsize 128, bitpos 96 */
};
typedef struct tagEMRCREATEPEN /* id 252 */ EMRCREATEPEN;
typedef struct tagEMRCREATEPEN /* id 252 */ *PEMRCREATEPEN;
struct tagEMRELLIPSE { /* size 24 id 253 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRELLIPSE /* id 253 */ EMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 253 */ *PEMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 253 */ EMRRECTANGLE;
typedef struct tagEMRELLIPSE /* id 253 */ *PEMRRECTANGLE;
struct tagEMREOF { /* size 20 id 254 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD nPalEntries; /* bitsize 32, bitpos 64 */
  DWORD offPalEntries; /* bitsize 32, bitpos 96 */
  DWORD nSizeLast; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMREOF /* id 254 */ EMREOF;
typedef struct tagEMREOF /* id 254 */ *PEMREOF;
struct tagEMREXCLUDECLIPRECT { /* size 24 id 255 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclClip; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ EMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ *PEMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ EMRINTERSECTCLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ *PEMRINTERSECTCLIPRECT;
struct tagPANOSE { /* size 10 id 256 */
  BYTE bFamilyType; /* bitsize 8, bitpos 0 */
  BYTE bSerifStyle; /* bitsize 8, bitpos 8 */
  BYTE bWeight; /* bitsize 8, bitpos 16 */
  BYTE bProportion; /* bitsize 8, bitpos 24 */
  BYTE bContrast; /* bitsize 8, bitpos 32 */
  BYTE bStrokeVariation; /* bitsize 8, bitpos 40 */
  BYTE bArmStyle; /* bitsize 8, bitpos 48 */
  BYTE bLetterform; /* bitsize 8, bitpos 56 */
  BYTE bMidline; /* bitsize 8, bitpos 64 */
  BYTE bXHeight; /* bitsize 8, bitpos 72 */
};
typedef struct tagPANOSE /* id 256 */ PANOSE;
struct tagLOGFONTA { /* size 60 id 257 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  CHAR lfFaceName[32]:uint32; /* bitsize 256, bitpos 224 */
};
typedef struct tagLOGFONTA /* id 257 */ LOGFONTA;
typedef struct tagLOGFONTA /* id 257 */ *PLOGFONTA;
typedef struct tagLOGFONTA /* id 257 */ *LPLOGFONTA;
struct tagLOGFONTW { /* size 92 id 258 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  WCHAR lfFaceName[32]:uint32; /* bitsize 512, bitpos 224 */
};
typedef struct tagLOGFONTW /* id 258 */ LOGFONTW;
typedef struct tagLOGFONTW /* id 258 */ *PLOGFONTW;
typedef struct tagLOGFONTW /* id 258 */ *LPLOGFONTW;
struct tagEXTLOGFONTA { /* size 192 id 259 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
  DWORD elfVersion; /* bitsize 32, bitpos 1248 */
  DWORD elfStyleSize; /* bitsize 32, bitpos 1280 */
  DWORD elfMatch; /* bitsize 32, bitpos 1312 */
  DWORD elfReserved; /* bitsize 32, bitpos 1344 */
  BYTE elfVendorId[4]:uint32; /* bitsize 32, bitpos 1376 */
  DWORD elfCulture; /* bitsize 32, bitpos 1408 */
  PANOSE elfPanose; /* bitsize 80, bitpos 1440 */
};
typedef struct tagEXTLOGFONTA /* id 259 */ EXTLOGFONTA;
typedef struct tagEXTLOGFONTA /* id 259 */ *PEXTLOGFONTA;
typedef struct tagEXTLOGFONTA /* id 259 */ *LPEXTLOGFONTA;
struct tagEXTLOGFONTW { /* size 320 id 260 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
  DWORD elfVersion; /* bitsize 32, bitpos 2272 */
  DWORD elfStyleSize; /* bitsize 32, bitpos 2304 */
  DWORD elfMatch; /* bitsize 32, bitpos 2336 */
  DWORD elfReserved; /* bitsize 32, bitpos 2368 */
  BYTE elfVendorId[4]:uint32; /* bitsize 32, bitpos 2400 */
  DWORD elfCulture; /* bitsize 32, bitpos 2432 */
  PANOSE elfPanose; /* bitsize 80, bitpos 2464 */
};
typedef struct tagEXTLOGFONTW /* id 260 */ EXTLOGFONTW;
typedef struct tagEXTLOGFONTW /* id 260 */ *PEXTLOGFONTW;
typedef struct tagEXTLOGFONTW /* id 260 */ *LPEXTLOGFONTW;
struct tagEMREXTCREATEFONTINDIRECTW { /* size 332 id 261 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihFont; /* bitsize 32, bitpos 64 */
  EXTLOGFONTW elfw; /* bitsize 2560, bitpos 96 */
};
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 261 */ EMREXTCREATEFONTINDIRECTW;
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 261 */ *PEMREXTCREATEFONTINDIRECTW;
struct tagEXTLOGPEN { /* size 28 id 262 */
  UINT elpPenStyle; /* bitsize 32, bitpos 0 */
  UINT elpWidth; /* bitsize 32, bitpos 32 */
  UINT elpBrushStyle; /* bitsize 32, bitpos 64 */
  COLORREF elpColor; /* bitsize 32, bitpos 96 */
  LONG elpHatch; /* bitsize 32, bitpos 128 */
  DWORD elpNumEntries; /* bitsize 32, bitpos 160 */
  DWORD elpStyleEntry[1]:uint32; /* bitsize 32, bitpos 192 */
};
typedef struct tagEXTLOGPEN /* id 262 */ EXTLOGPEN;
typedef struct tagEXTLOGPEN /* id 262 */ *PEXTLOGPEN;
typedef struct tagEXTLOGPEN /* id 262 */ *LPEXTLOGPEN;
struct tagEMREXTCREATEPEN { /* size 56 id 263 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  DWORD offBmi; /* bitsize 32, bitpos 96 */
  DWORD cbBmi; /* bitsize 32, bitpos 128 */
  DWORD offBits; /* bitsize 32, bitpos 160 */
  DWORD cbBits; /* bitsize 32, bitpos 192 */
  EXTLOGPEN elp; /* bitsize 224, bitpos 224 */
};
typedef struct tagEMREXTCREATEPEN /* id 263 */ EMREXTCREATEPEN;
typedef struct tagEMREXTCREATEPEN /* id 263 */ *PEMREXTCREATEPEN;
struct tagEMREXTFLOODFILL { /* size 24 id 264 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlStart; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
  DWORD iMode; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMREXTFLOODFILL /* id 264 */ EMREXTFLOODFILL;
typedef struct tagEMREXTFLOODFILL /* id 264 */ *PEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN { /* size 20 id 265 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbRgnData; /* bitsize 32, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 96 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 128 */
};
typedef struct tagEMREXTSELECTCLIPRGN /* id 265 */ EMREXTSELECTCLIPRGN;
typedef struct tagEMREXTSELECTCLIPRGN /* id 265 */ *PEMREXTSELECTCLIPRGN;
struct tagEMRTEXT { /* size 40 id 266 */
  POINTL ptlReference; /* bitsize 64, bitpos 0 */
  DWORD nChars; /* bitsize 32, bitpos 64 */
  DWORD offString; /* bitsize 32, bitpos 96 */
  DWORD fOptions; /* bitsize 32, bitpos 128 */
  RECTL rcl; /* bitsize 128, bitpos 160 */
  DWORD offDx; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRTEXT /* id 266 */ EMRTEXT;
typedef struct tagEMRTEXT /* id 266 */ *PEMRTEXT;
struct tagEMREXTTEXTOUTA { /* size 76 id 267 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  EMRTEXT emrtext; /* bitsize 320, bitpos 288 */
};
typedef struct tagEMREXTTEXTOUTA /* id 267 */ EMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ *PEMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ EMREXTTEXTOUTW;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ *PEMREXTTEXTOUTW;
struct tagEMRFILLPATH { /* size 24 id 268 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRFILLPATH /* id 268 */ EMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ EMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ EMRSTROKEPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRSTROKEPATH;
struct tagEMRFILLRGN { /* size 36 id 269 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRFILLRGN /* id 269 */ EMRFILLRGN;
typedef struct tagEMRFILLRGN /* id 269 */ *PEMRFILLRGN;
struct tagEMRFORMAT { /* size 16 id 270 */
  DWORD dSignature; /* bitsize 32, bitpos 0 */
  DWORD nVersion; /* bitsize 32, bitpos 32 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  DWORD offData; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRFORMAT /* id 270 */ EMRFORMAT;
struct tagEMRFRAMERGN { /* size 44 id 271 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  SIZEL szlStroke; /* bitsize 64, bitpos 256 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 320 */
};
typedef struct tagEMRFRAMERGN /* id 271 */ EMRFRAMERGN;
typedef struct tagEMRFRAMERGN /* id 271 */ *PEMRFRAMERGN;
struct tagEMRGDICOMMENT { /* size 16 id 272 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  BYTE Data[1]:uint32; /* bitsize 8, bitpos 96 */
};
typedef struct tagEMRGDICOMMENT /* id 272 */ EMRGDICOMMENT;
typedef struct tagEMRGDICOMMENT /* id 272 */ *PEMRGDICOMMENT;
struct tagEMRINVERTRGN { /* size 32 id 273 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 224 */
};
typedef struct tagEMRINVERTRGN /* id 273 */ EMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ *PEMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ EMRPAINTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ *PEMRPAINTRGN;
struct tagEMRLINETO { /* size 16 id 274 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptl; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRLINETO /* id 274 */ EMRLINETO;
typedef struct tagEMRLINETO /* id 274 */ *PEMRLINETO;
typedef struct tagEMRLINETO /* id 274 */ EMRMOVETOEX;
typedef struct tagEMRLINETO /* id 274 */ *PEMRMOVETOEX;
struct tagEMRMASKBLT { /* size 128 id 275 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG xMask; /* bitsize 32, bitpos 800 */
  LONG yMask; /* bitsize 32, bitpos 832 */
  DWORD iUsageMask; /* bitsize 32, bitpos 864 */
  DWORD offBmiMask; /* bitsize 32, bitpos 896 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 928 */
  DWORD offBitsMask; /* bitsize 32, bitpos 960 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 992 */
};
typedef struct tagEMRMASKBLT /* id 275 */ EMRMASKBLT;
typedef struct tagEMRMASKBLT /* id 275 */ *PEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM { /* size 36 id 276 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 256 */
};
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 276 */ EMRMODIFYWORLDTRANSFORM;
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 276 */ *PEMRMODIFYWORLDTRANSFORM;
struct tagEMROFFSETCLIPRGN { /* size 16 id 277 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOffset; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMROFFSETCLIPRGN /* id 277 */ EMROFFSETCLIPRGN;
typedef struct tagEMROFFSETCLIPRGN /* id 277 */ *PEMROFFSETCLIPRGN;
struct tagEMRPLGBLT { /* size 140 id 278 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  POINTL aptlDest[3]:uint32; /* bitsize 192, bitpos 192 */
  LONG xSrc; /* bitsize 32, bitpos 384 */
  LONG ySrc; /* bitsize 32, bitpos 416 */
  LONG cxSrc; /* bitsize 32, bitpos 448 */
  LONG cySrc; /* bitsize 32, bitpos 480 */
  XFORM xformSrc; /* bitsize 192, bitpos 512 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 704 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 736 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 768 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 800 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 832 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 864 */
  LONG xMask; /* bitsize 32, bitpos 896 */
  LONG yMask; /* bitsize 32, bitpos 928 */
  DWORD iUsageMask; /* bitsize 32, bitpos 960 */
  DWORD offBmiMask; /* bitsize 32, bitpos 992 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 1024 */
  DWORD offBitsMask; /* bitsize 32, bitpos 1056 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 1088 */
};
typedef struct tagEMRPLGBLT /* id 278 */ EMRPLGBLT;
typedef struct tagEMRPLGBLT /* id 278 */ *PEMRPLGBLT;
struct tagEMRPOLYDRAW { /* size 40 id 279 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 224 */
  BYTE abTypes[1]:uint32; /* bitsize 8, bitpos 288 */
};
typedef struct tagEMRPOLYDRAW /* id 279 */ EMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW /* id 279 */ *PEMRPOLYDRAW;
struct tagEMRPOLYDRAW16 { /* size 36 id 280 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTS apts[1]:uint32; /* bitsize 32, bitpos 224 */
  BYTE abTypes[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRPOLYDRAW16 /* id 280 */ EMRPOLYDRAW16;
typedef struct tagEMRPOLYDRAW16 /* id 280 */ *PEMRPOLYDRAW16;
struct tagEMRPOLYLINE { /* size 36 id 281 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYLINETO;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYLINETO;
struct tagEMRPOLYLINE16 { /* size 36 id 282 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTL apts[1]:uint32; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYLINETO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYLINETO16;
struct tagEMRPOLYPOLYLINE { /* size 44 id 283 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cptl; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]:uint32; /* bitsize 32, bitpos 256 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ EMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ *PEMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ EMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ *PEMRPOLYPOLYGON;
struct tagEMRPOLYPOLYLINE16 { /* size 40 id 284 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cpts; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]:uint32; /* bitsize 32, bitpos 256 */
  POINTS apts[1]:uint32; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ EMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ *PEMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ EMRPOLYPOLYGON16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ *PEMRPOLYPOLYGON16;
struct tagEMRPOLYTEXTOUTA { /* size 80 id 285 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  LONG cStrings; /* bitsize 32, bitpos 288 */
  EMRTEXT aemrtext[1]:uint32; /* bitsize 320, bitpos 320 */
};
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ EMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ *PEMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ EMRPOLYTEXTOUTW;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ *PEMRPOLYTEXTOUTW;
struct tagEMRRESIZEPALETTE { /* size 16 id 286 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD cEntries; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRRESIZEPALETTE /* id 286 */ EMRRESIZEPALETTE;
typedef struct tagEMRRESIZEPALETTE /* id 286 */ *PEMRRESIZEPALETTE;
struct tagEMRRESTOREDC { /* size 12 id 287 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG iRelative; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRRESTOREDC /* id 287 */ EMRRESTOREDC;
typedef struct tagEMRRESTOREDC /* id 287 */ *PEMRRESTOREDC;
struct tagEMRROUNDRECT { /* size 32 id 288 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  SIZEL szlCorner; /* bitsize 64, bitpos 192 */
};
typedef struct tagEMRROUNDRECT /* id 288 */ EMRROUNDRECT;
typedef struct tagEMRROUNDRECT /* id 288 */ *PEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX { /* size 24 id 289 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG xNum; /* bitsize 32, bitpos 64 */
  LONG xDenom; /* bitsize 32, bitpos 96 */
  LONG yNum; /* bitsize 32, bitpos 128 */
  LONG yDenom; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ EMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ *PEMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ EMRSCALEWINDOWEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ *PEMRSCALEWINDOWEXTEX;
struct tagEMRSELECTCOLORSPACE { /* size 12 id 290 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ EMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ *PEMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ EMRDELETECOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ *PEMRDELETECOLORSPACE;
struct tagEMRSELECTOBJECT { /* size 12 id 291 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihObject; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTOBJECT /* id 291 */ EMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ *PEMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ EMRDELETEOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ *PEMRDELETEOBJECT;
struct tagEMRSELECTPALETTE { /* size 12 id 292 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTPALETTE /* id 292 */ EMRSELECTPALETTE;
typedef struct tagEMRSELECTPALETTE /* id 292 */ *PEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION { /* size 12 id 293 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iArcDirection; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETARCDIRECTION /* id 293 */ EMRSETARCDIRECTION;
typedef struct tagEMRSETARCDIRECTION /* id 293 */ *PEMRSETARCDIRECTION;
struct tagEMRSETTEXTCOLOR { /* size 12 id 294 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORREF crColor; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ EMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ *PEMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ EMRSETTEXTCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ *PEMRSETTEXTCOLOR;
struct tagEMRSETCOLORADJUSTMENT { /* size 32 id 295 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORADJUSTMENT ColorAdjustment; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETCOLORADJUSTMENT /* id 295 */ EMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETCOLORADJUSTMENT /* id 295 */ *PEMRSETCOLORADJUSTMENT;
struct tagEMRSETDIBITSTODEVICE { /* size 76 id 296 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD iStartScan; /* bitsize 32, bitpos 544 */
  DWORD cScans; /* bitsize 32, bitpos 576 */
};
typedef struct tagEMRSETDIBITSTODEVICE /* id 296 */ EMRSETDIBITSTODEVICE;
typedef struct tagEMRSETDIBITSTODEVICE /* id 296 */ *PEMRSETDIBITSTODEVICE;
struct tagEMRSETMAPPERFLAGS { /* size 12 id 297 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMAPPERFLAGS /* id 297 */ EMRSETMAPPERFLAGS;
typedef struct tagEMRSETMAPPERFLAGS /* id 297 */ *PEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT { /* size 12 id 298 */
  EMR emr; /* bitsize 64, bitpos 0 */
  FLOAT eMiterLimit; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMITERLIMIT /* id 298 */ EMRSETMITERLIMIT;
typedef struct tagEMRSETMITERLIMIT /* id 298 */ *PEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES { /* size 24 id 299 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD iStart; /* bitsize 32, bitpos 96 */
  DWORD cEntries; /* bitsize 32, bitpos 128 */
  PALETTEENTRY aPalEntries[1]:uint32; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSETPALETTEENTRIES /* id 299 */ EMRSETPALETTEENTRIES;
typedef struct tagEMRSETPALETTEENTRIES /* id 299 */ *PEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV { /* size 20 id 300 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlPixel; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMRSETPIXELV /* id 300 */ EMRSETPIXELV;
typedef struct tagEMRSETPIXELV /* id 300 */ *PEMRSETPIXELV;
struct tagEMRSETVIEWPORTEXTEX { /* size 16 id 301 */
  EMR emr; /* bitsize 64, bitpos 0 */
  SIZEL szlExtent; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ EMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ *PEMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ EMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ *PEMRSETWINDOWEXTEX;
struct tagEMRSETVIEWPORTORGEX { /* size 16 id 302 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOrigin; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETBRUSHORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETBRUSHORGEX;
struct tagEMRSETWORLDTRANSFORM { /* size 32 id 303 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETWORLDTRANSFORM /* id 303 */ EMRSETWORLDTRANSFORM;
typedef struct tagEMRSETWORLDTRANSFORM /* id 303 */ *PEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT { /* size 108 id 304 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG cxSrc; /* bitsize 32, bitpos 800 */
  LONG cySrc; /* bitsize 32, bitpos 832 */
};
typedef struct tagEMRSTRETCHBLT /* id 304 */ EMRSTRETCHBLT;
typedef struct tagEMRSTRETCHBLT /* id 304 */ *PEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS { /* size 80 id 305 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD dwRop; /* bitsize 32, bitpos 544 */
  LONG cxDest; /* bitsize 32, bitpos 576 */
  LONG cyDest; /* bitsize 32, bitpos 608 */
};
typedef struct tagEMRSTRETCHDIBITS /* id 305 */ EMRSTRETCHDIBITS;
typedef struct tagEMRSTRETCHDIBITS /* id 305 */ *PEMRSTRETCHDIBITS;
struct tagABORTPATH { /* size 8 id 306 */
  EMR emr; /* bitsize 64, bitpos 0 */
};
typedef struct tagABORTPATH /* id 306 */ EMRABORTPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRABORTPATH;
typedef struct tagABORTPATH /* id 306 */ EMRBEGINPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRBEGINPATH;
typedef struct tagABORTPATH /* id 306 */ EMRENDPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRENDPATH;
typedef struct tagABORTPATH /* id 306 */ EMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 306 */ *PEMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 306 */ EMRFLATTENPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRFLATTENPATH;
typedef struct tagABORTPATH /* id 306 */ EMRWIDENPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRWIDENPATH;
typedef struct tagABORTPATH /* id 306 */ EMRSETMETARGN;
typedef struct tagABORTPATH /* id 306 */ *PEMRSETMETARGN;
typedef struct tagABORTPATH /* id 306 */ EMRSAVEDC;
typedef struct tagABORTPATH /* id 306 */ *PEMRSAVEDC;
typedef struct tagABORTPATH /* id 306 */ EMRREALIZEPALETTE;
typedef struct tagABORTPATH /* id 306 */ *PEMRREALIZEPALETTE;
struct tagEMRSELECTCLIPPATH { /* size 12 id 307 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iMode; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRENABLEICM;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRENABLEICM;
struct tagMETAHEADER { /* size 18 id 308 */
  WORD mtType; /* bitsize 16, bitpos 0 */
  WORD mtHeaderSize; /* bitsize 16, bitpos 16 */
  WORD mtVersion; /* bitsize 16, bitpos 32 */
  DWORD mtSize; /* bitsize 32, bitpos 48 */
  WORD mtNoObjects; /* bitsize 16, bitpos 80 */
  DWORD mtMaxRecord; /* bitsize 32, bitpos 96 */
  WORD mtNoParameters; /* bitsize 16, bitpos 128 */
};
typedef struct tagMETAHEADER /* id 308 */ METAHEADER;
typedef struct tagMETAHEADER /* id 308 */ *PMETAHEADER;
typedef struct tagMETAHEADER /* id 308 */ *LPMETAHEADER;
struct tagENHMETAHEADER { /* size 100 id 309 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  RECTL rclFrame; /* bitsize 128, bitpos 192 */
  DWORD dSignature; /* bitsize 32, bitpos 320 */
  DWORD nVersion; /* bitsize 32, bitpos 352 */
  DWORD nBytes; /* bitsize 32, bitpos 384 */
  DWORD nRecords; /* bitsize 32, bitpos 416 */
  WORD nHandles; /* bitsize 16, bitpos 448 */
  WORD sReserved; /* bitsize 16, bitpos 464 */
  DWORD nDescription; /* bitsize 32, bitpos 480 */
  DWORD offDescription; /* bitsize 32, bitpos 512 */
  DWORD nPalEntries; /* bitsize 32, bitpos 544 */
  SIZEL szlDevice; /* bitsize 64, bitpos 576 */
  SIZEL szlMillimeters; /* bitsize 64, bitpos 640 */
  DWORD cbPixelFormat; /* bitsize 32, bitpos 704 */
  DWORD offPixelFormat; /* bitsize 32, bitpos 736 */
  DWORD bOpenGL; /* bitsize 32, bitpos 768 */
};
typedef struct tagENHMETAHEADER /* id 309 */ ENHMETAHEADER;
typedef struct tagENHMETAHEADER /* id 309 */ *LPENHMETAHEADER;
struct tagMETARECORD { /* size 8 id 310 */
  DWORD rdSize; /* bitsize 32, bitpos 0 */
  WORD rdFunction; /* bitsize 16, bitpos 32 */
  WORD rdParm[1]:uint32; /* bitsize 16, bitpos 48 */
};
typedef struct tagMETARECORD /* id 310 */ METARECORD;
typedef struct tagMETARECORD /* id 310 */ *PMETARECORD;
typedef struct tagMETARECORD /* id 310 */ *LPMETARECORD;
struct tagENHMETARECORD { /* size 12 id 311 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  DWORD dParm[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct tagENHMETARECORD /* id 311 */ ENHMETARECORD;
typedef struct tagENHMETARECORD /* id 311 */ *LPENHMETARECORD;
struct tagHANDLETABLE { /* size 4 id 312 */
  HGDIOBJ objectHandle[1]:uint32; /* bitsize 32, bitpos 0 */
};
typedef struct tagHANDLETABLE /* id 312 */ HANDLETABLE;
typedef struct tagHANDLETABLE /* id 312 */ *LPHANDLETABLE;
struct tagTEXTMETRICA { /* size 56 id 313 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BYTE tmFirstChar; /* bitsize 8, bitpos 352 */
  BYTE tmLastChar; /* bitsize 8, bitpos 360 */
  BYTE tmDefaultChar; /* bitsize 8, bitpos 368 */
  BYTE tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
};
typedef struct tagTEXTMETRICA /* id 313 */ TEXTMETRICA;
typedef struct tagTEXTMETRICA /* id 313 */ *PTEXTMETRICA;
typedef struct tagTEXTMETRICA /* id 313 */ *LPTEXTMETRICA;
struct tagTEXTMETRICW { /* size 60 id 314 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  WCHAR tmFirstChar; /* bitsize 16, bitpos 352 */
  WCHAR tmLastChar; /* bitsize 16, bitpos 368 */
  WCHAR tmDefaultChar; /* bitsize 16, bitpos 384 */
  WCHAR tmBreakChar; /* bitsize 16, bitpos 400 */
  BYTE tmItalic; /* bitsize 8, bitpos 416 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 424 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 432 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 440 */
  BYTE tmCharSet; /* bitsize 8, bitpos 448 */
};
typedef struct tagTEXTMETRICW /* id 314 */ TEXTMETRICW;
typedef struct tagTEXTMETRICW /* id 314 */ *PTEXTMETRICW;
typedef struct tagTEXTMETRICW /* id 314 */ *LPTEXTMETRICW;
struct _RGNDATAHEADER { /* size 32 id 315 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD iType; /* bitsize 32, bitpos 32 */
  DWORD nCount; /* bitsize 32, bitpos 64 */
  DWORD nRgnSize; /* bitsize 32, bitpos 96 */
  RECT rcBound; /* bitsize 128, bitpos 128 */
};
typedef struct _RGNDATAHEADER /* id 315 */ RGNDATAHEADER;
struct _RGNDATA { /* size 36 id 316 */
  RGNDATAHEADER rdh; /* bitsize 256, bitpos 0 */
  char Buffer[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct _RGNDATA /* id 316 */ RGNDATA;
typedef struct _RGNDATA /* id 316 */ *PRGNDATA;
typedef struct _RGNDATA /* id 316 */ *LPRGNDATA;
struct tagGCP_RESULTSA { /* size 36 id 317 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  LPSTR lpOutString; /* bitsize 32, bitpos 32 */
  UINT *lpOrder; /* bitsize 32, bitpos 64 */
  INT *lpDx; /* bitsize 32, bitpos 96 */
  INT *lpCaretPos; /* bitsize 32, bitpos 128 */
  LPSTR lpClass; /* bitsize 32, bitpos 160 */
  LPWSTR lpGlyphs; /* bitsize 32, bitpos 192 */
  UINT nGlyphs; /* bitsize 32, bitpos 224 */
  UINT nMaxFit; /* bitsize 32, bitpos 256 */
};
typedef struct tagGCP_RESULTSA /* id 317 */ GCP_RESULTSA;
typedef struct tagGCP_RESULTSA /* id 317 */ *LPGCP_RESULTSA;
struct tagGCP_RESULTSW { /* size 36 id 318 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  LPWSTR lpOutString; /* bitsize 32, bitpos 32 */
  UINT *lpOrder; /* bitsize 32, bitpos 64 */
  INT *lpDx; /* bitsize 32, bitpos 96 */
  INT *lpCaretPos; /* bitsize 32, bitpos 128 */
  LPWSTR lpClass; /* bitsize 32, bitpos 160 */
  LPWSTR lpGlyphs; /* bitsize 32, bitpos 192 */
  UINT nGlyphs; /* bitsize 32, bitpos 224 */
  UINT nMaxFit; /* bitsize 32, bitpos 256 */
};
typedef struct tagGCP_RESULTSW /* id 318 */ GCP_RESULTSW;
typedef struct tagGCP_RESULTSW /* id 318 */ *LPGCP_RESULTSW;
struct _GLYPHMETRICS { /* size 20 id 319 */
  UINT gmBlackBoxX; /* bitsize 32, bitpos 0 */
  UINT gmBlackBoxY; /* bitsize 32, bitpos 32 */
  POINT gmptGlyphOrigin; /* bitsize 64, bitpos 64 */
  short int gmCellIncX; /* bitsize 16, bitpos 128 */
  short int gmCellIncY; /* bitsize 16, bitpos 144 */
};
typedef struct _GLYPHMETRICS /* id 319 */ GLYPHMETRICS;
typedef struct _GLYPHMETRICS /* id 319 */ *LPGLYPHMETRICS;
struct tagKERNINGPAIR { /* size 8 id 320 */
  WORD wFirst; /* bitsize 16, bitpos 0 */
  WORD wSecond; /* bitsize 16, bitpos 16 */
  int iKernAmount; /* bitsize 32, bitpos 32 */
};
typedef struct tagKERNINGPAIR /* id 320 */ KERNINGPAIR;
typedef struct tagKERNINGPAIR /* id 320 */ *LPKERNINGPAIR;
struct _FIXED { /* size 4 id 321 */
  WORD fract; /* bitsize 16, bitpos 0 */
  short int value; /* bitsize 16, bitpos 16 */
};
typedef struct _FIXED /* id 321 */ FIXED;
struct _MAT2 { /* size 16 id 322 */
  FIXED eM11; /* bitsize 32, bitpos 0 */
  FIXED eM12; /* bitsize 32, bitpos 32 */
  FIXED eM21; /* bitsize 32, bitpos 64 */
  FIXED eM22; /* bitsize 32, bitpos 96 */
};
typedef struct _MAT2 /* id 322 */ MAT2;
typedef struct _MAT2 /* id 322 */ *LPMAT2;
struct _OUTLINETEXTMETRICA { /* size 212 id 323 */
  UINT otmSize; /* bitsize 32, bitpos 0 */
  TEXTMETRICA otmTextMetrics; /* bitsize 448, bitpos 32 */
  BYTE otmFiller; /* bitsize 8, bitpos 480 */
  PANOSE otmPanoseNumber; /* bitsize 80, bitpos 488 */
  UINT otmfsSelection; /* bitsize 32, bitpos 576 */
  UINT otmfsType; /* bitsize 32, bitpos 608 */
  int otmsCharSlopeRise; /* bitsize 32, bitpos 640 */
  int otmsCharSlopeRun; /* bitsize 32, bitpos 672 */
  int otmItalicAngle; /* bitsize 32, bitpos 704 */
  UINT otmEMSquare; /* bitsize 32, bitpos 736 */
  int otmAscent; /* bitsize 32, bitpos 768 */
  int otmDescent; /* bitsize 32, bitpos 800 */
  UINT otmLineGap; /* bitsize 32, bitpos 832 */
  UINT otmsCapEmHeight; /* bitsize 32, bitpos 864 */
  UINT otmsXHeight; /* bitsize 32, bitpos 896 */
  RECT otmrcFontBox; /* bitsize 128, bitpos 928 */
  int otmMacAscent; /* bitsize 32, bitpos 1056 */
  int otmMacDescent; /* bitsize 32, bitpos 1088 */
  UINT otmMacLineGap; /* bitsize 32, bitpos 1120 */
  UINT otmusMinimumPPEM; /* bitsize 32, bitpos 1152 */
  POINT otmptSubscriptSize; /* bitsize 64, bitpos 1184 */
  POINT otmptSubscriptOffset; /* bitsize 64, bitpos 1248 */
  POINT otmptSuperscriptSize; /* bitsize 64, bitpos 1312 */
  POINT otmptSuperscriptOffset; /* bitsize 64, bitpos 1376 */
  UINT otmsStrikeoutSize; /* bitsize 32, bitpos 1440 */
  int otmsStrikeoutPosition; /* bitsize 32, bitpos 1472 */
  int otmsUnderscoreSize; /* bitsize 32, bitpos 1504 */
  int otmsUnderscorePosition; /* bitsize 32, bitpos 1536 */
  PSTR otmpFamilyName; /* bitsize 32, bitpos 1568 */
  PSTR otmpFaceName; /* bitsize 32, bitpos 1600 */
  PSTR otmpStyleName; /* bitsize 32, bitpos 1632 */
  PSTR otmpFullName; /* bitsize 32, bitpos 1664 */
};
typedef struct _OUTLINETEXTMETRICA /* id 323 */ OUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICA /* id 323 */ *POUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICA /* id 323 */ *LPOUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW { /* size 216 id 324 */
  UINT otmSize; /* bitsize 32, bitpos 0 */
  TEXTMETRICW otmTextMetrics; /* bitsize 480, bitpos 32 */
  BYTE otmFiller; /* bitsize 8, bitpos 512 */
  PANOSE otmPanoseNumber; /* bitsize 80, bitpos 520 */
  UINT otmfsSelection; /* bitsize 32, bitpos 608 */
  UINT otmfsType; /* bitsize 32, bitpos 640 */
  int otmsCharSlopeRise; /* bitsize 32, bitpos 672 */
  int otmsCharSlopeRun; /* bitsize 32, bitpos 704 */
  int otmItalicAngle; /* bitsize 32, bitpos 736 */
  UINT otmEMSquare; /* bitsize 32, bitpos 768 */
  int otmAscent; /* bitsize 32, bitpos 800 */
  int otmDescent; /* bitsize 32, bitpos 832 */
  UINT otmLineGap; /* bitsize 32, bitpos 864 */
  UINT otmsCapEmHeight; /* bitsize 32, bitpos 896 */
  UINT otmsXHeight; /* bitsize 32, bitpos 928 */
  RECT otmrcFontBox; /* bitsize 128, bitpos 960 */
  int otmMacAscent; /* bitsize 32, bitpos 1088 */
  int otmMacDescent; /* bitsize 32, bitpos 1120 */
  UINT otmMacLineGap; /* bitsize 32, bitpos 1152 */
  UINT otmusMinimumPPEM; /* bitsize 32, bitpos 1184 */
  POINT otmptSubscriptSize; /* bitsize 64, bitpos 1216 */
  POINT otmptSubscriptOffset; /* bitsize 64, bitpos 1280 */
  POINT otmptSuperscriptSize; /* bitsize 64, bitpos 1344 */
  POINT otmptSuperscriptOffset; /* bitsize 64, bitpos 1408 */
  UINT otmsStrikeoutSize; /* bitsize 32, bitpos 1472 */
  int otmsStrikeoutPosition; /* bitsize 32, bitpos 1504 */
  int otmsUnderscoreSize; /* bitsize 32, bitpos 1536 */
  int otmsUnderscorePosition; /* bitsize 32, bitpos 1568 */
  PSTR otmpFamilyName; /* bitsize 32, bitpos 1600 */
  PSTR otmpFaceName; /* bitsize 32, bitpos 1632 */
  PSTR otmpStyleName; /* bitsize 32, bitpos 1664 */
  PSTR otmpFullName; /* bitsize 32, bitpos 1696 */
};
typedef struct _OUTLINETEXTMETRICW /* id 324 */ OUTLINETEXTMETRICW;
typedef struct _OUTLINETEXTMETRICW /* id 324 */ *POUTLINETEXTMETRICW;
typedef struct _OUTLINETEXTMETRICW /* id 324 */ *LPOUTLINETEXTMETRICW;
struct _RASTERIZER_STATUS { /* size 6 id 325 */
  short int nSize; /* bitsize 16, bitpos 0 */
  short int wFlags; /* bitsize 16, bitpos 16 */
  short int nLanguageID; /* bitsize 16, bitpos 32 */
};
typedef struct _RASTERIZER_STATUS /* id 325 */ RASTERIZER_STATUS;
typedef struct _RASTERIZER_STATUS /* id 325 */ *LPRASTERIZER_STATUS;
struct _POLYTEXTA { /* size 40 id 326 */
  int x; /* bitsize 32, bitpos 0 */
  int y; /* bitsize 32, bitpos 32 */
  UINT n; /* bitsize 32, bitpos 64 */
  LPCSTR lpstr; /* bitsize 32, bitpos 96 */
  UINT uiFlags; /* bitsize 32, bitpos 128 */
  RECT rcl; /* bitsize 128, bitpos 160 */
  int *pdx; /* bitsize 32, bitpos 288 */
};
typedef struct _POLYTEXTA /* id 326 */ POLYTEXTA;
typedef struct _POLYTEXTA /* id 326 */ *PPOLYTEXTA;
typedef struct _POLYTEXTA /* id 326 */ *LPPOLYTEXTA;
struct _POLYTEXTW { /* size 40 id 327 */
  int x; /* bitsize 32, bitpos 0 */
  int y; /* bitsize 32, bitpos 32 */
  UINT n; /* bitsize 32, bitpos 64 */
  LPCWSTR lpstr; /* bitsize 32, bitpos 96 */
  UINT uiFlags; /* bitsize 32, bitpos 128 */
  RECT rcl; /* bitsize 128, bitpos 160 */
  int *pdx; /* bitsize 32, bitpos 288 */
};
typedef struct _POLYTEXTW /* id 327 */ POLYTEXTW;
typedef struct _POLYTEXTW /* id 327 */ *PPOLYTEXTW;
typedef struct _POLYTEXTW /* id 327 */ *LPPOLYTEXTW;
struct tagPIXELFORMATDESCRIPTOR { /* size 40 id 328 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerType; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  DWORD dwLayerMask; /* bitsize 32, bitpos 224 */
  DWORD dwVisibleMask; /* bitsize 32, bitpos 256 */
  DWORD dwDamageMask; /* bitsize 32, bitpos 288 */
};
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ PIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ *PPIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ *LPPIXELFORMATDESCRIPTOR;
struct tagMETAFILEPICT { /* size 16 id 329 */
  LONG mm; /* bitsize 32, bitpos 0 */
  LONG xExt; /* bitsize 32, bitpos 32 */
  LONG yExt; /* bitsize 32, bitpos 64 */
  HMETAFILE hMF; /* bitsize 32, bitpos 96 */
};
typedef struct tagMETAFILEPICT /* id 329 */ METAFILEPICT;
typedef struct tagMETAFILEPICT /* id 329 */ *LPMETAFILEPICT;
struct tagLOCALESIGNATURE { /* size 32 id 330 */
  DWORD lsUsb[4]:uint32; /* bitsize 128, bitpos 0 */
  DWORD lsCsbDefault[2]:uint32; /* bitsize 64, bitpos 128 */
  DWORD lsCsbSupported[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct tagLOCALESIGNATURE /* id 330 */ LOCALESIGNATURE;
typedef struct tagLOCALESIGNATURE /* id 330 */ *PLOCALESIGNATURE;
typedef struct tagLOCALESIGNATURE /* id 330 */ *LPLOCALESIGNATURE;
typedef LONG LCSTYPE;
struct tagNEWTEXTMETRICA { /* size 72 id 331 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BYTE tmFirstChar; /* bitsize 8, bitpos 352 */
  BYTE tmLastChar; /* bitsize 8, bitpos 360 */
  BYTE tmDefaultChar; /* bitsize 8, bitpos 368 */
  BYTE tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
  DWORD ntmFlags; /* bitsize 32, bitpos 448 */
  UINT ntmSizeEM; /* bitsize 32, bitpos 480 */
  UINT ntmCellHeight; /* bitsize 32, bitpos 512 */
  UINT ntmAvgWidth; /* bitsize 32, bitpos 544 */
};
typedef struct tagNEWTEXTMETRICA /* id 331 */ NEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICA /* id 331 */ *PNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICA /* id 331 */ *LPNEWTEXTMETRICA;
struct tagNEWTEXTMETRICW { /* size 76 id 332 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  WCHAR tmFirstChar; /* bitsize 16, bitpos 352 */
  WCHAR tmLastChar; /* bitsize 16, bitpos 368 */
  WCHAR tmDefaultChar; /* bitsize 16, bitpos 384 */
  WCHAR tmBreakChar; /* bitsize 16, bitpos 400 */
  BYTE tmItalic; /* bitsize 8, bitpos 416 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 424 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 432 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 440 */
  BYTE tmCharSet; /* bitsize 8, bitpos 448 */
  DWORD ntmFlags; /* bitsize 32, bitpos 480 */
  UINT ntmSizeEM; /* bitsize 32, bitpos 512 */
  UINT ntmCellHeight; /* bitsize 32, bitpos 544 */
  UINT ntmAvgWidth; /* bitsize 32, bitpos 576 */
};
typedef struct tagNEWTEXTMETRICW /* id 332 */ NEWTEXTMETRICW;
typedef struct tagNEWTEXTMETRICW /* id 332 */ *PNEWTEXTMETRICW;
typedef struct tagNEWTEXTMETRICW /* id 332 */ *LPNEWTEXTMETRICW;
struct tagNEWTEXTMETRICEXA { /* size 96 id 333 */
  NEWTEXTMETRICA ntmTm; /* bitsize 576, bitpos 0 */
  FONTSIGNATURE ntmFontSig; /* bitsize 192, bitpos 576 */
};
typedef struct tagNEWTEXTMETRICEXA /* id 333 */ NEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW { /* size 100 id 334 */
  NEWTEXTMETRICW ntmTm; /* bitsize 608, bitpos 0 */
  FONTSIGNATURE ntmFontSig; /* bitsize 192, bitpos 608 */
};
typedef struct tagNEWTEXTMETRICEXW /* id 334 */ NEWTEXTMETRICEXW;
struct tagPELARRAY { /* size 20 id 335 */
  LONG paXCount; /* bitsize 32, bitpos 0 */
  LONG paYCount; /* bitsize 32, bitpos 32 */
  LONG paXExt; /* bitsize 32, bitpos 64 */
  LONG paYExt; /* bitsize 32, bitpos 96 */
  BYTE paRGBs; /* bitsize 8, bitpos 128 */
};
typedef struct tagPELARRAY /* id 335 */ PELARRAY;
typedef struct tagPELARRAY /* id 335 */ *PPELARRAY;
typedef struct tagPELARRAY /* id 335 */ *LPPELARRAY;
struct tagENUMLOGFONTA { /* size 156 id 336 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
};
typedef struct tagENUMLOGFONTA /* id 336 */ ENUMLOGFONTA;
typedef struct tagENUMLOGFONTA /* id 336 */ *LPENUMLOGFONTA;
struct tagENUMLOGFONTW { /* size 284 id 337 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
};
typedef struct tagENUMLOGFONTW /* id 337 */ ENUMLOGFONTW;
typedef struct tagENUMLOGFONTW /* id 337 */ *LPENUMLOGFONTW;
struct tagENUMLOGFONTEXA { /* size 188 id 338 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
  BYTE elfScript[32]:uint32; /* bitsize 256, bitpos 1248 */
};
typedef struct tagENUMLOGFONTEXA /* id 338 */ ENUMLOGFONTEXA;
typedef struct tagENUMLOGFONTEXA /* id 338 */ *LPENUMLOGFONTEXA;
struct tagENUMLOGFONTEXW { /* size 348 id 339 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
  WCHAR elfScript[32]:uint32; /* bitsize 512, bitpos 2272 */
};
typedef struct tagENUMLOGFONTEXW /* id 339 */ ENUMLOGFONTEXW;
typedef struct tagENUMLOGFONTEXW /* id 339 */ *LPENUMLOGFONTEXW;
struct tagPOINTFX { /* size 8 id 340 */
  FIXED x; /* bitsize 32, bitpos 0 */
  FIXED y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINTFX /* id 340 */ POINTFX;
typedef struct tagPOINTFX /* id 340 */ *LPPOINTFX;
struct tagTTPOLYCURVE { /* size 12 id 341 */
  WORD wType; /* bitsize 16, bitpos 0 */
  WORD cpfx; /* bitsize 16, bitpos 16 */
  POINTFX apfx[1]:uint32; /* bitsize 64, bitpos 32 */
};
typedef struct tagTTPOLYCURVE /* id 341 */ TTPOLYCURVE;
typedef struct tagTTPOLYCURVE /* id 341 */ *LPTTPOLYCURVE;
struct tagTTPOLYGONHEADER { /* size 16 id 342 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
  POINTFX pfxStart; /* bitsize 64, bitpos 64 */
};
typedef struct tagTTPOLYGONHEADER /* id 342 */ TTPOLYGONHEADER;
typedef struct tagTTPOLYGONHEADER /* id 342 */ *LPTTPOLYGONHEADER;
struct _POINTFLOAT { /* size 8 id 343 */
  FLOAT x; /* bitsize 32, bitpos 0 */
  FLOAT y; /* bitsize 32, bitpos 32 */
};
typedef struct _POINTFLOAT /* id 343 */ POINTFLOAT;
typedef struct _POINTFLOAT /* id 343 */ *PPOINTFLOAT;
struct _GLYPHMETRICSFLOAT { /* size 24 id 344 */
  FLOAT gmfBlackBoxX; /* bitsize 32, bitpos 0 */
  FLOAT gmfBlackBoxY; /* bitsize 32, bitpos 32 */
  POINTFLOAT gmfptGlyphOrigin; /* bitsize 64, bitpos 64 */
  FLOAT gmfCellIncX; /* bitsize 32, bitpos 128 */
  FLOAT gmfCellIncY; /* bitsize 32, bitpos 160 */
};
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ GLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ *PGLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ *LPGLYPHMETRICSFLOAT;
struct tagLAYERPLANEDESCRIPTOR { /* size 32 id 345 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerPlane; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  COLORREF crTransparent; /* bitsize 32, bitpos 224 */
};
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ LAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ *PLAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ *LPLAYERPLANEDESCRIPTOR;
struct _BLENDFUNCTION { /* size 4 id 346 */
  BYTE BlendOp; /* bitsize 8, bitpos 0 */
  BYTE BlendFlags; /* bitsize 8, bitpos 8 */
  BYTE SourceConstantAlpha; /* bitsize 8, bitpos 16 */
  BYTE AlphaFormat; /* bitsize 8, bitpos 24 */
};
typedef struct _BLENDFUNCTION /* id 346 */ BLENDFUNCTION;
typedef struct _BLENDFUNCTION /* id 346 */ *PBLENDFUNCTION;
typedef struct _BLENDFUNCTION /* id 346 */ *LPBLENDFUNCTION;
struct _DESIGNVECTOR { /* size 72 id 347 */
  DWORD dvReserved; /* bitsize 32, bitpos 0 */
  DWORD dvNumAxes; /* bitsize 32, bitpos 32 */
  LONG dvValues[16]:uint32; /* bitsize 512, bitpos 64 */
};
typedef struct _DESIGNVECTOR /* id 347 */ DESIGNVECTOR;
typedef struct _DESIGNVECTOR /* id 347 */ *PDESIGNVECTOR;
typedef struct _DESIGNVECTOR /* id 347 */ *LPDESIGNVECTOR;
typedef USHORT COLOR16;
struct _TRIVERTEX { /* size 16 id 348 */
  LONG x; /* bitsize 32, bitpos 0 */
  LONG y; /* bitsize 32, bitpos 32 */
  COLOR16 Red; /* bitsize 16, bitpos 64 */
  COLOR16 Green; /* bitsize 16, bitpos 80 */
  COLOR16 Blue; /* bitsize 16, bitpos 96 */
  COLOR16 Alpha; /* bitsize 16, bitpos 112 */
};
typedef struct _TRIVERTEX /* id 348 */ TRIVERTEX;
typedef struct _TRIVERTEX /* id 348 */ *PTRIVERTEX;
typedef struct _TRIVERTEX /* id 348 */ *LPTRIVERTEX;
struct _GRADIENT_TRIANGLE { /* size 12 id 349 */
  ULONG Vertex1; /* bitsize 32, bitpos 0 */
  ULONG Vertex2; /* bitsize 32, bitpos 32 */
  ULONG Vertex3; /* bitsize 32, bitpos 64 */
};
typedef struct _GRADIENT_TRIANGLE /* id 349 */ GRADIENT_TRIANGLE;
typedef struct _GRADIENT_TRIANGLE /* id 349 */ *PGRADIENT_TRIANGLE;
typedef struct _GRADIENT_TRIANGLE /* id 349 */ *LPGRADIENT_TRIANGLE;
struct _GRADIENT_RECT { /* size 8 id 350 */
  ULONG UpperLeft; /* bitsize 32, bitpos 0 */
  ULONG LowerRight; /* bitsize 32, bitpos 32 */
};
typedef struct _GRADIENT_RECT /* id 350 */ GRADIENT_RECT;
typedef struct _GRADIENT_RECT /* id 350 */ *PGRADIENT_RECT;
typedef struct _GRADIENT_RECT /* id 350 */ *LPGRADIENT_RECT;
struct _DISPLAY_DEVICEA { /* size 424 id 351 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  CHAR DeviceName[32]:uint32; /* bitsize 256, bitpos 32 */
  CHAR DeviceString[128]:uint32; /* bitsize 1024, bitpos 288 */
  DWORD StateFlags; /* bitsize 32, bitpos 1312 */
  CHAR DeviceID[128]:uint32; /* bitsize 1024, bitpos 1344 */
  CHAR DeviceKey[128]:uint32; /* bitsize 1024, bitpos 2368 */
};
typedef struct _DISPLAY_DEVICEA /* id 351 */ DISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEA /* id 351 */ *PDISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEA /* id 351 */ *LPDISPLAY_DEVICEA;
struct _DISPLAY_DEVICEW { /* size 840 id 352 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  WCHAR DeviceName[32]:uint32; /* bitsize 512, bitpos 32 */
  WCHAR DeviceString[128]:uint32; /* bitsize 2048, bitpos 544 */
  DWORD StateFlags; /* bitsize 32, bitpos 2592 */
  WCHAR DeviceID[128]:uint32; /* bitsize 2048, bitpos 2624 */
  WCHAR DeviceKey[128]:uint32; /* bitsize 2048, bitpos 4672 */
};
typedef struct _DISPLAY_DEVICEW /* id 352 */ DISPLAY_DEVICEW;
typedef struct _DISPLAY_DEVICEW /* id 352 */ *PDISPLAY_DEVICEW;
typedef struct _DISPLAY_DEVICEW /* id 352 */ *LPDISPLAY_DEVICEW;
typedef BOOL (*ABORTPROC) (/* unknown */);
typedef int (*MFENUMPROC) (/* unknown */);
typedef int (*ENHMFENUMPROC) (/* unknown */);
typedef int (*OLDFONTENUMPROCA) (/* unknown */);
typedef int (*OLDFONTENUMPROCW) (/* unknown */);
typedef OLDFONTENUMPROCA FONTENUMPROCA;
typedef OLDFONTENUMPROCW FONTENUMPROCW;
typedef int (*ICMENUMPROCA) (/* unknown */);
typedef int (*ICMENUMPROCW) (/* unknown */);
typedef void (*GOBJENUMPROC) (/* unknown */);
typedef void (*LINEDDAPROC) (/* unknown */);
typedef UINT (*LPFNDEVMODE) (/* unknown */);
typedef DWORD (*LPFNDEVCAPS) (/* unknown */);
int AbortDoc (HDC a /* 0x8 */)
{ /* 0x0 */
  /* file wingdi.c line 2686 addr 0x0 */
  /* file wingdi.c line 2686 addr 0x3 */
} /* 0x7 */
BOOL AbortPath (HDC a /* 0x8 */)
{ /* 0x7 */
  /* file wingdi.c line 2687 addr 0x7 */
  /* file wingdi.c line 2687 addr 0xa */
} /* 0xe */
int AddFontResourceA (LPCSTR a /* 0x8 */)
{ /* 0xe */
  /* file wingdi.c line 2688 addr 0xe */
  /* file wingdi.c line 2688 addr 0x11 */
} /* 0x15 */
int AddFontResourceW (LPCWSTR a /* 0x8 */)
{ /* 0x15 */
  /* file wingdi.c line 2689 addr 0x15 */
  /* file wingdi.c line 2689 addr 0x18 */
} /* 0x1c */
BOOL AngleArc (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, DWORD d /* 0x14 */, FLOAT e /* 0x18 */, FLOAT f /* 0x1c */)
{ /* 0x1c */
  /* file wingdi.c line 2695 addr 0x1c */
  /* file wingdi.c line 2695 addr 0x1f */
} /* 0x23 */
BOOL AnimatePalette (HPALETTE a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, PALETTEENTRY const *d /* 0x14 */)
{ /* 0x23 */
  /* file wingdi.c line 2696 addr 0x23 */
  /* file wingdi.c line 2696 addr 0x26 */
} /* 0x2a */
BOOL Arc (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x2a */
  /* file wingdi.c line 2697 addr 0x2a */
  /* file wingdi.c line 2697 addr 0x2d */
} /* 0x31 */
BOOL ArcTo (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x31 */
  /* file wingdi.c line 2698 addr 0x31 */
  /* file wingdi.c line 2698 addr 0x34 */
} /* 0x38 */
BOOL BeginPath (HDC a /* 0x8 */)
{ /* 0x38 */
  /* file wingdi.c line 2699 addr 0x38 */
  /* file wingdi.c line 2699 addr 0x3b */
} /* 0x3f */
BOOL BitBlt (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, HDC f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, DWORD i /* 0x28 */)
{ /* 0x3f */
  /* file wingdi.c line 2700 addr 0x3f */
  /* file wingdi.c line 2700 addr 0x42 */
} /* 0x46 */
BOOL CancelDC (HDC a /* 0x8 */)
{ /* 0x46 */
  /* file wingdi.c line 2701 addr 0x46 */
  /* file wingdi.c line 2701 addr 0x49 */
} /* 0x4d */
BOOL CheckColorsInGamut (HDC a /* 0x8 */, PVOID b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x4d */
  /* file wingdi.c line 2702 addr 0x4d */
  /* file wingdi.c line 2702 addr 0x50 */
} /* 0x54 */
BOOL Chord (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x54 */
  /* file wingdi.c line 2703 addr 0x54 */
  /* file wingdi.c line 2703 addr 0x57 */
} /* 0x5b */
int ChoosePixelFormat (HDC a /* 0x8 */, PIXELFORMATDESCRIPTOR const *b /* 0xc */)
{ /* 0x5b */
  /* file wingdi.c line 2704 addr 0x5b */
  /* file wingdi.c line 2704 addr 0x5e */
} /* 0x62 */
HENHMETAFILE CloseEnhMetaFile (HDC a /* 0x8 */)
{ /* 0x62 */
  /* file wingdi.c line 2705 addr 0x62 */
  /* file wingdi.c line 2705 addr 0x65 */
} /* 0x69 */
BOOL CloseFigure (HDC a /* 0x8 */)
{ /* 0x69 */
  /* file wingdi.c line 2706 addr 0x69 */
  /* file wingdi.c line 2706 addr 0x6c */
} /* 0x70 */
HMETAFILE CloseMetaFile (HDC a /* 0x8 */)
{ /* 0x70 */
  /* file wingdi.c line 2707 addr 0x70 */
  /* file wingdi.c line 2707 addr 0x73 */
} /* 0x77 */
int CombineRgn (HRGN a /* 0x8 */, HRGN b /* 0xc */, HRGN c /* 0x10 */, int d /* 0x14 */)
{ /* 0x77 */
  /* file wingdi.c line 2712 addr 0x77 */
  /* file wingdi.c line 2712 addr 0x7a */
} /* 0x7e */
BOOL CombineTransform (LPXFORM a /* 0x8 */, XFORM const *b /* 0xc */, XFORM const *c /* 0x10 */)
{ /* 0x7e */
  /* file wingdi.c line 2713 addr 0x7e */
  /* file wingdi.c line 2713 addr 0x81 */
} /* 0x85 */
HENHMETAFILE CopyEnhMetaFileA (HENHMETAFILE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x85 */
  /* file wingdi.c line 2714 addr 0x85 */
  /* file wingdi.c line 2714 addr 0x88 */
} /* 0x8c */
HENHMETAFILE CopyEnhMetaFileW (HENHMETAFILE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x8c */
  /* file wingdi.c line 2715 addr 0x8c */
  /* file wingdi.c line 2715 addr 0x8f */
} /* 0x93 */
HMETAFILE CopyMetaFileA (HMETAFILE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x93 */
  /* file wingdi.c line 2716 addr 0x93 */
  /* file wingdi.c line 2716 addr 0x96 */
} /* 0x9a */
HMETAFILE CopyMetaFileW (HMETAFILE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x9a */
  /* file wingdi.c line 2717 addr 0x9a */
  /* file wingdi.c line 2717 addr 0x9d */
} /* 0xa1 */
HBITMAP CreateBitmap (int a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, PCVOID e /* 0x18 */)
{ /* 0xa1 */
  /* file wingdi.c line 2718 addr 0xa1 */
  /* file wingdi.c line 2718 addr 0xa4 */
} /* 0xa8 */
HBITMAP CreateBitmapIndirect (BITMAP const *a /* 0x8 */)
{ /* 0xa8 */
  /* file wingdi.c line 2719 addr 0xa8 */
  /* file wingdi.c line 2719 addr 0xab */
} /* 0xaf */
HBRUSH CreateBrushIndirect (LOGBRUSH const *a /* 0x8 */)
{ /* 0xaf */
  /* file wingdi.c line 2720 addr 0xaf */
  /* file wingdi.c line 2720 addr 0xb2 */
} /* 0xb6 */
HCOLORSPACE CreateColorSpaceA (LPLOGCOLORSPACEA a /* 0x8 */)
{ /* 0xb6 */
  /* file wingdi.c line 2721 addr 0xb6 */
  /* file wingdi.c line 2721 addr 0xb9 */
} /* 0xbd */
HCOLORSPACE CreateColorSpaceW (LPLOGCOLORSPACEW a /* 0x8 */)
{ /* 0xbd */
  /* file wingdi.c line 2722 addr 0xbd */
  /* file wingdi.c line 2722 addr 0xc0 */
} /* 0xc4 */
HBITMAP CreateCompatibleBitmap (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xc4 */
  /* file wingdi.c line 2723 addr 0xc4 */
  /* file wingdi.c line 2723 addr 0xc7 */
} /* 0xcb */
HDC CreateCompatibleDC (HDC a /* 0x8 */)
{ /* 0xcb */
  /* file wingdi.c line 2724 addr 0xcb */
  /* file wingdi.c line 2724 addr 0xce */
} /* 0xd2 */
HDC CreateDCA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, DEVMODEA const *d /* 0x14 */)
{ /* 0xd2 */
  /* file wingdi.c line 2725 addr 0xd2 */
  /* file wingdi.c line 2725 addr 0xd5 */
} /* 0xd9 */
HDC CreateDCW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, DEVMODEW const *d /* 0x14 */)
{ /* 0xd9 */
  /* file wingdi.c line 2726 addr 0xd9 */
  /* file wingdi.c line 2726 addr 0xdc */
} /* 0xe0 */
HBITMAP CreateDIBitmap (HDC a /* 0x8 */, BITMAPINFOHEADER const *b /* 0xc */, DWORD c /* 0x10 */, PCVOID d /* 0x14 */, BITMAPINFO const *e /* 0x18 */, UINT f /* 0x1c */)
{ /* 0xe0 */
  /* file wingdi.c line 2727 addr 0xe0 */
  /* file wingdi.c line 2727 addr 0xe3 */
} /* 0xe7 */
HBRUSH CreateDIBPatternBrush (HGLOBAL a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xe7 */
  /* file wingdi.c line 2728 addr 0xe7 */
  /* file wingdi.c line 2728 addr 0xea */
} /* 0xee */
HBRUSH CreateDIBPatternBrushPt (PCVOID a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xee */
  /* file wingdi.c line 2729 addr 0xee */
  /* file wingdi.c line 2729 addr 0xf1 */
} /* 0xf5 */
HBITMAP CreateDIBSection (HDC a /* 0x8 */, BITMAPINFO const *b /* 0xc */, UINT c /* 0x10 */, void **d /* 0x14 */, HANDLE e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0xf5 */
  /* file wingdi.c line 2730 addr 0xf5 */
  /* file wingdi.c line 2730 addr 0xf8 */
} /* 0xfc */
HBITMAP CreateDiscardableBitmap (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xfc */
  /* file wingdi.c line 2731 addr 0xfc */
  /* file wingdi.c line 2731 addr 0xff */
} /* 0x103 */
HRGN CreateEllipticRgn (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x103 */
  /* file wingdi.c line 2732 addr 0x103 */
  /* file wingdi.c line 2732 addr 0x106 */
} /* 0x10a */
HRGN CreateEllipticRgnIndirect (LPCRECT a /* 0x8 */)
{ /* 0x10a */
  /* file wingdi.c line 2733 addr 0x10a */
  /* file wingdi.c line 2733 addr 0x10d */
} /* 0x111 */
HDC CreateEnhMetaFileA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, LPCRECT c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x111 */
  /* file wingdi.c line 2734 addr 0x111 */
  /* file wingdi.c line 2734 addr 0x114 */
} /* 0x118 */
HDC CreateEnhMetaFileW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, LPCRECT c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x118 */
  /* file wingdi.c line 2735 addr 0x118 */
  /* file wingdi.c line 2735 addr 0x11b */
} /* 0x11f */
HFONT CreateFontA (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, DWORD f /* 0x1c */, DWORD g /* 0x20 */, DWORD h /* 0x24 */, DWORD i /* 0x28 */, DWORD j /* 0x2c */, DWORD k /* 0x30 */, DWORD l /* 0x34 */, DWORD m /* 0x38 */, LPCSTR n /* 0x3c */)
{ /* 0x11f */
  /* file wingdi.c line 2736 addr 0x11f */
  /* file wingdi.c line 2736 addr 0x122 */
} /* 0x126 */
HFONT CreateFontW (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, DWORD f /* 0x1c */, DWORD g /* 0x20 */, DWORD h /* 0x24 */, DWORD i /* 0x28 */, DWORD j /* 0x2c */, DWORD k /* 0x30 */, DWORD l /* 0x34 */, DWORD m /* 0x38 */, LPCWSTR n /* 0x3c */)
{ /* 0x126 */
  /* file wingdi.c line 2737 addr 0x126 */
  /* file wingdi.c line 2737 addr 0x129 */
} /* 0x12d */
HFONT CreateFontIndirectA (LOGFONTA const *a /* 0x8 */)
{ /* 0x12d */
  /* file wingdi.c line 2738 addr 0x12d */
  /* file wingdi.c line 2738 addr 0x130 */
} /* 0x134 */
HFONT CreateFontIndirectW (LOGFONTW const *a /* 0x8 */)
{ /* 0x134 */
  /* file wingdi.c line 2739 addr 0x134 */
  /* file wingdi.c line 2739 addr 0x137 */
} /* 0x13b */
HPALETTE CreateHalftonePalette (HDC a /* 0x8 */)
{ /* 0x13b */
  /* file wingdi.c line 2740 addr 0x13b */
  /* file wingdi.c line 2740 addr 0x13e */
} /* 0x142 */
HBRUSH CreateHatchBrush (int a /* 0x8 */, COLORREF b /* 0xc */)
{ /* 0x142 */
  /* file wingdi.c line 2741 addr 0x142 */
  /* file wingdi.c line 2741 addr 0x145 */
} /* 0x149 */
HDC CreateICA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, DEVMODEA const *d /* 0x14 */)
{ /* 0x149 */
  /* file wingdi.c line 2742 addr 0x149 */
  /* file wingdi.c line 2742 addr 0x14c */
} /* 0x150 */
HDC CreateICW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, DEVMODEW const *d /* 0x14 */)
{ /* 0x150 */
  /* file wingdi.c line 2743 addr 0x150 */
  /* file wingdi.c line 2743 addr 0x153 */
} /* 0x157 */
HDC CreateMetaFileA (LPCSTR a /* 0x8 */)
{ /* 0x157 */
  /* file wingdi.c line 2744 addr 0x157 */
  /* file wingdi.c line 2744 addr 0x15a */
} /* 0x15e */
HDC CreateMetaFileW (LPCWSTR a /* 0x8 */)
{ /* 0x15e */
  /* file wingdi.c line 2745 addr 0x15e */
  /* file wingdi.c line 2745 addr 0x161 */
} /* 0x165 */
HPALETTE CreatePalette (LOGPALETTE const *a /* 0x8 */)
{ /* 0x165 */
  /* file wingdi.c line 2746 addr 0x165 */
  /* file wingdi.c line 2746 addr 0x168 */
} /* 0x16c */
HBRUSH CreatePatternBrush (HBITMAP a /* 0x8 */)
{ /* 0x16c */
  /* file wingdi.c line 2747 addr 0x16c */
  /* file wingdi.c line 2747 addr 0x16f */
} /* 0x173 */
HPEN CreatePen (int a /* 0x8 */, int b /* 0xc */, COLORREF c /* 0x10 */)
{ /* 0x173 */
  /* file wingdi.c line 2748 addr 0x173 */
  /* file wingdi.c line 2748 addr 0x176 */
} /* 0x17a */
HPEN CreatePenIndirect (LOGPEN const *a /* 0x8 */)
{ /* 0x17a */
  /* file wingdi.c line 2749 addr 0x17a */
  /* file wingdi.c line 2749 addr 0x17d */
} /* 0x181 */
HRGN CreatePolygonRgn (POINT const *a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x181 */
  /* file wingdi.c line 2750 addr 0x181 */
  /* file wingdi.c line 2750 addr 0x184 */
} /* 0x188 */
HRGN CreatePolyPolygonRgn (POINT const *a /* 0x8 */, INT const *b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x188 */
  /* file wingdi.c line 2751 addr 0x188 */
  /* file wingdi.c line 2751 addr 0x18b */
} /* 0x18f */
HRGN CreateRectRgn (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x18f */
  /* file wingdi.c line 2752 addr 0x18f */
  /* file wingdi.c line 2752 addr 0x192 */
} /* 0x196 */
HRGN CreateRectRgnIndirect (LPCRECT a /* 0x8 */)
{ /* 0x196 */
  /* file wingdi.c line 2753 addr 0x196 */
  /* file wingdi.c line 2753 addr 0x199 */
} /* 0x19d */
HRGN CreateRoundRectRgn (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */)
{ /* 0x19d */
  /* file wingdi.c line 2754 addr 0x19d */
  /* file wingdi.c line 2754 addr 0x1a0 */
} /* 0x1a4 */
BOOL CreateScalableFontResourceA (DWORD a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x1a4 */
  /* file wingdi.c line 2755 addr 0x1a4 */
  /* file wingdi.c line 2755 addr 0x1a7 */
} /* 0x1ab */
BOOL CreateScalableFontResourceW (DWORD a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x1ab */
  /* file wingdi.c line 2756 addr 0x1ab */
  /* file wingdi.c line 2756 addr 0x1ae */
} /* 0x1b2 */
HBRUSH CreateSolidBrush (COLORREF a /* 0x8 */)
{ /* 0x1b2 */
  /* file wingdi.c line 2757 addr 0x1b2 */
  /* file wingdi.c line 2757 addr 0x1b5 */
} /* 0x1b9 */
BOOL DeleteColorSpace (HCOLORSPACE a /* 0x8 */)
{ /* 0x1b9 */
  /* file wingdi.c line 2758 addr 0x1b9 */
  /* file wingdi.c line 2758 addr 0x1bc */
} /* 0x1c0 */
BOOL DeleteDC (HDC a /* 0x8 */)
{ /* 0x1c0 */
  /* file wingdi.c line 2759 addr 0x1c0 */
  /* file wingdi.c line 2759 addr 0x1c3 */
} /* 0x1c7 */
BOOL DeleteEnhMetaFile (HENHMETAFILE a /* 0x8 */)
{ /* 0x1c7 */
  /* file wingdi.c line 2760 addr 0x1c7 */
  /* file wingdi.c line 2760 addr 0x1ca */
} /* 0x1ce */
BOOL DeleteMetaFile (HMETAFILE a /* 0x8 */)
{ /* 0x1ce */
  /* file wingdi.c line 2761 addr 0x1ce */
  /* file wingdi.c line 2761 addr 0x1d1 */
} /* 0x1d5 */
BOOL DeleteObject (HGDIOBJ a /* 0x8 */)
{ /* 0x1d5 */
  /* file wingdi.c line 2762 addr 0x1d5 */
  /* file wingdi.c line 2762 addr 0x1d8 */
} /* 0x1dc */
int DescribePixelFormat (HDC a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, LPPIXELFORMATDESCRIPTOR d /* 0x14 */)
{ /* 0x1dc */
  /* file wingdi.c line 2763 addr 0x1dc */
  /* file wingdi.c line 2763 addr 0x1df */
} /* 0x1e3 */
DWORD DeviceCapabilitiesA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, LPSTR d /* 0x14 */, DEVMODEA const *e /* 0x18 */)
{ /* 0x1e3 */
  WORD c /* 0xfffffffe */;
  /* file wingdi.c line 2764 addr 0x1e3 */
  /* file wingdi.c line 2764 addr 0x1f0 */
} /* 0x1f4 */
DWORD DeviceCapabilitiesW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, LPWSTR d /* 0x14 */, DEVMODEW const *e /* 0x18 */)
{ /* 0x1f4 */
  WORD c /* 0xfffffffe */;
  /* file wingdi.c line 2765 addr 0x1f4 */
  /* file wingdi.c line 2765 addr 0x201 */
} /* 0x205 */
BOOL DPtoLP (HDC a /* 0x8 */, LPPOINT b /* 0xc */, int c /* 0x10 */)
{ /* 0x205 */
  /* file wingdi.c line 2766 addr 0x205 */
  /* file wingdi.c line 2766 addr 0x208 */
} /* 0x20c */
int DrawEscape (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x20c */
  /* file wingdi.c line 2767 addr 0x20c */
  /* file wingdi.c line 2767 addr 0x20f */
} /* 0x213 */
BOOL Ellipse (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x213 */
  /* file wingdi.c line 2768 addr 0x213 */
  /* file wingdi.c line 2768 addr 0x216 */
} /* 0x21a */
int EndDoc (HDC a /* 0x8 */)
{ /* 0x21a */
  /* file wingdi.c line 2769 addr 0x21a */
  /* file wingdi.c line 2769 addr 0x21d */
} /* 0x221 */
int EndPage (HDC a /* 0x8 */)
{ /* 0x221 */
  /* file wingdi.c line 2770 addr 0x221 */
  /* file wingdi.c line 2770 addr 0x224 */
} /* 0x228 */
BOOL EndPath (HDC a /* 0x8 */)
{ /* 0x228 */
  /* file wingdi.c line 2771 addr 0x228 */
  /* file wingdi.c line 2771 addr 0x22b */
} /* 0x22f */
BOOL EnumEnhMetaFile (HDC a /* 0x8 */, HENHMETAFILE b /* 0xc */, ENHMFENUMPROC c /* 0x10 */, PVOID d /* 0x14 */, LPCRECT e /* 0x18 */)
{ /* 0x22f */
  /* file wingdi.c line 2772 addr 0x22f */
  /* file wingdi.c line 2772 addr 0x232 */
} /* 0x236 */
int EnumFontFamiliesA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, FONTENUMPROCA c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x236 */
  /* file wingdi.c line 2773 addr 0x236 */
  /* file wingdi.c line 2773 addr 0x239 */
} /* 0x23d */
int EnumFontFamiliesW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, FONTENUMPROCW c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x23d */
  /* file wingdi.c line 2774 addr 0x23d */
  /* file wingdi.c line 2774 addr 0x240 */
} /* 0x244 */
int EnumFontFamiliesExA (HDC a /* 0x8 */, PLOGFONTA b /* 0xc */, FONTENUMPROCA c /* 0x10 */, LPARAM d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x244 */
  /* file wingdi.c line 2775 addr 0x244 */
  /* file wingdi.c line 2775 addr 0x247 */
} /* 0x24b */
int EnumFontFamiliesExW (HDC a /* 0x8 */, PLOGFONTW b /* 0xc */, FONTENUMPROCW c /* 0x10 */, LPARAM d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x24b */
  /* file wingdi.c line 2776 addr 0x24b */
  /* file wingdi.c line 2776 addr 0x24e */
} /* 0x252 */
int EnumFontsA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, FONTENUMPROCA c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x252 */
  /* file wingdi.c line 2777 addr 0x252 */
  /* file wingdi.c line 2777 addr 0x255 */
} /* 0x259 */
int EnumFontsW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, FONTENUMPROCW c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x259 */
  /* file wingdi.c line 2778 addr 0x259 */
  /* file wingdi.c line 2778 addr 0x25c */
} /* 0x260 */
int EnumICMProfilesA (HDC a /* 0x8 */, ICMENUMPROCA b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x260 */
  /* file wingdi.c line 2779 addr 0x260 */
  /* file wingdi.c line 2779 addr 0x263 */
} /* 0x267 */
int EnumICMProfilesW (HDC a /* 0x8 */, ICMENUMPROCW b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x267 */
  /* file wingdi.c line 2780 addr 0x267 */
  /* file wingdi.c line 2780 addr 0x26a */
} /* 0x26e */
BOOL EnumMetaFile (HDC a /* 0x8 */, HMETAFILE b /* 0xc */, MFENUMPROC c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x26e */
  /* file wingdi.c line 2781 addr 0x26e */
  /* file wingdi.c line 2781 addr 0x271 */
} /* 0x275 */
int EnumObjects (HDC a /* 0x8 */, int b /* 0xc */, GOBJENUMPROC c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x275 */
  /* file wingdi.c line 2782 addr 0x275 */
  /* file wingdi.c line 2782 addr 0x278 */
} /* 0x27c */
BOOL EqualRgn (HRGN a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x27c */
  /* file wingdi.c line 2783 addr 0x27c */
  /* file wingdi.c line 2783 addr 0x27f */
} /* 0x283 */
int Escape (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCSTR d /* 0x14 */, PVOID e /* 0x18 */)
{ /* 0x283 */
  /* file wingdi.c line 2784 addr 0x283 */
  /* file wingdi.c line 2784 addr 0x286 */
} /* 0x28a */
int ExcludeClipRect (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x28a */
  /* file wingdi.c line 2785 addr 0x28a */
  /* file wingdi.c line 2785 addr 0x28d */
} /* 0x291 */
int ExcludeUpdateRgn (HDC a /* 0x8 */, HWND b /* 0xc */)
{ /* 0x291 */
  /* file wingdi.c line 2786 addr 0x291 */
  /* file wingdi.c line 2786 addr 0x294 */
} /* 0x298 */
HPEN ExtCreatePen (DWORD a /* 0x8 */, DWORD b /* 0xc */, LOGBRUSH const *c /* 0x10 */, DWORD d /* 0x14 */, DWORD const *e /* 0x18 */)
{ /* 0x298 */
  /* file wingdi.c line 2787 addr 0x298 */
  /* file wingdi.c line 2787 addr 0x29b */
} /* 0x29f */
HRGN ExtCreateRegion (XFORM const *a /* 0x8 */, DWORD b /* 0xc */, RGNDATA const *c /* 0x10 */)
{ /* 0x29f */
  /* file wingdi.c line 2788 addr 0x29f */
  /* file wingdi.c line 2788 addr 0x2a2 */
} /* 0x2a6 */
int ExtEscape (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCSTR d /* 0x14 */, int e /* 0x18 */, LPSTR f /* 0x1c */)
{ /* 0x2a6 */
  /* file wingdi.c line 2789 addr 0x2a6 */
  /* file wingdi.c line 2789 addr 0x2a9 */
} /* 0x2ad */
BOOL ExtFloodFill (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, COLORREF d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x2ad */
  /* file wingdi.c line 2790 addr 0x2ad */
  /* file wingdi.c line 2790 addr 0x2b0 */
} /* 0x2b4 */
int ExtSelectClipRgn (HDC a /* 0x8 */, HRGN b /* 0xc */, int c /* 0x10 */)
{ /* 0x2b4 */
  /* file wingdi.c line 2791 addr 0x2b4 */
  /* file wingdi.c line 2791 addr 0x2b7 */
} /* 0x2bb */
BOOL ExtTextOutA (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, UINT d /* 0x14 */, LPCRECT e /* 0x18 */, LPCSTR f /* 0x1c */, UINT g /* 0x20 */, INT const *h /* 0x24 */)
{ /* 0x2bb */
  /* file wingdi.c line 2792 addr 0x2bb */
  /* file wingdi.c line 2792 addr 0x2be */
} /* 0x2c2 */
BOOL ExtTextOutW (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, UINT d /* 0x14 */, LPCRECT e /* 0x18 */, LPCWSTR f /* 0x1c */, UINT g /* 0x20 */, INT const *h /* 0x24 */)
{ /* 0x2c2 */
  /* file wingdi.c line 2793 addr 0x2c2 */
  /* file wingdi.c line 2793 addr 0x2c5 */
} /* 0x2c9 */
BOOL FillPath (HDC a /* 0x8 */)
{ /* 0x2c9 */
  /* file wingdi.c line 2794 addr 0x2c9 */
  /* file wingdi.c line 2794 addr 0x2cc */
} /* 0x2d0 */
int FillRect (HDC a /* 0x8 */, LPCRECT b /* 0xc */, HBRUSH c /* 0x10 */)
{ /* 0x2d0 */
  /* file wingdi.c line 2795 addr 0x2d0 */
  /* file wingdi.c line 2795 addr 0x2d3 */
} /* 0x2d7 */
int FillRgn (HDC a /* 0x8 */, HRGN b /* 0xc */, HBRUSH c /* 0x10 */)
{ /* 0x2d7 */
  /* file wingdi.c line 2796 addr 0x2d7 */
  /* file wingdi.c line 2796 addr 0x2da */
} /* 0x2de */
BOOL FixBrushOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x2de */
  /* file wingdi.c line 2797 addr 0x2de */
  /* file wingdi.c line 2797 addr 0x2e1 */
} /* 0x2e5 */
BOOL FlattenPath (HDC a /* 0x8 */)
{ /* 0x2e5 */
  /* file wingdi.c line 2798 addr 0x2e5 */
  /* file wingdi.c line 2798 addr 0x2e8 */
} /* 0x2ec */
BOOL FloodFill (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, COLORREF d /* 0x14 */)
{ /* 0x2ec */
  /* file wingdi.c line 2799 addr 0x2ec */
  /* file wingdi.c line 2799 addr 0x2ef */
} /* 0x2f3 */
BOOL GdiComment (HDC a /* 0x8 */, UINT b /* 0xc */, BYTE const *c /* 0x10 */)
{ /* 0x2f3 */
  /* file wingdi.c line 2800 addr 0x2f3 */
  /* file wingdi.c line 2800 addr 0x2f6 */
} /* 0x2fa */
BOOL GdiFlush ()
{ /* 0x2fa */
  /* file wingdi.c line 2801 addr 0x2fa */
  /* file wingdi.c line 2801 addr 0x2fd */
} /* 0x2ff */
DWORD GdiGetBatchLimit ()
{ /* 0x2ff */
  /* file wingdi.c line 2802 addr 0x2ff */
  /* file wingdi.c line 2802 addr 0x302 */
} /* 0x304 */
DWORD GdiSetBatchLimit (DWORD a /* 0x8 */)
{ /* 0x304 */
  /* file wingdi.c line 2803 addr 0x304 */
  /* file wingdi.c line 2803 addr 0x307 */
} /* 0x30b */
int GetArcDirection (HDC a /* 0x8 */)
{ /* 0x30b */
  /* file wingdi.c line 2804 addr 0x30b */
  /* file wingdi.c line 2804 addr 0x30e */
} /* 0x312 */
BOOL GetAspectRatioFilterEx (HDC a /* 0x8 */, LPSIZE b /* 0xc */)
{ /* 0x312 */
  /* file wingdi.c line 2805 addr 0x312 */
  /* file wingdi.c line 2805 addr 0x315 */
} /* 0x319 */
LONG GetBitmapBits (HBITMAP a /* 0x8 */, LONG b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x319 */
  /* file wingdi.c line 2806 addr 0x319 */
  /* file wingdi.c line 2806 addr 0x31c */
} /* 0x320 */
BOOL GetBitmapDimensionEx (HBITMAP a /* 0x8 */, LPSIZE b /* 0xc */)
{ /* 0x320 */
  /* file wingdi.c line 2807 addr 0x320 */
  /* file wingdi.c line 2807 addr 0x323 */
} /* 0x327 */
COLORREF GetBkColor (HDC a /* 0x8 */)
{ /* 0x327 */
  /* file wingdi.c line 2808 addr 0x327 */
  /* file wingdi.c line 2808 addr 0x32a */
} /* 0x32e */
int GetBkMode (HDC a /* 0x8 */)
{ /* 0x32e */
  /* file wingdi.c line 2809 addr 0x32e */
  /* file wingdi.c line 2809 addr 0x331 */
} /* 0x335 */
UINT GetBoundsRect (HDC a /* 0x8 */, LPRECT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x335 */
  /* file wingdi.c line 2810 addr 0x335 */
  /* file wingdi.c line 2810 addr 0x338 */
} /* 0x33c */
BOOL GetBrushOrgEx (HDC a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x33c */
  /* file wingdi.c line 2811 addr 0x33c */
  /* file wingdi.c line 2811 addr 0x33f */
} /* 0x343 */
BOOL GetCharABCWidthsA (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPABC d /* 0x14 */)
{ /* 0x343 */
  /* file wingdi.c line 2812 addr 0x343 */
  /* file wingdi.c line 2812 addr 0x346 */
} /* 0x34a */
BOOL GetCharABCWidthsW (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPABC d /* 0x14 */)
{ /* 0x34a */
  /* file wingdi.c line 2813 addr 0x34a */
  /* file wingdi.c line 2813 addr 0x34d */
} /* 0x351 */
BOOL GetCharABCWidthsFloatA (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPABCFLOAT d /* 0x14 */)
{ /* 0x351 */
  /* file wingdi.c line 2814 addr 0x351 */
  /* file wingdi.c line 2814 addr 0x354 */
} /* 0x358 */
BOOL GetCharABCWidthsFloatW (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPABCFLOAT d /* 0x14 */)
{ /* 0x358 */
  /* file wingdi.c line 2815 addr 0x358 */
  /* file wingdi.c line 2815 addr 0x35b */
} /* 0x35f */
DWORD GetCharacterPlacementA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPGCP_RESULTSA e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x35f */
  /* file wingdi.c line 2816 addr 0x35f */
  /* file wingdi.c line 2816 addr 0x362 */
} /* 0x366 */
DWORD GetCharacterPlacementW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPGCP_RESULTSW e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x366 */
  /* file wingdi.c line 2817 addr 0x366 */
  /* file wingdi.c line 2817 addr 0x369 */
} /* 0x36d */
BOOL GetCharWidth32A (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPINT d /* 0x14 */)
{ /* 0x36d */
  /* file wingdi.c line 2818 addr 0x36d */
  /* file wingdi.c line 2818 addr 0x370 */
} /* 0x374 */
BOOL GetCharWidth32W (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPINT d /* 0x14 */)
{ /* 0x374 */
  /* file wingdi.c line 2819 addr 0x374 */
  /* file wingdi.c line 2819 addr 0x377 */
} /* 0x37b */
BOOL GetCharWidthA (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPINT d /* 0x14 */)
{ /* 0x37b */
  /* file wingdi.c line 2820 addr 0x37b */
  /* file wingdi.c line 2820 addr 0x37e */
} /* 0x382 */
BOOL GetCharWidthW (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPINT d /* 0x14 */)
{ /* 0x382 */
  /* file wingdi.c line 2821 addr 0x382 */
  /* file wingdi.c line 2821 addr 0x385 */
} /* 0x389 */
BOOL GetCharWidthFloatA (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, PFLOAT d /* 0x14 */)
{ /* 0x389 */
  /* file wingdi.c line 2822 addr 0x389 */
  /* file wingdi.c line 2822 addr 0x38c */
} /* 0x390 */
BOOL GetCharWidthFloatW (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, PFLOAT d /* 0x14 */)
{ /* 0x390 */
  /* file wingdi.c line 2823 addr 0x390 */
  /* file wingdi.c line 2823 addr 0x393 */
} /* 0x397 */
int GetClipBox (HDC a /* 0x8 */, LPRECT b /* 0xc */)
{ /* 0x397 */
  /* file wingdi.c line 2824 addr 0x397 */
  /* file wingdi.c line 2824 addr 0x39a */
} /* 0x39e */
int GetClipRgn (HDC a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x39e */
  /* file wingdi.c line 2825 addr 0x39e */
  /* file wingdi.c line 2825 addr 0x3a1 */
} /* 0x3a5 */
BOOL GetColorAdjustment (HDC a /* 0x8 */, LPCOLORADJUSTMENT b /* 0xc */)
{ /* 0x3a5 */
  /* file wingdi.c line 2826 addr 0x3a5 */
  /* file wingdi.c line 2826 addr 0x3a8 */
} /* 0x3ac */
HANDLE GetColorSpace (HDC a /* 0x8 */)
{ /* 0x3ac */
  /* file wingdi.c line 2827 addr 0x3ac */
  /* file wingdi.c line 2827 addr 0x3af */
} /* 0x3b3 */
HGDIOBJ GetCurrentObject (HDC a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x3b3 */
  /* file wingdi.c line 2828 addr 0x3b3 */
  /* file wingdi.c line 2828 addr 0x3b6 */
} /* 0x3ba */
BOOL GetCurrentPositionEx (HDC a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x3ba */
  /* file wingdi.c line 2829 addr 0x3ba */
  /* file wingdi.c line 2829 addr 0x3bd */
} /* 0x3c1 */
HCURSOR GetCursor ()
{ /* 0x3c1 */
  /* file wingdi.c line 2830 addr 0x3c1 */
  /* file wingdi.c line 2830 addr 0x3c4 */
} /* 0x3c6 */
BOOL GetDCOrgEx (HDC a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x3c6 */
  /* file wingdi.c line 2835 addr 0x3c6 */
  /* file wingdi.c line 2835 addr 0x3c9 */
} /* 0x3cd */
int GetDeviceCaps (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x3cd */
  /* file wingdi.c line 2836 addr 0x3cd */
  /* file wingdi.c line 2836 addr 0x3d0 */
} /* 0x3d4 */
BOOL GetDeviceGammaRamp (HDC a /* 0x8 */, PVOID b /* 0xc */)
{ /* 0x3d4 */
  /* file wingdi.c line 2837 addr 0x3d4 */
  /* file wingdi.c line 2837 addr 0x3d7 */
} /* 0x3db */
UINT GetDIBColorTable (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, RGBQUAD *d /* 0x14 */)
{ /* 0x3db */
  /* file wingdi.c line 2838 addr 0x3db */
  /* file wingdi.c line 2838 addr 0x3de */
} /* 0x3e2 */
int GetDIBits (HDC a /* 0x8 */, HBITMAP b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, PVOID e /* 0x18 */, LPBITMAPINFO f /* 0x1c */, UINT g /* 0x20 */)
{ /* 0x3e2 */
  /* file wingdi.c line 2839 addr 0x3e2 */
  /* file wingdi.c line 2839 addr 0x3e5 */
} /* 0x3e9 */
HENHMETAFILE GetEnhMetaFileA (LPCSTR a /* 0x8 */)
{ /* 0x3e9 */
  /* file wingdi.c line 2840 addr 0x3e9 */
  /* file wingdi.c line 2840 addr 0x3ec */
} /* 0x3f0 */
HENHMETAFILE GetEnhMetaFileW (LPCWSTR a /* 0x8 */)
{ /* 0x3f0 */
  /* file wingdi.c line 2841 addr 0x3f0 */
  /* file wingdi.c line 2841 addr 0x3f3 */
} /* 0x3f7 */
UINT GetEnhMetaFileBits (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPBYTE c /* 0x10 */)
{ /* 0x3f7 */
  /* file wingdi.c line 2842 addr 0x3f7 */
  /* file wingdi.c line 2842 addr 0x3fa */
} /* 0x3fe */
UINT GetEnhMetaFileDescriptionA (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPSTR c /* 0x10 */)
{ /* 0x3fe */
  /* file wingdi.c line 2843 addr 0x3fe */
  /* file wingdi.c line 2843 addr 0x401 */
} /* 0x405 */
UINT GetEnhMetaFileDescriptionW (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPWSTR c /* 0x10 */)
{ /* 0x405 */
  /* file wingdi.c line 2844 addr 0x405 */
  /* file wingdi.c line 2844 addr 0x408 */
} /* 0x40c */
UINT GetEnhMetaFileHeader (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPENHMETAHEADER c /* 0x10 */)
{ /* 0x40c */
  /* file wingdi.c line 2845 addr 0x40c */
  /* file wingdi.c line 2845 addr 0x40f */
} /* 0x413 */
UINT GetEnhMetaFilePaletteEntries (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPPALETTEENTRY c /* 0x10 */)
{ /* 0x413 */
  /* file wingdi.c line 2846 addr 0x413 */
  /* file wingdi.c line 2846 addr 0x416 */
} /* 0x41a */
UINT GetEnhMetaFilePixelFormat (HENHMETAFILE a /* 0x8 */, DWORD b /* 0xc */, PIXELFORMATDESCRIPTOR const *c /* 0x10 */)
{ /* 0x41a */
  /* file wingdi.c line 2847 addr 0x41a */
  /* file wingdi.c line 2847 addr 0x41d */
} /* 0x421 */
DWORD GetFontData (HDC a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x421 */
  /* file wingdi.c line 2848 addr 0x421 */
  /* file wingdi.c line 2848 addr 0x424 */
} /* 0x428 */
DWORD GetFontLanguageInfo (HDC a /* 0x8 */)
{ /* 0x428 */
  /* file wingdi.c line 2849 addr 0x428 */
  /* file wingdi.c line 2849 addr 0x42b */
} /* 0x42f */
DWORD GetGlyphOutlineA (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPGLYPHMETRICS d /* 0x14 */, DWORD e /* 0x18 */, PVOID f /* 0x1c */, MAT2 const *g /* 0x20 */)
{ /* 0x42f */
  /* file wingdi.c line 2850 addr 0x42f */
  /* file wingdi.c line 2850 addr 0x432 */
} /* 0x436 */
DWORD GetGlyphOutlineW (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPGLYPHMETRICS d /* 0x14 */, DWORD e /* 0x18 */, PVOID f /* 0x1c */, MAT2 const *g /* 0x20 */)
{ /* 0x436 */
  /* file wingdi.c line 2851 addr 0x436 */
  /* file wingdi.c line 2851 addr 0x439 */
} /* 0x43d */
int GetGraphicsMode (HDC a /* 0x8 */)
{ /* 0x43d */
  /* file wingdi.c line 2852 addr 0x43d */
  /* file wingdi.c line 2852 addr 0x440 */
} /* 0x444 */
BOOL GetICMProfileA (HDC a /* 0x8 */, LPDWORD b /* 0xc */, LPSTR c /* 0x10 */)
{ /* 0x444 */
  /* file wingdi.c line 2853 addr 0x444 */
  /* file wingdi.c line 2853 addr 0x447 */
} /* 0x44b */
BOOL GetICMProfileW (HDC a /* 0x8 */, LPDWORD b /* 0xc */, LPWSTR c /* 0x10 */)
{ /* 0x44b */
  /* file wingdi.c line 2854 addr 0x44b */
  /* file wingdi.c line 2854 addr 0x44e */
} /* 0x452 */
DWORD GetKerningPairsA (HDC a /* 0x8 */, DWORD b /* 0xc */, LPKERNINGPAIR c /* 0x10 */)
{ /* 0x452 */
  /* file wingdi.c line 2855 addr 0x452 */
  /* file wingdi.c line 2855 addr 0x455 */
} /* 0x459 */
DWORD GetKerningPairsW (HDC a /* 0x8 */, DWORD b /* 0xc */, LPKERNINGPAIR c /* 0x10 */)
{ /* 0x459 */
  /* file wingdi.c line 2856 addr 0x459 */
  /* file wingdi.c line 2856 addr 0x45c */
} /* 0x460 */
BOOL GetLogColorSpaceA (HCOLORSPACE a /* 0x8 */, LPLOGCOLORSPACEA b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x460 */
  /* file wingdi.c line 2857 addr 0x460 */
  /* file wingdi.c line 2857 addr 0x463 */
} /* 0x467 */
BOOL GetLogColorSpaceW (HCOLORSPACE a /* 0x8 */, LPLOGCOLORSPACEW b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x467 */
  /* file wingdi.c line 2858 addr 0x467 */
  /* file wingdi.c line 2858 addr 0x46a */
} /* 0x46e */
int GetMapMode (HDC a /* 0x8 */)
{ /* 0x46e */
  /* file wingdi.c line 2859 addr 0x46e */
  /* file wingdi.c line 2859 addr 0x471 */
} /* 0x475 */
HMETAFILE GetMetaFileA (LPCSTR a /* 0x8 */)
{ /* 0x475 */
  /* file wingdi.c line 2860 addr 0x475 */
  /* file wingdi.c line 2860 addr 0x478 */
} /* 0x47c */
HMETAFILE GetMetaFileW (LPCWSTR a /* 0x8 */)
{ /* 0x47c */
  /* file wingdi.c line 2861 addr 0x47c */
  /* file wingdi.c line 2861 addr 0x47f */
} /* 0x483 */
UINT GetMetaFileBitsEx (HMETAFILE a /* 0x8 */, UINT b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x483 */
  /* file wingdi.c line 2862 addr 0x483 */
  /* file wingdi.c line 2862 addr 0x486 */
} /* 0x48a */
int GetMetaRgn (HDC a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x48a */
  /* file wingdi.c line 2863 addr 0x48a */
  /* file wingdi.c line 2863 addr 0x48d */
} /* 0x491 */
BOOL GetMiterLimit (HDC a /* 0x8 */, PFLOAT b /* 0xc */)
{ /* 0x491 */
  /* file wingdi.c line 2864 addr 0x491 */
  /* file wingdi.c line 2864 addr 0x494 */
} /* 0x498 */
COLORREF GetNearestColor (HDC a /* 0x8 */, COLORREF b /* 0xc */)
{ /* 0x498 */
  /* file wingdi.c line 2865 addr 0x498 */
  /* file wingdi.c line 2865 addr 0x49b */
} /* 0x49f */
UINT GetNearestPaletteIndex (HPALETTE a /* 0x8 */, COLORREF b /* 0xc */)
{ /* 0x49f */
  /* file wingdi.c line 2866 addr 0x49f */
  /* file wingdi.c line 2866 addr 0x4a2 */
} /* 0x4a6 */
int GetObjectA (HGDIOBJ a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x4a6 */
  /* file wingdi.c line 2867 addr 0x4a6 */
  /* file wingdi.c line 2867 addr 0x4a9 */
} /* 0x4ad */
int GetObjectW (HGDIOBJ a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x4ad */
  /* file wingdi.c line 2868 addr 0x4ad */
  /* file wingdi.c line 2868 addr 0x4b0 */
} /* 0x4b4 */
DWORD GetObjectType (HGDIOBJ a /* 0x8 */)
{ /* 0x4b4 */
  /* file wingdi.c line 2869 addr 0x4b4 */
  /* file wingdi.c line 2869 addr 0x4b7 */
} /* 0x4bb */
UINT GetOutlineTextMetricsA (HDC a /* 0x8 */, UINT b /* 0xc */, LPOUTLINETEXTMETRICA c /* 0x10 */)
{ /* 0x4bb */
  /* file wingdi.c line 2870 addr 0x4bb */
  /* file wingdi.c line 2870 addr 0x4be */
} /* 0x4c2 */
UINT GetOutlineTextMetricsW (HDC a /* 0x8 */, UINT b /* 0xc */, LPOUTLINETEXTMETRICW c /* 0x10 */)
{ /* 0x4c2 */
  /* file wingdi.c line 2871 addr 0x4c2 */
  /* file wingdi.c line 2871 addr 0x4c5 */
} /* 0x4c9 */
UINT GetPaletteEntries (HPALETTE a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPPALETTEENTRY d /* 0x14 */)
{ /* 0x4c9 */
  /* file wingdi.c line 2872 addr 0x4c9 */
  /* file wingdi.c line 2872 addr 0x4cc */
} /* 0x4d0 */
int GetPath (HDC a /* 0x8 */, LPPOINT b /* 0xc */, PBYTE c /* 0x10 */, int d /* 0x14 */)
{ /* 0x4d0 */
  /* file wingdi.c line 2873 addr 0x4d0 */
  /* file wingdi.c line 2873 addr 0x4d3 */
} /* 0x4d7 */
COLORREF GetPixel (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x4d7 */
  /* file wingdi.c line 2874 addr 0x4d7 */
  /* file wingdi.c line 2874 addr 0x4da */
} /* 0x4de */
int GetPixelFormat (HDC a /* 0x8 */)
{ /* 0x4de */
  /* file wingdi.c line 2875 addr 0x4de */
  /* file wingdi.c line 2875 addr 0x4e1 */
} /* 0x4e5 */
int GetPolyFillMode (HDC a /* 0x8 */)
{ /* 0x4e5 */
  /* file wingdi.c line 2876 addr 0x4e5 */
  /* file wingdi.c line 2876 addr 0x4e8 */
} /* 0x4ec */
BOOL GetRasterizerCaps (LPRASTERIZER_STATUS a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x4ec */
  /* file wingdi.c line 2877 addr 0x4ec */
  /* file wingdi.c line 2877 addr 0x4ef */
} /* 0x4f3 */
int GetRandomRgn (HDC a /* 0x8 */, HRGN b /* 0xc */, INT c /* 0x10 */)
{ /* 0x4f3 */
  /* file wingdi.c line 2878 addr 0x4f3 */
  /* file wingdi.c line 2878 addr 0x4f6 */
} /* 0x4fa */
DWORD GetRegionData (HRGN a /* 0x8 */, DWORD b /* 0xc */, LPRGNDATA c /* 0x10 */)
{ /* 0x4fa */
  /* file wingdi.c line 2879 addr 0x4fa */
  /* file wingdi.c line 2879 addr 0x4fd */
} /* 0x501 */
int GetRgnBox (HRGN a /* 0x8 */, LPRECT b /* 0xc */)
{ /* 0x501 */
  /* file wingdi.c line 2880 addr 0x501 */
  /* file wingdi.c line 2880 addr 0x504 */
} /* 0x508 */
int GetROP2 (HDC a /* 0x8 */)
{ /* 0x508 */
  /* file wingdi.c line 2881 addr 0x508 */
  /* file wingdi.c line 2881 addr 0x50b */
} /* 0x50f */
HGDIOBJ GetStockObject (int a /* 0x8 */)
{ /* 0x50f */
  /* file wingdi.c line 2882 addr 0x50f */
  /* file wingdi.c line 2882 addr 0x512 */
} /* 0x516 */
int GetStretchBltMode (HDC a /* 0x8 */)
{ /* 0x516 */
  /* file wingdi.c line 2883 addr 0x516 */
  /* file wingdi.c line 2883 addr 0x519 */
} /* 0x51d */
UINT GetSystemPaletteEntries (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, LPPALETTEENTRY d /* 0x14 */)
{ /* 0x51d */
  /* file wingdi.c line 2884 addr 0x51d */
  /* file wingdi.c line 2884 addr 0x520 */
} /* 0x524 */
UINT GetSystemPaletteUse (HDC a /* 0x8 */)
{ /* 0x524 */
  /* file wingdi.c line 2885 addr 0x524 */
  /* file wingdi.c line 2885 addr 0x527 */
} /* 0x52b */
UINT GetTextAlign (HDC a /* 0x8 */)
{ /* 0x52b */
  /* file wingdi.c line 2886 addr 0x52b */
  /* file wingdi.c line 2886 addr 0x52e */
} /* 0x532 */
int GetTextCharacterExtra (HDC a /* 0x8 */)
{ /* 0x532 */
  /* file wingdi.c line 2887 addr 0x532 */
  /* file wingdi.c line 2887 addr 0x535 */
} /* 0x539 */
int GetTextCharset (HDC a /* 0x8 */)
{ /* 0x539 */
  /* file wingdi.c line 2888 addr 0x539 */
  /* file wingdi.c line 2888 addr 0x53c */
} /* 0x540 */
int GetTextCharsetInfo (HDC a /* 0x8 */, LPFONTSIGNATURE b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x540 */
  /* file wingdi.c line 2889 addr 0x540 */
  /* file wingdi.c line 2889 addr 0x543 */
} /* 0x547 */
COLORREF GetTextColor (HDC a /* 0x8 */)
{ /* 0x547 */
  /* file wingdi.c line 2890 addr 0x547 */
  /* file wingdi.c line 2890 addr 0x54a */
} /* 0x54e */
BOOL GetTextExtentExPointA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPINT e /* 0x18 */, LPINT f /* 0x1c */, LPSIZE g /* 0x20 */)
{ /* 0x54e */
  /* file wingdi.c line 2891 addr 0x54e */
  /* file wingdi.c line 2891 addr 0x551 */
} /* 0x555 */
BOOL GetTextExtentExPointW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPINT e /* 0x18 */, LPINT f /* 0x1c */, LPSIZE g /* 0x20 */)
{ /* 0x555 */
  /* file wingdi.c line 2892 addr 0x555 */
  /* file wingdi.c line 2892 addr 0x558 */
} /* 0x55c */
BOOL GetTextExtentPointA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x55c */
  /* file wingdi.c line 2893 addr 0x55c */
  /* file wingdi.c line 2893 addr 0x55f */
} /* 0x563 */
BOOL GetTextExtentPointW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x563 */
  /* file wingdi.c line 2894 addr 0x563 */
  /* file wingdi.c line 2894 addr 0x566 */
} /* 0x56a */
BOOL GetTextExtentPoint32A (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x56a */
  /* file wingdi.c line 2902 addr 0x56a */
  /* file wingdi.c line 2902 addr 0x56d */
} /* 0x571 */
BOOL GetTextExtentPoint32W (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x571 */
  /* file wingdi.c line 2903 addr 0x571 */
  /* file wingdi.c line 2903 addr 0x574 */
} /* 0x578 */
int GetTextFaceA (HDC a /* 0x8 */, int b /* 0xc */, LPSTR c /* 0x10 */)
{ /* 0x578 */
  /* file wingdi.c line 2905 addr 0x578 */
  /* file wingdi.c line 2905 addr 0x57b */
} /* 0x57f */
int GetTextFaceW (HDC a /* 0x8 */, int b /* 0xc */, LPWSTR c /* 0x10 */)
{ /* 0x57f */
  /* file wingdi.c line 2906 addr 0x57f */
  /* file wingdi.c line 2906 addr 0x582 */
} /* 0x586 */
BOOL GetTextMetricsA (HDC a /* 0x8 */, LPTEXTMETRICA b /* 0xc */)
{ /* 0x586 */
  /* file wingdi.c line 2907 addr 0x586 */
  /* file wingdi.c line 2907 addr 0x589 */
} /* 0x58d */
BOOL GetTextMetricsW (HDC a /* 0x8 */, LPTEXTMETRICW b /* 0xc */)
{ /* 0x58d */
  /* file wingdi.c line 2908 addr 0x58d */
  /* file wingdi.c line 2908 addr 0x590 */
} /* 0x594 */
BOOL GetViewportExtEx (HDC a /* 0x8 */, LPSIZE b /* 0xc */)
{ /* 0x594 */
  /* file wingdi.c line 2909 addr 0x594 */
  /* file wingdi.c line 2909 addr 0x597 */
} /* 0x59b */
BOOL GetViewportOrgEx (HDC a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x59b */
  /* file wingdi.c line 2910 addr 0x59b */
  /* file wingdi.c line 2910 addr 0x59e */
} /* 0x5a2 */
BOOL GetWindowExtEx (HDC a /* 0x8 */, LPSIZE b /* 0xc */)
{ /* 0x5a2 */
  /* file wingdi.c line 2911 addr 0x5a2 */
  /* file wingdi.c line 2911 addr 0x5a5 */
} /* 0x5a9 */
BOOL GetWindowOrgEx (HDC a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x5a9 */
  /* file wingdi.c line 2912 addr 0x5a9 */
  /* file wingdi.c line 2912 addr 0x5ac */
} /* 0x5b0 */
UINT GetWinMetaFileBits (HENHMETAFILE a /* 0x8 */, UINT b /* 0xc */, LPBYTE c /* 0x10 */, INT d /* 0x14 */, HDC e /* 0x18 */)
{ /* 0x5b0 */
  /* file wingdi.c line 2913 addr 0x5b0 */
  /* file wingdi.c line 2913 addr 0x5b3 */
} /* 0x5b7 */
BOOL GetWorldTransform (HDC a /* 0x8 */, LPXFORM b /* 0xc */)
{ /* 0x5b7 */
  /* file wingdi.c line 2914 addr 0x5b7 */
  /* file wingdi.c line 2914 addr 0x5ba */
} /* 0x5be */
int IntersectClipRect (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x5be */
  /* file wingdi.c line 2915 addr 0x5be */
  /* file wingdi.c line 2915 addr 0x5c1 */
} /* 0x5c5 */
BOOL InvertRgn (HDC a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x5c5 */
  /* file wingdi.c line 2916 addr 0x5c5 */
  /* file wingdi.c line 2916 addr 0x5c8 */
} /* 0x5cc */
BOOL LineDDA (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LINEDDAPROC e /* 0x18 */, LPARAM f /* 0x1c */)
{ /* 0x5cc */
  /* file wingdi.c line 2917 addr 0x5cc */
  /* file wingdi.c line 2917 addr 0x5cf */
} /* 0x5d3 */
BOOL LineTo (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x5d3 */
  /* file wingdi.c line 2918 addr 0x5d3 */
  /* file wingdi.c line 2918 addr 0x5d6 */
} /* 0x5da */
BOOL LPtoDP (HDC a /* 0x8 */, LPPOINT b /* 0xc */, int c /* 0x10 */)
{ /* 0x5da */
  /* file wingdi.c line 2919 addr 0x5da */
  /* file wingdi.c line 2919 addr 0x5dd */
} /* 0x5e1 */
BOOL MaskBlt (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, HDC f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, HBITMAP i /* 0x28 */, int j /* 0x2c */, int k /* 0x30 */, DWORD l /* 0x34 */)
{ /* 0x5e1 */
  /* file wingdi.c line 2920 addr 0x5e1 */
  /* file wingdi.c line 2920 addr 0x5e4 */
} /* 0x5e8 */
BOOL ModifyWorldTransform (HDC a /* 0x8 */, XFORM const *b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x5e8 */
  /* file wingdi.c line 2921 addr 0x5e8 */
  /* file wingdi.c line 2921 addr 0x5eb */
} /* 0x5ef */
BOOL MoveToEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x5ef */
  /* file wingdi.c line 2922 addr 0x5ef */
  /* file wingdi.c line 2922 addr 0x5f2 */
} /* 0x5f6 */
int OffsetClipRgn (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x5f6 */
  /* file wingdi.c line 2923 addr 0x5f6 */
  /* file wingdi.c line 2923 addr 0x5f9 */
} /* 0x5fd */
int OffsetRgn (HRGN a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x5fd */
  /* file wingdi.c line 2924 addr 0x5fd */
  /* file wingdi.c line 2924 addr 0x600 */
} /* 0x604 */
BOOL OffsetViewportOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x604 */
  /* file wingdi.c line 2925 addr 0x604 */
  /* file wingdi.c line 2925 addr 0x607 */
} /* 0x60b */
BOOL OffsetWindowOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x60b */
  /* file wingdi.c line 2926 addr 0x60b */
  /* file wingdi.c line 2926 addr 0x60e */
} /* 0x612 */
BOOL PaintRgn (HDC a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x612 */
  /* file wingdi.c line 2927 addr 0x612 */
  /* file wingdi.c line 2927 addr 0x615 */
} /* 0x619 */
BOOL PatBlt (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x619 */
  /* file wingdi.c line 2928 addr 0x619 */
  /* file wingdi.c line 2928 addr 0x61c */
} /* 0x620 */
HRGN PathToRegion (HDC a /* 0x8 */)
{ /* 0x620 */
  /* file wingdi.c line 2929 addr 0x620 */
  /* file wingdi.c line 2929 addr 0x623 */
} /* 0x627 */
BOOL Pie (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x627 */
  /* file wingdi.c line 2930 addr 0x627 */
  /* file wingdi.c line 2930 addr 0x62a */
} /* 0x62e */
BOOL PlayEnhMetaFile (HDC a /* 0x8 */, HENHMETAFILE b /* 0xc */, LPCRECT c /* 0x10 */)
{ /* 0x62e */
  /* file wingdi.c line 2931 addr 0x62e */
  /* file wingdi.c line 2931 addr 0x631 */
} /* 0x635 */
BOOL PlayEnhMetaFileRecord (HDC a /* 0x8 */, LPHANDLETABLE b /* 0xc */, ENHMETARECORD const *c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x635 */
  /* file wingdi.c line 2932 addr 0x635 */
  /* file wingdi.c line 2932 addr 0x638 */
} /* 0x63c */
BOOL PlayMetaFile (HDC a /* 0x8 */, HMETAFILE b /* 0xc */)
{ /* 0x63c */
  /* file wingdi.c line 2933 addr 0x63c */
  /* file wingdi.c line 2933 addr 0x63f */
} /* 0x643 */
BOOL PlayMetaFileRecord (HDC a /* 0x8 */, LPHANDLETABLE b /* 0xc */, LPMETARECORD c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x643 */
  /* file wingdi.c line 2934 addr 0x643 */
  /* file wingdi.c line 2934 addr 0x646 */
} /* 0x64a */
BOOL PlgBlt (HDC a /* 0x8 */, POINT const *b /* 0xc */, HDC c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, HBITMAP h /* 0x24 */, int i /* 0x28 */, int j /* 0x2c */)
{ /* 0x64a */
  /* file wingdi.c line 2935 addr 0x64a */
  /* file wingdi.c line 2935 addr 0x64d */
} /* 0x651 */
BOOL PolyBezier (HDC a /* 0x8 */, POINT const *b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x651 */
  /* file wingdi.c line 2936 addr 0x651 */
  /* file wingdi.c line 2936 addr 0x654 */
} /* 0x658 */
BOOL PolyBezierTo (HDC a /* 0x8 */, POINT const *b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x658 */
  /* file wingdi.c line 2937 addr 0x658 */
  /* file wingdi.c line 2937 addr 0x65b */
} /* 0x65f */
BOOL PolyDraw (HDC a /* 0x8 */, POINT const *b /* 0xc */, BYTE const *c /* 0x10 */, int d /* 0x14 */)
{ /* 0x65f */
  /* file wingdi.c line 2938 addr 0x65f */
  /* file wingdi.c line 2938 addr 0x662 */
} /* 0x666 */
BOOL Polygon (HDC a /* 0x8 */, POINT const *b /* 0xc */, int c /* 0x10 */)
{ /* 0x666 */
  /* file wingdi.c line 2939 addr 0x666 */
  /* file wingdi.c line 2939 addr 0x669 */
} /* 0x66d */
BOOL Polyline (HDC a /* 0x8 */, POINT const *b /* 0xc */, int c /* 0x10 */)
{ /* 0x66d */
  /* file wingdi.c line 2940 addr 0x66d */
  /* file wingdi.c line 2940 addr 0x670 */
} /* 0x674 */
BOOL PolylineTo (HDC a /* 0x8 */, POINT const *b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x674 */
  /* file wingdi.c line 2941 addr 0x674 */
  /* file wingdi.c line 2941 addr 0x677 */
} /* 0x67b */
BOOL PolyPolygon (HDC a /* 0x8 */, POINT const *b /* 0xc */, INT const *c /* 0x10 */, int d /* 0x14 */)
{ /* 0x67b */
  /* file wingdi.c line 2942 addr 0x67b */
  /* file wingdi.c line 2942 addr 0x67e */
} /* 0x682 */
BOOL PolyPolyline (HDC a /* 0x8 */, POINT const *b /* 0xc */, DWORD const *c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x682 */
  /* file wingdi.c line 2943 addr 0x682 */
  /* file wingdi.c line 2943 addr 0x685 */
} /* 0x689 */
BOOL PolyTextOutA (HDC a /* 0x8 */, POLYTEXTA const *b /* 0xc */, int c /* 0x10 */)
{ /* 0x689 */
  /* file wingdi.c line 2944 addr 0x689 */
  /* file wingdi.c line 2944 addr 0x68c */
} /* 0x690 */
BOOL PolyTextOutW (HDC a /* 0x8 */, POLYTEXTW const *b /* 0xc */, int c /* 0x10 */)
{ /* 0x690 */
  /* file wingdi.c line 2945 addr 0x690 */
  /* file wingdi.c line 2945 addr 0x693 */
} /* 0x697 */
BOOL PtInRegion (HRGN a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x697 */
  /* file wingdi.c line 2946 addr 0x697 */
  /* file wingdi.c line 2946 addr 0x69a */
} /* 0x69e */
BOOL PtVisible (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x69e */
  /* file wingdi.c line 2947 addr 0x69e */
  /* file wingdi.c line 2947 addr 0x6a1 */
} /* 0x6a5 */
UINT RealizePalette (HDC a /* 0x8 */)
{ /* 0x6a5 */
  /* file wingdi.c line 2948 addr 0x6a5 */
  /* file wingdi.c line 2948 addr 0x6a8 */
} /* 0x6ac */
BOOL Rectangle (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x6ac */
  /* file wingdi.c line 2949 addr 0x6ac */
  /* file wingdi.c line 2949 addr 0x6af */
} /* 0x6b3 */
BOOL RectInRegion (HRGN a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x6b3 */
  /* file wingdi.c line 2950 addr 0x6b3 */
  /* file wingdi.c line 2950 addr 0x6b6 */
} /* 0x6ba */
BOOL RectVisible (HDC a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x6ba */
  /* file wingdi.c line 2951 addr 0x6ba */
  /* file wingdi.c line 2951 addr 0x6bd */
} /* 0x6c1 */
BOOL RemoveFontResourceA (LPCSTR a /* 0x8 */)
{ /* 0x6c1 */
  /* file wingdi.c line 2952 addr 0x6c1 */
  /* file wingdi.c line 2952 addr 0x6c4 */
} /* 0x6c8 */
BOOL RemoveFontResourceW (LPCWSTR a /* 0x8 */)
{ /* 0x6c8 */
  /* file wingdi.c line 2953 addr 0x6c8 */
  /* file wingdi.c line 2953 addr 0x6cb */
} /* 0x6cf */
HDC ResetDCA (HDC a /* 0x8 */, DEVMODEA const *b /* 0xc */)
{ /* 0x6cf */
  /* file wingdi.c line 2959 addr 0x6cf */
  /* file wingdi.c line 2959 addr 0x6d2 */
} /* 0x6d6 */
HDC ResetDCW (HDC a /* 0x8 */, DEVMODEW const *b /* 0xc */)
{ /* 0x6d6 */
  /* file wingdi.c line 2960 addr 0x6d6 */
  /* file wingdi.c line 2960 addr 0x6d9 */
} /* 0x6dd */
BOOL ResizePalette (HPALETTE a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x6dd */
  /* file wingdi.c line 2961 addr 0x6dd */
  /* file wingdi.c line 2961 addr 0x6e0 */
} /* 0x6e4 */
BOOL RestoreDC (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x6e4 */
  /* file wingdi.c line 2962 addr 0x6e4 */
  /* file wingdi.c line 2962 addr 0x6e7 */
} /* 0x6eb */
BOOL RoundRect (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */)
{ /* 0x6eb */
  /* file wingdi.c line 2963 addr 0x6eb */
  /* file wingdi.c line 2963 addr 0x6ee */
} /* 0x6f2 */
int SaveDC (HDC a /* 0x8 */)
{ /* 0x6f2 */
  /* file wingdi.c line 2964 addr 0x6f2 */
  /* file wingdi.c line 2964 addr 0x6f5 */
} /* 0x6f9 */
BOOL ScaleViewportExtEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, LPSIZE f /* 0x1c */)
{ /* 0x6f9 */
  /* file wingdi.c line 2965 addr 0x6f9 */
  /* file wingdi.c line 2965 addr 0x6fc */
} /* 0x700 */
BOOL ScaleWindowExtEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, LPSIZE f /* 0x1c */)
{ /* 0x700 */
  /* file wingdi.c line 2966 addr 0x700 */
  /* file wingdi.c line 2966 addr 0x703 */
} /* 0x707 */
BOOL SelectClipPath (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x707 */
  /* file wingdi.c line 2967 addr 0x707 */
  /* file wingdi.c line 2967 addr 0x70a */
} /* 0x70e */
int SelectClipRgn (HDC a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x70e */
  /* file wingdi.c line 2968 addr 0x70e */
  /* file wingdi.c line 2968 addr 0x711 */
} /* 0x715 */
HGDIOBJ SelectObject (HDC a /* 0x8 */, HGDIOBJ b /* 0xc */)
{ /* 0x715 */
  /* file wingdi.c line 2969 addr 0x715 */
  /* file wingdi.c line 2969 addr 0x718 */
} /* 0x71c */
HPALETTE SelectPalette (HDC a /* 0x8 */, HPALETTE b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x71c */
  /* file wingdi.c line 2970 addr 0x71c */
  /* file wingdi.c line 2970 addr 0x71f */
} /* 0x723 */
int SetAbortProc (HDC a /* 0x8 */, ABORTPROC b /* 0xc */)
{ /* 0x723 */
  /* file wingdi.c line 2971 addr 0x723 */
  /* file wingdi.c line 2971 addr 0x726 */
} /* 0x72a */
int SetArcDirection (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x72a */
  /* file wingdi.c line 2972 addr 0x72a */
  /* file wingdi.c line 2972 addr 0x72d */
} /* 0x731 */
LONG SetBitmapBits (HBITMAP a /* 0x8 */, DWORD b /* 0xc */, PCVOID c /* 0x10 */)
{ /* 0x731 */
  /* file wingdi.c line 2973 addr 0x731 */
  /* file wingdi.c line 2973 addr 0x734 */
} /* 0x738 */
BOOL SetBitmapDimensionEx (HBITMAP a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x738 */
  /* file wingdi.c line 2974 addr 0x738 */
  /* file wingdi.c line 2974 addr 0x73b */
} /* 0x73f */
COLORREF SetBkColor (HDC a /* 0x8 */, COLORREF b /* 0xc */)
{ /* 0x73f */
  /* file wingdi.c line 2975 addr 0x73f */
  /* file wingdi.c line 2975 addr 0x742 */
} /* 0x746 */
int SetBkMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x746 */
  /* file wingdi.c line 2976 addr 0x746 */
  /* file wingdi.c line 2976 addr 0x749 */
} /* 0x74d */
UINT SetBoundsRect (HDC a /* 0x8 */, LPCRECT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x74d */
  /* file wingdi.c line 2977 addr 0x74d */
  /* file wingdi.c line 2977 addr 0x750 */
} /* 0x754 */
BOOL SetBrushOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x754 */
  /* file wingdi.c line 2978 addr 0x754 */
  /* file wingdi.c line 2978 addr 0x757 */
} /* 0x75b */
BOOL SetColorAdjustment (HDC a /* 0x8 */, COLORADJUSTMENT const *b /* 0xc */)
{ /* 0x75b */
  /* file wingdi.c line 2979 addr 0x75b */
  /* file wingdi.c line 2979 addr 0x75e */
} /* 0x762 */
BOOL SetColorSpace (HDC a /* 0x8 */, HCOLORSPACE b /* 0xc */)
{ /* 0x762 */
  /* file wingdi.c line 2980 addr 0x762 */
  /* file wingdi.c line 2980 addr 0x765 */
} /* 0x769 */
BOOL SetDeviceGammaRamp (HDC a /* 0x8 */, PVOID b /* 0xc */)
{ /* 0x769 */
  /* file wingdi.c line 2985 addr 0x769 */
  /* file wingdi.c line 2985 addr 0x76c */
} /* 0x770 */
UINT SetDIBColorTable (HDC a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, RGBQUAD const *d /* 0x14 */)
{ /* 0x770 */
  /* file wingdi.c line 2986 addr 0x770 */
  /* file wingdi.c line 2986 addr 0x773 */
} /* 0x777 */
int SetDIBits (HDC a /* 0x8 */, HBITMAP b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, PCVOID e /* 0x18 */, BITMAPINFO const *f /* 0x1c */, UINT g /* 0x20 */)
{ /* 0x777 */
  /* file wingdi.c line 2987 addr 0x777 */
  /* file wingdi.c line 2987 addr 0x77a */
} /* 0x77e */
int SetDIBitsToDevice (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, UINT h /* 0x24 */, UINT i /* 0x28 */, PCVOID j /* 0x2c */, BITMAPINFO const *k /* 0x30 */, UINT l /* 0x34 */)
{ /* 0x77e */
  /* file wingdi.c line 2988 addr 0x77e */
  /* file wingdi.c line 2988 addr 0x781 */
} /* 0x785 */
HENHMETAFILE SetEnhMetaFileBits (UINT a /* 0x8 */, BYTE const *b /* 0xc */)
{ /* 0x785 */
  /* file wingdi.c line 2989 addr 0x785 */
  /* file wingdi.c line 2989 addr 0x788 */
} /* 0x78c */
int SetGraphicsMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x78c */
  /* file wingdi.c line 2990 addr 0x78c */
  /* file wingdi.c line 2990 addr 0x78f */
} /* 0x793 */
int SetICMMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x793 */
  /* file wingdi.c line 2991 addr 0x793 */
  /* file wingdi.c line 2991 addr 0x796 */
} /* 0x79a */
BOOL SetICMProfileA (HDC a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x79a */
  /* file wingdi.c line 2992 addr 0x79a */
  /* file wingdi.c line 2992 addr 0x79d */
} /* 0x7a1 */
BOOL SetICMProfileW (HDC a /* 0x8 */, LPWSTR b /* 0xc */)
{ /* 0x7a1 */
  /* file wingdi.c line 2993 addr 0x7a1 */
  /* file wingdi.c line 2993 addr 0x7a4 */
} /* 0x7a8 */
int SetMapMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x7a8 */
  /* file wingdi.c line 2994 addr 0x7a8 */
  /* file wingdi.c line 2994 addr 0x7ab */
} /* 0x7af */
DWORD SetMapperFlags (HDC a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x7af */
  /* file wingdi.c line 2995 addr 0x7af */
  /* file wingdi.c line 2995 addr 0x7b2 */
} /* 0x7b6 */
HMETAFILE SetMetaFileBitsEx (UINT a /* 0x8 */, BYTE const *b /* 0xc */)
{ /* 0x7b6 */
  /* file wingdi.c line 2996 addr 0x7b6 */
  /* file wingdi.c line 2996 addr 0x7b9 */
} /* 0x7bd */
int SetMetaRgn (HDC a /* 0x8 */)
{ /* 0x7bd */
  /* file wingdi.c line 2997 addr 0x7bd */
  /* file wingdi.c line 2997 addr 0x7c0 */
} /* 0x7c4 */
BOOL SetMiterLimit (HDC a /* 0x8 */, FLOAT b /* 0xc */, PFLOAT c /* 0x10 */)
{ /* 0x7c4 */
  /* file wingdi.c line 2998 addr 0x7c4 */
  /* file wingdi.c line 2998 addr 0x7c7 */
} /* 0x7cb */
UINT SetPaletteEntries (HPALETTE a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, PALETTEENTRY const *d /* 0x14 */)
{ /* 0x7cb */
  /* file wingdi.c line 2999 addr 0x7cb */
  /* file wingdi.c line 2999 addr 0x7ce */
} /* 0x7d2 */
COLORREF SetPixel (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, COLORREF d /* 0x14 */)
{ /* 0x7d2 */
  /* file wingdi.c line 3000 addr 0x7d2 */
  /* file wingdi.c line 3000 addr 0x7d5 */
} /* 0x7d9 */
BOOL SetPixelFormat (HDC a /* 0x8 */, int b /* 0xc */, PIXELFORMATDESCRIPTOR const *c /* 0x10 */)
{ /* 0x7d9 */
  /* file wingdi.c line 3001 addr 0x7d9 */
  /* file wingdi.c line 3001 addr 0x7dc */
} /* 0x7e0 */
BOOL SetPixelV (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, COLORREF d /* 0x14 */)
{ /* 0x7e0 */
  /* file wingdi.c line 3002 addr 0x7e0 */
  /* file wingdi.c line 3002 addr 0x7e3 */
} /* 0x7e7 */
int SetPolyFillMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x7e7 */
  /* file wingdi.c line 3003 addr 0x7e7 */
  /* file wingdi.c line 3003 addr 0x7ea */
} /* 0x7ee */
BOOL SetRectRgn (HRGN a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x7ee */
  /* file wingdi.c line 3004 addr 0x7ee */
  /* file wingdi.c line 3004 addr 0x7f1 */
} /* 0x7f5 */
int SetROP2 (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x7f5 */
  /* file wingdi.c line 3005 addr 0x7f5 */
  /* file wingdi.c line 3005 addr 0x7f8 */
} /* 0x7fc */
int SetStretchBltMode (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x7fc */
  /* file wingdi.c line 3006 addr 0x7fc */
  /* file wingdi.c line 3006 addr 0x7ff */
} /* 0x803 */
UINT SetSystemPaletteUse (HDC a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x803 */
  /* file wingdi.c line 3007 addr 0x803 */
  /* file wingdi.c line 3007 addr 0x806 */
} /* 0x80a */
UINT SetTextAlign (HDC a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x80a */
  /* file wingdi.c line 3008 addr 0x80a */
  /* file wingdi.c line 3008 addr 0x80d */
} /* 0x811 */
int SetTextCharacterExtra (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x811 */
  /* file wingdi.c line 3009 addr 0x811 */
  /* file wingdi.c line 3009 addr 0x814 */
} /* 0x818 */
COLORREF SetTextColor (HDC a /* 0x8 */, COLORREF b /* 0xc */)
{ /* 0x818 */
  /* file wingdi.c line 3010 addr 0x818 */
  /* file wingdi.c line 3010 addr 0x81b */
} /* 0x81f */
BOOL SetTextJustification (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x81f */
  /* file wingdi.c line 3011 addr 0x81f */
  /* file wingdi.c line 3011 addr 0x822 */
} /* 0x826 */
BOOL SetViewportExtEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x826 */
  /* file wingdi.c line 3012 addr 0x826 */
  /* file wingdi.c line 3012 addr 0x829 */
} /* 0x82d */
BOOL SetViewportOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x82d */
  /* file wingdi.c line 3013 addr 0x82d */
  /* file wingdi.c line 3013 addr 0x830 */
} /* 0x834 */
BOOL SetWindowExtEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPSIZE d /* 0x14 */)
{ /* 0x834 */
  /* file wingdi.c line 3014 addr 0x834 */
  /* file wingdi.c line 3014 addr 0x837 */
} /* 0x83b */
BOOL SetWindowOrgEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPPOINT d /* 0x14 */)
{ /* 0x83b */
  /* file wingdi.c line 3015 addr 0x83b */
  /* file wingdi.c line 3015 addr 0x83e */
} /* 0x842 */
HENHMETAFILE SetWinMetaFileBits (UINT a /* 0x8 */, BYTE const *b /* 0xc */, HDC c /* 0x10 */, METAFILEPICT const *d /* 0x14 */)
{ /* 0x842 */
  /* file wingdi.c line 3016 addr 0x842 */
  /* file wingdi.c line 3016 addr 0x845 */
} /* 0x849 */
BOOL SetWorldTransform (HDC a /* 0x8 */, XFORM const *b /* 0xc */)
{ /* 0x849 */
  /* file wingdi.c line 3017 addr 0x849 */
  /* file wingdi.c line 3017 addr 0x84c */
} /* 0x850 */
int StartDocA (HDC a /* 0x8 */, DOCINFOA const *b /* 0xc */)
{ /* 0x850 */
  /* file wingdi.c line 3018 addr 0x850 */
  /* file wingdi.c line 3018 addr 0x853 */
} /* 0x857 */
int StartDocW (HDC a /* 0x8 */, DOCINFOW const *b /* 0xc */)
{ /* 0x857 */
  /* file wingdi.c line 3019 addr 0x857 */
  /* file wingdi.c line 3019 addr 0x85a */
} /* 0x85e */
int StartPage (HDC a /* 0x8 */)
{ /* 0x85e */
  /* file wingdi.c line 3020 addr 0x85e */
  /* file wingdi.c line 3020 addr 0x861 */
} /* 0x865 */
BOOL StretchBlt (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, HDC f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */, int j /* 0x2c */, DWORD k /* 0x30 */)
{ /* 0x865 */
  /* file wingdi.c line 3021 addr 0x865 */
  /* file wingdi.c line 3021 addr 0x868 */
} /* 0x86c */
int StretchDIBits (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */, void const *j /* 0x2c */, BITMAPINFO const *k /* 0x30 */, UINT l /* 0x34 */, DWORD m /* 0x38 */)
{ /* 0x86c */
  /* file wingdi.c line 3022 addr 0x86c */
  /* file wingdi.c line 3022 addr 0x86f */
} /* 0x873 */
BOOL StrokeAndFillPath (HDC a /* 0x8 */)
{ /* 0x873 */
  /* file wingdi.c line 3023 addr 0x873 */
  /* file wingdi.c line 3023 addr 0x876 */
} /* 0x87a */
BOOL StrokePath (HDC a /* 0x8 */)
{ /* 0x87a */
  /* file wingdi.c line 3024 addr 0x87a */
  /* file wingdi.c line 3024 addr 0x87d */
} /* 0x881 */
BOOL SwapBuffers (HDC a /* 0x8 */)
{ /* 0x881 */
  /* file wingdi.c line 3025 addr 0x881 */
  /* file wingdi.c line 3025 addr 0x884 */
} /* 0x888 */
BOOL TextOutA (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCSTR d /* 0x14 */, int e /* 0x18 */)
{ /* 0x888 */
  /* file wingdi.c line 3026 addr 0x888 */
  /* file wingdi.c line 3026 addr 0x88b */
} /* 0x88f */
BOOL TextOutW (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCWSTR d /* 0x14 */, int e /* 0x18 */)
{ /* 0x88f */
  /* file wingdi.c line 3027 addr 0x88f */
  /* file wingdi.c line 3027 addr 0x892 */
} /* 0x896 */
BOOL TranslateCharsetInfo (PDWORD a /* 0x8 */, LPCHARSETINFO b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x896 */
  /* file wingdi.c line 3028 addr 0x896 */
  /* file wingdi.c line 3028 addr 0x899 */
} /* 0x89d */
BOOL UnrealizeObject (HGDIOBJ a /* 0x8 */)
{ /* 0x89d */
  /* file wingdi.c line 3029 addr 0x89d */
  /* file wingdi.c line 3029 addr 0x8a0 */
} /* 0x8a4 */
BOOL UpdateColors (HDC a /* 0x8 */)
{ /* 0x8a4 */
  /* file wingdi.c line 3030 addr 0x8a4 */
  /* file wingdi.c line 3030 addr 0x8a7 */
} /* 0x8ab */
BOOL UpdateICMRegKeyA (DWORD a /* 0x8 */, DWORD b /* 0xc */, LPSTR c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x8ab */
  /* file wingdi.c line 3031 addr 0x8ab */
  /* file wingdi.c line 3031 addr 0x8ae */
} /* 0x8b2 */
BOOL UpdateICMRegKeyW (DWORD a /* 0x8 */, DWORD b /* 0xc */, LPWSTR c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x8b2 */
  /* file wingdi.c line 3032 addr 0x8b2 */
  /* file wingdi.c line 3032 addr 0x8b5 */
} /* 0x8b9 */
BOOL WidenPath (HDC a /* 0x8 */)
{ /* 0x8b9 */
  /* file wingdi.c line 3033 addr 0x8b9 */
  /* file wingdi.c line 3033 addr 0x8bc */
} /* 0x8c0 */
BOOL wglCopyContext (HGLRC a /* 0x8 */, HGLRC b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x8c0 */
  /* file wingdi.c line 3034 addr 0x8c0 */
  /* file wingdi.c line 3034 addr 0x8c3 */
} /* 0x8c7 */
HGLRC wglCreateContext (HDC a /* 0x8 */)
{ /* 0x8c7 */
  /* file wingdi.c line 3035 addr 0x8c7 */
  /* file wingdi.c line 3035 addr 0x8ca */
} /* 0x8ce */
HGLRC wglCreateLayerContext (HDC a /* 0x8 */, int b /* 0xc */)
{ /* 0x8ce */
  /* file wingdi.c line 3036 addr 0x8ce */
  /* file wingdi.c line 3036 addr 0x8d1 */
} /* 0x8d5 */
BOOL wglDeleteContext (HGLRC a /* 0x8 */)
{ /* 0x8d5 */
  /* file wingdi.c line 3037 addr 0x8d5 */
  /* file wingdi.c line 3037 addr 0x8d8 */
} /* 0x8dc */
BOOL wglDescribeLayerPlane (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, UINT d /* 0x14 */, LPLAYERPLANEDESCRIPTOR e /* 0x18 */)
{ /* 0x8dc */
  /* file wingdi.c line 3038 addr 0x8dc */
  /* file wingdi.c line 3038 addr 0x8df */
} /* 0x8e3 */
HGLRC wglGetCurrentContext ()
{ /* 0x8e3 */
  /* file wingdi.c line 3039 addr 0x8e3 */
  /* file wingdi.c line 3039 addr 0x8e6 */
} /* 0x8e8 */
HDC wglGetCurrentDC ()
{ /* 0x8e8 */
  /* file wingdi.c line 3040 addr 0x8e8 */
  /* file wingdi.c line 3040 addr 0x8eb */
} /* 0x8ed */
int wglGetLayerPaletteEntries (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, COLORREF *e /* 0x18 */)
{ /* 0x8ed */
  /* file wingdi.c line 3041 addr 0x8ed */
  /* file wingdi.c line 3041 addr 0x8f0 */
} /* 0x8f4 */
PROC wglGetProcAddress (LPCSTR a /* 0x8 */)
{ /* 0x8f4 */
  /* file wingdi.c line 3042 addr 0x8f4 */
  /* file wingdi.c line 3042 addr 0x8f7 */
} /* 0x8fb */
BOOL wglMakeCurrent (HDC a /* 0x8 */, HGLRC b /* 0xc */)
{ /* 0x8fb */
  /* file wingdi.c line 3043 addr 0x8fb */
  /* file wingdi.c line 3043 addr 0x8fe */
} /* 0x902 */
BOOL wglRealizeLayerPalette (HDC a /* 0x8 */, int b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x902 */
  /* file wingdi.c line 3044 addr 0x902 */
  /* file wingdi.c line 3044 addr 0x905 */
} /* 0x909 */
int wglSetLayerPaletteEntries (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, COLORREF const *e /* 0x18 */)
{ /* 0x909 */
  /* file wingdi.c line 3045 addr 0x909 */
  /* file wingdi.c line 3045 addr 0x90c */
} /* 0x910 */
BOOL wglShareLists (HGLRC a /* 0x8 */, HGLRC b /* 0xc */)
{ /* 0x910 */
  /* file wingdi.c line 3046 addr 0x910 */
  /* file wingdi.c line 3046 addr 0x913 */
} /* 0x917 */
BOOL wglSwapLayerBuffers (HDC a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x917 */
  /* file wingdi.c line 3047 addr 0x917 */
  /* file wingdi.c line 3047 addr 0x91a */
} /* 0x91e */
BOOL wglUseFontBitmapsA (HDC a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x91e */
  /* file wingdi.c line 3048 addr 0x91e */
  /* file wingdi.c line 3048 addr 0x921 */
} /* 0x925 */
BOOL wglUseFontBitmapsW (HDC a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x925 */
  /* file wingdi.c line 3049 addr 0x925 */
  /* file wingdi.c line 3049 addr 0x928 */
} /* 0x92c */
BOOL wglUseFontOutlinesA (HDC a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, FLOAT e /* 0x18 */, FLOAT f /* 0x1c */, int g /* 0x20 */, LPGLYPHMETRICSFLOAT h /* 0x24 */)
{ /* 0x92c */
  /* file wingdi.c line 3050 addr 0x92c */
  /* file wingdi.c line 3050 addr 0x92f */
} /* 0x933 */
BOOL wglUseFontOutlinesW (HDC a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, FLOAT e /* 0x18 */, FLOAT f /* 0x1c */, int g /* 0x20 */, LPGLYPHMETRICSFLOAT h /* 0x24 */)
{ /* 0x933 */
  /* file wingdi.c line 3051 addr 0x933 */
  /* file wingdi.c line 3051 addr 0x936 */
} /* 0x93a */
typedef BYTE BCHAR;
typedef DOCINFOA DOCINFO;
typedef DOCINFOA *LPDOCINFO;
typedef LOGFONTA LOGFONT;
typedef LOGFONTA *PLOGFONT;
typedef LOGFONTA *LPLOGFONT;
typedef TEXTMETRICA TEXTMETRIC;
typedef TEXTMETRICA *PTEXTMETRIC;
typedef TEXTMETRICA *LPTEXTMETRIC;
typedef DEVMODEA DEVMODE;
typedef DEVMODEA *PDEVMODE;
typedef DEVMODEA *LPDEVMODE;
typedef EXTLOGFONTA EXTLOGFONT;
typedef EXTLOGFONTA *PEXTLOGFONT;
typedef EXTLOGFONTA *LPEXTLOGFONT;
typedef GCP_RESULTSA GCP_RESULTS;
typedef GCP_RESULTSA *LPGCP_RESULTS;
typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;
typedef OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;
typedef POLYTEXTA POLYTEXT;
typedef POLYTEXTA *PPOLYTEXT;
typedef POLYTEXTA *LPPOLYTEXT;
typedef LOGCOLORSPACEA LOGCOLORSPACE;
typedef LOGCOLORSPACEA *LPLOGCOLORSPACE;
typedef NEWTEXTMETRICA NEWTEXTMETRIC;
typedef NEWTEXTMETRICA *PNEWTEXTMETRIC;
typedef NEWTEXTMETRICA *LPNEWTEXTMETRIC;
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;
typedef ENUMLOGFONTA ENUMLOGFONT;
typedef ENUMLOGFONTA *LPENUMLOGFONT;
typedef ENUMLOGFONTEXA ENUMLOGFONTEX;
typedef ENUMLOGFONTEXA *LPENUMLOGFONTEX;
typedef DISPLAY_DEVICEA DISPLAY_DEVICE;
typedef DISPLAY_DEVICEA *PDISPLAY_DEVICE;
typedef DISPLAY_DEVICEA *LPDISPLAY_DEVICE;
