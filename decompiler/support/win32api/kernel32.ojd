
kernel32.o:     file format pe-i386

SYMBOL TABLE:
[  0](sec -2)(fl 0x00)(ty   0)(scl 103) (nx 1) 0x00000000 kernel32.c
File 
[  2](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 1) 0x00000000 __hread@12
AUX tagndx 0 ttlsiz 0x0 lnnos 0 next 0
[  4](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000007 __hwrite@12
[  5](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000000e __lclose@4
[  6](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000015 __lcreat@8
[  7](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000001c __llseek@12
[  8](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000023 __lopen@8
[  9](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000002a __lread@12
[ 10](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000031 __lwrite@12
[ 11](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000038 _AccessCheck@32
[ 12](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000003f _AccessCheckAndAuditAlarmA@44
[ 13](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000046 _AccessCheckAndAuditAlarmW@44
[ 14](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000004d _AddAccessAllowedAce@16
[ 15](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000054 _AddAccessDeniedAce@16
[ 16](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000005b _AddAce@20
[ 17](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000062 _AddAtomA@4
[ 18](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000069 _AddAtomW@4
[ 19](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000070 _AddAuditAccessAce@24
[ 20](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000077 _AdjustTokenGroups@24
[ 21](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000007e _AdjustTokenPrivileges@24
[ 22](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000085 _AllocateAndInitializeSid@44
[ 23](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000095 _AllocateLocallyUniqueId@4
[ 24](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000009c _AreAllAccessesGranted@8
[ 25](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000a3 _AreAnyAccessesGranted@8
[ 26](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000aa _AreFileApisANSI@0
[ 27](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000af _BackupEventLogA@8
[ 28](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000b6 _BackupEventLogW@8
[ 29](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000bd _BackupRead@28
[ 30](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000c4 _BackupSeek@24
[ 31](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000cb _BackupWrite@28
[ 32](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d2 _Beep@8
[ 33](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d9 _BeginUpdateResourceA@8
[ 34](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000e0 _BeginUpdateResourceW@8
[ 35](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000e7 _BuildCommDCBA@8
[ 36](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000ee _BuildCommDCBW@8
[ 37](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000f5 _BuildCommDCBAndTimeoutsA@12
[ 38](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000fc _BuildCommDCBAndTimeoutsW@12
[ 39](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000103 _CallNamedPipeA@28
[ 40](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000010a _CallNamedPipeW@28
[ 41](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000111 _CancelDeviceWakeupRequest@4
[ 42](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000118 _CancelIo@4
[ 43](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000011f _CancelWaitableTimer@4
[ 44](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000126 _ClearCommBreak@4
[ 45](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000012d _ClearCommError@12
[ 46](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000134 _ClearEventLogA@8
[ 47](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000013b _ClearEventLogW@8
[ 48](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000142 _CloseEventLog@4
[ 49](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000149 _CloseHandle@4
[ 50](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000150 _CommConfigDialogA@12
[ 51](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000157 _CommConfigDialogW@12
[ 52](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000015e _CompareFileTime@8
[ 53](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000165 _ConnectNamedPipe@8
[ 54](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000016c _ContinueDebugEvent@12
[ 55](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000173 _ConvertFiberToThread@0
[ 56](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000178 _ConvertThreadToFiber@4
[ 57](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000017f _CopyFileA@12
[ 58](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000186 _CopyFileW@12
[ 59](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000018d _CopyFileExA@24
[ 60](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000194 _CopyFileExW@24
[ 61](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000019b _CopySid@12
[ 62](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001a2 _CreateDirectoryA@8
[ 63](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001a9 _CreateDirectoryW@8
[ 64](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001b0 _CreateDirectoryExA@12
[ 65](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001b7 _CreateDirectoryExW@12
[ 66](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001be _CreateEventA@16
[ 67](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001c5 _CreateEventW@16
[ 68](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001cc _CreateFiber@12
[ 69](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001d3 _CreateFiberEx@20
[ 70](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001da _CreateFileA@28
[ 71](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001e1 _CreateFileW@28
[ 72](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001e8 _CreateFileMappingA@24
[ 73](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ef _CreateFileMappingW@24
[ 74](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001f6 _CreateIoCompletionPort@16
[ 75](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001fd _CreateMailslotA@16
[ 76](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000204 _CreateMailslotW@16
[ 77](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000020b _CreateMutexA@12
[ 78](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000212 _CreateMutexW@12
[ 79](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000219 _CreateNamedPipeA@32
[ 80](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000220 _CreateNamedPipeW@32
[ 81](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000227 _CreatePipe@16
[ 82](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000022e _CreatePrivateObjectSecurity@24
[ 83](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000235 _CreateProcessA@40
[ 84](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000023c _CreateProcessW@40
[ 85](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000243 _CreateProcessAsUserA@44
[ 86](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000024a _CreateProcessAsUserW@44
[ 87](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000251 _CreateRemoteThread@28
[ 88](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000258 _CreateSemaphoreA@16
[ 89](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000025f _CreateSemaphoreW@16
[ 90](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000266 _CreateTapePartition@16
[ 91](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000026d _CreateThread@24
[ 92](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000274 _CreateWaitableTimerA@12
[ 93](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000027b _CreateWaitableTimerW@12
[ 94](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000282 _DebugActiveProcess@4
[ 95](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000289 _DebugBreak@0
[ 96](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000028e _DefineDosDeviceA@12
[ 97](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000295 _DefineDosDeviceW@12
[ 98](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000029c _DeleteAce@8
[ 99](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002a3 _DeleteAtom@4
[100](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002b4 _DeleteCriticalSection@4
[101](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002bb _DeleteFiber@4
[102](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c2 _DeleteFileA@4
[103](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c9 _DeleteFileW@4
[104](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002d0 _DeregisterEventSource@4
[105](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002d7 _DestroyPrivateObjectSecurity@4
[106](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002de _DeviceIoControl@32
[107](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002e5 _DisableThreadLibraryCalls@4
[108](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ec _DisconnectNamedPipe@4
[109](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002f3 _DosDateTimeToFileTime@12
[110](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000030b _DuplicateHandle@28
[111](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000312 _DuplicateToken@12
[112](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000319 _DuplicateTokenEx@24
[113](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000320 _EncryptFileA@4
[114](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000327 _EncryptFileW@4
[115](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000032e _EndUpdateResourceA@8
[116](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000335 _EndUpdateResourceW@8
[117](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000033c _EnterCriticalSection@4
[118](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000343 _EnumResourceLanguagesA@20
[119](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000034a _EnumResourceLanguagesW@20
[120](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000351 _EnumResourceNamesA@16
[121](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000358 _EnumResourceNamesW@16
[122](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000035f _EnumResourceTypesA@12
[123](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000366 _EnumResourceTypesW@12
[124](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000036d _EqualPrefixSid@8
[125](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000374 _EqualSid@8
[126](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000037b _EraseTape@12
[127](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000382 _EscapeCommFunction@8
[128](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000389 _ExitProcess@4
[129](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000390 _ExitThread@4
[130](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000397 _ExpandEnvironmentStringsA@12
[131](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000039e _ExpandEnvironmentStringsW@12
[132](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003a5 _FatalAppExitA@8
[133](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ac _FatalAppExitW@8
[134](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003b3 _FatalExit@4
[135](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ba _FileEncryptionStatusA@8
[136](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003c1 _FileEncryptionStatusW@8
[137](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003c8 _FileTimeToDosDateTime@12
[138](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003cf _FileTimeToLocalFileTime@8
[139](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003d6 _FileTimeToSystemTime@8
[140](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003dd _FindAtomA@4
[141](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003e4 _FindAtomW@4
[142](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003eb _FindClose@4
[143](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003f2 _FindCloseChangeNotification@4
[144](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003f9 _FindFirstChangeNotificationA@12
[145](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000400 _FindFirstChangeNotificationW@12
[146](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000407 _FindFirstFileA@8
[147](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000040e _FindFirstFileW@8
[148](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000415 _FindFirstFileExA@24
[149](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000041c _FindFirstFileExW@24
[150](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000423 _FindFirstFreeAce@8
[151](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000042a _FindNextChangeNotification@4
[152](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000431 _FindNextFileA@8
[153](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000438 _FindNextFileW@8
[154](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000043f _FindResourceA@12
[155](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000446 _FindResourceW@12
[156](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000044d _FindResourceExA@16
[157](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000045e _FindResourceExW@16
[158](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000046f _FlushFileBuffers@4
[159](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000476 _FlushInstructionCache@12
[160](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000047d _FlushViewOfFile@8
[161](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000484 _FormatMessageA@28
[162](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000048b _FormatMessageW@28
[163](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000492 _FreeEnvironmentStringsA@4
[164](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000499 _FreeEnvironmentStringsW@4
[165](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004a0 _FreeLibrary@4
[166](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004a7 _FreeLibraryAndExitThread@8
[167](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ae _FreeResource@4
[168](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004b5 _FreeSid@4
[169](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004bc _GetAce@12
[170](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004c3 _GetAclInformation@16
[171](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ca _GetAtomNameA@12
[172](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004db _GetAtomNameW@12
[173](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ec _GetBinaryTypeA@8
[174](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004f3 _GetBinaryTypeW@8
[175](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004fa _GetCommandLineA@0
[176](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004ff _GetCommandLineW@0
[177](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000504 _GetCommConfig@12
[178](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000050b _GetCommMask@8
[179](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000512 _GetCommModemStatus@8
[180](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000519 _GetCommProperties@8
[181](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000520 _GetCommState@8
[182](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000527 _GetCommTimeouts@8
[183](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000052e _GetCompressedFileSizeA@8
[184](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000535 _GetCompressedFileSizeW@8
[185](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000053c _GetComputerNameA@8
[186](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000543 _GetComputerNameW@8
[187](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000054a _GetCurrentDirectoryA@8
[188](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000551 _GetCurrentDirectoryW@8
[189](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000558 _GetCurrentHwProfileA@4
[190](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000055f _GetCurrentHwProfileW@4
[191](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000566 _GetCurrentProcess@0
[192](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000056b _GetCurrentProcessId@0
[193](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000570 _GetCurrentThread@0
[194](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000575 _GetCurrentThreadId@0
[195](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000057a _GetDefaultCommConfigA@12
[196](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000581 _GetDefaultCommConfigW@12
[197](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000588 _GetDevicePowerState@8
[198](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000058f _GetDiskFreeSpaceA@20
[199](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000596 _GetDiskFreeSpaceW@20
[200](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000059d _GetDiskFreeSpaceExA@16
[201](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005a4 _GetDiskFreeSpaceExW@16
[202](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005ab _GetDriveTypeA@4
[203](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b2 _GetDriveTypeW@4
[204](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b9 _GetEnvironmentStrings@0
[205](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005be _GetEnvironmentStringsA@0
[206](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005c3 _GetEnvironmentStringsW@0
[207](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005c8 _GetEnvironmentVariableA@12
[208](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005cf _GetEnvironmentVariableW@12
[209](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005d6 _GetExitCodeProcess@8
[210](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005dd _GetExitCodeThread@8
[211](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005e4 _GetFileAttributesA@4
[212](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005eb _GetFileAttributesW@4
[213](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005f2 _GetFileAttributesExA@12
[214](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005f9 _GetFileAttributesExW@12
[215](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000600 _GetFileInformationByHandle@8
[216](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000607 _GetFileSecurityA@20
[217](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000060e _GetFileSecurityW@20
[218](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000615 _GetFileSize@8
[219](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000061c _GetFileTime@16
[220](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000623 _GetFileType@4
[221](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000062a _GetFullPathNameA@16
[222](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000631 _GetFullPathNameW@16
[223](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000638 _GetHandleInformation@8
[224](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000063f _GetKernelObjectSecurity@20
[225](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000646 _GetLastError@0
[226](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000064b _GetLengthSid@4
[227](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000652 _GetLocalTime@4
[228](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000659 _GetLogicalDrives@0
[229](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000065e _GetLogicalDriveStringsA@8
[230](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000665 _GetLogicalDriveStringsW@8
[231](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000066c _GetMailslotInfo@20
[232](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000673 _GetModuleFileNameA@12
[233](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000067a _GetModuleFileNameW@12
[234](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000681 _GetModuleHandleA@4
[235](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000688 _GetModuleHandleW@4
[236](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000068f _GetNamedPipeHandleStateA@28
[237](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000696 _GetNamedPipeHandleStateW@28
[238](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000069d _GetNamedPipeInfo@20
[239](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006a4 _GetNumberOfEventLogRecords@8
[240](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ab _GetOldestEventLogRecord@8
[241](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006b2 _GetOverlappedResult@16
[242](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006b9 _GetPriorityClass@4
[243](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c0 _GetPrivateObjectSecurity@20
[244](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c7 _GetPrivateProfileIntA@16
[245](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ce _GetPrivateProfileIntW@16
[246](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006d5 _GetPrivateProfileSectionA@16
[247](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006dc _GetPrivateProfileSectionW@16
[248](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006e3 _GetPrivateProfileSectionNamesA@12
[249](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ea _GetPrivateProfileSectionNamesW@12
[250](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f1 _GetPrivateProfileStringA@24
[251](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f8 _GetPrivateProfileStringW@24
[252](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ff _GetPrivateProfileStructA@20
[253](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000706 _GetPrivateProfileStructW@20
[254](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000070d _GetProcAddress@8
[255](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000714 _GetProcessAffinityMask@12
[256](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000071b _GetProcessHeap@0
[257](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000720 _GetProcessHeaps@8
[258](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000727 _GetProcessPriorityBoost@8
[259](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000072e _GetProcessShutdownParameters@8
[260](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000735 _GetProcessTimes@20
[261](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000073c _GetProcessVersion@4
[262](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000743 _GetProcessWindowStation@0
[263](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000748 _GetProcessWorkingSetSize@12
[264](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000074f _GetProfileIntA@12
[265](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000756 _GetProfileIntW@12
[266](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000075d _GetProfileSectionA@12
[267](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000764 _GetProfileSectionW@12
[268](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000076b _GetProfileStringA@20
[269](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000772 _GetProfileStringW@20
[270](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000779 _GetQueuedCompletionStatus@20
[271](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000780 _GetSecurityDescriptorControl@12
[272](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000787 _GetSecurityDescriptorDacl@16
[273](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000078e _GetSecurityDescriptorGroup@12
[274](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000795 _GetSecurityDescriptorLength@4
[275](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000079c _GetSecurityDescriptorOwner@12
[276](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007a3 _GetSecurityDescriptorSacl@16
[277](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007aa _GetShortPathNameA@12
[278](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007b1 _GetShortPathNameW@12
[279](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007b8 _GetSidIdentifierAuthority@4
[280](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007bf _GetSidLengthRequired@4
[281](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007cf _GetSidSubAuthority@8
[282](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007d6 _GetSidSubAuthorityCount@4
[283](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007dd _GetStartupInfoA@4
[284](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007e4 _GetStartupInfoW@4
[285](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007eb _GetStdHandle@4
[286](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007f2 _GetSystemDirectoryA@8
[287](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007f9 _GetSystemDirectoryW@8
[288](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000800 _GetSystemInfo@4
[289](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000807 _GetSystemPowerStatus@4
[290](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000080e _GetSystemTime@4
[291](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000815 _GetSystemTimeAdjustment@12
[292](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000081c _GetSystemTimeAsFileTime@4
[293](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000823 _GetTapeParameters@16
[294](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000082a _GetTapePosition@20
[295](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000831 _GetTapeStatus@4
[296](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000838 _GetTempFileNameA@16
[297](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000083f _GetTempFileNameW@16
[298](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000846 _GetTempPathA@8
[299](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000084d _GetTempPathW@8
[300](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000854 _GetThreadContext@8
[301](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000085b _GetThreadPriority@4
[302](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000862 _GetThreadPriorityBoost@8
[303](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000869 _GetThreadSelectorEntry@12
[304](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000870 _GetThreadTimes@20
[305](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000877 _GetTickCount@0
[306](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000087c _GetTimeZoneInformation@4
[307](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000883 _GetTokenInformation@20
[308](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000088a _GetUserNameA@8
[309](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000891 _GetUserNameW@8
[310](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000898 _GetVersion@0
[311](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000089d _GetVersionExA@4
[312](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008a4 _GetVersionExW@4
[313](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ab _GetVolumeInformationA@32
[314](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008b2 _GetVolumeInformationW@32
[315](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008b9 _GetWindowsDirectoryA@8
[316](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008c0 _GetWindowsDirectoryW@8
[317](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008c7 _GetWindowThreadProcessId@8
[318](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ce _GetWriteWatch@24
[319](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008d5 _GlobalAddAtomA@4
[320](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008dc _GlobalAddAtomW@4
[321](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008e3 _GlobalAlloc@8
[322](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ea _GlobalCompact@4
[323](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008f1 _GlobalDeleteAtom@4
[324](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000902 _GlobalFindAtomA@4
[325](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000909 _GlobalFindAtomW@4
[326](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000910 _GlobalFix@4
[327](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000917 _GlobalFlags@4
[328](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000091e _GlobalFree@4
[329](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000925 _GlobalGetAtomNameA@12
[330](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000936 _GlobalGetAtomNameW@12
[331](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000947 _GlobalHandle@4
[332](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000094e _GlobalLock@4
[333](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000955 _GlobalMemoryStatus@4
[334](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000095c _GlobalReAlloc@12
[335](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000963 _GlobalSize@4
[336](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000096a _GlobalUnfix@4
[337](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000971 _GlobalUnlock@4
[338](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000978 _GlobalUnWire@4
[339](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000097f _GlobalWire@4
[340](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000986 _HeapAlloc@12
[341](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000098d _HeapCompact@8
[342](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000994 _HeapCreate@12
[343](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000099b _HeapDestroy@4
[344](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009a2 _HeapFree@12
[345](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009a9 _HeapLock@4
[346](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009b0 _HeapReAlloc@16
[347](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009b7 _HeapSize@12
[348](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009be _HeapUnlock@4
[349](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009c5 _HeapValidate@12
[350](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009cc _HeapWalk@8
[351](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009d3 _ImpersonateLoggedOnUser@4
[352](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009da _ImpersonateNamedPipeClient@4
[353](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009e1 _ImpersonateSelf@4
[354](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009e8 _InitAtomTable@4
[355](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009ef _InitializeAcl@12
[356](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009f6 _InitializeCriticalSection@4
[357](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009fd _InitializeCriticalSectionAndSpinCount@8
[358](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a04 _SetCriticalSectionSpinCount@8
[359](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a0b _InitializeSecurityDescriptor@8
[360](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a12 _InitializeSid@12
[361](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a22 _InterlockedCompareExchange@12
[362](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a29 _InterlockedDecrement@4
[363](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a30 _InterlockedExchange@8
[364](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a37 _InterlockedExchangeAdd@8
[365](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a3e _InterlockedIncrement@4
[366](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a45 _IsBadCodePtr@4
[367](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a4c _IsBadHugeReadPtr@8
[368](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a53 _IsBadHugeWritePtr@8
[369](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a5a _IsBadReadPtr@8
[370](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a61 _IsBadStringPtrA@8
[371](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a68 _IsBadStringPtrW@8
[372](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a6f _IsBadWritePtr@8
[373](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a76 _IsDebuggerPresent@0
[374](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a7b _IsProcessorFeaturePresent@4
[375](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a82 _IsSystemResumeAutomatic@0
[376](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a87 _IsTextUnicode@12
[377](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a8e _IsValidAcl@4
[378](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a95 _IsValidSecurityDescriptor@4
[379](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a9c _IsValidSid@4
[380](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000aa3 _LeaveCriticalSection@4
[381](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000aaa _LoadLibraryA@4
[382](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ab1 _LoadLibraryExA@12
[383](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ab8 _LoadLibraryExW@12
[384](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000abf _LoadLibraryW@4
[385](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ac6 _LoadModule@8
[386](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000acd _LoadResource@8
[387](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ad4 _LocalAlloc@8
[388](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000adb _LocalCompact@4
[389](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ae2 _LocalFileTimeToFileTime@8
[390](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ae9 _LocalFlags@4
[391](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000af0 _LocalFree@4
[392](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000af7 _LocalHandle@4
[393](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000afe _LocalLock@4
[394](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b05 _LocalReAlloc@12
[395](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b0c _LocalShrink@8
[396](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b13 _LocalSize@4
[397](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b1a _LocalUnlock@4
[398](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b21 _LockFile@20
[399](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b28 _LockFileEx@24
[400](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b2f _LockResource@4
[401](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b36 _LogonUserA@24
[402](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b3d _LogonUserW@24
[403](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b44 _LookupAccountNameA@28
[404](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b4b _LookupAccountNameW@28
[405](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b52 _LookupAccountSidA@28
[406](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b59 _LookupAccountSidW@28
[407](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b60 _LookupPrivilegeDisplayNameA@20
[408](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b67 _LookupPrivilegeDisplayNameW@20
[409](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b6e _LookupPrivilegeNameA@16
[410](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b75 _LookupPrivilegeNameW@16
[411](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b7c _LookupPrivilegeValueA@12
[412](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b83 _LookupPrivilegeValueW@12
[413](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b8a _lstrcatA@8
[414](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b91 _lstrcatW@8
[415](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b98 _lstrcmpA@8
[416](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b9f _lstrcmpiA@8
[417](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ba6 _lstrcmpiW@8
[418](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bad _lstrcmpW@8
[419](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bb4 _lstrcpyA@8
[420](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bbb _lstrcpynA@12
[421](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bc2 _lstrcpynW@12
[422](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bc9 _lstrcpyW@8
[423](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bd0 _lstrlenA@4
[424](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bd7 _lstrlenW@4
[425](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bde _MakeAbsoluteSD@44
[426](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000be5 _MakeSelfRelativeSD@12
[427](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bec _MapGenericMask@8
[428](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bf3 _MapViewOfFile@20
[429](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bfa _MapViewOfFileEx@24
[430](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c01 _MoveFileA@8
[431](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c08 _MoveFileExA@12
[432](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c0f _MoveFileExW@12
[433](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c16 _MoveFileW@8
[434](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c1d _MulDiv@12
[435](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c24 _NotifyChangeEventLog@8
[436](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c2b _ObjectCloseAuditAlarmA@12
[437](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c32 _ObjectCloseAuditAlarmW@12
[438](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c39 _ObjectDeleteAuditAlarmA@12
[439](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c40 _ObjectDeleteAuditAlarmW@12
[440](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c47 _ObjectOpenAuditAlarmA@48
[441](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c4e _ObjectOpenAuditAlarmW@48
[442](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c55 _ObjectPrivilegeAuditAlarmA@24
[443](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c5c _ObjectPrivilegeAuditAlarmW@24
[444](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c63 _OpenBackupEventLogA@8
[445](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c6a _OpenBackupEventLogW@8
[446](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c71 _OpenEventA@12
[447](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c78 _OpenEventLogA@8
[448](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c7f _OpenEventLogW@8
[449](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c86 _OpenEventW@12
[450](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c8d _OpenFile@12
[451](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c94 _OpenFileMappingA@12
[452](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c9b _OpenFileMappingW@12
[453](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ca2 _OpenMutexA@12
[454](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ca9 _OpenMutexW@12
[455](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cb0 _OpenProcess@12
[456](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cb7 _OpenProcessToken@12
[457](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cbe _OpenSemaphoreA@12
[458](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cc5 _OpenSemaphoreW@12
[459](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ccc _OpenThreadToken@16
[460](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cd3 _OpenWaitableTimerA@12
[461](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cda _OpenWaitableTimerW@12
[462](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ce1 _OutputDebugStringA@4
[463](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ce8 _OutputDebugStringW@4
[464](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cef _PeekNamedPipe@24
[465](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cf6 _PostQueuedCompletionStatus@16
[466](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cfd _PrepareTape@12
[467](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d04 _PrivilegeCheck@12
[468](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d0b _PrivilegedServiceAuditAlarmA@20
[469](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d12 _PrivilegedServiceAuditAlarmW@20
[470](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d19 _PulseEvent@4
[471](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d20 _PurgeComm@8
[472](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d27 _QueryDosDeviceA@12
[473](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d2e _QueryDosDeviceW@12
[474](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d35 _QueryPerformanceCounter@4
[475](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d3c _QueryPerformanceFrequency@4
[476](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d43 _QueueUserAPC@12
[477](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d4a _RaiseException@16
[478](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d51 _ReadDirectoryChangesW@32
[479](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d58 _ReadEventLogA@28
[480](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d5f _ReadEventLogW@28
[481](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d66 _ReadFile@20
[482](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d6d _ReadFileEx@20
[483](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d74 _ReadFileScatter@20
[484](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d7b _ReadProcessMemory@20
[485](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d82 _RegisterEventSourceA@8
[486](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d89 _RegisterEventSourceW@8
[487](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d90 _ReleaseMutex@4
[488](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d97 _ReleaseSemaphore@12
[489](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d9e _RemoveDirectoryA@4
[490](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000da5 _RemoveDirectoryW@4
[491](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dac _ReportEventA@36
[492](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dcb _ReportEventW@36
[493](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dea _ResetEvent@4
[494](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000df1 _ResetWriteWatch@8
[495](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000df8 _ResumeThread@4
[496](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dff _RevertToSelf@0
[497](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e04 _SearchPathA@24
[498](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e0b _SearchPathW@24
[499](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e12 _SetAclInformation@16
[500](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e19 _SetCommBreak@4
[501](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e20 _SetCommConfig@12
[502](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e27 _SetCommMask@8
[503](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e2e _SetCommState@8
[504](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e35 _SetCommTimeouts@8
[505](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e3c _SetComputerNameA@4
[506](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e43 _SetComputerNameW@4
[507](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e4a _SetCurrentDirectoryA@4
[508](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e51 _SetCurrentDirectoryW@4
[509](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e58 _SetDefaultCommConfigA@12
[510](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e5f _SetDefaultCommConfigW@12
[511](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e66 _SetEndOfFile@4
[512](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e6d _SetEnvironmentVariableA@8
[513](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e74 _SetEnvironmentVariableW@8
[514](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e7b _SetErrorMode@4
[515](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e82 _SetEvent@4
[516](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e89 _SetFileApisToANSI@0
[517](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e8e _SetFileApisToOEM@0
[518](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e93 _SetFileAttributesA@8
[519](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e9a _SetFileAttributesW@8
[520](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ea1 _SetFilePointer@16
[521](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ea8 _SetFilePointerEx@20
[522](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000eaf _SetFileSecurityA@12
[523](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000eb6 _SetFileSecurityW@12
[524](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ebd _SetFileTime@16
[525](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ec4 _SetHandleCount@4
[526](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ecb _SetHandleInformation@12
[527](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ed2 _SetKernelObjectSecurity@12
[528](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ed9 _SetLastError@4
[529](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ee0 _SetLastErrorEx@8
[530](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ee7 _SetLocalTime@4
[531](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000eee _SetMailslotInfo@8
[532](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ef5 _SetNamedPipeHandleState@16
[533](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000efc _SetPriorityClass@8
[534](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f03 _SetPrivateObjectSecurity@20
[535](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f0a _SetProcessAffinityMask@8
[536](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f11 _SetProcessPriorityBoost@8
[537](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f18 _SetProcessShutdownParameters@8
[538](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f1f _SetProcessWorkingSetSize@12
[539](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f26 _SetSecurityDescriptorControl@12
[540](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f3e _SetSecurityDescriptorDacl@16
[541](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f45 _SetSecurityDescriptorGroup@12
[542](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f4c _SetSecurityDescriptorOwner@12
[543](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f53 _SetSecurityDescriptorSacl@16
[544](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f5a _SetStdHandle@8
[545](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f61 _SetSystemPowerState@8
[546](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f68 _SetSystemTime@4
[547](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f6f _SetSystemTimeAdjustment@8
[548](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f76 _SetTapeParameters@12
[549](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f7d _SetTapePosition@24
[550](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f84 _SetThreadAffinityMask@8
[551](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f8b _SetThreadContext@8
[552](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f92 _SetThreadIdealProcessor@8
[553](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000f99 _SetThreadPriority@8
[554](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fa0 _SetThreadPriorityBoost@8
[555](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fa7 _SetThreadToken@8
[556](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fae _SetTimeZoneInformation@4
[557](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fb5 _SetTokenInformation@16
[558](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fbc _SetUnhandledExceptionFilter@4
[559](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fc3 _SetupComm@12
[560](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fca _SetVolumeLabelA@8
[561](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fd1 _SetVolumeLabelW@8
[562](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fd8 _SetWaitableTimer@24
[563](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fdf _SignalObjectAndWait@16
[564](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fe6 _SizeofResource@8
[565](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000fed _Sleep@4
[566](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ff4 _SleepEx@8
[567](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ffb _SuspendThread@4
[568](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001002 _SwitchToFiber@4
[569](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001009 _SwitchToThread@0
[570](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000100e _SystemTimeToFileTime@8
[571](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001015 _SystemTimeToTzSpecificLocalTime@12
[572](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000101c _TerminateProcess@8
[573](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001023 _TerminateThread@8
[574](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000102a _TlsAlloc@0
[575](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000102f _TlsFree@4
[576](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001036 _TlsGetValue@4
[577](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000103d _TlsSetValue@8
[578](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001044 _TransactNamedPipe@28
[579](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000104b _TransmitCommChar@8
[580](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000105b _TryEnterCriticalSection@4
[581](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001062 _UnhandledExceptionFilter@4
[582](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001069 _UnlockFile@20
[583](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001070 _UnlockFileEx@20
[584](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001077 _UnmapViewOfFile@4
[585](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000107e _UpdateResourceA@24
[586](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000108f _UpdateResourceW@24
[587](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010a0 _VerifyVersionInfoA@16
[588](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010a7 _VerifyVersionInfoW@16
[589](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010ae _VirtualAlloc@16
[590](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010b5 _VirtualAllocEx@20
[591](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010bc _VirtualFree@12
[592](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010c3 _VirtualFreeEx@16
[593](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010ca _VirtualLock@8
[594](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010d1 _VirtualProtect@16
[595](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010d8 _VirtualProtectEx@20
[596](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010df _VirtualQuery@12
[597](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010e6 _VirtualQueryEx@16
[598](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010ed _VirtualUnlock@8
[599](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010f4 _WaitCommEvent@12
[600](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000010fb _WaitForDebugEvent@8
[601](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001102 _WaitForMultipleObjects@16
[602](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001109 _WaitForMultipleObjectsEx@20
[603](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001110 _WaitForSingleObject@8
[604](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001117 _WaitForSingleObjectEx@12
[605](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000111e _WaitNamedPipeA@8
[606](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001125 _WaitNamedPipeW@8
[607](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000112c _WinLoadTrustProvider@4
[608](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001133 _WriteFile@20
[609](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000113a _WriteFileEx@20
[610](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001141 _WriteFileGather@20
[611](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001148 _WritePrivateProfileSectionA@12
[612](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000114f _WritePrivateProfileSectionW@12
[613](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001156 _WritePrivateProfileStringA@16
[614](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000115d _WritePrivateProfileStringW@16
[615](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001164 _WritePrivateProfileStructA@20
[616](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000116b _WritePrivateProfileStructW@20
[617](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001172 _WriteProcessMemory@20
[618](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001179 _WriteProfileSectionA@8
[619](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001180 _WriteProfileSectionW@8
[620](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001187 _WriteProfileStringA@12
[621](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000118e _WriteProfileStringW@12
[622](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001195 _WriteTapemark@16
[623](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000119c _AllocConsole@0
[624](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011a1 _CreateConsoleScreenBuffer@20
[625](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011a8 _FillConsoleOutputAttribute@20
[626](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011b9 _FillConsoleOutputCharacterA@20
[627](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011c9 _FillConsoleOutputCharacterW@20
[628](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011da _FlushConsoleInputBuffer@4
[629](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011e1 _FreeConsole@0
[630](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011e6 _GenerateConsoleCtrlEvent@8
[631](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011ed _GetConsoleCP@0
[632](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011f2 _GetConsoleCursorInfo@8
[633](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000011f9 _GetConsoleMode@8
[634](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001200 _GetConsoleOutputCP@0
[635](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001205 _GetConsoleScreenBufferInfo@8
[636](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000120c _GetConsoleTitleA@8
[637](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001213 _GetConsoleTitleW@8
[638](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000121a _GetLargestConsoleWindowSize@4
[639](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001221 _GetNumberOfConsoleInputEvents@8
[640](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001228 _GetNumberOfConsoleMouseButtons@4
[641](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000122f _PeekConsoleInputA@16
[642](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001236 _PeekConsoleInputW@16
[643](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000123d _ReadConsoleA@20
[644](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001244 _ReadConsoleW@20
[645](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000124b _ReadConsoleInputA@16
[646](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001252 _ReadConsoleInputW@16
[647](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001259 _ReadConsoleOutputAttribute@20
[648](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001260 _ReadConsoleOutputCharacterA@20
[649](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001267 _ReadConsoleOutputCharacterW@20
[650](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000126e _ReadConsoleOutputA@20
[651](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001275 _ReadConsoleOutputW@20
[652](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000127c _ScrollConsoleScreenBufferA@20
[653](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001283 _ScrollConsoleScreenBufferW@20
[654](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000128a _SetConsoleActiveScreenBuffer@4
[655](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001291 _SetConsoleCP@4
[656](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001298 _SetConsoleCtrlHandler@8
[657](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000129f _SetConsoleCursorInfo@8
[658](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012a6 _SetConsoleCursorPosition@8
[659](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012ad _SetConsoleMode@8
[660](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012b4 _SetConsoleOutputCP@4
[661](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012bb _SetConsoleScreenBufferSize@8
[662](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012c2 _SetConsoleTextAttribute@8
[663](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012d3 _SetConsoleTitleA@4
[664](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012da _SetConsoleTitleW@4
[665](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012e1 _SetConsoleWindowInfo@12
[666](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012e8 _WriteConsoleA@20
[667](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012ef _WriteConsoleW@20
[668](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012f6 _WriteConsoleInputA@16
[669](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000012fd _WriteConsoleInputW@16
[670](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001304 _WriteConsoleOutputA@20
[671](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000130b _WriteConsoleOutputW@20
[672](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001312 _WriteConsoleOutputAttribute@20
[673](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001319 _WriteConsoleOutputCharacterA@20
[674](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00001320 _WriteConsoleOutputCharacterW@20
[675](sec  1)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .text
AUX scnlen 0x1327 nreloc 0 nlnno 0
[677](sec  2)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .data
AUX scnlen 0x0 nreloc 0 nlnno 0
[679](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .bss
AUX scnlen 0x0 nreloc 0 nlnno 0
[681](sec  4)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stab
AUX scnlen 0x10710 nreloc 677 nlnno 0
[683](sec  5)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stabstr
AUX scnlen 0x1aa75 nreloc 0 nlnno 0


/cygdrive/c/cg/projects/recstudio4/support/win32api/kernel32.c:
typedef int32 int;
typedef int8 char;
typedef int32 long int;
typedef uint32 unsigned int;
typedef uint32 long unsigned int;
typedef int64 long long int;
typedef uint64 long long unsigned int;
typedef int16 short int;
typedef uint16 short unsigned int;
typedef int8 signed char;
typedef uint8 unsigned char;
typedef float float;
typedef double double;
typedef float96 long double;
typedef struct %anon1 { /* size 8 */
  int real; /* bitsize 32, bitpos 0 */
  int imag; /* bitsize 32, bitpos 32 */
} complex int;
typedef complex float0 complex float;
typedef complex float0 complex double;
typedef complex float0 complex long double;
typedef void void;
typedef char *__builtin_va_list;
typedef bool32 boolean;
typedef boolean _Bool;
struct _EXCEPTION_REGISTRATION_RECORD { /* id 0 */
};
#pragma cconv __stdcall
 /usr/include/w32api/windef.h:
typedef long unsigned int DWORD;
typedef int WINBOOL;
typedef int *PWINBOOL;
typedef int *LPWINBOOL;
typedef WINBOOL BOOL;
typedef unsigned char BYTE;
typedef BOOL *PBOOL;
typedef BOOL *LPBOOL;
typedef short unsigned int WORD;
typedef float FLOAT;
typedef FLOAT *PFLOAT;
typedef BYTE *PBYTE;
typedef BYTE *LPBYTE;
typedef int *PINT;
typedef int *LPINT;
typedef WORD *PWORD;
typedef WORD *LPWORD;
typedef long int *LPLONG;
typedef DWORD *PDWORD;
typedef DWORD *LPDWORD;
typedef void const *PCVOID;
typedef void const *LPCVOID;
typedef int INT;
typedef unsigned int UINT;
typedef unsigned int *PUINT;
typedef unsigned int *LPUINT;
typedef unsigned int WPARAM;
typedef long int LPARAM;
typedef long int LRESULT;
typedef long int HRESULT;
typedef WORD ATOM;
typedef void *HGLOBAL;
typedef void *HLOCAL;
typedef void *GLOBALHANDLE;
typedef void *LOCALHANDLE;
typedef void *HGDIOBJ;
struct HACCEL__ { /* size 4 id 2 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HACCEL__ /* id 2 */ *HACCEL;
struct HBITMAP__ { /* size 4 id 3 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBITMAP__ /* id 3 */ *HBITMAP;
struct HBRUSH__ { /* size 4 id 4 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBRUSH__ /* id 4 */ *HBRUSH;
struct HCOLORSPACE__ { /* size 4 id 5 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HCOLORSPACE__ /* id 5 */ *HCOLORSPACE;
struct HDC__ { /* size 4 id 6 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDC__ /* id 6 */ *HDC;
struct HGLRC__ { /* size 4 id 7 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HGLRC__ /* id 7 */ *HGLRC;
struct HDESK__ { /* size 4 id 8 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDESK__ /* id 8 */ *HDESK;
struct HENHMETAFILE__ { /* size 4 id 9 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HENHMETAFILE__ /* id 9 */ *HENHMETAFILE;
struct HFONT__ { /* size 4 id 10 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HFONT__ /* id 10 */ *HFONT;
struct HICON__ { /* size 4 id 11 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HICON__ /* id 11 */ *HICON;
struct HKEY__ { /* size 4 id 12 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKEY__ /* id 12 */ *HKEY;
struct HMONITOR__ { /* size 4 id 13 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMONITOR__ /* id 13 */ *HMONITOR;
struct HTERMINAL__ { /* size 4 id 14 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTERMINAL__ /* id 14 */ *HTERMINAL;
struct HWINEVENTHOOK__ { /* size 4 id 15 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINEVENTHOOK__ /* id 15 */ *HWINEVENTHOOK;
typedef HKEY *PHKEY;
struct HMENU__ { /* size 4 id 16 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMENU__ /* id 16 */ *HMENU;
struct HMETAFILE__ { /* size 4 id 17 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMETAFILE__ /* id 17 */ *HMETAFILE;
struct HINSTANCE__ { /* size 4 id 18 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HINSTANCE__ /* id 18 */ *HINSTANCE;
typedef HINSTANCE HMODULE;
struct HPALETTE__ { /* size 4 id 19 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPALETTE__ /* id 19 */ *HPALETTE;
struct HPEN__ { /* size 4 id 20 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPEN__ /* id 20 */ *HPEN;
struct HRGN__ { /* size 4 id 21 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRGN__ /* id 21 */ *HRGN;
struct HRSRC__ { /* size 4 id 22 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRSRC__ /* id 22 */ *HRSRC;
struct HSTR__ { /* size 4 id 23 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HSTR__ /* id 23 */ *HSTR;
struct HTASK__ { /* size 4 id 24 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTASK__ /* id 24 */ *HTASK;
struct HWND__ { /* size 4 id 25 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWND__ /* id 25 */ *HWND;
struct HWINSTA__ { /* size 4 id 26 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINSTA__ /* id 26 */ *HWINSTA;
struct HKL__ { /* size 4 id 27 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKL__ /* id 27 */ *HKL;
typedef int HFILE;
typedef HICON HCURSOR;
typedef DWORD COLORREF;
typedef int (*FARPROC) (/* unknown */);
typedef int (*NEARPROC) (/* unknown */);
typedef int (*PROC) (/* unknown */);
struct tagRECT { /* size 16 id 28 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECT /* id 28 */ RECT;
typedef struct tagRECT /* id 28 */ *PRECT;
typedef struct tagRECT /* id 28 */ *LPRECT;
typedef RECT const *LPCRECT;
struct tagRECTL { /* size 16 id 29 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECTL /* id 29 */ RECTL;
typedef struct tagRECTL /* id 29 */ *PRECTL;
typedef struct tagRECTL /* id 29 */ *LPRECTL;
typedef RECTL const *LPCRECTL;
struct tagPOINT { /* size 8 id 30 */
  long int x; /* bitsize 32, bitpos 0 */
  long int y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINT /* id 30 */ POINT;
typedef struct tagPOINT /* id 30 */ POINTL;
typedef struct tagPOINT /* id 30 */ *PPOINT;
typedef struct tagPOINT /* id 30 */ *LPPOINT;
typedef struct tagPOINT /* id 30 */ *PPOINTL;
typedef struct tagPOINT /* id 30 */ *LPPOINTL;
struct tagSIZE { /* size 8 id 31 */
  long int cx; /* bitsize 32, bitpos 0 */
  long int cy; /* bitsize 32, bitpos 32 */
};
typedef struct tagSIZE /* id 31 */ SIZE;
typedef struct tagSIZE /* id 31 */ SIZEL;
typedef struct tagSIZE /* id 31 */ *PSIZE;
typedef struct tagSIZE /* id 31 */ *LPSIZE;
typedef struct tagSIZE /* id 31 */ *PSIZEL;
typedef struct tagSIZE /* id 31 */ *LPSIZEL;
struct tagPOINTS { /* size 4 id 32 */
  short int x; /* bitsize 16, bitpos 0 */
  short int y; /* bitsize 16, bitpos 16 */
};
typedef struct tagPOINTS /* id 32 */ POINTS;
typedef struct tagPOINTS /* id 32 */ *PPOINTS;
typedef struct tagPOINTS /* id 32 */ *LPPOINTS;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/winnt.h:
typedef char CHAR;
typedef short int SHORT;
typedef long int LONG;
typedef char CCHAR;
typedef char *PCCHAR;
typedef unsigned char UCHAR;
typedef unsigned char *PUCHAR;
typedef short unsigned int USHORT;
typedef short unsigned int *PUSHORT;
typedef long unsigned int ULONG;
typedef long unsigned int *PULONG;
typedef char *PSZ;
typedef void *PVOID;
typedef void *LPVOID;
typedef void *PVOID64;
typedef short unsigned int wchar_t;
typedef wchar_t WCHAR;
typedef WCHAR *PWCHAR;
typedef WCHAR *LPWCH;
typedef WCHAR *PWCH;
typedef WCHAR *NWPSTR;
typedef WCHAR *LPWSTR;
typedef WCHAR *PWSTR;
typedef WCHAR const *LPCWCH;
typedef WCHAR const *PCWCH;
typedef WCHAR const *LPCWSTR;
typedef WCHAR const *PCWSTR;
typedef CHAR *PCHAR;
typedef CHAR *LPCH;
typedef CHAR *PCH;
typedef CHAR *NPSTR;
typedef CHAR *LPSTR;
typedef CHAR *PSTR;
typedef CHAR const *LPCCH;
typedef CHAR const *PCSTR;
typedef CHAR const *LPCSTR;
typedef CHAR TCHAR;
typedef CHAR _TCHAR;
typedef TCHAR TBYTE;
typedef TCHAR *PTCH;
typedef TCHAR *PTBYTE;
typedef TCHAR *LPTCH;
typedef TCHAR *PTSTR;
typedef TCHAR *LPTSTR;
typedef TCHAR *LP;
typedef TCHAR *PTCHAR;
typedef TCHAR const *LPCTSTR;
typedef SHORT *PSHORT;
typedef LONG *PLONG;
typedef void *HANDLE;
typedef HANDLE *PHANDLE;
typedef HANDLE *LPHANDLE;
typedef DWORD LCID;
typedef PDWORD PLCID;
typedef WORD LANGID;
typedef long long int LONGLONG;
typedef long long unsigned int DWORDLONG;
typedef LONGLONG *PLONGLONG;
typedef DWORDLONG *PDWORDLONG;
typedef DWORDLONG ULONGLONG;
typedef DWORDLONG *PULONGLONG;
typedef LONGLONG USN;
typedef BYTE BOOLEAN;
typedef BYTE *PBOOLEAN;
typedef BYTE FCHAR;
typedef WORD FSHORT;
typedef DWORD FLONG;
typedef DWORD ACCESS_MASK;
typedef DWORD *PACCESS_MASK;
struct _GUID { /* size 16 id 33 */
  long unsigned int Data1; /* bitsize 32, bitpos 0 */
  short unsigned int Data2; /* bitsize 16, bitpos 32 */
  short unsigned int Data3; /* bitsize 16, bitpos 48 */
  unsigned char Data4[8]:uint32; /* bitsize 64, bitpos 64 */
};
typedef struct _GUID /* id 33 */ GUID;
typedef struct _GUID /* id 33 */ *REFGUID;
typedef struct _GUID /* id 33 */ *LPGUID;
struct _GENERIC_MAPPING { /* size 16 id 34 */
  ACCESS_MASK GenericRead; /* bitsize 32, bitpos 0 */
  ACCESS_MASK GenericWrite; /* bitsize 32, bitpos 32 */
  ACCESS_MASK GenericExecute; /* bitsize 32, bitpos 64 */
  ACCESS_MASK GenericAll; /* bitsize 32, bitpos 96 */
};
typedef struct _GENERIC_MAPPING /* id 34 */ GENERIC_MAPPING;
typedef struct _GENERIC_MAPPING /* id 34 */ *PGENERIC_MAPPING;
struct _ACE_HEADER { /* size 4 id 35 */
  BYTE AceType; /* bitsize 8, bitpos 0 */
  BYTE AceFlags; /* bitsize 8, bitpos 8 */
  WORD AceSize; /* bitsize 16, bitpos 16 */
};
typedef struct _ACE_HEADER /* id 35 */ ACE_HEADER;
typedef struct _ACE_HEADER /* id 35 */ *PACE_HEADER;
struct _ACCESS_ALLOWED_ACE { /* size 12 id 36 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ *PACCESS_ALLOWED_ACE;
struct _ACCESS_DENIED_ACE { /* size 12 id 37 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_DENIED_ACE /* id 37 */ ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_ACE /* id 37 */ *PACCESS_DENIED_ACE;
struct _SYSTEM_AUDIT_ACE { /* size 12 id 38 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_AUDIT_ACE /* id 38 */ SYSTEM_AUDIT_ACE;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
struct _SYSTEM_ALARM_ACE { /* size 12 id 39 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ SYSTEM_ALARM_ACE;
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ *PSYSTEM_ALARM_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE { /* size 48 id 40 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ *PACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE { /* size 48 id 41 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ ACCESS_DENIED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ *PACCESS_DENIED_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE { /* size 48 id 42 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ SYSTEM_AUDIT_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ *PSYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE { /* size 48 id 43 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ SYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ *PSYSTEM_ALARM_OBJECT_ACE;
struct _ACL { /* size 8 id 44 */
  BYTE AclRevision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  WORD AclSize; /* bitsize 16, bitpos 16 */
  WORD AceCount; /* bitsize 16, bitpos 32 */
  WORD Sbz2; /* bitsize 16, bitpos 48 */
};
typedef struct _ACL /* id 44 */ ACL;
typedef struct _ACL /* id 44 */ *PACL;
struct _ACL_REVISION_INFORMATION { /* size 4 id 45 */
  DWORD AclRevision; /* bitsize 32, bitpos 0 */
};
typedef struct _ACL_REVISION_INFORMATION /* id 45 */ ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION { /* size 12 id 46 */
  DWORD AceCount; /* bitsize 32, bitpos 0 */
  DWORD AclBytesInUse; /* bitsize 32, bitpos 32 */
  DWORD AclBytesFree; /* bitsize 32, bitpos 64 */
};
typedef struct _ACL_SIZE_INFORMATION /* id 46 */ ACL_SIZE_INFORMATION;
struct _FLOATING_SAVE_AREA { /* size 112 id 47 */
  DWORD ControlWord; /* bitsize 32, bitpos 0 */
  DWORD StatusWord; /* bitsize 32, bitpos 32 */
  DWORD TagWord; /* bitsize 32, bitpos 64 */
  DWORD ErrorOffset; /* bitsize 32, bitpos 96 */
  DWORD ErrorSelector; /* bitsize 32, bitpos 128 */
  DWORD DataOffset; /* bitsize 32, bitpos 160 */
  DWORD DataSelector; /* bitsize 32, bitpos 192 */
  BYTE RegisterArea[80]:uint32; /* bitsize 640, bitpos 224 */
  DWORD Cr0NpxState; /* bitsize 32, bitpos 864 */
};
typedef struct _FLOATING_SAVE_AREA /* id 47 */ FLOATING_SAVE_AREA;
struct _CONTEXT { /* size 716 id 48 */
  DWORD ContextFlags; /* bitsize 32, bitpos 0 */
  DWORD Dr0; /* bitsize 32, bitpos 32 */
  DWORD Dr1; /* bitsize 32, bitpos 64 */
  DWORD Dr2; /* bitsize 32, bitpos 96 */
  DWORD Dr3; /* bitsize 32, bitpos 128 */
  DWORD Dr6; /* bitsize 32, bitpos 160 */
  DWORD Dr7; /* bitsize 32, bitpos 192 */
  FLOATING_SAVE_AREA FloatSave; /* bitsize 896, bitpos 224 */
  DWORD SegGs; /* bitsize 32, bitpos 1120 */
  DWORD SegFs; /* bitsize 32, bitpos 1152 */
  DWORD SegEs; /* bitsize 32, bitpos 1184 */
  DWORD SegDs; /* bitsize 32, bitpos 1216 */
  DWORD Edi; /* bitsize 32, bitpos 1248 */
  DWORD Esi; /* bitsize 32, bitpos 1280 */
  DWORD Ebx; /* bitsize 32, bitpos 1312 */
  DWORD Edx; /* bitsize 32, bitpos 1344 */
  DWORD Ecx; /* bitsize 32, bitpos 1376 */
  DWORD Eax; /* bitsize 32, bitpos 1408 */
  DWORD Ebp; /* bitsize 32, bitpos 1440 */
  DWORD Eip; /* bitsize 32, bitpos 1472 */
  DWORD SegCs; /* bitsize 32, bitpos 1504 */
  DWORD EFlags; /* bitsize 32, bitpos 1536 */
  DWORD Esp; /* bitsize 32, bitpos 1568 */
  DWORD SegSs; /* bitsize 32, bitpos 1600 */
  BYTE ExtendedRegisters[512]:uint32; /* bitsize 4096, bitpos 1632 */
};
typedef struct _CONTEXT /* id 48 */ CONTEXT;
typedef CONTEXT *PCONTEXT;
typedef CONTEXT *LPCONTEXT;
struct _EXCEPTION_RECORD { /* size 80 id 49 */
  DWORD ExceptionCode; /* bitsize 32, bitpos 0 */
  DWORD ExceptionFlags; /* bitsize 32, bitpos 32 */
  struct _EXCEPTION_RECORD /* id 49 */ *ExceptionRecord; /* bitsize 32, bitpos 64 */
  PVOID ExceptionAddress; /* bitsize 32, bitpos 96 */
  DWORD NumberParameters; /* bitsize 32, bitpos 128 */
  DWORD ExceptionInformation[15]:uint32; /* bitsize 480, bitpos 160 */
};
typedef struct _EXCEPTION_RECORD /* id 49 */ EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *LPEXCEPTION_RECORD;
struct _EXCEPTION_POINTERS { /* size 8 id 50 */
  PEXCEPTION_RECORD ExceptionRecord; /* bitsize 32, bitpos 0 */
  PCONTEXT ContextRecord; /* bitsize 32, bitpos 32 */
};
typedef struct _EXCEPTION_POINTERS /* id 50 */ EXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *LPEXCEPTION_POINTERS;
union _LARGE_INTEGER { /* size 8 id 51 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  LONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _LARGE_INTEGER /* id 51 */ LARGE_INTEGER;
typedef union _LARGE_INTEGER /* id 51 */ *PLARGE_INTEGER;
union _ULARGE_INTEGER { /* size 8 id 53 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  ULONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _ULARGE_INTEGER /* id 53 */ ULARGE_INTEGER;
typedef union _ULARGE_INTEGER /* id 53 */ *PULARGE_INTEGER;
struct _LUID { /* size 8 id 55 */
  DWORD LowPart; /* bitsize 32, bitpos 0 */
  LONG HighPart; /* bitsize 32, bitpos 32 */
};
typedef struct _LUID /* id 55 */ LUID;
typedef struct _LUID /* id 55 */ *PLUID;
struct _LUID_AND_ATTRIBUTES { /* size 12 id 56 */
  LUID Luid; /* bitsize 64, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
};
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ LUID_AND_ATTRIBUTES;
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ *PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
struct _PRIVILEGE_SET { /* size 20 id 57 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  DWORD Control; /* bitsize 32, bitpos 32 */
  LUID_AND_ATTRIBUTES Privilege[1]:uint32; /* bitsize 96, bitpos 64 */
};
typedef struct _PRIVILEGE_SET /* id 57 */ PRIVILEGE_SET;
typedef struct _PRIVILEGE_SET /* id 57 */ *PPRIVILEGE_SET;
struct _SECURITY_ATTRIBUTES { /* size 12 id 58 */
  DWORD nLength; /* bitsize 32, bitpos 0 */
  LPVOID lpSecurityDescriptor; /* bitsize 32, bitpos 32 */
  BOOL bInheritHandle; /* bitsize 32, bitpos 64 */
};
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ SECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *PSECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *LPSECURITY_ATTRIBUTES;
enum _SECURITY_IMPERSONATION_LEVEL { SecurityAnonymous, SecurityIdentification, SecurityImpersonation, SecurityDelegation };
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
struct _SECURITY_QUALITY_OF_SERVICE { /* size 12 id 59 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 32 */
  SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode; /* bitsize 8, bitpos 64 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 72 */
};
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ SECURITY_QUALITY_OF_SERVICE;
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ *PSECURITY_QUALITY_OF_SERVICE;
typedef PVOID PACCESS_TOKEN;
struct _SE_IMPERSONATION_STATE { /* size 12 id 60 */
  PACCESS_TOKEN Token; /* bitsize 32, bitpos 0 */
  BOOLEAN CopyOnOpen; /* bitsize 8, bitpos 32 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 40 */
  SECURITY_IMPERSONATION_LEVEL Level; /* bitsize 32, bitpos 64 */
};
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ SE_IMPERSONATION_STATE;
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ *PSE_IMPERSONATION_STATE;
struct _SID_IDENTIFIER_AUTHORITY { /* size 6 id 61 */
  BYTE Value[6]:uint32; /* bitsize 48, bitpos 0 */
};
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ SID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *LPSID_IDENTIFIER_AUTHORITY;
typedef PVOID PSID;
struct _SID { /* size 12 id 62 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE SubAuthorityCount; /* bitsize 8, bitpos 8 */
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority; /* bitsize 48, bitpos 16 */
  DWORD SubAuthority[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _SID /* id 62 */ SID;
typedef struct _SID /* id 62 */ *PISID;
struct _SID_AND_ATTRIBUTES { /* size 8 id 63 */
  PSID Sid; /* bitsize 32, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 32 */
};
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ SID_AND_ATTRIBUTES;
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ *PSID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
struct _TOKEN_SOURCE { /* size 16 id 64 */
  CHAR SourceName[8]:uint32; /* bitsize 64, bitpos 0 */
  LUID SourceIdentifier; /* bitsize 64, bitpos 64 */
};
typedef struct _TOKEN_SOURCE /* id 64 */ TOKEN_SOURCE;
typedef struct _TOKEN_SOURCE /* id 64 */ *PTOKEN_SOURCE;
struct _TOKEN_CONTROL { /* size 40 id 65 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LUID ModifiedId; /* bitsize 64, bitpos 128 */
  TOKEN_SOURCE TokenSource; /* bitsize 128, bitpos 192 */
};
typedef struct _TOKEN_CONTROL /* id 65 */ TOKEN_CONTROL;
typedef struct _TOKEN_CONTROL /* id 65 */ *PTOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL { /* size 4 id 66 */
  PACL DefaultDacl; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ *PTOKEN_DEFAULT_DACL;
struct _TOKEN_GROUPS { /* size 12 id 67 */
  DWORD GroupCount; /* bitsize 32, bitpos 0 */
  SID_AND_ATTRIBUTES Groups[1]:uint32; /* bitsize 64, bitpos 32 */
};
typedef struct _TOKEN_GROUPS /* id 67 */ TOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *PTOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *LPTOKEN_GROUPS;
struct _TOKEN_OWNER { /* size 4 id 68 */
  PSID Owner; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_OWNER /* id 68 */ TOKEN_OWNER;
typedef struct _TOKEN_OWNER /* id 68 */ *PTOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP { /* size 4 id 69 */
  PSID PrimaryGroup; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ TOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ *PTOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES { /* size 16 id 70 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  LUID_AND_ATTRIBUTES Privileges[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _TOKEN_PRIVILEGES /* id 70 */ TOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *LPTOKEN_PRIVILEGES;
enum tagTOKEN_TYPE { TokenPrimary = 1, TokenImpersonation };
typedef enum tagTOKEN_TYPE TOKEN_TYPE;
typedef enum tagTOKEN_TYPE *PTOKEN_TYPE;
struct _TOKEN_STATISTICS { /* size 56 id 71 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ExpirationTime; /* bitsize 64, bitpos 128 */
  TOKEN_TYPE TokenType; /* bitsize 32, bitpos 192 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 224 */
  DWORD DynamicCharged; /* bitsize 32, bitpos 256 */
  DWORD DynamicAvailable; /* bitsize 32, bitpos 288 */
  DWORD GroupCount; /* bitsize 32, bitpos 320 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 352 */
  LUID ModifiedId; /* bitsize 64, bitpos 384 */
};
typedef struct _TOKEN_STATISTICS /* id 71 */ TOKEN_STATISTICS;
typedef struct _TOKEN_STATISTICS /* id 71 */ *PTOKEN_STATISTICS;
struct _TOKEN_USER { /* size 8 id 72 */
  SID_AND_ATTRIBUTES User; /* bitsize 64, bitpos 0 */
};
typedef struct _TOKEN_USER /* id 72 */ TOKEN_USER;
typedef struct _TOKEN_USER /* id 72 */ *PTOKEN_USER;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
struct _SECURITY_DESCRIPTOR { /* size 20 id 73 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  SECURITY_DESCRIPTOR_CONTROL Control; /* bitsize 16, bitpos 16 */
  PSID Owner; /* bitsize 32, bitpos 32 */
  PSID Group; /* bitsize 32, bitpos 64 */
  PACL Sacl; /* bitsize 32, bitpos 96 */
  PACL Dacl; /* bitsize 32, bitpos 128 */
};
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PSECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PISECURITY_DESCRIPTOR;
enum _TOKEN_INFORMATION_CLASS { TokenUser = 1, TokenGroups, TokenPrivileges, TokenOwner, TokenPrimaryGroup, TokenDefaultDacl, TokenSource, TokenType, TokenImpersonationLevel, TokenStatistics, TokenRestrictedSids, TokenSessionId, TokenGroupsAndPrivileges, TokenSessionReference, TokenSandBoxInert, TokenAuditPolicy, TokenOrigin };
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
enum _SID_NAME_USE { SidTypeUser = 1, SidTypeGroup, SidTypeDomain, SidTypeAlias, SidTypeWellKnownGroup, SidTypeDeletedAccount, SidTypeInvalid, SidTypeUnknown, SidTypeComputer };
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
struct _QUOTA_LIMITS { /* size 32 id 74 */
  long unsigned int PagedPoolLimit; /* bitsize 32, bitpos 0 */
  long unsigned int NonPagedPoolLimit; /* bitsize 32, bitpos 32 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 64 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 96 */
  long unsigned int PagefileLimit; /* bitsize 32, bitpos 128 */
  LARGE_INTEGER TimeLimit; /* bitsize 64, bitpos 192 */
};
typedef struct _QUOTA_LIMITS /* id 74 */ QUOTA_LIMITS;
typedef struct _QUOTA_LIMITS /* id 74 */ *PQUOTA_LIMITS;
struct _IO_COUNTERS { /* size 48 id 75 */
  ULONGLONG ReadOperationCount; /* bitsize 64, bitpos 0 */
  ULONGLONG WriteOperationCount; /* bitsize 64, bitpos 64 */
  ULONGLONG OtherOperationCount; /* bitsize 64, bitpos 128 */
  ULONGLONG ReadTransferCount; /* bitsize 64, bitpos 192 */
  ULONGLONG WriteTransferCount; /* bitsize 64, bitpos 256 */
  ULONGLONG OtherTransferCount; /* bitsize 64, bitpos 320 */
};
typedef struct _IO_COUNTERS /* id 75 */ IO_COUNTERS;
typedef struct _IO_COUNTERS /* id 75 */ *PIO_COUNTERS;
struct _FILE_NOTIFY_INFORMATION { /* size 16 id 76 */
  DWORD NextEntryOffset; /* bitsize 32, bitpos 0 */
  DWORD Action; /* bitsize 32, bitpos 32 */
  DWORD FileNameLength; /* bitsize 32, bitpos 64 */
  WCHAR FileName[1]:uint32; /* bitsize 16, bitpos 96 */
};
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ FILE_NOTIFY_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ *PFILE_NOTIFY_INFORMATION;
struct _TAPE_ERASE { /* size 8 id 77 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_ERASE /* id 77 */ TAPE_ERASE;
typedef struct _TAPE_ERASE /* id 77 */ *PTAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS { /* size 32 id 78 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  DWORD DefaultBlockSize; /* bitsize 32, bitpos 32 */
  DWORD MaximumBlockSize; /* bitsize 32, bitpos 64 */
  DWORD MinimumBlockSize; /* bitsize 32, bitpos 96 */
  DWORD MaximumPartitionCount; /* bitsize 32, bitpos 128 */
  DWORD FeaturesLow; /* bitsize 32, bitpos 160 */
  DWORD FeaturesHigh; /* bitsize 32, bitpos 192 */
  DWORD EOTWarningZoneSize; /* bitsize 32, bitpos 224 */
};
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ *PTAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS { /* size 32 id 79 */
  LARGE_INTEGER Capacity; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER Remaining; /* bitsize 64, bitpos 64 */
  DWORD BlockSize; /* bitsize 32, bitpos 128 */
  DWORD PartitionCount; /* bitsize 32, bitpos 160 */
  BOOLEAN WriteProtected; /* bitsize 8, bitpos 192 */
};
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ *PTAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION { /* size 16 id 80 */
  ULONG Type; /* bitsize 32, bitpos 0 */
  ULONG Partition; /* bitsize 32, bitpos 32 */
  ULONG OffsetLow; /* bitsize 32, bitpos 64 */
  ULONG OffsetHigh; /* bitsize 32, bitpos 96 */
};
typedef struct _TAPE_GET_POSITION /* id 80 */ TAPE_GET_POSITION;
typedef struct _TAPE_GET_POSITION /* id 80 */ *PTAPE_GET_POSITION;
struct _TAPE_PREPARE { /* size 8 id 81 */
  DWORD Operation; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_PREPARE /* id 81 */ TAPE_PREPARE;
typedef struct _TAPE_PREPARE /* id 81 */ *PTAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS { /* size 8 id 82 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  ULONG EOTWarningZoneSize; /* bitsize 32, bitpos 32 */
};
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ *PTAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS { /* size 4 id 83 */
  ULONG BlockSize; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ *PTAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION { /* size 24 id 84 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Partition; /* bitsize 32, bitpos 32 */
  LARGE_INTEGER Offset; /* bitsize 64, bitpos 64 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 128 */
};
typedef struct _TAPE_SET_POSITION /* id 84 */ TAPE_SET_POSITION;
typedef struct _TAPE_SET_POSITION /* id 84 */ *PTAPE_SET_POSITION;
struct _TAPE_WRITE_MARKS { /* size 12 id 85 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 64 */
};
typedef struct _TAPE_WRITE_MARKS /* id 85 */ TAPE_WRITE_MARKS;
typedef struct _TAPE_WRITE_MARKS /* id 85 */ *PTAPE_WRITE_MARKS;
struct _TAPE_CREATE_PARTITION { /* size 12 id 86 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  DWORD Size; /* bitsize 32, bitpos 64 */
};
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ TAPE_CREATE_PARTITION;
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ *PTAPE_CREATE_PARTITION;
struct _MEMORY_BASIC_INFORMATION { /* size 28 id 87 */
  PVOID BaseAddress; /* bitsize 32, bitpos 0 */
  PVOID AllocationBase; /* bitsize 32, bitpos 32 */
  DWORD AllocationProtect; /* bitsize 32, bitpos 64 */
  DWORD RegionSize; /* bitsize 32, bitpos 96 */
  DWORD State; /* bitsize 32, bitpos 128 */
  DWORD Protect; /* bitsize 32, bitpos 160 */
  DWORD Type; /* bitsize 32, bitpos 192 */
};
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ MEMORY_BASIC_INFORMATION;
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ *PMEMORY_BASIC_INFORMATION;
struct _MESSAGE_RESOURCE_ENTRY { /* size 6 id 88 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  BYTE Text[1]:uint32; /* bitsize 8, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ MESSAGE_RESOURCE_ENTRY;
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ *PMESSAGE_RESOURCE_ENTRY;
struct _MESSAGE_RESOURCE_BLOCK { /* size 12 id 89 */
  DWORD LowId; /* bitsize 32, bitpos 0 */
  DWORD HighId; /* bitsize 32, bitpos 32 */
  DWORD OffsetToEntries; /* bitsize 32, bitpos 64 */
};
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ MESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ *PMESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA { /* size 16 id 90 */
  DWORD NumberOfBlocks; /* bitsize 32, bitpos 0 */
  MESSAGE_RESOURCE_BLOCK Blocks[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ MESSAGE_RESOURCE_DATA;
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ *PMESSAGE_RESOURCE_DATA;
struct _LIST_ENTRY { /* size 8 id 91 */
  struct _LIST_ENTRY /* id 91 */ *Flink; /* bitsize 32, bitpos 0 */
  struct _LIST_ENTRY /* id 91 */ *Blink; /* bitsize 32, bitpos 32 */
};
typedef struct _LIST_ENTRY /* id 91 */ LIST_ENTRY;
typedef struct _LIST_ENTRY /* id 91 */ *PLIST_ENTRY;
struct _SINGLE_LIST_ENTRY { /* size 4 id 92 */
  struct _SINGLE_LIST_ENTRY /* id 92 */ *Next; /* bitsize 32, bitpos 0 */
};
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ SINGLE_LIST_ENTRY;
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ *PSINGLE_LIST_ENTRY;
union _SLIST_HEADER { /* size 8 id 93 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
  struct %anon94 { /* size 8 */
    SINGLE_LIST_ENTRY Next; /* bitsize 32, bitpos 0 */
    WORD Depth; /* bitsize 16, bitpos 32 */
    WORD Sequence; /* bitsize 16, bitpos 48 */
  }; /* bitsize 64, bitpos 0 */
};
typedef union _SLIST_HEADER /* id 93 */ SLIST_HEADER;
typedef union _SLIST_HEADER /* id 93 */ *PSLIST_HEADER;
struct _RTL_CRITICAL_SECTION_DEBUG { /* size 32 id 95 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD CreatorBackTraceIndex; /* bitsize 16, bitpos 16 */
  struct _RTL_CRITICAL_SECTION /* id 96 */ *CriticalSection; /* bitsize 32, bitpos 32 */
  LIST_ENTRY ProcessLocksList; /* bitsize 64, bitpos 64 */
  DWORD EntryCount; /* bitsize 32, bitpos 128 */
  DWORD ContentionCount; /* bitsize 32, bitpos 160 */
  DWORD Spare[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ RTL_CRITICAL_SECTION_DEBUG;
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ *PRTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION { /* size 24 id 96 */
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo; /* bitsize 32, bitpos 0 */
  LONG LockCount; /* bitsize 32, bitpos 32 */
  LONG RecursionCount; /* bitsize 32, bitpos 64 */
  HANDLE OwningThread; /* bitsize 32, bitpos 96 */
  HANDLE LockSemaphore; /* bitsize 32, bitpos 128 */
  DWORD Reserved; /* bitsize 32, bitpos 160 */
};
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ RTL_CRITICAL_SECTION;
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ *PRTL_CRITICAL_SECTION;
struct _EVENTLOGRECORD { /* size 56 id 97 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  DWORD Reserved; /* bitsize 32, bitpos 32 */
  DWORD RecordNumber; /* bitsize 32, bitpos 64 */
  DWORD TimeGenerated; /* bitsize 32, bitpos 96 */
  DWORD TimeWritten; /* bitsize 32, bitpos 128 */
  DWORD EventID; /* bitsize 32, bitpos 160 */
  WORD EventType; /* bitsize 16, bitpos 192 */
  WORD NumStrings; /* bitsize 16, bitpos 208 */
  WORD EventCategory; /* bitsize 16, bitpos 224 */
  WORD ReservedFlags; /* bitsize 16, bitpos 240 */
  DWORD ClosingRecordNumber; /* bitsize 32, bitpos 256 */
  DWORD StringOffset; /* bitsize 32, bitpos 288 */
  DWORD UserSidLength; /* bitsize 32, bitpos 320 */
  DWORD UserSidOffset; /* bitsize 32, bitpos 352 */
  DWORD DataLength; /* bitsize 32, bitpos 384 */
  DWORD DataOffset; /* bitsize 32, bitpos 416 */
};
typedef struct _EVENTLOGRECORD /* id 97 */ EVENTLOGRECORD;
typedef struct _EVENTLOGRECORD /* id 97 */ *PEVENTLOGRECORD;
struct _OSVERSIONINFOA { /* size 148 id 98 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
};
typedef struct _OSVERSIONINFOA /* id 98 */ OSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *POSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *LPOSVERSIONINFOA;
struct _OSVERSIONINFOW { /* size 276 id 99 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
};
typedef struct _OSVERSIONINFOW /* id 99 */ OSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *POSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *LPOSVERSIONINFOW;
struct _OSVERSIONINFOEXA { /* size 156 id 100 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 1184 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 1200 */
  WORD wSuiteMask; /* bitsize 16, bitpos 1216 */
  BYTE wProductType; /* bitsize 8, bitpos 1232 */
  BYTE wReserved; /* bitsize 8, bitpos 1240 */
};
typedef struct _OSVERSIONINFOEXA /* id 100 */ OSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *POSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *LPOSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW { /* size 284 id 101 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 2208 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 2224 */
  WORD wSuiteMask; /* bitsize 16, bitpos 2240 */
  BYTE wProductType; /* bitsize 8, bitpos 2256 */
  BYTE wReserved; /* bitsize 8, bitpos 2264 */
};
typedef struct _OSVERSIONINFOEXW /* id 101 */ OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *POSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *LPOSVERSIONINFOEXW;
struct _IMAGE_VXD_HEADER { /* size 196 id 102 */
  WORD e32_magic; /* bitsize 16, bitpos 0 */
  BYTE e32_border; /* bitsize 8, bitpos 16 */
  BYTE e32_worder; /* bitsize 8, bitpos 24 */
  DWORD e32_level; /* bitsize 32, bitpos 32 */
  WORD e32_cpu; /* bitsize 16, bitpos 64 */
  WORD e32_os; /* bitsize 16, bitpos 80 */
  DWORD e32_ver; /* bitsize 32, bitpos 96 */
  DWORD e32_mflags; /* bitsize 32, bitpos 128 */
  DWORD e32_mpages; /* bitsize 32, bitpos 160 */
  DWORD e32_startobj; /* bitsize 32, bitpos 192 */
  DWORD e32_eip; /* bitsize 32, bitpos 224 */
  DWORD e32_stackobj; /* bitsize 32, bitpos 256 */
  DWORD e32_esp; /* bitsize 32, bitpos 288 */
  DWORD e32_pagesize; /* bitsize 32, bitpos 320 */
  DWORD e32_lastpagesize; /* bitsize 32, bitpos 352 */
  DWORD e32_fixupsize; /* bitsize 32, bitpos 384 */
  DWORD e32_fixupsum; /* bitsize 32, bitpos 416 */
  DWORD e32_ldrsize; /* bitsize 32, bitpos 448 */
  DWORD e32_ldrsum; /* bitsize 32, bitpos 480 */
  DWORD e32_objtab; /* bitsize 32, bitpos 512 */
  DWORD e32_objcnt; /* bitsize 32, bitpos 544 */
  DWORD e32_objmap; /* bitsize 32, bitpos 576 */
  DWORD e32_itermap; /* bitsize 32, bitpos 608 */
  DWORD e32_rsrctab; /* bitsize 32, bitpos 640 */
  DWORD e32_rsrccnt; /* bitsize 32, bitpos 672 */
  DWORD e32_restab; /* bitsize 32, bitpos 704 */
  DWORD e32_enttab; /* bitsize 32, bitpos 736 */
  DWORD e32_dirtab; /* bitsize 32, bitpos 768 */
  DWORD e32_dircnt; /* bitsize 32, bitpos 800 */
  DWORD e32_fpagetab; /* bitsize 32, bitpos 832 */
  DWORD e32_frectab; /* bitsize 32, bitpos 864 */
  DWORD e32_impmod; /* bitsize 32, bitpos 896 */
  DWORD e32_impmodcnt; /* bitsize 32, bitpos 928 */
  DWORD e32_impproc; /* bitsize 32, bitpos 960 */
  DWORD e32_pagesum; /* bitsize 32, bitpos 992 */
  DWORD e32_datapage; /* bitsize 32, bitpos 1024 */
  DWORD e32_preload; /* bitsize 32, bitpos 1056 */
  DWORD e32_nrestab; /* bitsize 32, bitpos 1088 */
  DWORD e32_cbnrestab; /* bitsize 32, bitpos 1120 */
  DWORD e32_nressum; /* bitsize 32, bitpos 1152 */
  DWORD e32_autodata; /* bitsize 32, bitpos 1184 */
  DWORD e32_debuginfo; /* bitsize 32, bitpos 1216 */
  DWORD e32_debuglen; /* bitsize 32, bitpos 1248 */
  DWORD e32_instpreload; /* bitsize 32, bitpos 1280 */
  DWORD e32_instdemand; /* bitsize 32, bitpos 1312 */
  DWORD e32_heapsize; /* bitsize 32, bitpos 1344 */
  BYTE e32_res3[12]:uint32; /* bitsize 96, bitpos 1376 */
  DWORD e32_winresoff; /* bitsize 32, bitpos 1472 */
  DWORD e32_winreslen; /* bitsize 32, bitpos 1504 */
  WORD e32_devid; /* bitsize 16, bitpos 1536 */
  WORD e32_ddkver; /* bitsize 16, bitpos 1552 */
};
typedef struct _IMAGE_VXD_HEADER /* id 102 */ IMAGE_VXD_HEADER;
typedef struct _IMAGE_VXD_HEADER /* id 102 */ *PIMAGE_VXD_HEADER;
struct _IMAGE_FILE_HEADER { /* size 20 id 103 */
  WORD Machine; /* bitsize 16, bitpos 0 */
  WORD NumberOfSections; /* bitsize 16, bitpos 16 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD PointerToSymbolTable; /* bitsize 32, bitpos 64 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 96 */
  WORD SizeOfOptionalHeader; /* bitsize 16, bitpos 128 */
  WORD Characteristics; /* bitsize 16, bitpos 144 */
};
typedef struct _IMAGE_FILE_HEADER /* id 103 */ IMAGE_FILE_HEADER;
typedef struct _IMAGE_FILE_HEADER /* id 103 */ *PIMAGE_FILE_HEADER;
struct _IMAGE_DATA_DIRECTORY { /* size 8 id 104 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ *PIMAGE_DATA_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER { /* size 224 id 105 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD ImageBase; /* bitsize 32, bitpos 224 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  DWORD SizeOfStackReserve; /* bitsize 32, bitpos 576 */
  DWORD SizeOfStackCommit; /* bitsize 32, bitpos 608 */
  DWORD SizeOfHeapReserve; /* bitsize 32, bitpos 640 */
  DWORD SizeOfHeapCommit; /* bitsize 32, bitpos 672 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 704 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 736 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 768 */
};
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ IMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ *PIMAGE_OPTIONAL_HEADER32;
struct _IMAGE_OPTIONAL_HEADER64 { /* size 240 id 106 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  ULONGLONG ImageBase; /* bitsize 64, bitpos 192 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  ULONGLONG SizeOfStackReserve; /* bitsize 64, bitpos 576 */
  ULONGLONG SizeOfStackCommit; /* bitsize 64, bitpos 640 */
  ULONGLONG SizeOfHeapReserve; /* bitsize 64, bitpos 704 */
  ULONGLONG SizeOfHeapCommit; /* bitsize 64, bitpos 768 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 832 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 864 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 896 */
};
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ IMAGE_OPTIONAL_HEADER64;
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ *PIMAGE_OPTIONAL_HEADER64;
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;
struct _IMAGE_ROM_OPTIONAL_HEADER { /* size 56 id 107 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD BaseOfBss; /* bitsize 32, bitpos 224 */
  DWORD GprMask; /* bitsize 32, bitpos 256 */
  DWORD CprMask[4]:uint32; /* bitsize 128, bitpos 288 */
  DWORD GpValue; /* bitsize 32, bitpos 416 */
};
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ *PIMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_DOS_HEADER { /* size 64 id 108 */
  WORD e_magic; /* bitsize 16, bitpos 0 */
  WORD e_cblp; /* bitsize 16, bitpos 16 */
  WORD e_cp; /* bitsize 16, bitpos 32 */
  WORD e_crlc; /* bitsize 16, bitpos 48 */
  WORD e_cparhdr; /* bitsize 16, bitpos 64 */
  WORD e_minalloc; /* bitsize 16, bitpos 80 */
  WORD e_maxalloc; /* bitsize 16, bitpos 96 */
  WORD e_ss; /* bitsize 16, bitpos 112 */
  WORD e_sp; /* bitsize 16, bitpos 128 */
  WORD e_csum; /* bitsize 16, bitpos 144 */
  WORD e_ip; /* bitsize 16, bitpos 160 */
  WORD e_cs; /* bitsize 16, bitpos 176 */
  WORD e_lfarlc; /* bitsize 16, bitpos 192 */
  WORD e_ovno; /* bitsize 16, bitpos 208 */
  WORD e_res[4]:uint32; /* bitsize 64, bitpos 224 */
  WORD e_oemid; /* bitsize 16, bitpos 288 */
  WORD e_oeminfo; /* bitsize 16, bitpos 304 */
  WORD e_res2[10]:uint32; /* bitsize 160, bitpos 320 */
  LONG e_lfanew; /* bitsize 32, bitpos 480 */
};
typedef struct _IMAGE_DOS_HEADER /* id 108 */ IMAGE_DOS_HEADER;
typedef struct _IMAGE_DOS_HEADER /* id 108 */ *PIMAGE_DOS_HEADER;
struct _IMAGE_OS2_HEADER { /* size 64 id 109 */
  WORD ne_magic; /* bitsize 16, bitpos 0 */
  CHAR ne_ver; /* bitsize 8, bitpos 16 */
  CHAR ne_rev; /* bitsize 8, bitpos 24 */
  WORD ne_enttab; /* bitsize 16, bitpos 32 */
  WORD ne_cbenttab; /* bitsize 16, bitpos 48 */
  LONG ne_crc; /* bitsize 32, bitpos 64 */
  WORD ne_flags; /* bitsize 16, bitpos 96 */
  WORD ne_autodata; /* bitsize 16, bitpos 112 */
  WORD ne_heap; /* bitsize 16, bitpos 128 */
  WORD ne_stack; /* bitsize 16, bitpos 144 */
  LONG ne_csip; /* bitsize 32, bitpos 160 */
  LONG ne_sssp; /* bitsize 32, bitpos 192 */
  WORD ne_cseg; /* bitsize 16, bitpos 224 */
  WORD ne_cmod; /* bitsize 16, bitpos 240 */
  WORD ne_cbnrestab; /* bitsize 16, bitpos 256 */
  WORD ne_segtab; /* bitsize 16, bitpos 272 */
  WORD ne_rsrctab; /* bitsize 16, bitpos 288 */
  WORD ne_restab; /* bitsize 16, bitpos 304 */
  WORD ne_modtab; /* bitsize 16, bitpos 320 */
  WORD ne_imptab; /* bitsize 16, bitpos 336 */
  LONG ne_nrestab; /* bitsize 32, bitpos 352 */
  WORD ne_cmovent; /* bitsize 16, bitpos 384 */
  WORD ne_align; /* bitsize 16, bitpos 400 */
  WORD ne_cres; /* bitsize 16, bitpos 416 */
  BYTE ne_exetyp; /* bitsize 8, bitpos 432 */
  BYTE ne_flagsothers; /* bitsize 8, bitpos 440 */
  WORD ne_pretthunks; /* bitsize 16, bitpos 448 */
  WORD ne_psegrefbytes; /* bitsize 16, bitpos 464 */
  WORD ne_swaparea; /* bitsize 16, bitpos 480 */
  WORD ne_expver; /* bitsize 16, bitpos 496 */
};
typedef struct _IMAGE_OS2_HEADER /* id 109 */ IMAGE_OS2_HEADER;
typedef struct _IMAGE_OS2_HEADER /* id 109 */ *PIMAGE_OS2_HEADER;
struct _IMAGE_NT_HEADERS { /* size 248 id 110 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS /* id 110 */ IMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS /* id 110 */ *PIMAGE_NT_HEADERS32;
struct _IMAGE_NT_HEADERS64 { /* size 248 id 111 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ IMAGE_NT_HEADERS64;
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ *PIMAGE_NT_HEADERS64;
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;
struct _IMAGE_ROM_HEADERS { /* size 76 id 112 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 0 */
  IMAGE_ROM_OPTIONAL_HEADER OptionalHeader; /* bitsize 448, bitpos 160 */
};
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ IMAGE_ROM_HEADERS;
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ *PIMAGE_ROM_HEADERS;
struct _IMAGE_SECTION_HEADER { /* size 40 id 113 */
  BYTE Name[8]:uint32; /* bitsize 64, bitpos 0 */
  union %anon114 { /* size 4 */
    DWORD PhysicalAddress; /* bitsize 32, bitpos 0 */
    DWORD VirtualSize; /* bitsize 32, bitpos 0 */
  } Misc; /* bitsize 32, bitpos 64 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 96 */
  DWORD SizeOfRawData; /* bitsize 32, bitpos 128 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRelocations; /* bitsize 32, bitpos 192 */
  DWORD PointerToLinenumbers; /* bitsize 32, bitpos 224 */
  WORD NumberOfRelocations; /* bitsize 16, bitpos 256 */
  WORD NumberOfLinenumbers; /* bitsize 16, bitpos 272 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ IMAGE_SECTION_HEADER;
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ *PIMAGE_SECTION_HEADER;
struct _IMAGE_SYMBOL { /* size 18 id 115 */
  union %anon116 { /* size 8 */
    BYTE ShortName[8]:uint32; /* bitsize 64, bitpos 0 */
    struct %anon117 { /* size 8 */
      DWORD Short; /* bitsize 32, bitpos 0 */
      DWORD Long; /* bitsize 32, bitpos 32 */
    } Name; /* bitsize 64, bitpos 0 */
    PBYTE LongName[2]:uint32; /* bitsize 64, bitpos 0 */
  } N; /* bitsize 64, bitpos 0 */
  DWORD Value; /* bitsize 32, bitpos 64 */
  SHORT SectionNumber; /* bitsize 16, bitpos 96 */
  WORD Type; /* bitsize 16, bitpos 112 */
  BYTE StorageClass; /* bitsize 8, bitpos 128 */
  BYTE NumberOfAuxSymbols; /* bitsize 8, bitpos 136 */
};
typedef struct _IMAGE_SYMBOL /* id 115 */ IMAGE_SYMBOL;
typedef struct _IMAGE_SYMBOL /* id 115 */ *PIMAGE_SYMBOL;
union _IMAGE_AUX_SYMBOL { /* size 18 id 118 */
  struct %anon119 { /* size 18 */
    DWORD TagIndex; /* bitsize 32, bitpos 0 */
    union %anon120 { /* size 4 */
      struct %anon121 { /* size 4 */
        WORD Linenumber; /* bitsize 16, bitpos 0 */
        WORD Size; /* bitsize 16, bitpos 16 */
      } LnSz; /* bitsize 32, bitpos 0 */
      DWORD TotalSize; /* bitsize 32, bitpos 0 */
    } Misc; /* bitsize 32, bitpos 32 */
    union %anon122 { /* size 8 */
      struct %anon123 { /* size 8 */
        DWORD PointerToLinenumber; /* bitsize 32, bitpos 0 */
        DWORD PointerToNextFunction; /* bitsize 32, bitpos 32 */
      } Function; /* bitsize 64, bitpos 0 */
      struct %anon124 { /* size 8 */
        WORD Dimension[4]:uint32; /* bitsize 64, bitpos 0 */
      } Array; /* bitsize 64, bitpos 0 */
    } FcnAry; /* bitsize 64, bitpos 64 */
    WORD TvIndex; /* bitsize 16, bitpos 128 */
  } Sym; /* bitsize 144, bitpos 0 */
  struct %anon125 { /* size 18 */
    BYTE Name[18]:uint32; /* bitsize 144, bitpos 0 */
  } File; /* bitsize 144, bitpos 0 */
  struct %anon126 { /* size 16 */
    DWORD Length; /* bitsize 32, bitpos 0 */
    WORD NumberOfRelocations; /* bitsize 16, bitpos 32 */
    WORD NumberOfLinenumbers; /* bitsize 16, bitpos 48 */
    DWORD CheckSum; /* bitsize 32, bitpos 64 */
    SHORT Number; /* bitsize 16, bitpos 96 */
    BYTE Selection; /* bitsize 8, bitpos 112 */
  } Section; /* bitsize 128, bitpos 0 */
};
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ IMAGE_AUX_SYMBOL;
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ *PIMAGE_AUX_SYMBOL;
struct _IMAGE_COFF_SYMBOLS_HEADER { /* size 32 id 127 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 0 */
  DWORD LvaToFirstSymbol; /* bitsize 32, bitpos 32 */
  DWORD NumberOfLinenumbers; /* bitsize 32, bitpos 64 */
  DWORD LvaToFirstLinenumber; /* bitsize 32, bitpos 96 */
  DWORD RvaToFirstByteOfCode; /* bitsize 32, bitpos 128 */
  DWORD RvaToLastByteOfCode; /* bitsize 32, bitpos 160 */
  DWORD RvaToFirstByteOfData; /* bitsize 32, bitpos 192 */
  DWORD RvaToLastByteOfData; /* bitsize 32, bitpos 224 */
};
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ IMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ *PIMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_RELOCATION { /* size 10 id 128 */
  union %anon129 { /* size 4 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
    DWORD RelocCount; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD SymbolTableIndex; /* bitsize 32, bitpos 32 */
  WORD Type; /* bitsize 16, bitpos 64 */
};
typedef struct _IMAGE_RELOCATION /* id 128 */ IMAGE_RELOCATION;
typedef struct _IMAGE_RELOCATION /* id 128 */ *PIMAGE_RELOCATION;
struct _IMAGE_BASE_RELOCATION { /* size 8 id 130 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD SizeOfBlock; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ *PIMAGE_BASE_RELOCATION;
struct _IMAGE_LINENUMBER { /* size 6 id 131 */
  union %anon132 { /* size 4 */
    DWORD SymbolTableIndex; /* bitsize 32, bitpos 0 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  } Type; /* bitsize 32, bitpos 0 */
  WORD Linenumber; /* bitsize 16, bitpos 32 */
};
typedef struct _IMAGE_LINENUMBER /* id 131 */ IMAGE_LINENUMBER;
typedef struct _IMAGE_LINENUMBER /* id 131 */ *PIMAGE_LINENUMBER;
struct _IMAGE_ARCHIVE_MEMBER_HEADER { /* size 60 id 133 */
  BYTE Name[16]:uint32; /* bitsize 128, bitpos 0 */
  BYTE Date[12]:uint32; /* bitsize 96, bitpos 128 */
  BYTE UserID[6]:uint32; /* bitsize 48, bitpos 224 */
  BYTE GroupID[6]:uint32; /* bitsize 48, bitpos 272 */
  BYTE Mode[8]:uint32; /* bitsize 64, bitpos 320 */
  BYTE Size[10]:uint32; /* bitsize 80, bitpos 384 */
  BYTE EndHeader[2]:uint32; /* bitsize 16, bitpos 464 */
};
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ *PIMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_EXPORT_DIRECTORY { /* size 40 id 134 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD Base; /* bitsize 32, bitpos 128 */
  DWORD NumberOfFunctions; /* bitsize 32, bitpos 160 */
  DWORD NumberOfNames; /* bitsize 32, bitpos 192 */
  DWORD AddressOfFunctions; /* bitsize 32, bitpos 224 */
  DWORD AddressOfNames; /* bitsize 32, bitpos 256 */
  DWORD AddressOfNameOrdinals; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ IMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ *PIMAGE_EXPORT_DIRECTORY;
struct _IMAGE_IMPORT_BY_NAME { /* size 4 id 135 */
  WORD Hint; /* bitsize 16, bitpos 0 */
  BYTE Name[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ *PIMAGE_IMPORT_BY_NAME;
struct _IMAGE_THUNK_DATA32 { /* size 4 id 136 */
  union %anon137 { /* size 4 */
    DWORD ForwarderString; /* bitsize 32, bitpos 0 */
    DWORD Function; /* bitsize 32, bitpos 0 */
    DWORD Ordinal; /* bitsize 32, bitpos 0 */
    DWORD AddressOfData; /* bitsize 32, bitpos 0 */
  } u1; /* bitsize 32, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ IMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ *PIMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64 { /* size 8 id 138 */
  union %anon139 { /* size 8 */
    ULONGLONG ForwarderString; /* bitsize 64, bitpos 0 */
    ULONGLONG Function; /* bitsize 64, bitpos 0 */
    ULONGLONG Ordinal; /* bitsize 64, bitpos 0 */
    ULONGLONG AddressOfData; /* bitsize 64, bitpos 0 */
  } u1; /* bitsize 64, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ IMAGE_THUNK_DATA64;
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ *PIMAGE_THUNK_DATA64;
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;
struct _IMAGE_IMPORT_DESCRIPTOR { /* size 20 id 140 */
  union %anon141 { /* size 4 */
    DWORD Characteristics; /* bitsize 32, bitpos 0 */
    DWORD OriginalFirstThunk; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD ForwarderChain; /* bitsize 32, bitpos 64 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD FirstThunk; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ IMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ *PIMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR { /* size 8 id 142 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD NumberOfModuleForwarderRefs; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_FORWARDER_REF { /* size 8 id 143 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ *PIMAGE_BOUND_FORWARDER_REF;
typedef void (*PIMAGE_TLS_CALLBACK) (/* unknown */);
struct _IMAGE_TLS_DIRECTORY32 { /* size 24 id 144 */
  DWORD StartAddressOfRawData; /* bitsize 32, bitpos 0 */
  DWORD EndAddressOfRawData; /* bitsize 32, bitpos 32 */
  DWORD AddressOfIndex; /* bitsize 32, bitpos 64 */
  DWORD AddressOfCallBacks; /* bitsize 32, bitpos 96 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 128 */
  DWORD Characteristics; /* bitsize 32, bitpos 160 */
};
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ IMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ *PIMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64 { /* size 40 id 145 */
  ULONGLONG StartAddressOfRawData; /* bitsize 64, bitpos 0 */
  ULONGLONG EndAddressOfRawData; /* bitsize 64, bitpos 64 */
  ULONGLONG AddressOfIndex; /* bitsize 64, bitpos 128 */
  ULONGLONG AddressOfCallBacks; /* bitsize 64, bitpos 192 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 256 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ IMAGE_TLS_DIRECTORY64;
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ *PIMAGE_TLS_DIRECTORY64;
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY { /* size 16 id 146 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  WORD NumberOfNamedEntries; /* bitsize 16, bitpos 96 */
  WORD NumberOfIdEntries; /* bitsize 16, bitpos 112 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ IMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ *PIMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY { /* size 8 id 147 */
  union %anon148 { /* size 4 */
    struct %anon149 { /* size 4 */
      DWORD NameOffset; /* bitsize 31, bitpos 0 */
      DWORD NameIsString; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
    DWORD Name; /* bitsize 32, bitpos 0 */
    WORD Id; /* bitsize 16, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  union %anon150 { /* size 4 */
    DWORD OffsetToData; /* bitsize 32, bitpos 0 */
    struct %anon151 { /* size 4 */
      DWORD OffsetToDirectory; /* bitsize 31, bitpos 0 */
      DWORD DataIsDirectory; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING { /* size 4 id 152 */
  WORD Length; /* bitsize 16, bitpos 0 */
  CHAR NameString[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ *PIMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U { /* size 4 id 153 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WCHAR NameString[1]:uint32; /* bitsize 16, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ *PIMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_RESOURCE_DATA_ENTRY { /* size 16 id 154 */
  DWORD OffsetToData; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
  DWORD CodePage; /* bitsize 32, bitpos 64 */
  DWORD Reserved; /* bitsize 32, bitpos 96 */
};
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ *PIMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY { /* size 64 id 155 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  DWORD DeCommitFreeBlockThreshold; /* bitsize 32, bitpos 192 */
  DWORD DeCommitTotalFreeThreshold; /* bitsize 32, bitpos 224 */
  PVOID LockPrefixTable; /* bitsize 32, bitpos 256 */
  DWORD MaximumAllocationSize; /* bitsize 32, bitpos 288 */
  DWORD VirtualMemoryThreshold; /* bitsize 32, bitpos 320 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 352 */
  DWORD Reserved[4]:uint32; /* bitsize 128, bitpos 384 */
};
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ *PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct %anon156 { /* size 96 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  ULONGLONG DeCommitFreeBlockThreshold; /* bitsize 64, bitpos 192 */
  ULONGLONG DeCommitTotalFreeThreshold; /* bitsize 64, bitpos 256 */
  ULONGLONG LockPrefixTable; /* bitsize 64, bitpos 320 */
  ULONGLONG MaximumAllocationSize; /* bitsize 64, bitpos 384 */
  ULONGLONG VirtualMemoryThreshold; /* bitsize 64, bitpos 448 */
  ULONGLONG ProcessAffinityMask; /* bitsize 64, bitpos 512 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 576 */
  WORD CSDFlags; /* bitsize 16, bitpos 608 */
  WORD Reserved1; /* bitsize 16, bitpos 624 */
  ULONGLONG EditList; /* bitsize 64, bitpos 640 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 704 */
} IMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct %anon156 *PIMAGE_LOAD_CONFIG_DIRECTORY64;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY { /* size 20 id 157 */
  DWORD BeginAddress; /* bitsize 32, bitpos 0 */
  DWORD EndAddress; /* bitsize 32, bitpos 32 */
  PVOID ExceptionHandler; /* bitsize 32, bitpos 64 */
  PVOID HandlerData; /* bitsize 32, bitpos 96 */
  DWORD PrologEndAddress; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ *PIMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY { /* size 8 id 158 */
  unsigned int FuncStart; /* bitsize 32, bitpos 0 */
  unsigned int PrologLen; /* bitsize 8, bitpos 32 */
  unsigned int FuncLen; /* bitsize 22, bitpos 40 */
  unsigned int ThirtyTwoBit; /* bitsize 1, bitpos 62 */
  unsigned int ExceptionFlag; /* bitsize 1, bitpos 63 */
};
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_DEBUG_DIRECTORY { /* size 28 id 159 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Type; /* bitsize 32, bitpos 96 */
  DWORD SizeOfData; /* bitsize 32, bitpos 128 */
  DWORD AddressOfRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 192 */
};
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ *PIMAGE_DEBUG_DIRECTORY;
struct _FPO_DATA { /* size 16 id 160 */
  DWORD ulOffStart; /* bitsize 32, bitpos 0 */
  DWORD cbProcSize; /* bitsize 32, bitpos 32 */
  DWORD cdwLocals; /* bitsize 32, bitpos 64 */
  WORD cdwParams; /* bitsize 16, bitpos 96 */
  WORD cbProlog; /* bitsize 8, bitpos 112 */
  WORD cbRegs; /* bitsize 3, bitpos 120 */
  WORD fHasSEH; /* bitsize 1, bitpos 123 */
  WORD fUseBP; /* bitsize 1, bitpos 124 */
  WORD reserved; /* bitsize 1, bitpos 125 */
  WORD cbFrame; /* bitsize 2, bitpos 126 */
};
typedef struct _FPO_DATA /* id 160 */ FPO_DATA;
typedef struct _FPO_DATA /* id 160 */ *PFPO_DATA;
struct _IMAGE_DEBUG_MISC { /* size 16 id 161 */
  DWORD DataType; /* bitsize 32, bitpos 0 */
  DWORD Length; /* bitsize 32, bitpos 32 */
  BOOLEAN Unicode; /* bitsize 8, bitpos 64 */
  BYTE Reserved[3]:uint32; /* bitsize 24, bitpos 72 */
  BYTE Data[1]:uint32; /* bitsize 8, bitpos 96 */
};
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ *PIMAGE_DEBUG_MISC;
struct _IMAGE_FUNCTION_ENTRY { /* size 12 id 162 */
  DWORD StartingAddress; /* bitsize 32, bitpos 0 */
  DWORD EndingAddress; /* bitsize 32, bitpos 32 */
  DWORD EndOfPrologue; /* bitsize 32, bitpos 64 */
};
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ *PIMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64 { /* size 24 id 163 */
  ULONGLONG StartingAddress; /* bitsize 64, bitpos 0 */
  ULONGLONG EndingAddress; /* bitsize 64, bitpos 64 */
  union %anon164 { /* size 8 */
    ULONGLONG EndOfPrologue; /* bitsize 64, bitpos 0 */
    ULONGLONG UnwindInfoAddress; /* bitsize 64, bitpos 0 */
  }; /* bitsize 64, bitpos 128 */
};
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ IMAGE_FUNCTION_ENTRY64;
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ *PIMAGE_FUNCTION_ENTRY64;
struct _IMAGE_SEPARATE_DEBUG_HEADER { /* size 48 id 165 */
  WORD Signature; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  WORD Machine; /* bitsize 16, bitpos 32 */
  WORD Characteristics; /* bitsize 16, bitpos 48 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 64 */
  DWORD CheckSum; /* bitsize 32, bitpos 96 */
  DWORD ImageBase; /* bitsize 32, bitpos 128 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 160 */
  DWORD NumberOfSections; /* bitsize 32, bitpos 192 */
  DWORD ExportedNamesSize; /* bitsize 32, bitpos 224 */
  DWORD DebugDirectorySize; /* bitsize 32, bitpos 256 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 288 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 320 */
};
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ *PIMAGE_SEPARATE_DEBUG_HEADER;
enum _CM_SERVICE_NODE_TYPE { DriverType = 1, FileSystemType, Win32ServiceOwnProcess = 16, Win32ServiceShareProcess = 32, AdapterType = 4, RecognizerType = 8 };
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
enum _CM_SERVICE_LOAD_TYPE { BootLoad, SystemLoad, AutoLoad, DemandLoad, DisableLoad };
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
enum _CM_ERROR_CONTROL_TYPE { IgnoreError, NormalError, SevereError, CriticalError };
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
struct _NT_TIB { /* size 28 id 166 */
  struct _EXCEPTION_REGISTRATION_RECORD /* id 0 */ *ExceptionList; /* bitsize 32, bitpos 0 */
  PVOID StackBase; /* bitsize 32, bitpos 32 */
  PVOID StackLimit; /* bitsize 32, bitpos 64 */
  PVOID SubSystemTib; /* bitsize 32, bitpos 96 */
  union %anon167 { /* size 4 */
    PVOID FiberData; /* bitsize 32, bitpos 0 */
    DWORD Version; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 128 */
  PVOID ArbitraryUserPointer; /* bitsize 32, bitpos 160 */
  struct _NT_TIB /* id 166 */ *Self; /* bitsize 32, bitpos 192 */
};
typedef struct _NT_TIB /* id 166 */ NT_TIB;
typedef struct _NT_TIB /* id 166 */ *PNT_TIB;
struct _REPARSE_DATA_BUFFER { /* size 24 id 168 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  union %anon169 { /* size 16 */
    struct %anon170 { /* size 16 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      ULONG Flags; /* bitsize 32, bitpos 64 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 96 */
    } SymbolicLinkReparseBuffer; /* bitsize 128, bitpos 0 */
    struct %anon171 { /* size 10 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 64 */
    } MountPointReparseBuffer; /* bitsize 80, bitpos 0 */
    struct %anon172 { /* size 1 */
      BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
    } GenericReparseBuffer; /* bitsize 8, bitpos 0 */
  }; /* bitsize 128, bitpos 64 */
};
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ REPARSE_DATA_BUFFER;
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ *PREPARSE_DATA_BUFFER;
struct _REPARSE_GUID_DATA_BUFFER { /* size 28 id 173 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  GUID ReparseGuid; /* bitsize 128, bitpos 64 */
  struct %anon172 { /* size 1 */
    BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
  } GenericReparseBuffer; /* bitsize 8, bitpos 192 */
};
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ REPARSE_GUID_DATA_BUFFER;
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ *PREPARSE_GUID_DATA_BUFFER;
struct _REPARSE_POINT_INFORMATION { /* size 4 id 174 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 0 */
  WORD UnparsedNameLength; /* bitsize 16, bitpos 16 */
};
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ REPARSE_POINT_INFORMATION;
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ *PREPARSE_POINT_INFORMATION;
union _FILE_SEGMENT_ELEMENT { /* size 8 id 175 */
  PVOID64 Buffer; /* bitsize 32, bitpos 0 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
};
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ FILE_SEGMENT_ELEMENT;
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ *PFILE_SEGMENT_ELEMENT;
enum _JOBOBJECTINFOCLASS { JobObjectBasicAccountingInformation = 1, JobObjectBasicLimitInformation, JobObjectBasicProcessIdList, JobObjectBasicUIRestrictions, JobObjectSecurityLimitInformation, JobObjectEndOfJobTimeInformation, JobObjectAssociateCompletionPortInformation, JobObjectBasicAndIoAccountingInformation, JobObjectExtendedLimitInformation, JobObjectJobSetInformation, MaxJobObjectInfoClass };
typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION { /* size 48 id 176 */
  LARGE_INTEGER TotalUserTime; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER TotalKernelTime; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ThisPeriodTotalUserTime; /* bitsize 64, bitpos 128 */
  LARGE_INTEGER ThisPeriodTotalKernelTime; /* bitsize 64, bitpos 192 */
  DWORD TotalPageFaultCount; /* bitsize 32, bitpos 256 */
  DWORD TotalProcesses; /* bitsize 32, bitpos 288 */
  DWORD ActiveProcesses; /* bitsize 32, bitpos 320 */
  DWORD TotalTerminatedProcesses; /* bitsize 32, bitpos 352 */
};
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION { /* size 48 id 177 */
  LARGE_INTEGER PerProcessUserTimeLimit; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER PerJobUserTimeLimit; /* bitsize 64, bitpos 64 */
  DWORD LimitFlags; /* bitsize 32, bitpos 128 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 160 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 192 */
  DWORD ActiveProcessLimit; /* bitsize 32, bitpos 224 */
  long unsigned int Affinity; /* bitsize 32, bitpos 256 */
  DWORD PriorityClass; /* bitsize 32, bitpos 288 */
  DWORD SchedulingClass; /* bitsize 32, bitpos 320 */
};
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ JOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST { /* size 12 id 178 */
  DWORD NumberOfAssignedProcesses; /* bitsize 32, bitpos 0 */
  DWORD NumberOfProcessIdsInList; /* bitsize 32, bitpos 32 */
  long unsigned int ProcessIdList[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ JOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS { /* size 4 id 179 */
  DWORD UIRestrictionsClass; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ JOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION { /* size 20 id 180 */
  DWORD SecurityLimitFlags; /* bitsize 32, bitpos 0 */
  HANDLE JobToken; /* bitsize 32, bitpos 32 */
  PTOKEN_GROUPS SidsToDisable; /* bitsize 32, bitpos 64 */
  PTOKEN_PRIVILEGES PrivilegesToDelete; /* bitsize 32, bitpos 96 */
  PTOKEN_GROUPS RestrictedSids; /* bitsize 32, bitpos 128 */
};
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ JOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION { /* size 4 id 181 */
  DWORD EndOfJobTimeAction; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT { /* size 8 id 182 */
  PVOID CompletionKey; /* bitsize 32, bitpos 0 */
  HANDLE CompletionPort; /* bitsize 32, bitpos 32 */
};
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION { /* size 96 id 183 */
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
};
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION { /* size 112 id 184 */
  JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
  long unsigned int ProcessMemoryLimit; /* bitsize 32, bitpos 768 */
  long unsigned int JobMemoryLimit; /* bitsize 32, bitpos 800 */
  long unsigned int PeakProcessMemoryUsed; /* bitsize 32, bitpos 832 */
  long unsigned int PeakJobMemoryUsed; /* bitsize 32, bitpos 864 */
};
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_JOBSET_INFORMATION { /* size 4 id 185 */
  DWORD MemberLevel; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ JOBOBJECT_JOBSET_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ *PJOBOBJECT_JOBSET_INFORMATION;
enum _LATENCY_TIME { LT_DONT_CARE, LT_LOWEST_LATENCY };
typedef enum _LATENCY_TIME LATENCY_TIME;
typedef enum _LATENCY_TIME *PLATENCY_TIME;
enum _SYSTEM_POWER_STATE { PowerSystemUnspecified, PowerSystemWorking, PowerSystemSleeping1, PowerSystemSleeping2, PowerSystemSleeping3, PowerSystemHibernate, PowerSystemShutdown, PowerSystemMaximum };
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject } POWER_ACTION;
typedef (enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject }) *PPOWER_ACTION;
enum _DEVICE_POWER_STATE { PowerDeviceUnspecified, PowerDeviceD0, PowerDeviceD1, PowerDeviceD2, PowerDeviceD3, PowerDeviceMaximum };
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef struct %anon186 { /* size 8 */
  DWORD Granularity; /* bitsize 32, bitpos 0 */
  DWORD Capacity; /* bitsize 32, bitpos 32 */
} BATTERY_REPORTING_SCALE;
typedef struct %anon186 *PBATTERY_REPORTING_SCALE;
struct _POWER_ACTION_POLICY { /* size 12 id 187 */
  POWER_ACTION Action; /* bitsize 32, bitpos 0 */
  ULONG Flags; /* bitsize 32, bitpos 32 */
  ULONG EventCode; /* bitsize 32, bitpos 64 */
};
typedef struct _POWER_ACTION_POLICY /* id 187 */ POWER_ACTION_POLICY;
typedef struct _POWER_ACTION_POLICY /* id 187 */ *PPOWER_ACTION_POLICY;
struct _SYSTEM_POWER_LEVEL { /* size 24 id 188 */
  BOOLEAN Enable; /* bitsize 8, bitpos 0 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 8 */
  ULONG BatteryLevel; /* bitsize 32, bitpos 32 */
  POWER_ACTION_POLICY PowerPolicy; /* bitsize 96, bitpos 64 */
  SYSTEM_POWER_STATE MinSystemState; /* bitsize 32, bitpos 160 */
};
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ SYSTEM_POWER_LEVEL;
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ *PSYSTEM_POWER_LEVEL;
struct _SYSTEM_POWER_POLICY { /* size 232 id 189 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  POWER_ACTION_POLICY PowerButton; /* bitsize 96, bitpos 32 */
  POWER_ACTION_POLICY SleepButton; /* bitsize 96, bitpos 128 */
  POWER_ACTION_POLICY LidClose; /* bitsize 96, bitpos 224 */
  SYSTEM_POWER_STATE LidOpenWake; /* bitsize 32, bitpos 320 */
  ULONG Reserved; /* bitsize 32, bitpos 352 */
  POWER_ACTION_POLICY Idle; /* bitsize 96, bitpos 384 */
  ULONG IdleTimeout; /* bitsize 32, bitpos 480 */
  UCHAR IdleSensitivity; /* bitsize 8, bitpos 512 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 520 */
  UCHAR Spare2[2]:uint32; /* bitsize 16, bitpos 528 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 576 */
  SYSTEM_POWER_STATE ReducedLatencySleep; /* bitsize 32, bitpos 608 */
  ULONG WinLogonFlags; /* bitsize 32, bitpos 640 */
  ULONG Spare3; /* bitsize 32, bitpos 672 */
  ULONG DozeS4Timeout; /* bitsize 32, bitpos 704 */
  ULONG BroadcastCapacityResolution; /* bitsize 32, bitpos 736 */
  SYSTEM_POWER_LEVEL DischargePolicy[4]:uint32; /* bitsize 768, bitpos 768 */
  ULONG VideoTimeout; /* bitsize 32, bitpos 1536 */
  BOOLEAN VideoDimDisplay; /* bitsize 8, bitpos 1568 */
  ULONG VideoReserved[3]:uint32; /* bitsize 96, bitpos 1600 */
  ULONG SpindownTimeout; /* bitsize 32, bitpos 1696 */
  BOOLEAN OptimizeForPower; /* bitsize 8, bitpos 1728 */
  UCHAR FanThrottleTolerance; /* bitsize 8, bitpos 1736 */
  UCHAR ForcedThrottle; /* bitsize 8, bitpos 1744 */
  UCHAR MinThrottle; /* bitsize 8, bitpos 1752 */
  POWER_ACTION_POLICY OverThrottled; /* bitsize 96, bitpos 1760 */
};
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ SYSTEM_POWER_POLICY;
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ *PSYSTEM_POWER_POLICY;
struct _SYSTEM_POWER_CAPABILITIES { /* size 76 id 190 */
  BOOLEAN PowerButtonPresent; /* bitsize 8, bitpos 0 */
  BOOLEAN SleepButtonPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN LidPresent; /* bitsize 8, bitpos 16 */
  BOOLEAN SystemS1; /* bitsize 8, bitpos 24 */
  BOOLEAN SystemS2; /* bitsize 8, bitpos 32 */
  BOOLEAN SystemS3; /* bitsize 8, bitpos 40 */
  BOOLEAN SystemS4; /* bitsize 8, bitpos 48 */
  BOOLEAN SystemS5; /* bitsize 8, bitpos 56 */
  BOOLEAN HiberFilePresent; /* bitsize 8, bitpos 64 */
  BOOLEAN FullWake; /* bitsize 8, bitpos 72 */
  BOOLEAN VideoDimPresent; /* bitsize 8, bitpos 80 */
  BOOLEAN ApmPresent; /* bitsize 8, bitpos 88 */
  BOOLEAN UpsPresent; /* bitsize 8, bitpos 96 */
  BOOLEAN ThermalControl; /* bitsize 8, bitpos 104 */
  BOOLEAN ProcessorThrottle; /* bitsize 8, bitpos 112 */
  UCHAR ProcessorMinThrottle; /* bitsize 8, bitpos 120 */
  UCHAR ProcessorMaxThrottle; /* bitsize 8, bitpos 128 */
  UCHAR spare2[4]:uint32; /* bitsize 32, bitpos 136 */
  BOOLEAN DiskSpinDown; /* bitsize 8, bitpos 168 */
  UCHAR spare3[8]:uint32; /* bitsize 64, bitpos 176 */
  BOOLEAN SystemBatteriesPresent; /* bitsize 8, bitpos 240 */
  BOOLEAN BatteriesAreShortTerm; /* bitsize 8, bitpos 248 */
  BATTERY_REPORTING_SCALE BatteryScale[3]:uint32; /* bitsize 192, bitpos 256 */
  SYSTEM_POWER_STATE AcOnLineWake; /* bitsize 32, bitpos 448 */
  SYSTEM_POWER_STATE SoftLidWake; /* bitsize 32, bitpos 480 */
  SYSTEM_POWER_STATE RtcWake; /* bitsize 32, bitpos 512 */
  SYSTEM_POWER_STATE MinDeviceWakeState; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE DefaultLowLatencyWake; /* bitsize 32, bitpos 576 */
};
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ SYSTEM_POWER_CAPABILITIES;
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ *PSYSTEM_POWER_CAPABILITIES;
struct _SYSTEM_BATTERY_STATE { /* size 32 id 191 */
  BOOLEAN AcOnLine; /* bitsize 8, bitpos 0 */
  BOOLEAN BatteryPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN Charging; /* bitsize 8, bitpos 16 */
  BOOLEAN Discharging; /* bitsize 8, bitpos 24 */
  BOOLEAN Spare1[4]:uint32; /* bitsize 32, bitpos 32 */
  ULONG MaxCapacity; /* bitsize 32, bitpos 64 */
  ULONG RemainingCapacity; /* bitsize 32, bitpos 96 */
  ULONG Rate; /* bitsize 32, bitpos 128 */
  ULONG EstimatedTime; /* bitsize 32, bitpos 160 */
  ULONG DefaultAlert1; /* bitsize 32, bitpos 192 */
  ULONG DefaultAlert2; /* bitsize 32, bitpos 224 */
};
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ SYSTEM_BATTERY_STATE;
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ *PSYSTEM_BATTERY_STATE;
enum _POWER_INFORMATION_LEVEL { SystemPowerPolicyAc, SystemPowerPolicyDc, VerifySystemPolicyAc, VerifySystemPolicyDc, SystemPowerCapabilities, SystemBatteryState, SystemPowerStateHandler, ProcessorStateHandler, SystemPowerPolicyCurrent, AdministratorPowerPolicy, SystemReserveHiberFile, ProcessorInformation, SystemPowerInformation, ProcessorStateHandler2, LastWakeTime, LastSleepTime, SystemExecutionState, SystemPowerStateNotifyHandler, ProcessorPowerPolicyAc, ProcessorPowerPolicyDc, VerifyProcessorPowerPolicyAc, VerifyProcessorPowerPolicyDc, ProcessorPowerPolicyCurrent };
typedef enum _POWER_INFORMATION_LEVEL POWER_INFORMATION_LEVEL;
struct _SYSTEM_POWER_INFORMATION { /* size 16 id 192 */
  ULONG MaxIdlenessAllowed; /* bitsize 32, bitpos 0 */
  ULONG Idleness; /* bitsize 32, bitpos 32 */
  ULONG TimeRemaining; /* bitsize 32, bitpos 64 */
  UCHAR CoolingMode; /* bitsize 8, bitpos 96 */
};
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ SYSTEM_POWER_INFORMATION;
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ *PSYSTEM_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY_INFO { /* size 20 id 193 */
  ULONG TimeCheck; /* bitsize 32, bitpos 0 */
  ULONG DemoteLimit; /* bitsize 32, bitpos 32 */
  ULONG PromoteLimit; /* bitsize 32, bitpos 64 */
  UCHAR DemotePercent; /* bitsize 8, bitpos 96 */
  UCHAR PromotePercent; /* bitsize 8, bitpos 104 */
  UCHAR Spare[2]:uint32; /* bitsize 16, bitpos 112 */
  ULONG AllowDemotion; /* bitsize 1, bitpos 128 */
  ULONG AllowPromotion; /* bitsize 1, bitpos 129 */
  ULONG Reserved; /* bitsize 30, bitpos 130 */
};
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ PROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ *PPROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_POWER_POLICY { /* size 76 id 194 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 32 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 40 */
  ULONG Reserved; /* bitsize 32, bitpos 64 */
  ULONG PolicyCount; /* bitsize 32, bitpos 96 */
  PROCESSOR_POWER_POLICY_INFO Policy[3]:uint32; /* bitsize 480, bitpos 128 */
};
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ PROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ *PPROCESSOR_POWER_POLICY;
struct _ADMINISTRATOR_POWER_POLICY { /* size 24 id 195 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 0 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 32 */
  ULONG MinVideoTimeout; /* bitsize 32, bitpos 64 */
  ULONG MaxVideoTimeout; /* bitsize 32, bitpos 96 */
  ULONG MinSpindownTimeout; /* bitsize 32, bitpos 128 */
  ULONG MaxSpindownTimeout; /* bitsize 32, bitpos 160 */
};
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ ADMINISTRATOR_POWER_POLICY;
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ *PADMINISTRATOR_POWER_POLICY;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef OSVERSIONINFOA *POSVERSIONINFO;
typedef OSVERSIONINFOA *LPOSVERSIONINFO;
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *POSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *LPOSVERSIONINFOEX;
 /usr/include/string.h:
 /usr/include/sys/reent.h:
typedef long unsigned int __ULong;
struct _Bigint { /* size 24 id 196 */
  struct _Bigint /* id 196 */ *_next; /* bitsize 32, bitpos 0 */
  int _k; /* bitsize 32, bitpos 32 */
  int _maxwds; /* bitsize 32, bitpos 64 */
  int _sign; /* bitsize 32, bitpos 96 */
  int _wds; /* bitsize 32, bitpos 128 */
  __ULong _x[1]:uint32; /* bitsize 32, bitpos 160 */
};
struct __tm { /* size 36 id 197 */
  int __tm_sec; /* bitsize 32, bitpos 0 */
  int __tm_min; /* bitsize 32, bitpos 32 */
  int __tm_hour; /* bitsize 32, bitpos 64 */
  int __tm_mday; /* bitsize 32, bitpos 96 */
  int __tm_mon; /* bitsize 32, bitpos 128 */
  int __tm_year; /* bitsize 32, bitpos 160 */
  int __tm_wday; /* bitsize 32, bitpos 192 */
  int __tm_yday; /* bitsize 32, bitpos 224 */
  int __tm_isdst; /* bitsize 32, bitpos 256 */
};
struct _on_exit_args { /* size 264 id 198 */
  void *_fnargs[32]:uint32; /* bitsize 1024, bitpos 0 */
  void *_dso_handle[32]:uint32; /* bitsize 1024, bitpos 1024 */
  __ULong _fntypes; /* bitsize 32, bitpos 2048 */
  __ULong _is_cxa; /* bitsize 32, bitpos 2080 */
};
struct _atexit { /* size 400 id 199 */
  struct _atexit /* id 199 */ *_next; /* bitsize 32, bitpos 0 */
  int _ind; /* bitsize 32, bitpos 32 */
  void (*_fns[32]) (/* unknown */):uint32; /* bitsize 1024, bitpos 64 */
  struct _on_exit_args /* id 198 */ _on_exit_args; /* bitsize 2112, bitpos 1088 */
};
struct __sbuf { /* size 8 id 200 */
  unsigned char *_base; /* bitsize 32, bitpos 0 */
  int _size; /* bitsize 32, bitpos 32 */
};
typedef long int _fpos_t;
typedef long long int _fpos64_t;
struct __sFILE { /* size 92 id 201 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  void *_cookie; /* bitsize 32, bitpos 224 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 256 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 288 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 320 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 352 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 384 */
  unsigned char *_up; /* bitsize 32, bitpos 448 */
  int _ur; /* bitsize 32, bitpos 480 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 512 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 536 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 544 */
  int _blksize; /* bitsize 32, bitpos 608 */
  int _offset; /* bitsize 32, bitpos 640 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 672 */
  void *_lock; /* bitsize 32, bitpos 704 */
};
struct __sFILE64 { /* size 104 id 203 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 224 */
  void *_cookie; /* bitsize 32, bitpos 256 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 288 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 320 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 352 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 384 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 416 */
  unsigned char *_up; /* bitsize 32, bitpos 480 */
  int _ur; /* bitsize 32, bitpos 512 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 544 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 568 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 576 */
  int _blksize; /* bitsize 32, bitpos 640 */
  int _flags2; /* bitsize 32, bitpos 672 */
  long long int _offset; /* bitsize 64, bitpos 704 */
  _fpos64_t (*_seek64) (/* unknown */); /* bitsize 32, bitpos 768 */
  void *_lock; /* bitsize 32, bitpos 800 */
};
typedef struct __sFILE64 /* id 203 */ __FILE;
struct _glue { /* size 12 id 204 */
  struct _glue /* id 204 */ *_next; /* bitsize 32, bitpos 0 */
  int _niobs; /* bitsize 32, bitpos 32 */
  __FILE *_iobs; /* bitsize 32, bitpos 64 */
};
struct _rand48 { /* size 14 id 205 */
  short unsigned int _seed[3]:uint32; /* bitsize 48, bitpos 0 */
  short unsigned int _mult[3]:uint32; /* bitsize 48, bitpos 48 */
  short unsigned int _add; /* bitsize 16, bitpos 96 */
};
struct _reent { /* size 1064 id 202 */
  int _errno; /* bitsize 32, bitpos 0 */
  __FILE *_stdin; /* bitsize 32, bitpos 32 */
  __FILE *_stdout; /* bitsize 32, bitpos 64 */
  __FILE *_stderr; /* bitsize 32, bitpos 96 */
  int _inc; /* bitsize 32, bitpos 128 */
  char _emergency[25]:uint32; /* bitsize 200, bitpos 160 */
  int _current_category; /* bitsize 32, bitpos 384 */
  char const *_current_locale; /* bitsize 32, bitpos 416 */
  int __sdidinit; /* bitsize 32, bitpos 448 */
  void (*__cleanup) (/* unknown */); /* bitsize 32, bitpos 480 */
  struct _Bigint /* id 196 */ *_result; /* bitsize 32, bitpos 512 */
  int _result_k; /* bitsize 32, bitpos 544 */
  struct _Bigint /* id 196 */ *_p5s; /* bitsize 32, bitpos 576 */
  struct _Bigint /* id 196 */ **_freelist; /* bitsize 32, bitpos 608 */
  int _cvtlen; /* bitsize 32, bitpos 640 */
  char *_cvtbuf; /* bitsize 32, bitpos 672 */
  union %anon206 { /* size 240 */
    struct %anon207 { /* size 208 */
      unsigned int _unused_rand; /* bitsize 32, bitpos 0 */
      char *_strtok_last; /* bitsize 32, bitpos 32 */
      char _asctime_buf[26]:uint32; /* bitsize 208, bitpos 64 */
      struct __tm /* id 197 */ _localtime_buf; /* bitsize 288, bitpos 288 */
      int _gamma_signgam; /* bitsize 32, bitpos 576 */
      long long unsigned int _rand_next; /* bitsize 64, bitpos 640 */
      struct _rand48 /* id 205 */ _r48; /* bitsize 112, bitpos 704 */
      struct %anon208 { /* size 8 */
        int __count; /* bitsize 32, bitpos 0 */
        union %anon209 { /* size 4 */
          unsigned int __wch; /* bitsize 32, bitpos 0 */
          unsigned char __wchb[4]:uint32; /* bitsize 32, bitpos 0 */
        } __value; /* bitsize 32, bitpos 32 */
      } _mblen_state; /* bitsize 64, bitpos 832 */
      struct %anon208 _mbtowc_state; /* bitsize 64, bitpos 896 */
      struct %anon208 _wctomb_state; /* bitsize 64, bitpos 960 */
      char _l64a_buf[8]:uint32; /* bitsize 64, bitpos 1024 */
      char _signal_buf[24]:uint32; /* bitsize 192, bitpos 1088 */
      int _getdate_err; /* bitsize 32, bitpos 1280 */
      struct %anon208 _mbrlen_state; /* bitsize 64, bitpos 1312 */
      struct %anon208 _mbrtowc_state; /* bitsize 64, bitpos 1376 */
      struct %anon208 _mbsrtowcs_state; /* bitsize 64, bitpos 1440 */
      struct %anon208 _wcrtomb_state; /* bitsize 64, bitpos 1504 */
      struct %anon208 _wcsrtombs_state; /* bitsize 64, bitpos 1568 */
    } _reent; /* bitsize 1664, bitpos 0 */
    struct %anon210 { /* size 240 */
      unsigned char *_nextf[30]:uint32; /* bitsize 960, bitpos 0 */
      unsigned int _nmalloc[30]:uint32; /* bitsize 960, bitpos 960 */
    } _unused; /* bitsize 1920, bitpos 0 */
  } _new; /* bitsize 1920, bitpos 704 */
  struct _atexit /* id 199 */ *_atexit; /* bitsize 32, bitpos 2624 */
  struct _atexit /* id 199 */ _atexit0; /* bitsize 3200, bitpos 2656 */
  void (**_sig_func) (/* unknown */); /* bitsize 32, bitpos 5856 */
  struct _glue /* id 204 */ __sglue; /* bitsize 96, bitpos 5888 */
  __FILE __sf[3]:uint32; /* bitsize 2496, bitpos 6016 */
};
 /usr/include/sys/_types.h:
typedef long int _off_t;
typedef long long int _off64_t;
typedef int _ssize_t;
typedef struct %anon208 _mbstate_t;
typedef void *_flock_t;
typedef void *_iconv_t;
 /usr/include/sys/lock.h:
typedef void *_LOCK_T;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h:
typedef unsigned int wint_t;
typedef unsigned int size_t;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/basetsd.h:
typedef int LONG32;
typedef int *PLONG32;
typedef int INT32;
typedef int *PINT32;
typedef unsigned int ULONG32;
typedef unsigned int *PULONG32;
typedef unsigned int DWORD32;
typedef unsigned int *PDWORD32;
typedef unsigned int UINT32;
typedef unsigned int *PUINT32;
typedef int INT_PTR;
typedef int *PINT_PTR;
typedef unsigned int UINT_PTR;
typedef unsigned int *PUINT_PTR;
typedef long int LONG_PTR;
typedef long int *PLONG_PTR;
typedef long unsigned int ULONG_PTR;
typedef long unsigned int *PULONG_PTR;
typedef short unsigned int UHALF_PTR;
typedef short unsigned int *PUHALF_PTR;
typedef short int HALF_PTR;
typedef short int *PHALF_PTR;
typedef long unsigned int HANDLE_PTR;
typedef ULONG_PTR SIZE_T;
typedef ULONG_PTR *PSIZE_T;
typedef LONG_PTR SSIZE_T;
typedef LONG_PTR *PSSIZE_T;
typedef ULONG_PTR DWORD_PTR;
typedef ULONG_PTR *PDWORD_PTR;
typedef long long int LONG64;
typedef long long int *PLONG64;
typedef long long int INT64;
typedef long long int *PINT64;
typedef long long unsigned int ULONG64;
typedef long long unsigned int *PULONG64;
typedef long long unsigned int DWORD64;
typedef long long unsigned int *PDWORD64;
typedef long long unsigned int UINT64;
typedef long long unsigned int *PUINT64;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stdarg.h:
typedef __builtin_va_list __gnuc_va_list;
typedef __gnuc_va_list va_list;
 winbase.c:
struct _FILETIME { /* size 8 id 211 */
  DWORD dwLowDateTime; /* bitsize 32, bitpos 0 */
  DWORD dwHighDateTime; /* bitsize 32, bitpos 32 */
};
typedef struct _FILETIME /* id 211 */ FILETIME;
typedef struct _FILETIME /* id 211 */ *PFILETIME;
typedef struct _FILETIME /* id 211 */ *LPFILETIME;
struct _BY_HANDLE_FILE_INFORMATION { /* size 52 id 212 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD dwVolumeSerialNumber; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 256 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 288 */
  DWORD nNumberOfLinks; /* bitsize 32, bitpos 320 */
  DWORD nFileIndexHigh; /* bitsize 32, bitpos 352 */
  DWORD nFileIndexLow; /* bitsize 32, bitpos 384 */
};
typedef struct _BY_HANDLE_FILE_INFORMATION /* id 212 */ BY_HANDLE_FILE_INFORMATION;
typedef struct _BY_HANDLE_FILE_INFORMATION /* id 212 */ *LPBY_HANDLE_FILE_INFORMATION;
struct _DCB { /* size 28 id 213 */
  DWORD DCBlength; /* bitsize 32, bitpos 0 */
  DWORD BaudRate; /* bitsize 32, bitpos 32 */
  DWORD fBinary; /* bitsize 1, bitpos 64 */
  DWORD fParity; /* bitsize 1, bitpos 65 */
  DWORD fOutxCtsFlow; /* bitsize 1, bitpos 66 */
  DWORD fOutxDsrFlow; /* bitsize 1, bitpos 67 */
  DWORD fDtrControl; /* bitsize 2, bitpos 68 */
  DWORD fDsrSensitivity; /* bitsize 1, bitpos 70 */
  DWORD fTXContinueOnXoff; /* bitsize 1, bitpos 71 */
  DWORD fOutX; /* bitsize 1, bitpos 72 */
  DWORD fInX; /* bitsize 1, bitpos 73 */
  DWORD fErrorChar; /* bitsize 1, bitpos 74 */
  DWORD fNull; /* bitsize 1, bitpos 75 */
  DWORD fRtsControl; /* bitsize 2, bitpos 76 */
  DWORD fAbortOnError; /* bitsize 1, bitpos 78 */
  DWORD fDummy2; /* bitsize 17, bitpos 79 */
  WORD wReserved; /* bitsize 16, bitpos 96 */
  WORD XonLim; /* bitsize 16, bitpos 112 */
  WORD XoffLim; /* bitsize 16, bitpos 128 */
  BYTE ByteSize; /* bitsize 8, bitpos 144 */
  BYTE Parity; /* bitsize 8, bitpos 152 */
  BYTE StopBits; /* bitsize 8, bitpos 160 */
  char XonChar; /* bitsize 8, bitpos 168 */
  char XoffChar; /* bitsize 8, bitpos 176 */
  char ErrorChar; /* bitsize 8, bitpos 184 */
  char EofChar; /* bitsize 8, bitpos 192 */
  char EvtChar; /* bitsize 8, bitpos 200 */
  WORD wReserved1; /* bitsize 16, bitpos 208 */
};
typedef struct _DCB /* id 213 */ DCB;
typedef struct _DCB /* id 213 */ *LPDCB;
struct _COMM_CONFIG { /* size 52 id 214 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  WORD wVersion; /* bitsize 16, bitpos 32 */
  WORD wReserved; /* bitsize 16, bitpos 48 */
  DCB dcb; /* bitsize 224, bitpos 64 */
  DWORD dwProviderSubType; /* bitsize 32, bitpos 288 */
  DWORD dwProviderOffset; /* bitsize 32, bitpos 320 */
  DWORD dwProviderSize; /* bitsize 32, bitpos 352 */
  WCHAR wcProviderData[1]:uint32; /* bitsize 16, bitpos 384 */
};
typedef struct _COMM_CONFIG /* id 214 */ COMMCONFIG;
typedef struct _COMM_CONFIG /* id 214 */ *LPCOMMCONFIG;
struct _COMMPROP { /* size 64 id 215 */
  WORD wPacketLength; /* bitsize 16, bitpos 0 */
  WORD wPacketVersion; /* bitsize 16, bitpos 16 */
  DWORD dwServiceMask; /* bitsize 32, bitpos 32 */
  DWORD dwReserved1; /* bitsize 32, bitpos 64 */
  DWORD dwMaxTxQueue; /* bitsize 32, bitpos 96 */
  DWORD dwMaxRxQueue; /* bitsize 32, bitpos 128 */
  DWORD dwMaxBaud; /* bitsize 32, bitpos 160 */
  DWORD dwProvSubType; /* bitsize 32, bitpos 192 */
  DWORD dwProvCapabilities; /* bitsize 32, bitpos 224 */
  DWORD dwSettableParams; /* bitsize 32, bitpos 256 */
  DWORD dwSettableBaud; /* bitsize 32, bitpos 288 */
  WORD wSettableData; /* bitsize 16, bitpos 320 */
  WORD wSettableStopParity; /* bitsize 16, bitpos 336 */
  DWORD dwCurrentTxQueue; /* bitsize 32, bitpos 352 */
  DWORD dwCurrentRxQueue; /* bitsize 32, bitpos 384 */
  DWORD dwProvSpec1; /* bitsize 32, bitpos 416 */
  DWORD dwProvSpec2; /* bitsize 32, bitpos 448 */
  WCHAR wcProvChar[1]:uint32; /* bitsize 16, bitpos 480 */
};
typedef struct _COMMPROP /* id 215 */ COMMPROP;
typedef struct _COMMPROP /* id 215 */ *LPCOMMPROP;
struct _COMMTIMEOUTS { /* size 20 id 216 */
  DWORD ReadIntervalTimeout; /* bitsize 32, bitpos 0 */
  DWORD ReadTotalTimeoutMultiplier; /* bitsize 32, bitpos 32 */
  DWORD ReadTotalTimeoutConstant; /* bitsize 32, bitpos 64 */
  DWORD WriteTotalTimeoutMultiplier; /* bitsize 32, bitpos 96 */
  DWORD WriteTotalTimeoutConstant; /* bitsize 32, bitpos 128 */
};
typedef struct _COMMTIMEOUTS /* id 216 */ COMMTIMEOUTS;
typedef struct _COMMTIMEOUTS /* id 216 */ *LPCOMMTIMEOUTS;
struct _COMSTAT { /* size 12 id 217 */
  DWORD fCtsHold; /* bitsize 1, bitpos 0 */
  DWORD fDsrHold; /* bitsize 1, bitpos 1 */
  DWORD fRlsdHold; /* bitsize 1, bitpos 2 */
  DWORD fXoffHold; /* bitsize 1, bitpos 3 */
  DWORD fXoffSent; /* bitsize 1, bitpos 4 */
  DWORD fEof; /* bitsize 1, bitpos 5 */
  DWORD fTxim; /* bitsize 1, bitpos 6 */
  DWORD fReserved; /* bitsize 25, bitpos 7 */
  DWORD cbInQue; /* bitsize 32, bitpos 32 */
  DWORD cbOutQue; /* bitsize 32, bitpos 64 */
};
typedef struct _COMSTAT /* id 217 */ COMSTAT;
typedef struct _COMSTAT /* id 217 */ *LPCOMSTAT;
typedef DWORD (*LPTHREAD_START_ROUTINE) (/* unknown */);
struct _CREATE_PROCESS_DEBUG_INFO { /* size 40 id 218 */
  HANDLE hFile; /* bitsize 32, bitpos 0 */
  HANDLE hProcess; /* bitsize 32, bitpos 32 */
  HANDLE hThread; /* bitsize 32, bitpos 64 */
  LPVOID lpBaseOfImage; /* bitsize 32, bitpos 96 */
  DWORD dwDebugInfoFileOffset; /* bitsize 32, bitpos 128 */
  DWORD nDebugInfoSize; /* bitsize 32, bitpos 160 */
  LPVOID lpThreadLocalBase; /* bitsize 32, bitpos 192 */
  LPTHREAD_START_ROUTINE lpStartAddress; /* bitsize 32, bitpos 224 */
  LPVOID lpImageName; /* bitsize 32, bitpos 256 */
  WORD fUnicode; /* bitsize 16, bitpos 288 */
};
typedef struct _CREATE_PROCESS_DEBUG_INFO /* id 218 */ CREATE_PROCESS_DEBUG_INFO;
typedef struct _CREATE_PROCESS_DEBUG_INFO /* id 218 */ *LPCREATE_PROCESS_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO { /* size 12 id 219 */
  HANDLE hThread; /* bitsize 32, bitpos 0 */
  LPVOID lpThreadLocalBase; /* bitsize 32, bitpos 32 */
  LPTHREAD_START_ROUTINE lpStartAddress; /* bitsize 32, bitpos 64 */
};
typedef struct _CREATE_THREAD_DEBUG_INFO /* id 219 */ CREATE_THREAD_DEBUG_INFO;
typedef struct _CREATE_THREAD_DEBUG_INFO /* id 219 */ *LPCREATE_THREAD_DEBUG_INFO;
struct _EXCEPTION_DEBUG_INFO { /* size 84 id 220 */
  EXCEPTION_RECORD ExceptionRecord; /* bitsize 640, bitpos 0 */
  DWORD dwFirstChance; /* bitsize 32, bitpos 640 */
};
typedef struct _EXCEPTION_DEBUG_INFO /* id 220 */ EXCEPTION_DEBUG_INFO;
typedef struct _EXCEPTION_DEBUG_INFO /* id 220 */ *LPEXCEPTION_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO { /* size 4 id 221 */
  DWORD dwExitCode; /* bitsize 32, bitpos 0 */
};
typedef struct _EXIT_THREAD_DEBUG_INFO /* id 221 */ EXIT_THREAD_DEBUG_INFO;
typedef struct _EXIT_THREAD_DEBUG_INFO /* id 221 */ *LPEXIT_THREAD_DEBUG_INFO;
struct _EXIT_PROCESS_DEBUG_INFO { /* size 4 id 222 */
  DWORD dwExitCode; /* bitsize 32, bitpos 0 */
};
typedef struct _EXIT_PROCESS_DEBUG_INFO /* id 222 */ EXIT_PROCESS_DEBUG_INFO;
typedef struct _EXIT_PROCESS_DEBUG_INFO /* id 222 */ *LPEXIT_PROCESS_DEBUG_INFO;
struct _LOAD_DLL_DEBUG_INFO { /* size 24 id 223 */
  HANDLE hFile; /* bitsize 32, bitpos 0 */
  LPVOID lpBaseOfDll; /* bitsize 32, bitpos 32 */
  DWORD dwDebugInfoFileOffset; /* bitsize 32, bitpos 64 */
  DWORD nDebugInfoSize; /* bitsize 32, bitpos 96 */
  LPVOID lpImageName; /* bitsize 32, bitpos 128 */
  WORD fUnicode; /* bitsize 16, bitpos 160 */
};
typedef struct _LOAD_DLL_DEBUG_INFO /* id 223 */ LOAD_DLL_DEBUG_INFO;
typedef struct _LOAD_DLL_DEBUG_INFO /* id 223 */ *LPLOAD_DLL_DEBUG_INFO;
struct _UNLOAD_DLL_DEBUG_INFO { /* size 4 id 224 */
  LPVOID lpBaseOfDll; /* bitsize 32, bitpos 0 */
};
typedef struct _UNLOAD_DLL_DEBUG_INFO /* id 224 */ UNLOAD_DLL_DEBUG_INFO;
typedef struct _UNLOAD_DLL_DEBUG_INFO /* id 224 */ *LPUNLOAD_DLL_DEBUG_INFO;
struct _OUTPUT_DEBUG_STRING_INFO { /* size 8 id 225 */
  LPSTR lpDebugStringData; /* bitsize 32, bitpos 0 */
  WORD fUnicode; /* bitsize 16, bitpos 32 */
  WORD nDebugStringLength; /* bitsize 16, bitpos 48 */
};
typedef struct _OUTPUT_DEBUG_STRING_INFO /* id 225 */ OUTPUT_DEBUG_STRING_INFO;
typedef struct _OUTPUT_DEBUG_STRING_INFO /* id 225 */ *LPOUTPUT_DEBUG_STRING_INFO;
struct _RIP_INFO { /* size 8 id 226 */
  DWORD dwError; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
};
typedef struct _RIP_INFO /* id 226 */ RIP_INFO;
typedef struct _RIP_INFO /* id 226 */ *LPRIP_INFO;
struct _DEBUG_EVENT { /* size 96 id 227 */
  DWORD dwDebugEventCode; /* bitsize 32, bitpos 0 */
  DWORD dwProcessId; /* bitsize 32, bitpos 32 */
  DWORD dwThreadId; /* bitsize 32, bitpos 64 */
  union %anon228 { /* size 84 */
    EXCEPTION_DEBUG_INFO Exception; /* bitsize 672, bitpos 0 */
    CREATE_THREAD_DEBUG_INFO CreateThread; /* bitsize 96, bitpos 0 */
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo; /* bitsize 320, bitpos 0 */
    EXIT_THREAD_DEBUG_INFO ExitThread; /* bitsize 32, bitpos 0 */
    EXIT_PROCESS_DEBUG_INFO ExitProcess; /* bitsize 32, bitpos 0 */
    LOAD_DLL_DEBUG_INFO LoadDll; /* bitsize 192, bitpos 0 */
    UNLOAD_DLL_DEBUG_INFO UnloadDll; /* bitsize 32, bitpos 0 */
    OUTPUT_DEBUG_STRING_INFO DebugString; /* bitsize 64, bitpos 0 */
    RIP_INFO RipInfo; /* bitsize 64, bitpos 0 */
  } u; /* bitsize 672, bitpos 96 */
};
typedef struct _DEBUG_EVENT /* id 227 */ DEBUG_EVENT;
typedef struct _DEBUG_EVENT /* id 227 */ *LPDEBUG_EVENT;
struct _OVERLAPPED { /* size 20 id 229 */
  ULONG_PTR Internal; /* bitsize 32, bitpos 0 */
  ULONG_PTR InternalHigh; /* bitsize 32, bitpos 32 */
  DWORD Offset; /* bitsize 32, bitpos 64 */
  DWORD OffsetHigh; /* bitsize 32, bitpos 96 */
  HANDLE hEvent; /* bitsize 32, bitpos 128 */
};
typedef struct _OVERLAPPED /* id 229 */ OVERLAPPED;
typedef struct _OVERLAPPED /* id 229 */ *POVERLAPPED;
typedef struct _OVERLAPPED /* id 229 */ *LPOVERLAPPED;
struct _STARTUPINFOA { /* size 68 id 230 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  LPSTR lpReserved; /* bitsize 32, bitpos 32 */
  LPSTR lpDesktop; /* bitsize 32, bitpos 64 */
  LPSTR lpTitle; /* bitsize 32, bitpos 96 */
  DWORD dwX; /* bitsize 32, bitpos 128 */
  DWORD dwY; /* bitsize 32, bitpos 160 */
  DWORD dwXSize; /* bitsize 32, bitpos 192 */
  DWORD dwYSize; /* bitsize 32, bitpos 224 */
  DWORD dwXCountChars; /* bitsize 32, bitpos 256 */
  DWORD dwYCountChars; /* bitsize 32, bitpos 288 */
  DWORD dwFillAttribute; /* bitsize 32, bitpos 320 */
  DWORD dwFlags; /* bitsize 32, bitpos 352 */
  WORD wShowWindow; /* bitsize 16, bitpos 384 */
  WORD cbReserved2; /* bitsize 16, bitpos 400 */
  PBYTE lpReserved2; /* bitsize 32, bitpos 416 */
  HANDLE hStdInput; /* bitsize 32, bitpos 448 */
  HANDLE hStdOutput; /* bitsize 32, bitpos 480 */
  HANDLE hStdError; /* bitsize 32, bitpos 512 */
};
typedef struct _STARTUPINFOA /* id 230 */ STARTUPINFOA;
typedef struct _STARTUPINFOA /* id 230 */ *LPSTARTUPINFOA;
struct _STARTUPINFOW { /* size 68 id 231 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  LPWSTR lpReserved; /* bitsize 32, bitpos 32 */
  LPWSTR lpDesktop; /* bitsize 32, bitpos 64 */
  LPWSTR lpTitle; /* bitsize 32, bitpos 96 */
  DWORD dwX; /* bitsize 32, bitpos 128 */
  DWORD dwY; /* bitsize 32, bitpos 160 */
  DWORD dwXSize; /* bitsize 32, bitpos 192 */
  DWORD dwYSize; /* bitsize 32, bitpos 224 */
  DWORD dwXCountChars; /* bitsize 32, bitpos 256 */
  DWORD dwYCountChars; /* bitsize 32, bitpos 288 */
  DWORD dwFillAttribute; /* bitsize 32, bitpos 320 */
  DWORD dwFlags; /* bitsize 32, bitpos 352 */
  WORD wShowWindow; /* bitsize 16, bitpos 384 */
  WORD cbReserved2; /* bitsize 16, bitpos 400 */
  PBYTE lpReserved2; /* bitsize 32, bitpos 416 */
  HANDLE hStdInput; /* bitsize 32, bitpos 448 */
  HANDLE hStdOutput; /* bitsize 32, bitpos 480 */
  HANDLE hStdError; /* bitsize 32, bitpos 512 */
};
typedef struct _STARTUPINFOW /* id 231 */ STARTUPINFOW;
typedef struct _STARTUPINFOW /* id 231 */ *LPSTARTUPINFOW;
struct _PROCESS_INFORMATION { /* size 16 id 232 */
  HANDLE hProcess; /* bitsize 32, bitpos 0 */
  HANDLE hThread; /* bitsize 32, bitpos 32 */
  DWORD dwProcessId; /* bitsize 32, bitpos 64 */
  DWORD dwThreadId; /* bitsize 32, bitpos 96 */
};
typedef struct _PROCESS_INFORMATION /* id 232 */ PROCESS_INFORMATION;
typedef struct _PROCESS_INFORMATION /* id 232 */ *PPROCESS_INFORMATION;
typedef struct _PROCESS_INFORMATION /* id 232 */ *LPPROCESS_INFORMATION;
struct _CRITICAL_SECTION_DEBUG { /* size 32 id 233 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD CreatorBackTraceIndex; /* bitsize 16, bitpos 16 */
  struct _CRITICAL_SECTION /* id 234 */ *CriticalSection; /* bitsize 32, bitpos 32 */
  LIST_ENTRY ProcessLocksList; /* bitsize 64, bitpos 64 */
  DWORD EntryCount; /* bitsize 32, bitpos 128 */
  DWORD ContentionCount; /* bitsize 32, bitpos 160 */
  DWORD Spare[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct _CRITICAL_SECTION_DEBUG /* id 233 */ CRITICAL_SECTION_DEBUG;
typedef struct _CRITICAL_SECTION_DEBUG /* id 233 */ *PCRITICAL_SECTION_DEBUG;
struct _CRITICAL_SECTION { /* size 24 id 234 */
  PCRITICAL_SECTION_DEBUG DebugInfo; /* bitsize 32, bitpos 0 */
  LONG LockCount; /* bitsize 32, bitpos 32 */
  LONG RecursionCount; /* bitsize 32, bitpos 64 */
  HANDLE OwningThread; /* bitsize 32, bitpos 96 */
  HANDLE LockSemaphore; /* bitsize 32, bitpos 128 */
  DWORD SpinCount; /* bitsize 32, bitpos 160 */
};
typedef struct _CRITICAL_SECTION /* id 234 */ CRITICAL_SECTION;
typedef struct _CRITICAL_SECTION /* id 234 */ *PCRITICAL_SECTION;
typedef struct _CRITICAL_SECTION /* id 234 */ *LPCRITICAL_SECTION;
struct _SYSTEMTIME { /* size 16 id 235 */
  WORD wYear; /* bitsize 16, bitpos 0 */
  WORD wMonth; /* bitsize 16, bitpos 16 */
  WORD wDayOfWeek; /* bitsize 16, bitpos 32 */
  WORD wDay; /* bitsize 16, bitpos 48 */
  WORD wHour; /* bitsize 16, bitpos 64 */
  WORD wMinute; /* bitsize 16, bitpos 80 */
  WORD wSecond; /* bitsize 16, bitpos 96 */
  WORD wMilliseconds; /* bitsize 16, bitpos 112 */
};
typedef struct _SYSTEMTIME /* id 235 */ SYSTEMTIME;
typedef struct _SYSTEMTIME /* id 235 */ *LPSYSTEMTIME;
struct _WIN32_FILE_ATTRIBUTE_DATA { /* size 36 id 236 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 256 */
};
typedef struct _WIN32_FILE_ATTRIBUTE_DATA /* id 236 */ WIN32_FILE_ATTRIBUTE_DATA;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA /* id 236 */ *LPWIN32_FILE_ATTRIBUTE_DATA;
struct _WIN32_FIND_DATAA { /* size 320 id 237 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 256 */
  DWORD dwReserved0; /* bitsize 32, bitpos 288 */
  DWORD dwReserved1; /* bitsize 32, bitpos 320 */
  CHAR cFileName[260]:uint32; /* bitsize 2080, bitpos 352 */
  CHAR cAlternateFileName[14]:uint32; /* bitsize 112, bitpos 2432 */
};
typedef struct _WIN32_FIND_DATAA /* id 237 */ WIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAA /* id 237 */ *PWIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAA /* id 237 */ *LPWIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW { /* size 592 id 238 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 256 */
  DWORD dwReserved0; /* bitsize 32, bitpos 288 */
  DWORD dwReserved1; /* bitsize 32, bitpos 320 */
  WCHAR cFileName[260]:uint32; /* bitsize 4160, bitpos 352 */
  WCHAR cAlternateFileName[14]:uint32; /* bitsize 224, bitpos 4512 */
};
typedef struct _WIN32_FIND_DATAW /* id 238 */ WIN32_FIND_DATAW;
typedef struct _WIN32_FIND_DATAW /* id 238 */ *PWIN32_FIND_DATAW;
typedef struct _WIN32_FIND_DATAW /* id 238 */ *LPWIN32_FIND_DATAW;
struct _WIN32_STREAM_ID { /* size 24 id 239 */
  DWORD dwStreamId; /* bitsize 32, bitpos 0 */
  DWORD dwStreamAttributes; /* bitsize 32, bitpos 32 */
  LARGE_INTEGER Size; /* bitsize 64, bitpos 64 */
  DWORD dwStreamNameSize; /* bitsize 32, bitpos 128 */
  WCHAR cStreamName[1]:uint32; /* bitsize 16, bitpos 160 */
};
typedef struct _WIN32_STREAM_ID /* id 239 */ WIN32_STREAM_ID;
typedef struct _WIN32_STREAM_ID /* id 239 */ *LPWIN32_STREAM_ID;
enum _FINDEX_INFO_LEVELS { FindExInfoStandard, FindExInfoMaxInfoLevel };
typedef enum _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;
enum _FINDEX_SEARCH_OPS { FindExSearchNameMatch, FindExSearchLimitToDirectories, FindExSearchLimitToDevices, FindExSearchMaxSearchOp };
typedef enum _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;
enum _ACL_INFORMATION_CLASS { AclRevisionInformation = 1, AclSizeInformation };
typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;
struct tagHW_PROFILE_INFOA { /* size 124 id 240 */
  DWORD dwDockInfo; /* bitsize 32, bitpos 0 */
  CHAR szHwProfileGuid[39]:uint32; /* bitsize 312, bitpos 32 */
  CHAR szHwProfileName[80]:uint32; /* bitsize 640, bitpos 344 */
};
typedef struct tagHW_PROFILE_INFOA /* id 240 */ HW_PROFILE_INFOA;
typedef struct tagHW_PROFILE_INFOA /* id 240 */ *LPHW_PROFILE_INFOA;
struct tagHW_PROFILE_INFOW { /* size 244 id 241 */
  DWORD dwDockInfo; /* bitsize 32, bitpos 0 */
  WCHAR szHwProfileGuid[39]:uint32; /* bitsize 624, bitpos 32 */
  WCHAR szHwProfileName[80]:uint32; /* bitsize 1280, bitpos 656 */
};
typedef struct tagHW_PROFILE_INFOW /* id 241 */ HW_PROFILE_INFOW;
typedef struct tagHW_PROFILE_INFOW /* id 241 */ *LPHW_PROFILE_INFOW;
enum _GET_FILEEX_INFO_LEVELS { GetFileExInfoStandard, GetFileExMaxInfoLevel };
typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;
struct _SYSTEM_INFO { /* size 36 id 242 */
  union %anon243 { /* size 4 */
    DWORD dwOemId; /* bitsize 32, bitpos 0 */
    struct %anon244 { /* size 4 */
      WORD wProcessorArchitecture; /* bitsize 16, bitpos 0 */
      WORD wReserved; /* bitsize 16, bitpos 16 */
    }; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD dwPageSize; /* bitsize 32, bitpos 32 */
  PVOID lpMinimumApplicationAddress; /* bitsize 32, bitpos 64 */
  PVOID lpMaximumApplicationAddress; /* bitsize 32, bitpos 96 */
  DWORD dwActiveProcessorMask; /* bitsize 32, bitpos 128 */
  DWORD dwNumberOfProcessors; /* bitsize 32, bitpos 160 */
  DWORD dwProcessorType; /* bitsize 32, bitpos 192 */
  DWORD dwAllocationGranularity; /* bitsize 32, bitpos 224 */
  WORD wProcessorLevel; /* bitsize 16, bitpos 256 */
  WORD wProcessorRevision; /* bitsize 16, bitpos 272 */
};
typedef struct _SYSTEM_INFO /* id 242 */ SYSTEM_INFO;
typedef struct _SYSTEM_INFO /* id 242 */ *LPSYSTEM_INFO;
struct _SYSTEM_POWER_STATUS { /* size 12 id 245 */
  BYTE ACLineStatus; /* bitsize 8, bitpos 0 */
  BYTE BatteryFlag; /* bitsize 8, bitpos 8 */
  BYTE BatteryLifePercent; /* bitsize 8, bitpos 16 */
  BYTE Reserved1; /* bitsize 8, bitpos 24 */
  DWORD BatteryLifeTime; /* bitsize 32, bitpos 32 */
  DWORD BatteryFullLifeTime; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_POWER_STATUS /* id 245 */ SYSTEM_POWER_STATUS;
typedef struct _SYSTEM_POWER_STATUS /* id 245 */ *LPSYSTEM_POWER_STATUS;
struct _TIME_ZONE_INFORMATION { /* size 172 id 246 */
  LONG Bias; /* bitsize 32, bitpos 0 */
  WCHAR StandardName[32]:uint32; /* bitsize 512, bitpos 32 */
  SYSTEMTIME StandardDate; /* bitsize 128, bitpos 544 */
  LONG StandardBias; /* bitsize 32, bitpos 672 */
  WCHAR DaylightName[32]:uint32; /* bitsize 512, bitpos 704 */
  SYSTEMTIME DaylightDate; /* bitsize 128, bitpos 1216 */
  LONG DaylightBias; /* bitsize 32, bitpos 1344 */
};
typedef struct _TIME_ZONE_INFORMATION /* id 246 */ TIME_ZONE_INFORMATION;
typedef struct _TIME_ZONE_INFORMATION /* id 246 */ *LPTIME_ZONE_INFORMATION;
struct _MEMORYSTATUS { /* size 32 id 247 */
  DWORD dwLength; /* bitsize 32, bitpos 0 */
  DWORD dwMemoryLoad; /* bitsize 32, bitpos 32 */
  DWORD dwTotalPhys; /* bitsize 32, bitpos 64 */
  DWORD dwAvailPhys; /* bitsize 32, bitpos 96 */
  DWORD dwTotalPageFile; /* bitsize 32, bitpos 128 */
  DWORD dwAvailPageFile; /* bitsize 32, bitpos 160 */
  DWORD dwTotalVirtual; /* bitsize 32, bitpos 192 */
  DWORD dwAvailVirtual; /* bitsize 32, bitpos 224 */
};
typedef struct _MEMORYSTATUS /* id 247 */ MEMORYSTATUS;
typedef struct _MEMORYSTATUS /* id 247 */ *LPMEMORYSTATUS;
struct _LDT_ENTRY { /* size 8 id 248 */
  WORD LimitLow; /* bitsize 16, bitpos 0 */
  WORD BaseLow; /* bitsize 16, bitpos 16 */
  union %anon249 { /* size 4 */
    struct %anon250 { /* size 4 */
      BYTE BaseMid; /* bitsize 8, bitpos 0 */
      BYTE Flags1; /* bitsize 8, bitpos 8 */
      BYTE Flags2; /* bitsize 8, bitpos 16 */
      BYTE BaseHi; /* bitsize 8, bitpos 24 */
    } Bytes; /* bitsize 32, bitpos 0 */
    struct %anon251 { /* size 4 */
      DWORD BaseMid; /* bitsize 8, bitpos 0 */
      DWORD Type; /* bitsize 5, bitpos 8 */
      DWORD Dpl; /* bitsize 2, bitpos 13 */
      DWORD Pres; /* bitsize 1, bitpos 15 */
      DWORD LimitHi; /* bitsize 4, bitpos 16 */
      DWORD Sys; /* bitsize 1, bitpos 20 */
      DWORD Reserved_0; /* bitsize 1, bitpos 21 */
      DWORD Default_Big; /* bitsize 1, bitpos 22 */
      DWORD Granularity; /* bitsize 1, bitpos 23 */
      DWORD BaseHi; /* bitsize 8, bitpos 24 */
    } Bits; /* bitsize 32, bitpos 0 */
  } HighWord; /* bitsize 32, bitpos 32 */
};
typedef struct _LDT_ENTRY /* id 248 */ LDT_ENTRY;
typedef struct _LDT_ENTRY /* id 248 */ *PLDT_ENTRY;
typedef struct _LDT_ENTRY /* id 248 */ *LPLDT_ENTRY;
struct _PROCESS_HEAP_ENTRY { /* size 28 id 252 */
  PVOID lpData; /* bitsize 32, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 32 */
  BYTE cbOverhead; /* bitsize 8, bitpos 64 */
  BYTE iRegionIndex; /* bitsize 8, bitpos 72 */
  WORD wFlags; /* bitsize 16, bitpos 80 */
  union %anon253 { /* size 16 */
    struct %anon254 { /* size 16 */
      HANDLE hMem; /* bitsize 32, bitpos 0 */
      DWORD dwReserved[3]:uint32; /* bitsize 96, bitpos 32 */
    } Block; /* bitsize 128, bitpos 0 */
    struct %anon255 { /* size 16 */
      DWORD dwCommittedSize; /* bitsize 32, bitpos 0 */
      DWORD dwUnCommittedSize; /* bitsize 32, bitpos 32 */
      LPVOID lpFirstBlock; /* bitsize 32, bitpos 64 */
      LPVOID lpLastBlock; /* bitsize 32, bitpos 96 */
    } Region; /* bitsize 128, bitpos 0 */
  }; /* bitsize 128, bitpos 96 */
};
typedef struct _PROCESS_HEAP_ENTRY /* id 252 */ PROCESS_HEAP_ENTRY;
typedef struct _PROCESS_HEAP_ENTRY /* id 252 */ *LPPROCESS_HEAP_ENTRY;
struct _OFSTRUCT { /* size 136 id 256 */
  BYTE cBytes; /* bitsize 8, bitpos 0 */
  BYTE fFixedDisk; /* bitsize 8, bitpos 8 */
  WORD nErrCode; /* bitsize 16, bitpos 16 */
  WORD Reserved1; /* bitsize 16, bitpos 32 */
  WORD Reserved2; /* bitsize 16, bitpos 48 */
  CHAR szPathName[128]:uint32; /* bitsize 1024, bitpos 64 */
};
typedef struct _OFSTRUCT /* id 256 */ OFSTRUCT;
typedef struct _OFSTRUCT /* id 256 */ *LPOFSTRUCT;
typedef struct _OFSTRUCT /* id 256 */ *POFSTRUCT;
struct _WIN_CERTIFICATE { /* size 12 id 257 */
  DWORD dwLength; /* bitsize 32, bitpos 0 */
  WORD wRevision; /* bitsize 16, bitpos 32 */
  WORD wCertificateType; /* bitsize 16, bitpos 48 */
  BYTE bCertificate[1]:uint32; /* bitsize 8, bitpos 64 */
};
typedef struct _WIN_CERTIFICATE /* id 257 */ WIN_CERTIFICATE;
typedef struct _WIN_CERTIFICATE /* id 257 */ *LPWIN_CERTIFICATE;
typedef DWORD (*LPPROGRESS_ROUTINE) (/* unknown */);
typedef void (*LPFIBER_START_ROUTINE) (/* unknown */);
typedef BOOL (*ENUMRESLANGPROCA) (/* unknown */);
typedef BOOL (*ENUMRESLANGPROCW) (/* unknown */);
typedef BOOL (*ENUMRESNAMEPROCA) (/* unknown */);
typedef BOOL (*ENUMRESNAMEPROCW) (/* unknown */);
typedef BOOL (*ENUMRESTYPEPROCA) (/* unknown */);
typedef BOOL (*ENUMRESTYPEPROCW) (/* unknown */);
typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE) (/* unknown */);
typedef LONG (*PTOP_LEVEL_EXCEPTION_FILTER) (/* unknown */);
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;
typedef void (*PAPCFUNC) (/* unknown */);
typedef void (*PTIMERAPCROUTINE) (/* unknown */);
long int _hread (HFILE a /* 0x8 */, LPVOID b /* 0xc */, long int c /* 0x10 */)
{ /* 0x0 */
  /* file winbase.c line 1113 addr 0x0 */
  /* file winbase.c line 1113 addr 0x3 */
} /* 0x7 */
long int _hwrite (HFILE a /* 0x8 */, LPCSTR b /* 0xc */, long int c /* 0x10 */)
{ /* 0x7 */
  /* file winbase.c line 1114 addr 0x7 */
  /* file winbase.c line 1114 addr 0xa */
} /* 0xe */
HFILE _lclose (HFILE a /* 0x8 */)
{ /* 0xe */
  /* file winbase.c line 1115 addr 0xe */
  /* file winbase.c line 1115 addr 0x11 */
} /* 0x15 */
HFILE _lcreat (LPCSTR a /* 0x8 */, int b /* 0xc */)
{ /* 0x15 */
  /* file winbase.c line 1116 addr 0x15 */
  /* file winbase.c line 1116 addr 0x18 */
} /* 0x1c */
LONG _llseek (HFILE a /* 0x8 */, LONG b /* 0xc */, int c /* 0x10 */)
{ /* 0x1c */
  /* file winbase.c line 1117 addr 0x1c */
  /* file winbase.c line 1117 addr 0x1f */
} /* 0x23 */
HFILE _lopen (LPCSTR a /* 0x8 */, int b /* 0xc */)
{ /* 0x23 */
  /* file winbase.c line 1118 addr 0x23 */
  /* file winbase.c line 1118 addr 0x26 */
} /* 0x2a */
UINT _lread (HFILE a /* 0x8 */, LPVOID b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x2a */
  /* file winbase.c line 1119 addr 0x2a */
  /* file winbase.c line 1119 addr 0x2d */
} /* 0x31 */
UINT _lwrite (HFILE a /* 0x8 */, LPCSTR b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x31 */
  /* file winbase.c line 1120 addr 0x31 */
  /* file winbase.c line 1120 addr 0x34 */
} /* 0x38 */
BOOL AccessCheck (PSECURITY_DESCRIPTOR a /* 0x8 */, HANDLE b /* 0xc */, DWORD c /* 0x10 */, PGENERIC_MAPPING d /* 0x14 */, PPRIVILEGE_SET e /* 0x18 */, PDWORD f /* 0x1c */, PDWORD g /* 0x20 */, PBOOL h /* 0x24 */)
{ /* 0x38 */
  /* file winbase.c line 1122 addr 0x38 */
  /* file winbase.c line 1122 addr 0x3b */
} /* 0x3f */
BOOL AccessCheckAndAuditAlarmA (LPCSTR a /* 0x8 */, LPVOID b /* 0xc */, LPSTR c /* 0x10 */, LPSTR d /* 0x14 */, PSECURITY_DESCRIPTOR e /* 0x18 */, DWORD f /* 0x1c */, PGENERIC_MAPPING g /* 0x20 */, BOOL h /* 0x24 */, PDWORD i /* 0x28 */, PBOOL j /* 0x2c */, PBOOL k /* 0x30 */)
{ /* 0x3f */
  /* file winbase.c line 1123 addr 0x3f */
  /* file winbase.c line 1123 addr 0x42 */
} /* 0x46 */
BOOL AccessCheckAndAuditAlarmW (LPCWSTR a /* 0x8 */, LPVOID b /* 0xc */, LPWSTR c /* 0x10 */, LPWSTR d /* 0x14 */, PSECURITY_DESCRIPTOR e /* 0x18 */, DWORD f /* 0x1c */, PGENERIC_MAPPING g /* 0x20 */, BOOL h /* 0x24 */, PDWORD i /* 0x28 */, PBOOL j /* 0x2c */, PBOOL k /* 0x30 */)
{ /* 0x46 */
  /* file winbase.c line 1124 addr 0x46 */
  /* file winbase.c line 1124 addr 0x49 */
} /* 0x4d */
BOOL AddAccessAllowedAce (PACL a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PSID d /* 0x14 */)
{ /* 0x4d */
  /* file winbase.c line 1128 addr 0x4d */
  /* file winbase.c line 1128 addr 0x50 */
} /* 0x54 */
BOOL AddAccessDeniedAce (PACL a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PSID d /* 0x14 */)
{ /* 0x54 */
  /* file winbase.c line 1129 addr 0x54 */
  /* file winbase.c line 1129 addr 0x57 */
} /* 0x5b */
BOOL AddAce (PACL a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x5b */
  /* file winbase.c line 1134 addr 0x5b */
  /* file winbase.c line 1134 addr 0x5e */
} /* 0x62 */
ATOM AddAtomA (LPCSTR a /* 0x8 */)
{ /* 0x62 */
  /* file winbase.c line 1135 addr 0x62 */
  /* file winbase.c line 1135 addr 0x65 */
} /* 0x69 */
ATOM AddAtomW (LPCWSTR a /* 0x8 */)
{ /* 0x69 */
  /* file winbase.c line 1136 addr 0x69 */
  /* file winbase.c line 1136 addr 0x6c */
} /* 0x70 */
BOOL AddAuditAccessAce (PACL a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PSID d /* 0x14 */, BOOL e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0x70 */
  /* file winbase.c line 1137 addr 0x70 */
  /* file winbase.c line 1137 addr 0x73 */
} /* 0x77 */
BOOL AdjustTokenGroups (HANDLE a /* 0x8 */, BOOL b /* 0xc */, PTOKEN_GROUPS c /* 0x10 */, DWORD d /* 0x14 */, PTOKEN_GROUPS e /* 0x18 */, PDWORD f /* 0x1c */)
{ /* 0x77 */
  /* file winbase.c line 1144 addr 0x77 */
  /* file winbase.c line 1144 addr 0x7a */
} /* 0x7e */
BOOL AdjustTokenPrivileges (HANDLE a /* 0x8 */, BOOL b /* 0xc */, PTOKEN_PRIVILEGES c /* 0x10 */, DWORD d /* 0x14 */, PTOKEN_PRIVILEGES e /* 0x18 */, PDWORD f /* 0x1c */)
{ /* 0x7e */
  /* file winbase.c line 1145 addr 0x7e */
  /* file winbase.c line 1145 addr 0x81 */
} /* 0x85 */
BOOL AllocateAndInitializeSid (PSID_IDENTIFIER_AUTHORITY a /* 0x8 */, int b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, DWORD f /* 0x1c */, DWORD g /* 0x20 */, DWORD h /* 0x24 */, DWORD i /* 0x28 */, DWORD j /* 0x2c */, PSID *k /* 0x30 */)
{ /* 0x85 */
  BYTE b /* 0xffffffff */;
  /* file winbase.c line 1146 addr 0x85 */
  /* file winbase.c line 1146 addr 0x91 */
} /* 0x95 */
BOOL AllocateLocallyUniqueId (PLUID a /* 0x8 */)
{ /* 0x95 */
  /* file winbase.c line 1147 addr 0x95 */
  /* file winbase.c line 1147 addr 0x98 */
} /* 0x9c */
BOOL AreAllAccessesGranted (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x9c */
  /* file winbase.c line 1148 addr 0x9c */
  /* file winbase.c line 1148 addr 0x9f */
} /* 0xa3 */
BOOL AreAnyAccessesGranted (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xa3 */
  /* file winbase.c line 1149 addr 0xa3 */
  /* file winbase.c line 1149 addr 0xa6 */
} /* 0xaa */
BOOL AreFileApisANSI ()
{ /* 0xaa */
  /* file winbase.c line 1150 addr 0xaa */
  /* file winbase.c line 1150 addr 0xad */
} /* 0xaf */
BOOL BackupEventLogA (HANDLE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xaf */
  /* file winbase.c line 1151 addr 0xaf */
  /* file winbase.c line 1151 addr 0xb2 */
} /* 0xb6 */
BOOL BackupEventLogW (HANDLE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xb6 */
  /* file winbase.c line 1152 addr 0xb6 */
  /* file winbase.c line 1152 addr 0xb9 */
} /* 0xbd */
BOOL BackupRead (HANDLE a /* 0x8 */, LPBYTE b /* 0xc */, DWORD c /* 0x10 */, LPDWORD d /* 0x14 */, BOOL e /* 0x18 */, BOOL f /* 0x1c */, LPVOID *g /* 0x20 */)
{ /* 0xbd */
  /* file winbase.c line 1153 addr 0xbd */
  /* file winbase.c line 1153 addr 0xc0 */
} /* 0xc4 */
BOOL BackupSeek (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPDWORD d /* 0x14 */, LPDWORD e /* 0x18 */, LPVOID *f /* 0x1c */)
{ /* 0xc4 */
  /* file winbase.c line 1154 addr 0xc4 */
  /* file winbase.c line 1154 addr 0xc7 */
} /* 0xcb */
BOOL BackupWrite (HANDLE a /* 0x8 */, LPBYTE b /* 0xc */, DWORD c /* 0x10 */, LPDWORD d /* 0x14 */, BOOL e /* 0x18 */, BOOL f /* 0x1c */, LPVOID *g /* 0x20 */)
{ /* 0xcb */
  /* file winbase.c line 1155 addr 0xcb */
  /* file winbase.c line 1155 addr 0xce */
} /* 0xd2 */
BOOL Beep (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xd2 */
  /* file winbase.c line 1156 addr 0xd2 */
  /* file winbase.c line 1156 addr 0xd5 */
} /* 0xd9 */
HANDLE BeginUpdateResourceA (LPCSTR a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xd9 */
  /* file winbase.c line 1157 addr 0xd9 */
  /* file winbase.c line 1157 addr 0xdc */
} /* 0xe0 */
HANDLE BeginUpdateResourceW (LPCWSTR a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xe0 */
  /* file winbase.c line 1158 addr 0xe0 */
  /* file winbase.c line 1158 addr 0xe3 */
} /* 0xe7 */
BOOL BuildCommDCBA (LPCSTR a /* 0x8 */, LPDCB b /* 0xc */)
{ /* 0xe7 */
  /* file winbase.c line 1159 addr 0xe7 */
  /* file winbase.c line 1159 addr 0xea */
} /* 0xee */
BOOL BuildCommDCBW (LPCWSTR a /* 0x8 */, LPDCB b /* 0xc */)
{ /* 0xee */
  /* file winbase.c line 1160 addr 0xee */
  /* file winbase.c line 1160 addr 0xf1 */
} /* 0xf5 */
BOOL BuildCommDCBAndTimeoutsA (LPCSTR a /* 0x8 */, LPDCB b /* 0xc */, LPCOMMTIMEOUTS c /* 0x10 */)
{ /* 0xf5 */
  /* file winbase.c line 1161 addr 0xf5 */
  /* file winbase.c line 1161 addr 0xf8 */
} /* 0xfc */
BOOL BuildCommDCBAndTimeoutsW (LPCWSTR a /* 0x8 */, LPDCB b /* 0xc */, LPCOMMTIMEOUTS c /* 0x10 */)
{ /* 0xfc */
  /* file winbase.c line 1162 addr 0xfc */
  /* file winbase.c line 1162 addr 0xff */
} /* 0x103 */
BOOL CallNamedPipeA (LPCSTR a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, PDWORD f /* 0x1c */, DWORD g /* 0x20 */)
{ /* 0x103 */
  /* file winbase.c line 1163 addr 0x103 */
  /* file winbase.c line 1163 addr 0x106 */
} /* 0x10a */
BOOL CallNamedPipeW (LPCWSTR a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, PDWORD f /* 0x1c */, DWORD g /* 0x20 */)
{ /* 0x10a */
  /* file winbase.c line 1164 addr 0x10a */
  /* file winbase.c line 1164 addr 0x10d */
} /* 0x111 */
BOOL CancelDeviceWakeupRequest (HANDLE a /* 0x8 */)
{ /* 0x111 */
  /* file winbase.c line 1165 addr 0x111 */
  /* file winbase.c line 1165 addr 0x114 */
} /* 0x118 */
BOOL CancelIo (HANDLE a /* 0x8 */)
{ /* 0x118 */
  /* file winbase.c line 1166 addr 0x118 */
  /* file winbase.c line 1166 addr 0x11b */
} /* 0x11f */
BOOL CancelWaitableTimer (HANDLE a /* 0x8 */)
{ /* 0x11f */
  /* file winbase.c line 1167 addr 0x11f */
  /* file winbase.c line 1167 addr 0x122 */
} /* 0x126 */
BOOL ClearCommBreak (HANDLE a /* 0x8 */)
{ /* 0x126 */
  /* file winbase.c line 1179 addr 0x126 */
  /* file winbase.c line 1179 addr 0x129 */
} /* 0x12d */
BOOL ClearCommError (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, LPCOMSTAT c /* 0x10 */)
{ /* 0x12d */
  /* file winbase.c line 1180 addr 0x12d */
  /* file winbase.c line 1180 addr 0x130 */
} /* 0x134 */
BOOL ClearEventLogA (HANDLE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x134 */
  /* file winbase.c line 1181 addr 0x134 */
  /* file winbase.c line 1181 addr 0x137 */
} /* 0x13b */
BOOL ClearEventLogW (HANDLE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x13b */
  /* file winbase.c line 1182 addr 0x13b */
  /* file winbase.c line 1182 addr 0x13e */
} /* 0x142 */
BOOL CloseEventLog (HANDLE a /* 0x8 */)
{ /* 0x142 */
  /* file winbase.c line 1183 addr 0x142 */
  /* file winbase.c line 1183 addr 0x145 */
} /* 0x149 */
BOOL CloseHandle (HANDLE a /* 0x8 */)
{ /* 0x149 */
  /* file winbase.c line 1184 addr 0x149 */
  /* file winbase.c line 1184 addr 0x14c */
} /* 0x150 */
BOOL CommConfigDialogA (LPCSTR a /* 0x8 */, HWND b /* 0xc */, LPCOMMCONFIG c /* 0x10 */)
{ /* 0x150 */
  /* file winbase.c line 1185 addr 0x150 */
  /* file winbase.c line 1185 addr 0x153 */
} /* 0x157 */
BOOL CommConfigDialogW (LPCWSTR a /* 0x8 */, HWND b /* 0xc */, LPCOMMCONFIG c /* 0x10 */)
{ /* 0x157 */
  /* file winbase.c line 1186 addr 0x157 */
  /* file winbase.c line 1186 addr 0x15a */
} /* 0x15e */
LONG CompareFileTime (FILETIME const *a /* 0x8 */, FILETIME const *b /* 0xc */)
{ /* 0x15e */
  /* file winbase.c line 1187 addr 0x15e */
  /* file winbase.c line 1187 addr 0x161 */
} /* 0x165 */
BOOL ConnectNamedPipe (HANDLE a /* 0x8 */, LPOVERLAPPED b /* 0xc */)
{ /* 0x165 */
  /* file winbase.c line 1188 addr 0x165 */
  /* file winbase.c line 1188 addr 0x168 */
} /* 0x16c */
BOOL ContinueDebugEvent (DWORD a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x16c */
  /* file winbase.c line 1189 addr 0x16c */
  /* file winbase.c line 1189 addr 0x16f */
} /* 0x173 */
BOOL ConvertFiberToThread ()
{ /* 0x173 */
  /* file winbase.c line 1191 addr 0x173 */
  /* file winbase.c line 1191 addr 0x176 */
} /* 0x178 */
PVOID ConvertThreadToFiber (PVOID a /* 0x8 */)
{ /* 0x178 */
  /* file winbase.c line 1193 addr 0x178 */
  /* file winbase.c line 1193 addr 0x17b */
} /* 0x17f */
BOOL CopyFileA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x17f */
  /* file winbase.c line 1194 addr 0x17f */
  /* file winbase.c line 1194 addr 0x182 */
} /* 0x186 */
BOOL CopyFileW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x186 */
  /* file winbase.c line 1195 addr 0x186 */
  /* file winbase.c line 1195 addr 0x189 */
} /* 0x18d */
BOOL CopyFileExA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPPROGRESS_ROUTINE c /* 0x10 */, LPVOID d /* 0x14 */, LPBOOL e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x18d */
  /* file winbase.c line 1196 addr 0x18d */
  /* file winbase.c line 1196 addr 0x190 */
} /* 0x194 */
BOOL CopyFileExW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPPROGRESS_ROUTINE c /* 0x10 */, LPVOID d /* 0x14 */, LPBOOL e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x194 */
  /* file winbase.c line 1197 addr 0x194 */
  /* file winbase.c line 1197 addr 0x197 */
} /* 0x19b */
BOOL CopySid (DWORD a /* 0x8 */, PSID b /* 0xc */, PSID c /* 0x10 */)
{ /* 0x19b */
  /* file winbase.c line 1206 addr 0x19b */
  /* file winbase.c line 1206 addr 0x19e */
} /* 0x1a2 */
BOOL CreateDirectoryA (LPCSTR a /* 0x8 */, LPSECURITY_ATTRIBUTES b /* 0xc */)
{ /* 0x1a2 */
  /* file winbase.c line 1211 addr 0x1a2 */
  /* file winbase.c line 1211 addr 0x1a5 */
} /* 0x1a9 */
BOOL CreateDirectoryW (LPCWSTR a /* 0x8 */, LPSECURITY_ATTRIBUTES b /* 0xc */)
{ /* 0x1a9 */
  /* file winbase.c line 1212 addr 0x1a9 */
  /* file winbase.c line 1212 addr 0x1ac */
} /* 0x1b0 */
BOOL CreateDirectoryExA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */)
{ /* 0x1b0 */
  /* file winbase.c line 1213 addr 0x1b0 */
  /* file winbase.c line 1213 addr 0x1b3 */
} /* 0x1b7 */
BOOL CreateDirectoryExW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */)
{ /* 0x1b7 */
  /* file winbase.c line 1214 addr 0x1b7 */
  /* file winbase.c line 1214 addr 0x1ba */
} /* 0x1be */
HANDLE CreateEventA (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, BOOL c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x1be */
  /* file winbase.c line 1215 addr 0x1be */
  /* file winbase.c line 1215 addr 0x1c1 */
} /* 0x1c5 */
HANDLE CreateEventW (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, BOOL c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x1c5 */
  /* file winbase.c line 1216 addr 0x1c5 */
  /* file winbase.c line 1216 addr 0x1c8 */
} /* 0x1cc */
LPVOID CreateFiber (SIZE_T a /* 0x8 */, LPFIBER_START_ROUTINE b /* 0xc */, LPVOID c /* 0x10 */)
{ /* 0x1cc */
  /* file winbase.c line 1217 addr 0x1cc */
  /* file winbase.c line 1217 addr 0x1cf */
} /* 0x1d3 */
LPVOID CreateFiberEx (SIZE_T a /* 0x8 */, SIZE_T b /* 0xc */, DWORD c /* 0x10 */, LPFIBER_START_ROUTINE d /* 0x14 */, LPVOID e /* 0x18 */)
{ /* 0x1d3 */
  /* file winbase.c line 1219 addr 0x1d3 */
  /* file winbase.c line 1219 addr 0x1d6 */
} /* 0x1da */
HANDLE CreateFileA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, DWORD e /* 0x18 */, DWORD f /* 0x1c */, HANDLE g /* 0x20 */)
{ /* 0x1da */
  /* file winbase.c line 1221 addr 0x1da */
  /* file winbase.c line 1221 addr 0x1dd */
} /* 0x1e1 */
HANDLE CreateFileW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, DWORD e /* 0x18 */, DWORD f /* 0x1c */, HANDLE g /* 0x20 */)
{ /* 0x1e1 */
  /* file winbase.c line 1222 addr 0x1e1 */
  /* file winbase.c line 1222 addr 0x1e4 */
} /* 0x1e8 */
HANDLE CreateFileMappingA (HANDLE a /* 0x8 */, LPSECURITY_ATTRIBUTES b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, LPCSTR f /* 0x1c */)
{ /* 0x1e8 */
  /* file winbase.c line 1223 addr 0x1e8 */
  /* file winbase.c line 1223 addr 0x1eb */
} /* 0x1ef */
HANDLE CreateFileMappingW (HANDLE a /* 0x8 */, LPSECURITY_ATTRIBUTES b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, LPCWSTR f /* 0x1c */)
{ /* 0x1ef */
  /* file winbase.c line 1224 addr 0x1ef */
  /* file winbase.c line 1224 addr 0x1f2 */
} /* 0x1f6 */
HANDLE CreateIoCompletionPort (HANDLE a /* 0x8 */, HANDLE b /* 0xc */, ULONG_PTR c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x1f6 */
  /* file winbase.c line 1229 addr 0x1f6 */
  /* file winbase.c line 1229 addr 0x1f9 */
} /* 0x1fd */
HANDLE CreateMailslotA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */)
{ /* 0x1fd */
  /* file winbase.c line 1238 addr 0x1fd */
  /* file winbase.c line 1238 addr 0x200 */
} /* 0x204 */
HANDLE CreateMailslotW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */)
{ /* 0x204 */
  /* file winbase.c line 1239 addr 0x204 */
  /* file winbase.c line 1239 addr 0x207 */
} /* 0x20b */
HANDLE CreateMutexA (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x20b */
  /* file winbase.c line 1243 addr 0x20b */
  /* file winbase.c line 1243 addr 0x20e */
} /* 0x212 */
HANDLE CreateMutexW (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x212 */
  /* file winbase.c line 1244 addr 0x212 */
  /* file winbase.c line 1244 addr 0x215 */
} /* 0x219 */
HANDLE CreateNamedPipeA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, DWORD f /* 0x1c */, DWORD g /* 0x20 */, LPSECURITY_ATTRIBUTES h /* 0x24 */)
{ /* 0x219 */
  /* file winbase.c line 1245 addr 0x219 */
  /* file winbase.c line 1245 addr 0x21c */
} /* 0x220 */
HANDLE CreateNamedPipeW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, DWORD f /* 0x1c */, DWORD g /* 0x20 */, LPSECURITY_ATTRIBUTES h /* 0x24 */)
{ /* 0x220 */
  /* file winbase.c line 1246 addr 0x220 */
  /* file winbase.c line 1246 addr 0x223 */
} /* 0x227 */
BOOL CreatePipe (PHANDLE a /* 0x8 */, PHANDLE b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x227 */
  /* file winbase.c line 1247 addr 0x227 */
  /* file winbase.c line 1247 addr 0x22a */
} /* 0x22e */
BOOL CreatePrivateObjectSecurity (PSECURITY_DESCRIPTOR a /* 0x8 */, PSECURITY_DESCRIPTOR b /* 0xc */, PSECURITY_DESCRIPTOR *c /* 0x10 */, BOOL d /* 0x14 */, HANDLE e /* 0x18 */, PGENERIC_MAPPING f /* 0x1c */)
{ /* 0x22e */
  /* file winbase.c line 1248 addr 0x22e */
  /* file winbase.c line 1248 addr 0x231 */
} /* 0x235 */
BOOL CreateProcessA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, BOOL e /* 0x18 */, DWORD f /* 0x1c */, PVOID g /* 0x20 */, LPCSTR h /* 0x24 */, LPSTARTUPINFOA i /* 0x28 */, LPPROCESS_INFORMATION j /* 0x2c */)
{ /* 0x235 */
  /* file winbase.c line 1249 addr 0x235 */
  /* file winbase.c line 1249 addr 0x238 */
} /* 0x23c */
BOOL CreateProcessW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, BOOL e /* 0x18 */, DWORD f /* 0x1c */, PVOID g /* 0x20 */, LPCWSTR h /* 0x24 */, LPSTARTUPINFOW i /* 0x28 */, LPPROCESS_INFORMATION j /* 0x2c */)
{ /* 0x23c */
  /* file winbase.c line 1250 addr 0x23c */
  /* file winbase.c line 1250 addr 0x23f */
} /* 0x243 */
BOOL CreateProcessAsUserA (HANDLE a /* 0x8 */, LPCSTR b /* 0xc */, LPSTR c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, LPSECURITY_ATTRIBUTES e /* 0x18 */, BOOL f /* 0x1c */, DWORD g /* 0x20 */, PVOID h /* 0x24 */, LPCSTR i /* 0x28 */, LPSTARTUPINFOA j /* 0x2c */, LPPROCESS_INFORMATION k /* 0x30 */)
{ /* 0x243 */
  /* file winbase.c line 1251 addr 0x243 */
  /* file winbase.c line 1251 addr 0x246 */
} /* 0x24a */
BOOL CreateProcessAsUserW (HANDLE a /* 0x8 */, LPCWSTR b /* 0xc */, LPWSTR c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */, LPSECURITY_ATTRIBUTES e /* 0x18 */, BOOL f /* 0x1c */, DWORD g /* 0x20 */, PVOID h /* 0x24 */, LPCWSTR i /* 0x28 */, LPSTARTUPINFOW j /* 0x2c */, LPPROCESS_INFORMATION k /* 0x30 */)
{ /* 0x24a */
  /* file winbase.c line 1252 addr 0x24a */
  /* file winbase.c line 1252 addr 0x24d */
} /* 0x251 */
HANDLE CreateRemoteThread (HANDLE a /* 0x8 */, LPSECURITY_ATTRIBUTES b /* 0xc */, DWORD c /* 0x10 */, LPTHREAD_START_ROUTINE d /* 0x14 */, LPVOID e /* 0x18 */, DWORD f /* 0x1c */, LPDWORD g /* 0x20 */)
{ /* 0x251 */
  /* file winbase.c line 1261 addr 0x251 */
  /* file winbase.c line 1261 addr 0x254 */
} /* 0x258 */
HANDLE CreateSemaphoreA (LPSECURITY_ATTRIBUTES a /* 0x8 */, LONG b /* 0xc */, LONG c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x258 */
  /* file winbase.c line 1262 addr 0x258 */
  /* file winbase.c line 1262 addr 0x25b */
} /* 0x25f */
HANDLE CreateSemaphoreW (LPSECURITY_ATTRIBUTES a /* 0x8 */, LONG b /* 0xc */, LONG c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x25f */
  /* file winbase.c line 1263 addr 0x25f */
  /* file winbase.c line 1263 addr 0x262 */
} /* 0x266 */
DWORD CreateTapePartition (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x266 */
  /* file winbase.c line 1264 addr 0x266 */
  /* file winbase.c line 1264 addr 0x269 */
} /* 0x26d */
HANDLE CreateThread (LPSECURITY_ATTRIBUTES a /* 0x8 */, DWORD b /* 0xc */, LPTHREAD_START_ROUTINE c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, PDWORD f /* 0x1c */)
{ /* 0x26d */
  /* file winbase.c line 1269 addr 0x26d */
  /* file winbase.c line 1269 addr 0x270 */
} /* 0x274 */
HANDLE CreateWaitableTimerA (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x274 */
  /* file winbase.c line 1270 addr 0x274 */
  /* file winbase.c line 1270 addr 0x277 */
} /* 0x27b */
HANDLE CreateWaitableTimerW (LPSECURITY_ATTRIBUTES a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x27b */
  /* file winbase.c line 1271 addr 0x27b */
  /* file winbase.c line 1271 addr 0x27e */
} /* 0x282 */
BOOL DebugActiveProcess (DWORD a /* 0x8 */)
{ /* 0x282 */
  /* file winbase.c line 1275 addr 0x282 */
  /* file winbase.c line 1275 addr 0x285 */
} /* 0x289 */
void DebugBreak ()
{ /* 0x289 */
  /* file winbase.c line 1279 addr 0x289 */
  /* file winbase.c line 1279 addr 0x28c */
} /* 0x28e */
BOOL DefineDosDeviceA (DWORD a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x28e */
  /* file winbase.c line 1284 addr 0x28e */
  /* file winbase.c line 1284 addr 0x291 */
} /* 0x295 */
BOOL DefineDosDeviceW (DWORD a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x295 */
  /* file winbase.c line 1285 addr 0x295 */
  /* file winbase.c line 1285 addr 0x298 */
} /* 0x29c */
BOOL DeleteAce (PACL a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x29c */
  /* file winbase.c line 1287 addr 0x29c */
  /* file winbase.c line 1287 addr 0x29f */
} /* 0x2a3 */
ATOM DeleteAtom (int a /* 0x8 */)
{ /* 0x2a3 */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1288 addr 0x2a3 */
  /* file winbase.c line 1288 addr 0x2b0 */
} /* 0x2b4 */
void DeleteCriticalSection (PCRITICAL_SECTION a /* 0x8 */)
{ /* 0x2b4 */
  /* file winbase.c line 1289 addr 0x2b4 */
  /* file winbase.c line 1289 addr 0x2b7 */
} /* 0x2bb */
void DeleteFiber (PVOID a /* 0x8 */)
{ /* 0x2bb */
  /* file winbase.c line 1290 addr 0x2bb */
  /* file winbase.c line 1290 addr 0x2be */
} /* 0x2c2 */
BOOL DeleteFileA (LPCSTR a /* 0x8 */)
{ /* 0x2c2 */
  /* file winbase.c line 1291 addr 0x2c2 */
  /* file winbase.c line 1291 addr 0x2c5 */
} /* 0x2c9 */
BOOL DeleteFileW (LPCWSTR a /* 0x8 */)
{ /* 0x2c9 */
  /* file winbase.c line 1292 addr 0x2c9 */
  /* file winbase.c line 1292 addr 0x2cc */
} /* 0x2d0 */
BOOL DeregisterEventSource (HANDLE a /* 0x8 */)
{ /* 0x2d0 */
  /* file winbase.c line 1300 addr 0x2d0 */
  /* file winbase.c line 1300 addr 0x2d3 */
} /* 0x2d7 */
BOOL DestroyPrivateObjectSecurity (PSECURITY_DESCRIPTOR *a /* 0x8 */)
{ /* 0x2d7 */
  /* file winbase.c line 1301 addr 0x2d7 */
  /* file winbase.c line 1301 addr 0x2da */
} /* 0x2de */
BOOL DeviceIoControl (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */, PVOID e /* 0x18 */, DWORD f /* 0x1c */, PDWORD g /* 0x20 */, POVERLAPPED h /* 0x24 */)
{ /* 0x2de */
  /* file winbase.c line 1302 addr 0x2de */
  /* file winbase.c line 1302 addr 0x2e1 */
} /* 0x2e5 */
BOOL DisableThreadLibraryCalls (HMODULE a /* 0x8 */)
{ /* 0x2e5 */
  /* file winbase.c line 1303 addr 0x2e5 */
  /* file winbase.c line 1303 addr 0x2e8 */
} /* 0x2ec */
BOOL DisconnectNamedPipe (HANDLE a /* 0x8 */)
{ /* 0x2ec */
  /* file winbase.c line 1308 addr 0x2ec */
  /* file winbase.c line 1308 addr 0x2ef */
} /* 0x2f3 */
BOOL DosDateTimeToFileTime (int a /* 0x8 */, int b /* 0xc */, LPFILETIME c /* 0x10 */)
{ /* 0x2f3 */
  WORD b /* 0xfffffffc */;
  WORD a /* 0xfffffffe */;
  /* file winbase.c line 1309 addr 0x2f3 */
  /* file winbase.c line 1309 addr 0x307 */
} /* 0x30b */
BOOL DuplicateHandle (HANDLE a /* 0x8 */, HANDLE b /* 0xc */, HANDLE c /* 0x10 */, PHANDLE d /* 0x14 */, DWORD e /* 0x18 */, BOOL f /* 0x1c */, DWORD g /* 0x20 */)
{ /* 0x30b */
  /* file winbase.c line 1310 addr 0x30b */
  /* file winbase.c line 1310 addr 0x30e */
} /* 0x312 */
BOOL DuplicateToken (HANDLE a /* 0x8 */, SECURITY_IMPERSONATION_LEVEL b /* 0xc */, PHANDLE c /* 0x10 */)
{ /* 0x312 */
  /* file winbase.c line 1311 addr 0x312 */
  /* file winbase.c line 1311 addr 0x315 */
} /* 0x319 */
BOOL DuplicateTokenEx (HANDLE a /* 0x8 */, DWORD b /* 0xc */, LPSECURITY_ATTRIBUTES c /* 0x10 */, SECURITY_IMPERSONATION_LEVEL d /* 0x14 */, TOKEN_TYPE e /* 0x18 */, PHANDLE f /* 0x1c */)
{ /* 0x319 */
  /* file winbase.c line 1312 addr 0x319 */
  /* file winbase.c line 1312 addr 0x31c */
} /* 0x320 */
BOOL EncryptFileA (LPCSTR a /* 0x8 */)
{ /* 0x320 */
  /* file winbase.c line 1313 addr 0x320 */
  /* file winbase.c line 1313 addr 0x323 */
} /* 0x327 */
BOOL EncryptFileW (LPCWSTR a /* 0x8 */)
{ /* 0x327 */
  /* file winbase.c line 1314 addr 0x327 */
  /* file winbase.c line 1314 addr 0x32a */
} /* 0x32e */
BOOL EndUpdateResourceA (HANDLE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x32e */
  /* file winbase.c line 1315 addr 0x32e */
  /* file winbase.c line 1315 addr 0x331 */
} /* 0x335 */
BOOL EndUpdateResourceW (HANDLE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x335 */
  /* file winbase.c line 1316 addr 0x335 */
  /* file winbase.c line 1316 addr 0x338 */
} /* 0x33c */
void EnterCriticalSection (LPCRITICAL_SECTION a /* 0x8 */)
{ /* 0x33c */
  /* file winbase.c line 1317 addr 0x33c */
  /* file winbase.c line 1317 addr 0x33f */
} /* 0x343 */
BOOL EnumResourceLanguagesA (HMODULE a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, ENUMRESLANGPROCA d /* 0x14 */, LONG_PTR e /* 0x18 */)
{ /* 0x343 */
  /* file winbase.c line 1318 addr 0x343 */
  /* file winbase.c line 1318 addr 0x346 */
} /* 0x34a */
BOOL EnumResourceLanguagesW (HMODULE a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, ENUMRESLANGPROCA d /* 0x14 */, LONG_PTR e /* 0x18 */)
{ /* 0x34a */
  /* file winbase.c line 1319 addr 0x34a */
  /* file winbase.c line 1319 addr 0x34d */
} /* 0x351 */
BOOL EnumResourceNamesA (HMODULE a /* 0x8 */, LPCSTR b /* 0xc */, ENUMRESNAMEPROCA c /* 0x10 */, LONG_PTR d /* 0x14 */)
{ /* 0x351 */
  /* file winbase.c line 1320 addr 0x351 */
  /* file winbase.c line 1320 addr 0x354 */
} /* 0x358 */
BOOL EnumResourceNamesW (HMODULE a /* 0x8 */, LPCWSTR b /* 0xc */, ENUMRESNAMEPROCA c /* 0x10 */, LONG_PTR d /* 0x14 */)
{ /* 0x358 */
  /* file winbase.c line 1321 addr 0x358 */
  /* file winbase.c line 1321 addr 0x35b */
} /* 0x35f */
BOOL EnumResourceTypesA (HMODULE a /* 0x8 */, ENUMRESTYPEPROCA b /* 0xc */, LONG_PTR c /* 0x10 */)
{ /* 0x35f */
  /* file winbase.c line 1322 addr 0x35f */
  /* file winbase.c line 1322 addr 0x362 */
} /* 0x366 */
BOOL EnumResourceTypesW (HMODULE a /* 0x8 */, ENUMRESTYPEPROCA b /* 0xc */, LONG_PTR c /* 0x10 */)
{ /* 0x366 */
  /* file winbase.c line 1323 addr 0x366 */
  /* file winbase.c line 1323 addr 0x369 */
} /* 0x36d */
BOOL EqualPrefixSid (PSID a /* 0x8 */, PSID b /* 0xc */)
{ /* 0x36d */
  /* file winbase.c line 1324 addr 0x36d */
  /* file winbase.c line 1324 addr 0x370 */
} /* 0x374 */
BOOL EqualSid (PSID a /* 0x8 */, PSID b /* 0xc */)
{ /* 0x374 */
  /* file winbase.c line 1325 addr 0x374 */
  /* file winbase.c line 1325 addr 0x377 */
} /* 0x37b */
DWORD EraseTape (HANDLE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x37b */
  /* file winbase.c line 1326 addr 0x37b */
  /* file winbase.c line 1326 addr 0x37e */
} /* 0x382 */
BOOL EscapeCommFunction (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x382 */
  /* file winbase.c line 1327 addr 0x382 */
  /* file winbase.c line 1327 addr 0x385 */
} /* 0x389 */
void ExitProcess (UINT a /* 0x8 */)
{ /* 0x389 */
  /* file winbase.c line 1328 addr 0x389 */
  /* file winbase.c line 1328 addr 0x38c */
} /* 0x390 */
void ExitThread (DWORD a /* 0x8 */)
{ /* 0x390 */
  /* file winbase.c line 1329 addr 0x390 */
  /* file winbase.c line 1329 addr 0x393 */
} /* 0x397 */
DWORD ExpandEnvironmentStringsA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x397 */
  /* file winbase.c line 1330 addr 0x397 */
  /* file winbase.c line 1330 addr 0x39a */
} /* 0x39e */
DWORD ExpandEnvironmentStringsW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x39e */
  /* file winbase.c line 1331 addr 0x39e */
  /* file winbase.c line 1331 addr 0x3a1 */
} /* 0x3a5 */
void FatalAppExitA (UINT a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x3a5 */
  /* file winbase.c line 1332 addr 0x3a5 */
  /* file winbase.c line 1332 addr 0x3a8 */
} /* 0x3ac */
void FatalAppExitW (UINT a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x3ac */
  /* file winbase.c line 1333 addr 0x3ac */
  /* file winbase.c line 1333 addr 0x3af */
} /* 0x3b3 */
void FatalExit (int a /* 0x8 */)
{ /* 0x3b3 */
  /* file winbase.c line 1334 addr 0x3b3 */
  /* file winbase.c line 1334 addr 0x3b6 */
} /* 0x3ba */
BOOL FileEncryptionStatusA (LPCSTR a /* 0x8 */, LPDWORD b /* 0xc */)
{ /* 0x3ba */
  /* file winbase.c line 1335 addr 0x3ba */
  /* file winbase.c line 1335 addr 0x3bd */
} /* 0x3c1 */
BOOL FileEncryptionStatusW (LPCWSTR a /* 0x8 */, LPDWORD b /* 0xc */)
{ /* 0x3c1 */
  /* file winbase.c line 1336 addr 0x3c1 */
  /* file winbase.c line 1336 addr 0x3c4 */
} /* 0x3c8 */
BOOL FileTimeToDosDateTime (FILETIME const *a /* 0x8 */, LPWORD b /* 0xc */, LPWORD c /* 0x10 */)
{ /* 0x3c8 */
  /* file winbase.c line 1337 addr 0x3c8 */
  /* file winbase.c line 1337 addr 0x3cb */
} /* 0x3cf */
BOOL FileTimeToLocalFileTime (FILETIME const *a /* 0x8 */, LPFILETIME b /* 0xc */)
{ /* 0x3cf */
  /* file winbase.c line 1338 addr 0x3cf */
  /* file winbase.c line 1338 addr 0x3d2 */
} /* 0x3d6 */
BOOL FileTimeToSystemTime (FILETIME const *a /* 0x8 */, LPSYSTEMTIME b /* 0xc */)
{ /* 0x3d6 */
  /* file winbase.c line 1339 addr 0x3d6 */
  /* file winbase.c line 1339 addr 0x3d9 */
} /* 0x3dd */
ATOM FindAtomA (LPCSTR a /* 0x8 */)
{ /* 0x3dd */
  /* file winbase.c line 1345 addr 0x3dd */
  /* file winbase.c line 1345 addr 0x3e0 */
} /* 0x3e4 */
ATOM FindAtomW (LPCWSTR a /* 0x8 */)
{ /* 0x3e4 */
  /* file winbase.c line 1346 addr 0x3e4 */
  /* file winbase.c line 1346 addr 0x3e7 */
} /* 0x3eb */
BOOL FindClose (HANDLE a /* 0x8 */)
{ /* 0x3eb */
  /* file winbase.c line 1347 addr 0x3eb */
  /* file winbase.c line 1347 addr 0x3ee */
} /* 0x3f2 */
BOOL FindCloseChangeNotification (HANDLE a /* 0x8 */)
{ /* 0x3f2 */
  /* file winbase.c line 1348 addr 0x3f2 */
  /* file winbase.c line 1348 addr 0x3f5 */
} /* 0x3f9 */
HANDLE FindFirstChangeNotificationA (LPCSTR a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x3f9 */
  /* file winbase.c line 1349 addr 0x3f9 */
  /* file winbase.c line 1349 addr 0x3fc */
} /* 0x400 */
HANDLE FindFirstChangeNotificationW (LPCWSTR a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x400 */
  /* file winbase.c line 1350 addr 0x400 */
  /* file winbase.c line 1350 addr 0x403 */
} /* 0x407 */
HANDLE FindFirstFileA (LPCSTR a /* 0x8 */, LPWIN32_FIND_DATAA b /* 0xc */)
{ /* 0x407 */
  /* file winbase.c line 1351 addr 0x407 */
  /* file winbase.c line 1351 addr 0x40a */
} /* 0x40e */
HANDLE FindFirstFileW (LPCWSTR a /* 0x8 */, LPWIN32_FIND_DATAW b /* 0xc */)
{ /* 0x40e */
  /* file winbase.c line 1352 addr 0x40e */
  /* file winbase.c line 1352 addr 0x411 */
} /* 0x415 */
HANDLE FindFirstFileExA (LPCSTR a /* 0x8 */, FINDEX_INFO_LEVELS b /* 0xc */, PVOID c /* 0x10 */, FINDEX_SEARCH_OPS d /* 0x14 */, PVOID e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x415 */
  /* file winbase.c line 1353 addr 0x415 */
  /* file winbase.c line 1353 addr 0x418 */
} /* 0x41c */
HANDLE FindFirstFileExW (LPCWSTR a /* 0x8 */, FINDEX_INFO_LEVELS b /* 0xc */, PVOID c /* 0x10 */, FINDEX_SEARCH_OPS d /* 0x14 */, PVOID e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x41c */
  /* file winbase.c line 1354 addr 0x41c */
  /* file winbase.c line 1354 addr 0x41f */
} /* 0x423 */
BOOL FindFirstFreeAce (PACL a /* 0x8 */, PVOID *b /* 0xc */)
{ /* 0x423 */
  /* file winbase.c line 1355 addr 0x423 */
  /* file winbase.c line 1355 addr 0x426 */
} /* 0x42a */
BOOL FindNextChangeNotification (HANDLE a /* 0x8 */)
{ /* 0x42a */
  /* file winbase.c line 1362 addr 0x42a */
  /* file winbase.c line 1362 addr 0x42d */
} /* 0x431 */
BOOL FindNextFileA (HANDLE a /* 0x8 */, LPWIN32_FIND_DATAA b /* 0xc */)
{ /* 0x431 */
  /* file winbase.c line 1363 addr 0x431 */
  /* file winbase.c line 1363 addr 0x434 */
} /* 0x438 */
BOOL FindNextFileW (HANDLE a /* 0x8 */, LPWIN32_FIND_DATAW b /* 0xc */)
{ /* 0x438 */
  /* file winbase.c line 1364 addr 0x438 */
  /* file winbase.c line 1364 addr 0x43b */
} /* 0x43f */
HRSRC FindResourceA (HMODULE a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x43f */
  /* file winbase.c line 1373 addr 0x43f */
  /* file winbase.c line 1373 addr 0x442 */
} /* 0x446 */
HRSRC FindResourceW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x446 */
  /* file winbase.c line 1374 addr 0x446 */
  /* file winbase.c line 1374 addr 0x449 */
} /* 0x44d */
HRSRC FindResourceExA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x44d */
  WORD d /* 0xfffffffe */;
  /* file winbase.c line 1375 addr 0x44d */
  /* file winbase.c line 1375 addr 0x45a */
} /* 0x45e */
HRSRC FindResourceExW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x45e */
  WORD d /* 0xfffffffe */;
  /* file winbase.c line 1376 addr 0x45e */
  /* file winbase.c line 1376 addr 0x46b */
} /* 0x46f */
BOOL FlushFileBuffers (HANDLE a /* 0x8 */)
{ /* 0x46f */
  /* file winbase.c line 1381 addr 0x46f */
  /* file winbase.c line 1381 addr 0x472 */
} /* 0x476 */
BOOL FlushInstructionCache (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x476 */
  /* file winbase.c line 1382 addr 0x476 */
  /* file winbase.c line 1382 addr 0x479 */
} /* 0x47d */
BOOL FlushViewOfFile (PCVOID a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x47d */
  /* file winbase.c line 1383 addr 0x47d */
  /* file winbase.c line 1383 addr 0x480 */
} /* 0x484 */
DWORD FormatMessageA (DWORD a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, LPSTR e /* 0x18 */, DWORD f /* 0x1c */, va_list *g /* 0x20 */)
{ /* 0x484 */
  /* file winbase.c line 1384 addr 0x484 */
  /* file winbase.c line 1384 addr 0x487 */
} /* 0x48b */
DWORD FormatMessageW (DWORD a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, LPWSTR e /* 0x18 */, DWORD f /* 0x1c */, va_list *g /* 0x20 */)
{ /* 0x48b */
  /* file winbase.c line 1385 addr 0x48b */
  /* file winbase.c line 1385 addr 0x48e */
} /* 0x492 */
BOOL FreeEnvironmentStringsA (LPSTR a /* 0x8 */)
{ /* 0x492 */
  /* file winbase.c line 1386 addr 0x492 */
  /* file winbase.c line 1386 addr 0x495 */
} /* 0x499 */
BOOL FreeEnvironmentStringsW (LPWSTR a /* 0x8 */)
{ /* 0x499 */
  /* file winbase.c line 1387 addr 0x499 */
  /* file winbase.c line 1387 addr 0x49c */
} /* 0x4a0 */
BOOL FreeLibrary (HMODULE a /* 0x8 */)
{ /* 0x4a0 */
  /* file winbase.c line 1388 addr 0x4a0 */
  /* file winbase.c line 1388 addr 0x4a3 */
} /* 0x4a7 */
void FreeLibraryAndExitThread (HMODULE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x4a7 */
  /* file winbase.c line 1389 addr 0x4a7 */
  /* file winbase.c line 1389 addr 0x4aa */
} /* 0x4ae */
BOOL FreeResource (HGLOBAL a /* 0x8 */)
{ /* 0x4ae */
  /* file winbase.c line 1393 addr 0x4ae */
  /* file winbase.c line 1393 addr 0x4b1 */
} /* 0x4b5 */
PVOID FreeSid (PSID a /* 0x8 */)
{ /* 0x4b5 */
  /* file winbase.c line 1395 addr 0x4b5 */
  /* file winbase.c line 1395 addr 0x4b8 */
} /* 0x4bc */
BOOL GetAce (PACL a /* 0x8 */, DWORD b /* 0xc */, LPVOID *c /* 0x10 */)
{ /* 0x4bc */
  /* file winbase.c line 1396 addr 0x4bc */
  /* file winbase.c line 1396 addr 0x4bf */
} /* 0x4c3 */
BOOL GetAclInformation (PACL a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, ACL_INFORMATION_CLASS d /* 0x14 */)
{ /* 0x4c3 */
  /* file winbase.c line 1397 addr 0x4c3 */
  /* file winbase.c line 1397 addr 0x4c6 */
} /* 0x4ca */
UINT GetAtomNameA (int a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x4ca */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1398 addr 0x4ca */
  /* file winbase.c line 1398 addr 0x4d7 */
} /* 0x4db */
UINT GetAtomNameW (int a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x4db */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1399 addr 0x4db */
  /* file winbase.c line 1399 addr 0x4e8 */
} /* 0x4ec */
BOOL GetBinaryTypeA (LPCSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x4ec */
  /* file winbase.c line 1400 addr 0x4ec */
  /* file winbase.c line 1400 addr 0x4ef */
} /* 0x4f3 */
BOOL GetBinaryTypeW (LPCWSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x4f3 */
  /* file winbase.c line 1401 addr 0x4f3 */
  /* file winbase.c line 1401 addr 0x4f6 */
} /* 0x4fa */
LPSTR GetCommandLineA ()
{ /* 0x4fa */
  /* file winbase.c line 1402 addr 0x4fa */
  /* file winbase.c line 1402 addr 0x4fd */
} /* 0x4ff */
LPWSTR GetCommandLineW ()
{ /* 0x4ff */
  /* file winbase.c line 1403 addr 0x4ff */
  /* file winbase.c line 1403 addr 0x502 */
} /* 0x504 */
BOOL GetCommConfig (HANDLE a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0x504 */
  /* file winbase.c line 1404 addr 0x504 */
  /* file winbase.c line 1404 addr 0x507 */
} /* 0x50b */
BOOL GetCommMask (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x50b */
  /* file winbase.c line 1405 addr 0x50b */
  /* file winbase.c line 1405 addr 0x50e */
} /* 0x512 */
BOOL GetCommModemStatus (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x512 */
  /* file winbase.c line 1406 addr 0x512 */
  /* file winbase.c line 1406 addr 0x515 */
} /* 0x519 */
BOOL GetCommProperties (HANDLE a /* 0x8 */, LPCOMMPROP b /* 0xc */)
{ /* 0x519 */
  /* file winbase.c line 1407 addr 0x519 */
  /* file winbase.c line 1407 addr 0x51c */
} /* 0x520 */
BOOL GetCommState (HANDLE a /* 0x8 */, LPDCB b /* 0xc */)
{ /* 0x520 */
  /* file winbase.c line 1408 addr 0x520 */
  /* file winbase.c line 1408 addr 0x523 */
} /* 0x527 */
BOOL GetCommTimeouts (HANDLE a /* 0x8 */, LPCOMMTIMEOUTS b /* 0xc */)
{ /* 0x527 */
  /* file winbase.c line 1409 addr 0x527 */
  /* file winbase.c line 1409 addr 0x52a */
} /* 0x52e */
DWORD GetCompressedFileSizeA (LPCSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x52e */
  /* file winbase.c line 1410 addr 0x52e */
  /* file winbase.c line 1410 addr 0x531 */
} /* 0x535 */
DWORD GetCompressedFileSizeW (LPCWSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x535 */
  /* file winbase.c line 1411 addr 0x535 */
  /* file winbase.c line 1411 addr 0x538 */
} /* 0x53c */
BOOL GetComputerNameA (LPSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x53c */
  /* file winbase.c line 1412 addr 0x53c */
  /* file winbase.c line 1412 addr 0x53f */
} /* 0x543 */
BOOL GetComputerNameW (LPWSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x543 */
  /* file winbase.c line 1413 addr 0x543 */
  /* file winbase.c line 1413 addr 0x546 */
} /* 0x54a */
DWORD GetCurrentDirectoryA (DWORD a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x54a */
  /* file winbase.c line 1421 addr 0x54a */
  /* file winbase.c line 1421 addr 0x54d */
} /* 0x551 */
DWORD GetCurrentDirectoryW (DWORD a /* 0x8 */, LPWSTR b /* 0xc */)
{ /* 0x551 */
  /* file winbase.c line 1422 addr 0x551 */
  /* file winbase.c line 1422 addr 0x554 */
} /* 0x558 */
BOOL GetCurrentHwProfileA (LPHW_PROFILE_INFOA a /* 0x8 */)
{ /* 0x558 */
  /* file winbase.c line 1423 addr 0x558 */
  /* file winbase.c line 1423 addr 0x55b */
} /* 0x55f */
BOOL GetCurrentHwProfileW (LPHW_PROFILE_INFOW a /* 0x8 */)
{ /* 0x55f */
  /* file winbase.c line 1424 addr 0x55f */
  /* file winbase.c line 1424 addr 0x562 */
} /* 0x566 */
HANDLE GetCurrentProcess ()
{ /* 0x566 */
  /* file winbase.c line 1425 addr 0x566 */
  /* file winbase.c line 1425 addr 0x569 */
} /* 0x56b */
DWORD GetCurrentProcessId ()
{ /* 0x56b */
  /* file winbase.c line 1426 addr 0x56b */
  /* file winbase.c line 1426 addr 0x56e */
} /* 0x570 */
HANDLE GetCurrentThread ()
{ /* 0x570 */
  /* file winbase.c line 1427 addr 0x570 */
  /* file winbase.c line 1427 addr 0x573 */
} /* 0x575 */
DWORD GetCurrentThreadId ()
{ /* 0x575 */
  /* file winbase.c line 1431 addr 0x575 */
  /* file winbase.c line 1431 addr 0x578 */
} /* 0x57a */
BOOL GetDefaultCommConfigA (LPCSTR a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0x57a */
  /* file winbase.c line 1434 addr 0x57a */
  /* file winbase.c line 1434 addr 0x57d */
} /* 0x581 */
BOOL GetDefaultCommConfigW (LPCWSTR a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0x581 */
  /* file winbase.c line 1435 addr 0x581 */
  /* file winbase.c line 1435 addr 0x584 */
} /* 0x588 */
BOOL GetDevicePowerState (HANDLE a /* 0x8 */, BOOL *b /* 0xc */)
{ /* 0x588 */
  /* file winbase.c line 1436 addr 0x588 */
  /* file winbase.c line 1436 addr 0x58b */
} /* 0x58f */
BOOL GetDiskFreeSpaceA (LPCSTR a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x58f */
  /* file winbase.c line 1437 addr 0x58f */
  /* file winbase.c line 1437 addr 0x592 */
} /* 0x596 */
BOOL GetDiskFreeSpaceW (LPCWSTR a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x596 */
  /* file winbase.c line 1438 addr 0x596 */
  /* file winbase.c line 1438 addr 0x599 */
} /* 0x59d */
BOOL GetDiskFreeSpaceExA (LPCSTR a /* 0x8 */, PULARGE_INTEGER b /* 0xc */, PULARGE_INTEGER c /* 0x10 */, PULARGE_INTEGER d /* 0x14 */)
{ /* 0x59d */
  /* file winbase.c line 1439 addr 0x59d */
  /* file winbase.c line 1439 addr 0x5a0 */
} /* 0x5a4 */
BOOL GetDiskFreeSpaceExW (LPCWSTR a /* 0x8 */, PULARGE_INTEGER b /* 0xc */, PULARGE_INTEGER c /* 0x10 */, PULARGE_INTEGER d /* 0x14 */)
{ /* 0x5a4 */
  /* file winbase.c line 1440 addr 0x5a4 */
  /* file winbase.c line 1440 addr 0x5a7 */
} /* 0x5ab */
UINT GetDriveTypeA (LPCSTR a /* 0x8 */)
{ /* 0x5ab */
  /* file winbase.c line 1445 addr 0x5ab */
  /* file winbase.c line 1445 addr 0x5ae */
} /* 0x5b2 */
UINT GetDriveTypeW (LPCWSTR a /* 0x8 */)
{ /* 0x5b2 */
  /* file winbase.c line 1446 addr 0x5b2 */
  /* file winbase.c line 1446 addr 0x5b5 */
} /* 0x5b9 */
LPSTR GetEnvironmentStrings ()
{ /* 0x5b9 */
  /* file winbase.c line 1447 addr 0x5b9 */
  /* file winbase.c line 1447 addr 0x5bc */
} /* 0x5be */
LPSTR GetEnvironmentStringsA ()
{ /* 0x5be */
  /* file winbase.c line 1448 addr 0x5be */
  /* file winbase.c line 1448 addr 0x5c1 */
} /* 0x5c3 */
LPWSTR GetEnvironmentStringsW ()
{ /* 0x5c3 */
  /* file winbase.c line 1449 addr 0x5c3 */
  /* file winbase.c line 1449 addr 0x5c6 */
} /* 0x5c8 */
DWORD GetEnvironmentVariableA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x5c8 */
  /* file winbase.c line 1450 addr 0x5c8 */
  /* file winbase.c line 1450 addr 0x5cb */
} /* 0x5cf */
DWORD GetEnvironmentVariableW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x5cf */
  /* file winbase.c line 1451 addr 0x5cf */
  /* file winbase.c line 1451 addr 0x5d2 */
} /* 0x5d6 */
BOOL GetExitCodeProcess (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x5d6 */
  /* file winbase.c line 1452 addr 0x5d6 */
  /* file winbase.c line 1452 addr 0x5d9 */
} /* 0x5dd */
BOOL GetExitCodeThread (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x5dd */
  /* file winbase.c line 1453 addr 0x5dd */
  /* file winbase.c line 1453 addr 0x5e0 */
} /* 0x5e4 */
DWORD GetFileAttributesA (LPCSTR a /* 0x8 */)
{ /* 0x5e4 */
  /* file winbase.c line 1454 addr 0x5e4 */
  /* file winbase.c line 1454 addr 0x5e7 */
} /* 0x5eb */
DWORD GetFileAttributesW (LPCWSTR a /* 0x8 */)
{ /* 0x5eb */
  /* file winbase.c line 1455 addr 0x5eb */
  /* file winbase.c line 1455 addr 0x5ee */
} /* 0x5f2 */
BOOL GetFileAttributesExA (LPCSTR a /* 0x8 */, GET_FILEEX_INFO_LEVELS b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x5f2 */
  /* file winbase.c line 1456 addr 0x5f2 */
  /* file winbase.c line 1456 addr 0x5f5 */
} /* 0x5f9 */
BOOL GetFileAttributesExW (LPCWSTR a /* 0x8 */, GET_FILEEX_INFO_LEVELS b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x5f9 */
  /* file winbase.c line 1457 addr 0x5f9 */
  /* file winbase.c line 1457 addr 0x5fc */
} /* 0x600 */
BOOL GetFileInformationByHandle (HANDLE a /* 0x8 */, LPBY_HANDLE_FILE_INFORMATION b /* 0xc */)
{ /* 0x600 */
  /* file winbase.c line 1458 addr 0x600 */
  /* file winbase.c line 1458 addr 0x603 */
} /* 0x607 */
BOOL GetFileSecurityA (LPCSTR a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x607 */
  /* file winbase.c line 1459 addr 0x607 */
  /* file winbase.c line 1459 addr 0x60a */
} /* 0x60e */
BOOL GetFileSecurityW (LPCWSTR a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x60e */
  /* file winbase.c line 1460 addr 0x60e */
  /* file winbase.c line 1460 addr 0x611 */
} /* 0x615 */
DWORD GetFileSize (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x615 */
  /* file winbase.c line 1461 addr 0x615 */
  /* file winbase.c line 1461 addr 0x618 */
} /* 0x61c */
BOOL GetFileTime (HANDLE a /* 0x8 */, LPFILETIME b /* 0xc */, LPFILETIME c /* 0x10 */, LPFILETIME d /* 0x14 */)
{ /* 0x61c */
  /* file winbase.c line 1465 addr 0x61c */
  /* file winbase.c line 1465 addr 0x61f */
} /* 0x623 */
DWORD GetFileType (HANDLE a /* 0x8 */)
{ /* 0x623 */
  /* file winbase.c line 1466 addr 0x623 */
  /* file winbase.c line 1466 addr 0x626 */
} /* 0x62a */
DWORD GetFullPathNameA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, LPSTR c /* 0x10 */, LPSTR *d /* 0x14 */)
{ /* 0x62a */
  /* file winbase.c line 1468 addr 0x62a */
  /* file winbase.c line 1468 addr 0x62d */
} /* 0x631 */
DWORD GetFullPathNameW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, LPWSTR c /* 0x10 */, LPWSTR *d /* 0x14 */)
{ /* 0x631 */
  /* file winbase.c line 1469 addr 0x631 */
  /* file winbase.c line 1469 addr 0x634 */
} /* 0x638 */
BOOL GetHandleInformation (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x638 */
  /* file winbase.c line 1470 addr 0x638 */
  /* file winbase.c line 1470 addr 0x63b */
} /* 0x63f */
BOOL GetKernelObjectSecurity (HANDLE a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x63f */
  /* file winbase.c line 1471 addr 0x63f */
  /* file winbase.c line 1471 addr 0x642 */
} /* 0x646 */
DWORD GetLastError ()
{ /* 0x646 */
  /* file winbase.c line 1472 addr 0x646 */
  /* file winbase.c line 1472 addr 0x649 */
} /* 0x64b */
DWORD GetLengthSid (PSID a /* 0x8 */)
{ /* 0x64b */
  /* file winbase.c line 1473 addr 0x64b */
  /* file winbase.c line 1473 addr 0x64e */
} /* 0x652 */
void GetLocalTime (LPSYSTEMTIME a /* 0x8 */)
{ /* 0x652 */
  /* file winbase.c line 1474 addr 0x652 */
  /* file winbase.c line 1474 addr 0x655 */
} /* 0x659 */
DWORD GetLogicalDrives ()
{ /* 0x659 */
  /* file winbase.c line 1475 addr 0x659 */
  /* file winbase.c line 1475 addr 0x65c */
} /* 0x65e */
DWORD GetLogicalDriveStringsA (DWORD a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x65e */
  /* file winbase.c line 1476 addr 0x65e */
  /* file winbase.c line 1476 addr 0x661 */
} /* 0x665 */
DWORD GetLogicalDriveStringsW (DWORD a /* 0x8 */, LPWSTR b /* 0xc */)
{ /* 0x665 */
  /* file winbase.c line 1477 addr 0x665 */
  /* file winbase.c line 1477 addr 0x668 */
} /* 0x66c */
BOOL GetMailslotInfo (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x66c */
  /* file winbase.c line 1482 addr 0x66c */
  /* file winbase.c line 1482 addr 0x66f */
} /* 0x673 */
DWORD GetModuleFileNameA (HINSTANCE a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x673 */
  /* file winbase.c line 1483 addr 0x673 */
  /* file winbase.c line 1483 addr 0x676 */
} /* 0x67a */
DWORD GetModuleFileNameW (HINSTANCE a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x67a */
  /* file winbase.c line 1484 addr 0x67a */
  /* file winbase.c line 1484 addr 0x67d */
} /* 0x681 */
HMODULE GetModuleHandleA (LPCSTR a /* 0x8 */)
{ /* 0x681 */
  /* file winbase.c line 1485 addr 0x681 */
  /* file winbase.c line 1485 addr 0x684 */
} /* 0x688 */
HMODULE GetModuleHandleW (LPCWSTR a /* 0x8 */)
{ /* 0x688 */
  /* file winbase.c line 1486 addr 0x688 */
  /* file winbase.c line 1486 addr 0x68b */
} /* 0x68f */
BOOL GetNamedPipeHandleStateA (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */, LPSTR f /* 0x1c */, DWORD g /* 0x20 */)
{ /* 0x68f */
  /* file winbase.c line 1491 addr 0x68f */
  /* file winbase.c line 1491 addr 0x692 */
} /* 0x696 */
BOOL GetNamedPipeHandleStateW (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */, LPWSTR f /* 0x1c */, DWORD g /* 0x20 */)
{ /* 0x696 */
  /* file winbase.c line 1492 addr 0x696 */
  /* file winbase.c line 1492 addr 0x699 */
} /* 0x69d */
BOOL GetNamedPipeInfo (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x69d */
  /* file winbase.c line 1493 addr 0x69d */
  /* file winbase.c line 1493 addr 0x6a0 */
} /* 0x6a4 */
BOOL GetNumberOfEventLogRecords (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x6a4 */
  /* file winbase.c line 1497 addr 0x6a4 */
  /* file winbase.c line 1497 addr 0x6a7 */
} /* 0x6ab */
BOOL GetOldestEventLogRecord (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x6ab */
  /* file winbase.c line 1498 addr 0x6ab */
  /* file winbase.c line 1498 addr 0x6ae */
} /* 0x6b2 */
BOOL GetOverlappedResult (HANDLE a /* 0x8 */, LPOVERLAPPED b /* 0xc */, PDWORD c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0x6b2 */
  /* file winbase.c line 1499 addr 0x6b2 */
  /* file winbase.c line 1499 addr 0x6b5 */
} /* 0x6b9 */
DWORD GetPriorityClass (HANDLE a /* 0x8 */)
{ /* 0x6b9 */
  /* file winbase.c line 1500 addr 0x6b9 */
  /* file winbase.c line 1500 addr 0x6bc */
} /* 0x6c0 */
BOOL GetPrivateObjectSecurity (PSECURITY_DESCRIPTOR a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x6c0 */
  /* file winbase.c line 1501 addr 0x6c0 */
  /* file winbase.c line 1501 addr 0x6c3 */
} /* 0x6c7 */
UINT GetPrivateProfileIntA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, INT c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x6c7 */
  /* file winbase.c line 1502 addr 0x6c7 */
  /* file winbase.c line 1502 addr 0x6ca */
} /* 0x6ce */
UINT GetPrivateProfileIntW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, INT c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x6ce */
  /* file winbase.c line 1503 addr 0x6ce */
  /* file winbase.c line 1503 addr 0x6d1 */
} /* 0x6d5 */
DWORD GetPrivateProfileSectionA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x6d5 */
  /* file winbase.c line 1504 addr 0x6d5 */
  /* file winbase.c line 1504 addr 0x6d8 */
} /* 0x6dc */
DWORD GetPrivateProfileSectionW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x6dc */
  /* file winbase.c line 1505 addr 0x6dc */
  /* file winbase.c line 1505 addr 0x6df */
} /* 0x6e3 */
DWORD GetPrivateProfileSectionNamesA (LPSTR a /* 0x8 */, DWORD b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x6e3 */
  /* file winbase.c line 1506 addr 0x6e3 */
  /* file winbase.c line 1506 addr 0x6e6 */
} /* 0x6ea */
DWORD GetPrivateProfileSectionNamesW (LPWSTR a /* 0x8 */, DWORD b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x6ea */
  /* file winbase.c line 1507 addr 0x6ea */
  /* file winbase.c line 1507 addr 0x6ed */
} /* 0x6f1 */
DWORD GetPrivateProfileStringA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, LPSTR d /* 0x14 */, DWORD e /* 0x18 */, LPCSTR f /* 0x1c */)
{ /* 0x6f1 */
  /* file winbase.c line 1508 addr 0x6f1 */
  /* file winbase.c line 1508 addr 0x6f4 */
} /* 0x6f8 */
DWORD GetPrivateProfileStringW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, LPWSTR d /* 0x14 */, DWORD e /* 0x18 */, LPCWSTR f /* 0x1c */)
{ /* 0x6f8 */
  /* file winbase.c line 1509 addr 0x6f8 */
  /* file winbase.c line 1509 addr 0x6fb */
} /* 0x6ff */
BOOL GetPrivateProfileStructA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPVOID c /* 0x10 */, UINT d /* 0x14 */, LPCSTR e /* 0x18 */)
{ /* 0x6ff */
  /* file winbase.c line 1510 addr 0x6ff */
  /* file winbase.c line 1510 addr 0x702 */
} /* 0x706 */
BOOL GetPrivateProfileStructW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPVOID c /* 0x10 */, UINT d /* 0x14 */, LPCWSTR e /* 0x18 */)
{ /* 0x706 */
  /* file winbase.c line 1511 addr 0x706 */
  /* file winbase.c line 1511 addr 0x709 */
} /* 0x70d */
FARPROC GetProcAddress (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x70d */
  /* file winbase.c line 1512 addr 0x70d */
  /* file winbase.c line 1512 addr 0x710 */
} /* 0x714 */
BOOL GetProcessAffinityMask (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0x714 */
  /* file winbase.c line 1513 addr 0x714 */
  /* file winbase.c line 1513 addr 0x717 */
} /* 0x71b */
HANDLE GetProcessHeap ()
{ /* 0x71b */
  /* file winbase.c line 1520 addr 0x71b */
  /* file winbase.c line 1520 addr 0x71e */
} /* 0x720 */
DWORD GetProcessHeaps (DWORD a /* 0x8 */, PHANDLE b /* 0xc */)
{ /* 0x720 */
  /* file winbase.c line 1521 addr 0x720 */
  /* file winbase.c line 1521 addr 0x723 */
} /* 0x727 */
BOOL GetProcessPriorityBoost (HANDLE a /* 0x8 */, PBOOL b /* 0xc */)
{ /* 0x727 */
  /* file winbase.c line 1528 addr 0x727 */
  /* file winbase.c line 1528 addr 0x72a */
} /* 0x72e */
BOOL GetProcessShutdownParameters (PDWORD a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x72e */
  /* file winbase.c line 1529 addr 0x72e */
  /* file winbase.c line 1529 addr 0x731 */
} /* 0x735 */
BOOL GetProcessTimes (HANDLE a /* 0x8 */, LPFILETIME b /* 0xc */, LPFILETIME c /* 0x10 */, LPFILETIME d /* 0x14 */, LPFILETIME e /* 0x18 */)
{ /* 0x735 */
  /* file winbase.c line 1530 addr 0x735 */
  /* file winbase.c line 1530 addr 0x738 */
} /* 0x73c */
DWORD GetProcessVersion (DWORD a /* 0x8 */)
{ /* 0x73c */
  /* file winbase.c line 1531 addr 0x73c */
  /* file winbase.c line 1531 addr 0x73f */
} /* 0x743 */
HWINSTA GetProcessWindowStation ()
{ /* 0x743 */
  /* file winbase.c line 1532 addr 0x743 */
  /* file winbase.c line 1532 addr 0x746 */
} /* 0x748 */
BOOL GetProcessWorkingSetSize (HANDLE a /* 0x8 */, PSIZE_T b /* 0xc */, PSIZE_T c /* 0x10 */)
{ /* 0x748 */
  /* file winbase.c line 1533 addr 0x748 */
  /* file winbase.c line 1533 addr 0x74b */
} /* 0x74f */
UINT GetProfileIntA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, INT c /* 0x10 */)
{ /* 0x74f */
  /* file winbase.c line 1534 addr 0x74f */
  /* file winbase.c line 1534 addr 0x752 */
} /* 0x756 */
UINT GetProfileIntW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, INT c /* 0x10 */)
{ /* 0x756 */
  /* file winbase.c line 1535 addr 0x756 */
  /* file winbase.c line 1535 addr 0x759 */
} /* 0x75d */
DWORD GetProfileSectionA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x75d */
  /* file winbase.c line 1536 addr 0x75d */
  /* file winbase.c line 1536 addr 0x760 */
} /* 0x764 */
DWORD GetProfileSectionW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x764 */
  /* file winbase.c line 1537 addr 0x764 */
  /* file winbase.c line 1537 addr 0x767 */
} /* 0x76b */
DWORD GetProfileStringA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, LPSTR d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x76b */
  /* file winbase.c line 1538 addr 0x76b */
  /* file winbase.c line 1538 addr 0x76e */
} /* 0x772 */
DWORD GetProfileStringW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, LPWSTR d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x772 */
  /* file winbase.c line 1539 addr 0x772 */
  /* file winbase.c line 1539 addr 0x775 */
} /* 0x779 */
BOOL GetQueuedCompletionStatus (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PULONG_PTR c /* 0x10 */, LPOVERLAPPED *d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x779 */
  /* file winbase.c line 1540 addr 0x779 */
  /* file winbase.c line 1540 addr 0x77c */
} /* 0x780 */
BOOL GetSecurityDescriptorControl (PSECURITY_DESCRIPTOR a /* 0x8 */, PSECURITY_DESCRIPTOR_CONTROL b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0x780 */
  /* file winbase.c line 1541 addr 0x780 */
  /* file winbase.c line 1541 addr 0x783 */
} /* 0x787 */
BOOL GetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR a /* 0x8 */, LPBOOL b /* 0xc */, PACL *c /* 0x10 */, LPBOOL d /* 0x14 */)
{ /* 0x787 */
  /* file winbase.c line 1542 addr 0x787 */
  /* file winbase.c line 1542 addr 0x78a */
} /* 0x78e */
BOOL GetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR a /* 0x8 */, PSID *b /* 0xc */, LPBOOL c /* 0x10 */)
{ /* 0x78e */
  /* file winbase.c line 1543 addr 0x78e */
  /* file winbase.c line 1543 addr 0x791 */
} /* 0x795 */
DWORD GetSecurityDescriptorLength (PSECURITY_DESCRIPTOR a /* 0x8 */)
{ /* 0x795 */
  /* file winbase.c line 1544 addr 0x795 */
  /* file winbase.c line 1544 addr 0x798 */
} /* 0x79c */
BOOL GetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR a /* 0x8 */, PSID *b /* 0xc */, LPBOOL c /* 0x10 */)
{ /* 0x79c */
  /* file winbase.c line 1545 addr 0x79c */
  /* file winbase.c line 1545 addr 0x79f */
} /* 0x7a3 */
BOOL GetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR a /* 0x8 */, LPBOOL b /* 0xc */, PACL *c /* 0x10 */, LPBOOL d /* 0x14 */)
{ /* 0x7a3 */
  /* file winbase.c line 1546 addr 0x7a3 */
  /* file winbase.c line 1546 addr 0x7a6 */
} /* 0x7aa */
DWORD GetShortPathNameA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x7aa */
  /* file winbase.c line 1547 addr 0x7aa */
  /* file winbase.c line 1547 addr 0x7ad */
} /* 0x7b1 */
DWORD GetShortPathNameW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x7b1 */
  /* file winbase.c line 1548 addr 0x7b1 */
  /* file winbase.c line 1548 addr 0x7b4 */
} /* 0x7b8 */
PSID_IDENTIFIER_AUTHORITY GetSidIdentifierAuthority (PSID a /* 0x8 */)
{ /* 0x7b8 */
  /* file winbase.c line 1549 addr 0x7b8 */
  /* file winbase.c line 1549 addr 0x7bb */
} /* 0x7bf */
DWORD GetSidLengthRequired (int a /* 0x8 */)
{ /* 0x7bf */
  UCHAR a /* 0xffffffff */;
  /* file winbase.c line 1550 addr 0x7bf */
  /* file winbase.c line 1550 addr 0x7cb */
} /* 0x7cf */
PDWORD GetSidSubAuthority (PSID a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x7cf */
  /* file winbase.c line 1551 addr 0x7cf */
  /* file winbase.c line 1551 addr 0x7d2 */
} /* 0x7d6 */
PUCHAR GetSidSubAuthorityCount (PSID a /* 0x8 */)
{ /* 0x7d6 */
  /* file winbase.c line 1552 addr 0x7d6 */
  /* file winbase.c line 1552 addr 0x7d9 */
} /* 0x7dd */
void GetStartupInfoA (LPSTARTUPINFOA a /* 0x8 */)
{ /* 0x7dd */
  /* file winbase.c line 1553 addr 0x7dd */
  /* file winbase.c line 1553 addr 0x7e0 */
} /* 0x7e4 */
void GetStartupInfoW (LPSTARTUPINFOW a /* 0x8 */)
{ /* 0x7e4 */
  /* file winbase.c line 1554 addr 0x7e4 */
  /* file winbase.c line 1554 addr 0x7e7 */
} /* 0x7eb */
HANDLE GetStdHandle (DWORD a /* 0x8 */)
{ /* 0x7eb */
  /* file winbase.c line 1555 addr 0x7eb */
  /* file winbase.c line 1555 addr 0x7ee */
} /* 0x7f2 */
UINT GetSystemDirectoryA (LPSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x7f2 */
  /* file winbase.c line 1559 addr 0x7f2 */
  /* file winbase.c line 1559 addr 0x7f5 */
} /* 0x7f9 */
UINT GetSystemDirectoryW (LPWSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x7f9 */
  /* file winbase.c line 1560 addr 0x7f9 */
  /* file winbase.c line 1560 addr 0x7fc */
} /* 0x800 */
void GetSystemInfo (LPSYSTEM_INFO a /* 0x8 */)
{ /* 0x800 */
  /* file winbase.c line 1561 addr 0x800 */
  /* file winbase.c line 1561 addr 0x803 */
} /* 0x807 */
BOOL GetSystemPowerStatus (LPSYSTEM_POWER_STATUS a /* 0x8 */)
{ /* 0x807 */
  /* file winbase.c line 1562 addr 0x807 */
  /* file winbase.c line 1562 addr 0x80a */
} /* 0x80e */
void GetSystemTime (LPSYSTEMTIME a /* 0x8 */)
{ /* 0x80e */
  /* file winbase.c line 1566 addr 0x80e */
  /* file winbase.c line 1566 addr 0x811 */
} /* 0x815 */
BOOL GetSystemTimeAdjustment (PDWORD a /* 0x8 */, PDWORD b /* 0xc */, PBOOL c /* 0x10 */)
{ /* 0x815 */
  /* file winbase.c line 1570 addr 0x815 */
  /* file winbase.c line 1570 addr 0x818 */
} /* 0x81c */
void GetSystemTimeAsFileTime (LPFILETIME a /* 0x8 */)
{ /* 0x81c */
  /* file winbase.c line 1571 addr 0x81c */
  /* file winbase.c line 1571 addr 0x81f */
} /* 0x823 */
DWORD GetTapeParameters (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PDWORD c /* 0x10 */, PVOID d /* 0x14 */)
{ /* 0x823 */
  /* file winbase.c line 1580 addr 0x823 */
  /* file winbase.c line 1580 addr 0x826 */
} /* 0x82a */
DWORD GetTapePosition (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x82a */
  /* file winbase.c line 1581 addr 0x82a */
  /* file winbase.c line 1581 addr 0x82d */
} /* 0x831 */
DWORD GetTapeStatus (HANDLE a /* 0x8 */)
{ /* 0x831 */
  /* file winbase.c line 1582 addr 0x831 */
  /* file winbase.c line 1582 addr 0x834 */
} /* 0x838 */
UINT GetTempFileNameA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, UINT c /* 0x10 */, LPSTR d /* 0x14 */)
{ /* 0x838 */
  /* file winbase.c line 1583 addr 0x838 */
  /* file winbase.c line 1583 addr 0x83b */
} /* 0x83f */
UINT GetTempFileNameW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, UINT c /* 0x10 */, LPWSTR d /* 0x14 */)
{ /* 0x83f */
  /* file winbase.c line 1584 addr 0x83f */
  /* file winbase.c line 1584 addr 0x842 */
} /* 0x846 */
DWORD GetTempPathA (DWORD a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x846 */
  /* file winbase.c line 1585 addr 0x846 */
  /* file winbase.c line 1585 addr 0x849 */
} /* 0x84d */
DWORD GetTempPathW (DWORD a /* 0x8 */, LPWSTR b /* 0xc */)
{ /* 0x84d */
  /* file winbase.c line 1586 addr 0x84d */
  /* file winbase.c line 1586 addr 0x850 */
} /* 0x854 */
BOOL GetThreadContext (HANDLE a /* 0x8 */, LPCONTEXT b /* 0xc */)
{ /* 0x854 */
  /* file winbase.c line 1587 addr 0x854 */
  /* file winbase.c line 1587 addr 0x857 */
} /* 0x85b */
int GetThreadPriority (HANDLE a /* 0x8 */)
{ /* 0x85b */
  /* file winbase.c line 1591 addr 0x85b */
  /* file winbase.c line 1591 addr 0x85e */
} /* 0x862 */
BOOL GetThreadPriorityBoost (HANDLE a /* 0x8 */, PBOOL b /* 0xc */)
{ /* 0x862 */
  /* file winbase.c line 1592 addr 0x862 */
  /* file winbase.c line 1592 addr 0x865 */
} /* 0x869 */
BOOL GetThreadSelectorEntry (HANDLE a /* 0x8 */, DWORD b /* 0xc */, LPLDT_ENTRY c /* 0x10 */)
{ /* 0x869 */
  /* file winbase.c line 1593 addr 0x869 */
  /* file winbase.c line 1593 addr 0x86c */
} /* 0x870 */
BOOL GetThreadTimes (HANDLE a /* 0x8 */, LPFILETIME b /* 0xc */, LPFILETIME c /* 0x10 */, LPFILETIME d /* 0x14 */, LPFILETIME e /* 0x18 */)
{ /* 0x870 */
  /* file winbase.c line 1594 addr 0x870 */
  /* file winbase.c line 1594 addr 0x873 */
} /* 0x877 */
DWORD GetTickCount ()
{ /* 0x877 */
  /* file winbase.c line 1595 addr 0x877 */
  /* file winbase.c line 1595 addr 0x87a */
} /* 0x87c */
DWORD GetTimeZoneInformation (LPTIME_ZONE_INFORMATION a /* 0x8 */)
{ /* 0x87c */
  /* file winbase.c line 1596 addr 0x87c */
  /* file winbase.c line 1596 addr 0x87f */
} /* 0x883 */
BOOL GetTokenInformation (HANDLE a /* 0x8 */, TOKEN_INFORMATION_CLASS b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x883 */
  /* file winbase.c line 1597 addr 0x883 */
  /* file winbase.c line 1597 addr 0x886 */
} /* 0x88a */
BOOL GetUserNameA (LPSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x88a */
  /* file winbase.c line 1598 addr 0x88a */
  /* file winbase.c line 1598 addr 0x88d */
} /* 0x891 */
BOOL GetUserNameW (LPWSTR a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x891 */
  /* file winbase.c line 1599 addr 0x891 */
  /* file winbase.c line 1599 addr 0x894 */
} /* 0x898 */
DWORD GetVersion ()
{ /* 0x898 */
  /* file winbase.c line 1600 addr 0x898 */
  /* file winbase.c line 1600 addr 0x89b */
} /* 0x89d */
BOOL GetVersionExA (LPOSVERSIONINFOA a /* 0x8 */)
{ /* 0x89d */
  /* file winbase.c line 1601 addr 0x89d */
  /* file winbase.c line 1601 addr 0x8a0 */
} /* 0x8a4 */
BOOL GetVersionExW (LPOSVERSIONINFOW a /* 0x8 */)
{ /* 0x8a4 */
  /* file winbase.c line 1602 addr 0x8a4 */
  /* file winbase.c line 1602 addr 0x8a7 */
} /* 0x8ab */
BOOL GetVolumeInformationA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */, PDWORD f /* 0x1c */, LPSTR g /* 0x20 */, DWORD h /* 0x24 */)
{ /* 0x8ab */
  /* file winbase.c line 1603 addr 0x8ab */
  /* file winbase.c line 1603 addr 0x8ae */
} /* 0x8b2 */
BOOL GetVolumeInformationW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */, PDWORD f /* 0x1c */, LPWSTR g /* 0x20 */, DWORD h /* 0x24 */)
{ /* 0x8b2 */
  /* file winbase.c line 1604 addr 0x8b2 */
  /* file winbase.c line 1604 addr 0x8b5 */
} /* 0x8b9 */
UINT GetWindowsDirectoryA (LPSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x8b9 */
  /* file winbase.c line 1615 addr 0x8b9 */
  /* file winbase.c line 1615 addr 0x8bc */
} /* 0x8c0 */
UINT GetWindowsDirectoryW (LPWSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x8c0 */
  /* file winbase.c line 1616 addr 0x8c0 */
  /* file winbase.c line 1616 addr 0x8c3 */
} /* 0x8c7 */
DWORD GetWindowThreadProcessId (HWND a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x8c7 */
  /* file winbase.c line 1617 addr 0x8c7 */
  /* file winbase.c line 1617 addr 0x8ca */
} /* 0x8ce */
UINT GetWriteWatch (DWORD a /* 0x8 */, PVOID b /* 0xc */, SIZE_T c /* 0x10 */, PVOID *d /* 0x14 */, PULONG_PTR e /* 0x18 */, PULONG f /* 0x1c */)
{ /* 0x8ce */
  /* file winbase.c line 1618 addr 0x8ce */
  /* file winbase.c line 1618 addr 0x8d1 */
} /* 0x8d5 */
ATOM GlobalAddAtomA (LPCSTR a /* 0x8 */)
{ /* 0x8d5 */
  /* file winbase.c line 1619 addr 0x8d5 */
  /* file winbase.c line 1619 addr 0x8d8 */
} /* 0x8dc */
ATOM GlobalAddAtomW (LPCWSTR a /* 0x8 */)
{ /* 0x8dc */
  /* file winbase.c line 1620 addr 0x8dc */
  /* file winbase.c line 1620 addr 0x8df */
} /* 0x8e3 */
HGLOBAL GlobalAlloc (UINT a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x8e3 */
  /* file winbase.c line 1621 addr 0x8e3 */
  /* file winbase.c line 1621 addr 0x8e6 */
} /* 0x8ea */
SIZE_T GlobalCompact (DWORD a /* 0x8 */)
{ /* 0x8ea */
  /* file winbase.c line 1622 addr 0x8ea */
  /* file winbase.c line 1622 addr 0x8ed */
} /* 0x8f1 */
ATOM GlobalDeleteAtom (int a /* 0x8 */)
{ /* 0x8f1 */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1623 addr 0x8f1 */
  /* file winbase.c line 1623 addr 0x8fe */
} /* 0x902 */
ATOM GlobalFindAtomA (LPCSTR a /* 0x8 */)
{ /* 0x902 */
  /* file winbase.c line 1625 addr 0x902 */
  /* file winbase.c line 1625 addr 0x905 */
} /* 0x909 */
ATOM GlobalFindAtomW (LPCWSTR a /* 0x8 */)
{ /* 0x909 */
  /* file winbase.c line 1626 addr 0x909 */
  /* file winbase.c line 1626 addr 0x90c */
} /* 0x910 */
void GlobalFix (HGLOBAL a /* 0x8 */)
{ /* 0x910 */
  /* file winbase.c line 1627 addr 0x910 */
  /* file winbase.c line 1627 addr 0x913 */
} /* 0x917 */
UINT GlobalFlags (HGLOBAL a /* 0x8 */)
{ /* 0x917 */
  /* file winbase.c line 1628 addr 0x917 */
  /* file winbase.c line 1628 addr 0x91a */
} /* 0x91e */
HGLOBAL GlobalFree (HGLOBAL a /* 0x8 */)
{ /* 0x91e */
  /* file winbase.c line 1629 addr 0x91e */
  /* file winbase.c line 1629 addr 0x921 */
} /* 0x925 */
UINT GlobalGetAtomNameA (int a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x925 */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1630 addr 0x925 */
  /* file winbase.c line 1630 addr 0x932 */
} /* 0x936 */
UINT GlobalGetAtomNameW (int a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x936 */
  ATOM a /* 0xfffffffe */;
  /* file winbase.c line 1631 addr 0x936 */
  /* file winbase.c line 1631 addr 0x943 */
} /* 0x947 */
HGLOBAL GlobalHandle (PCVOID a /* 0x8 */)
{ /* 0x947 */
  /* file winbase.c line 1632 addr 0x947 */
  /* file winbase.c line 1632 addr 0x94a */
} /* 0x94e */
LPVOID GlobalLock (HGLOBAL a /* 0x8 */)
{ /* 0x94e */
  /* file winbase.c line 1633 addr 0x94e */
  /* file winbase.c line 1633 addr 0x951 */
} /* 0x955 */
void GlobalMemoryStatus (LPMEMORYSTATUS a /* 0x8 */)
{ /* 0x955 */
  /* file winbase.c line 1634 addr 0x955 */
  /* file winbase.c line 1634 addr 0x958 */
} /* 0x95c */
HGLOBAL GlobalReAlloc (HGLOBAL a /* 0x8 */, DWORD b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x95c */
  /* file winbase.c line 1638 addr 0x95c */
  /* file winbase.c line 1638 addr 0x95f */
} /* 0x963 */
DWORD GlobalSize (HGLOBAL a /* 0x8 */)
{ /* 0x963 */
  /* file winbase.c line 1639 addr 0x963 */
  /* file winbase.c line 1639 addr 0x966 */
} /* 0x96a */
void GlobalUnfix (HGLOBAL a /* 0x8 */)
{ /* 0x96a */
  /* file winbase.c line 1640 addr 0x96a */
  /* file winbase.c line 1640 addr 0x96d */
} /* 0x971 */
BOOL GlobalUnlock (HGLOBAL a /* 0x8 */)
{ /* 0x971 */
  /* file winbase.c line 1641 addr 0x971 */
  /* file winbase.c line 1641 addr 0x974 */
} /* 0x978 */
BOOL GlobalUnWire (HGLOBAL a /* 0x8 */)
{ /* 0x978 */
  /* file winbase.c line 1642 addr 0x978 */
  /* file winbase.c line 1642 addr 0x97b */
} /* 0x97f */
PVOID GlobalWire (HGLOBAL a /* 0x8 */)
{ /* 0x97f */
  /* file winbase.c line 1643 addr 0x97f */
  /* file winbase.c line 1643 addr 0x982 */
} /* 0x986 */
PVOID HeapAlloc (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x986 */
  /* file winbase.c line 1645 addr 0x986 */
  /* file winbase.c line 1645 addr 0x989 */
} /* 0x98d */
SIZE_T HeapCompact (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x98d */
  /* file winbase.c line 1646 addr 0x98d */
  /* file winbase.c line 1646 addr 0x990 */
} /* 0x994 */
HANDLE HeapCreate (DWORD a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x994 */
  /* file winbase.c line 1647 addr 0x994 */
  /* file winbase.c line 1647 addr 0x997 */
} /* 0x99b */
BOOL HeapDestroy (HANDLE a /* 0x8 */)
{ /* 0x99b */
  /* file winbase.c line 1648 addr 0x99b */
  /* file winbase.c line 1648 addr 0x99e */
} /* 0x9a2 */
BOOL HeapFree (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0x9a2 */
  /* file winbase.c line 1649 addr 0x9a2 */
  /* file winbase.c line 1649 addr 0x9a5 */
} /* 0x9a9 */
BOOL HeapLock (HANDLE a /* 0x8 */)
{ /* 0x9a9 */
  /* file winbase.c line 1650 addr 0x9a9 */
  /* file winbase.c line 1650 addr 0x9ac */
} /* 0x9b0 */
PVOID HeapReAlloc (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x9b0 */
  /* file winbase.c line 1654 addr 0x9b0 */
  /* file winbase.c line 1654 addr 0x9b3 */
} /* 0x9b7 */
DWORD HeapSize (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PCVOID c /* 0x10 */)
{ /* 0x9b7 */
  /* file winbase.c line 1658 addr 0x9b7 */
  /* file winbase.c line 1658 addr 0x9ba */
} /* 0x9be */
BOOL HeapUnlock (HANDLE a /* 0x8 */)
{ /* 0x9be */
  /* file winbase.c line 1659 addr 0x9be */
  /* file winbase.c line 1659 addr 0x9c1 */
} /* 0x9c5 */
BOOL HeapValidate (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PCVOID c /* 0x10 */)
{ /* 0x9c5 */
  /* file winbase.c line 1660 addr 0x9c5 */
  /* file winbase.c line 1660 addr 0x9c8 */
} /* 0x9cc */
BOOL HeapWalk (HANDLE a /* 0x8 */, LPPROCESS_HEAP_ENTRY b /* 0xc */)
{ /* 0x9cc */
  /* file winbase.c line 1661 addr 0x9cc */
  /* file winbase.c line 1661 addr 0x9cf */
} /* 0x9d3 */
BOOL ImpersonateLoggedOnUser (HANDLE a /* 0x8 */)
{ /* 0x9d3 */
  /* file winbase.c line 1662 addr 0x9d3 */
  /* file winbase.c line 1662 addr 0x9d6 */
} /* 0x9da */
BOOL ImpersonateNamedPipeClient (HANDLE a /* 0x8 */)
{ /* 0x9da */
  /* file winbase.c line 1663 addr 0x9da */
  /* file winbase.c line 1663 addr 0x9dd */
} /* 0x9e1 */
BOOL ImpersonateSelf (SECURITY_IMPERSONATION_LEVEL a /* 0x8 */)
{ /* 0x9e1 */
  /* file winbase.c line 1664 addr 0x9e1 */
  /* file winbase.c line 1664 addr 0x9e4 */
} /* 0x9e8 */
BOOL InitAtomTable (DWORD a /* 0x8 */)
{ /* 0x9e8 */
  /* file winbase.c line 1665 addr 0x9e8 */
  /* file winbase.c line 1665 addr 0x9eb */
} /* 0x9ef */
BOOL InitializeAcl (PACL a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x9ef */
  /* file winbase.c line 1666 addr 0x9ef */
  /* file winbase.c line 1666 addr 0x9f2 */
} /* 0x9f6 */
void InitializeCriticalSection (LPCRITICAL_SECTION a /* 0x8 */)
{ /* 0x9f6 */
  /* file winbase.c line 1667 addr 0x9f6 */
  /* file winbase.c line 1667 addr 0x9f9 */
} /* 0x9fd */
BOOL InitializeCriticalSectionAndSpinCount (LPCRITICAL_SECTION a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x9fd */
  /* file winbase.c line 1668 addr 0x9fd */
  /* file winbase.c line 1668 addr 0xa00 */
} /* 0xa04 */
DWORD SetCriticalSectionSpinCount (LPCRITICAL_SECTION a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xa04 */
  /* file winbase.c line 1669 addr 0xa04 */
  /* file winbase.c line 1669 addr 0xa07 */
} /* 0xa0b */
BOOL InitializeSecurityDescriptor (PSECURITY_DESCRIPTOR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xa0b */
  /* file winbase.c line 1670 addr 0xa0b */
  /* file winbase.c line 1670 addr 0xa0e */
} /* 0xa12 */
BOOL InitializeSid (PSID a /* 0x8 */, PSID_IDENTIFIER_AUTHORITY b /* 0xc */, int c /* 0x10 */)
{ /* 0xa12 */
  BYTE c /* 0xffffffff */;
  /* file winbase.c line 1671 addr 0xa12 */
  /* file winbase.c line 1671 addr 0xa1e */
} /* 0xa22 */
LONG InterlockedCompareExchange (LONG volatile *a /* 0x8 */, LONG b /* 0xc */, LONG c /* 0x10 */)
{ /* 0xa22 */
  /* file winbase.c line 1681 addr 0xa22 */
  /* file winbase.c line 1681 addr 0xa25 */
} /* 0xa29 */
LONG InterlockedDecrement (LONG volatile *a /* 0x8 */)
{ /* 0xa29 */
  /* file winbase.c line 1685 addr 0xa29 */
  /* file winbase.c line 1685 addr 0xa2c */
} /* 0xa30 */
LONG InterlockedExchange (LONG volatile *a /* 0x8 */, LONG b /* 0xc */)
{ /* 0xa30 */
  /* file winbase.c line 1686 addr 0xa30 */
  /* file winbase.c line 1686 addr 0xa33 */
} /* 0xa37 */
LONG InterlockedExchangeAdd (LONG volatile *a /* 0x8 */, LONG b /* 0xc */)
{ /* 0xa37 */
  /* file winbase.c line 1690 addr 0xa37 */
  /* file winbase.c line 1690 addr 0xa3a */
} /* 0xa3e */
LONG InterlockedIncrement (LONG volatile *a /* 0x8 */)
{ /* 0xa3e */
  /* file winbase.c line 1694 addr 0xa3e */
  /* file winbase.c line 1694 addr 0xa41 */
} /* 0xa45 */
BOOL IsBadCodePtr (FARPROC a /* 0x8 */)
{ /* 0xa45 */
  /* file winbase.c line 1702 addr 0xa45 */
  /* file winbase.c line 1702 addr 0xa48 */
} /* 0xa4c */
BOOL IsBadHugeReadPtr (PCVOID a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa4c */
  /* file winbase.c line 1703 addr 0xa4c */
  /* file winbase.c line 1703 addr 0xa4f */
} /* 0xa53 */
BOOL IsBadHugeWritePtr (PVOID a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa53 */
  /* file winbase.c line 1704 addr 0xa53 */
  /* file winbase.c line 1704 addr 0xa56 */
} /* 0xa5a */
BOOL IsBadReadPtr (PCVOID a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa5a */
  /* file winbase.c line 1705 addr 0xa5a */
  /* file winbase.c line 1705 addr 0xa5d */
} /* 0xa61 */
BOOL IsBadStringPtrA (LPCSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa61 */
  /* file winbase.c line 1706 addr 0xa61 */
  /* file winbase.c line 1706 addr 0xa64 */
} /* 0xa68 */
BOOL IsBadStringPtrW (LPCWSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa68 */
  /* file winbase.c line 1707 addr 0xa68 */
  /* file winbase.c line 1707 addr 0xa6b */
} /* 0xa6f */
BOOL IsBadWritePtr (PVOID a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xa6f */
  /* file winbase.c line 1708 addr 0xa6f */
  /* file winbase.c line 1708 addr 0xa72 */
} /* 0xa76 */
BOOL IsDebuggerPresent ()
{ /* 0xa76 */
  /* file winbase.c line 1709 addr 0xa76 */
  /* file winbase.c line 1709 addr 0xa79 */
} /* 0xa7b */
BOOL IsProcessorFeaturePresent (DWORD a /* 0x8 */)
{ /* 0xa7b */
  /* file winbase.c line 1713 addr 0xa7b */
  /* file winbase.c line 1713 addr 0xa7e */
} /* 0xa82 */
BOOL IsSystemResumeAutomatic ()
{ /* 0xa82 */
  /* file winbase.c line 1714 addr 0xa82 */
  /* file winbase.c line 1714 addr 0xa85 */
} /* 0xa87 */
BOOL IsTextUnicode (PCVOID a /* 0x8 */, int b /* 0xc */, LPINT c /* 0x10 */)
{ /* 0xa87 */
  /* file winbase.c line 1715 addr 0xa87 */
  /* file winbase.c line 1715 addr 0xa8a */
} /* 0xa8e */
BOOL IsValidAcl (PACL a /* 0x8 */)
{ /* 0xa8e */
  /* file winbase.c line 1716 addr 0xa8e */
  /* file winbase.c line 1716 addr 0xa91 */
} /* 0xa95 */
BOOL IsValidSecurityDescriptor (PSECURITY_DESCRIPTOR a /* 0x8 */)
{ /* 0xa95 */
  /* file winbase.c line 1717 addr 0xa95 */
  /* file winbase.c line 1717 addr 0xa98 */
} /* 0xa9c */
BOOL IsValidSid (PSID a /* 0x8 */)
{ /* 0xa9c */
  /* file winbase.c line 1718 addr 0xa9c */
  /* file winbase.c line 1718 addr 0xa9f */
} /* 0xaa3 */
void LeaveCriticalSection (LPCRITICAL_SECTION a /* 0x8 */)
{ /* 0xaa3 */
  /* file winbase.c line 1722 addr 0xaa3 */
  /* file winbase.c line 1722 addr 0xaa6 */
} /* 0xaaa */
HINSTANCE LoadLibraryA (LPCSTR a /* 0x8 */)
{ /* 0xaaa */
  /* file winbase.c line 1724 addr 0xaaa */
  /* file winbase.c line 1724 addr 0xaad */
} /* 0xab1 */
HINSTANCE LoadLibraryExA (LPCSTR a /* 0x8 */, HANDLE b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xab1 */
  /* file winbase.c line 1725 addr 0xab1 */
  /* file winbase.c line 1725 addr 0xab4 */
} /* 0xab8 */
HINSTANCE LoadLibraryExW (LPCWSTR a /* 0x8 */, HANDLE b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xab8 */
  /* file winbase.c line 1726 addr 0xab8 */
  /* file winbase.c line 1726 addr 0xabb */
} /* 0xabf */
HINSTANCE LoadLibraryW (LPCWSTR a /* 0x8 */)
{ /* 0xabf */
  /* file winbase.c line 1727 addr 0xabf */
  /* file winbase.c line 1727 addr 0xac2 */
} /* 0xac6 */
DWORD LoadModule (LPCSTR a /* 0x8 */, PVOID b /* 0xc */)
{ /* 0xac6 */
  /* file winbase.c line 1728 addr 0xac6 */
  /* file winbase.c line 1728 addr 0xac9 */
} /* 0xacd */
HGLOBAL LoadResource (HINSTANCE a /* 0x8 */, HRSRC b /* 0xc */)
{ /* 0xacd */
  /* file winbase.c line 1729 addr 0xacd */
  /* file winbase.c line 1729 addr 0xad0 */
} /* 0xad4 */
HLOCAL LocalAlloc (UINT a /* 0x8 */, SIZE_T b /* 0xc */)
{ /* 0xad4 */
  /* file winbase.c line 1730 addr 0xad4 */
  /* file winbase.c line 1730 addr 0xad7 */
} /* 0xadb */
SIZE_T LocalCompact (UINT a /* 0x8 */)
{ /* 0xadb */
  /* file winbase.c line 1731 addr 0xadb */
  /* file winbase.c line 1731 addr 0xade */
} /* 0xae2 */
BOOL LocalFileTimeToFileTime (FILETIME const *a /* 0x8 */, LPFILETIME b /* 0xc */)
{ /* 0xae2 */
  /* file winbase.c line 1733 addr 0xae2 */
  /* file winbase.c line 1733 addr 0xae5 */
} /* 0xae9 */
UINT LocalFlags (HLOCAL a /* 0x8 */)
{ /* 0xae9 */
  /* file winbase.c line 1734 addr 0xae9 */
  /* file winbase.c line 1734 addr 0xaec */
} /* 0xaf0 */
HLOCAL LocalFree (HLOCAL a /* 0x8 */)
{ /* 0xaf0 */
  /* file winbase.c line 1735 addr 0xaf0 */
  /* file winbase.c line 1735 addr 0xaf3 */
} /* 0xaf7 */
HLOCAL LocalHandle (LPCVOID a /* 0x8 */)
{ /* 0xaf7 */
  /* file winbase.c line 1736 addr 0xaf7 */
  /* file winbase.c line 1736 addr 0xafa */
} /* 0xafe */
PVOID LocalLock (HLOCAL a /* 0x8 */)
{ /* 0xafe */
  /* file winbase.c line 1737 addr 0xafe */
  /* file winbase.c line 1737 addr 0xb01 */
} /* 0xb05 */
HLOCAL LocalReAlloc (HLOCAL a /* 0x8 */, SIZE_T b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xb05 */
  /* file winbase.c line 1738 addr 0xb05 */
  /* file winbase.c line 1738 addr 0xb08 */
} /* 0xb0c */
SIZE_T LocalShrink (HLOCAL a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xb0c */
  /* file winbase.c line 1739 addr 0xb0c */
  /* file winbase.c line 1739 addr 0xb0f */
} /* 0xb13 */
UINT LocalSize (HLOCAL a /* 0x8 */)
{ /* 0xb13 */
  /* file winbase.c line 1740 addr 0xb13 */
  /* file winbase.c line 1740 addr 0xb16 */
} /* 0xb1a */
BOOL LocalUnlock (HLOCAL a /* 0x8 */)
{ /* 0xb1a */
  /* file winbase.c line 1741 addr 0xb1a */
  /* file winbase.c line 1741 addr 0xb1d */
} /* 0xb21 */
BOOL LockFile (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0xb21 */
  /* file winbase.c line 1742 addr 0xb21 */
  /* file winbase.c line 1742 addr 0xb24 */
} /* 0xb28 */
BOOL LockFileEx (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, LPOVERLAPPED f /* 0x1c */)
{ /* 0xb28 */
  /* file winbase.c line 1743 addr 0xb28 */
  /* file winbase.c line 1743 addr 0xb2b */
} /* 0xb2f */
PVOID LockResource (HGLOBAL a /* 0x8 */)
{ /* 0xb2f */
  /* file winbase.c line 1744 addr 0xb2f */
  /* file winbase.c line 1744 addr 0xb32 */
} /* 0xb36 */
BOOL LogonUserA (LPSTR a /* 0x8 */, LPSTR b /* 0xc */, LPSTR c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, PHANDLE f /* 0x1c */)
{ /* 0xb36 */
  /* file winbase.c line 1746 addr 0xb36 */
  /* file winbase.c line 1746 addr 0xb39 */
} /* 0xb3d */
BOOL LogonUserW (LPWSTR a /* 0x8 */, LPWSTR b /* 0xc */, LPWSTR c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, PHANDLE f /* 0x1c */)
{ /* 0xb3d */
  /* file winbase.c line 1747 addr 0xb3d */
  /* file winbase.c line 1747 addr 0xb40 */
} /* 0xb44 */
BOOL LookupAccountNameA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, PSID c /* 0x10 */, PDWORD d /* 0x14 */, LPSTR e /* 0x18 */, PDWORD f /* 0x1c */, PSID_NAME_USE g /* 0x20 */)
{ /* 0xb44 */
  /* file winbase.c line 1748 addr 0xb44 */
  /* file winbase.c line 1748 addr 0xb47 */
} /* 0xb4b */
BOOL LookupAccountNameW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, PSID c /* 0x10 */, PDWORD d /* 0x14 */, LPWSTR e /* 0x18 */, PDWORD f /* 0x1c */, PSID_NAME_USE g /* 0x20 */)
{ /* 0xb4b */
  /* file winbase.c line 1749 addr 0xb4b */
  /* file winbase.c line 1749 addr 0xb4e */
} /* 0xb52 */
BOOL LookupAccountSidA (LPCSTR a /* 0x8 */, PSID b /* 0xc */, LPSTR c /* 0x10 */, PDWORD d /* 0x14 */, LPSTR e /* 0x18 */, PDWORD f /* 0x1c */, PSID_NAME_USE g /* 0x20 */)
{ /* 0xb52 */
  /* file winbase.c line 1750 addr 0xb52 */
  /* file winbase.c line 1750 addr 0xb55 */
} /* 0xb59 */
BOOL LookupAccountSidW (LPCWSTR a /* 0x8 */, PSID b /* 0xc */, LPWSTR c /* 0x10 */, PDWORD d /* 0x14 */, LPWSTR e /* 0x18 */, PDWORD f /* 0x1c */, PSID_NAME_USE g /* 0x20 */)
{ /* 0xb59 */
  /* file winbase.c line 1751 addr 0xb59 */
  /* file winbase.c line 1751 addr 0xb5c */
} /* 0xb60 */
BOOL LookupPrivilegeDisplayNameA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPSTR c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0xb60 */
  /* file winbase.c line 1752 addr 0xb60 */
  /* file winbase.c line 1752 addr 0xb63 */
} /* 0xb67 */
BOOL LookupPrivilegeDisplayNameW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPWSTR c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0xb67 */
  /* file winbase.c line 1753 addr 0xb67 */
  /* file winbase.c line 1753 addr 0xb6a */
} /* 0xb6e */
BOOL LookupPrivilegeNameA (LPCSTR a /* 0x8 */, PLUID b /* 0xc */, LPSTR c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0xb6e */
  /* file winbase.c line 1754 addr 0xb6e */
  /* file winbase.c line 1754 addr 0xb71 */
} /* 0xb75 */
BOOL LookupPrivilegeNameW (LPCWSTR a /* 0x8 */, PLUID b /* 0xc */, LPWSTR c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0xb75 */
  /* file winbase.c line 1755 addr 0xb75 */
  /* file winbase.c line 1755 addr 0xb78 */
} /* 0xb7c */
BOOL LookupPrivilegeValueA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, PLUID c /* 0x10 */)
{ /* 0xb7c */
  /* file winbase.c line 1756 addr 0xb7c */
  /* file winbase.c line 1756 addr 0xb7f */
} /* 0xb83 */
BOOL LookupPrivilegeValueW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, PLUID c /* 0x10 */)
{ /* 0xb83 */
  /* file winbase.c line 1757 addr 0xb83 */
  /* file winbase.c line 1757 addr 0xb86 */
} /* 0xb8a */
LPSTR lstrcatA (LPSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xb8a */
  /* file winbase.c line 1758 addr 0xb8a */
  /* file winbase.c line 1758 addr 0xb8d */
} /* 0xb91 */
LPWSTR lstrcatW (LPWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xb91 */
  /* file winbase.c line 1759 addr 0xb91 */
  /* file winbase.c line 1759 addr 0xb94 */
} /* 0xb98 */
int lstrcmpA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xb98 */
  /* file winbase.c line 1760 addr 0xb98 */
  /* file winbase.c line 1760 addr 0xb9b */
} /* 0xb9f */
int lstrcmpiA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xb9f */
  /* file winbase.c line 1761 addr 0xb9f */
  /* file winbase.c line 1761 addr 0xba2 */
} /* 0xba6 */
int lstrcmpiW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xba6 */
  /* file winbase.c line 1762 addr 0xba6 */
  /* file winbase.c line 1762 addr 0xba9 */
} /* 0xbad */
int lstrcmpW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xbad */
  /* file winbase.c line 1763 addr 0xbad */
  /* file winbase.c line 1763 addr 0xbb0 */
} /* 0xbb4 */
LPSTR lstrcpyA (LPSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xbb4 */
  /* file winbase.c line 1764 addr 0xbb4 */
  /* file winbase.c line 1764 addr 0xbb7 */
} /* 0xbbb */
LPSTR lstrcpynA (LPSTR a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0xbbb */
  /* file winbase.c line 1765 addr 0xbbb */
  /* file winbase.c line 1765 addr 0xbbe */
} /* 0xbc2 */
LPWSTR lstrcpynW (LPWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0xbc2 */
  /* file winbase.c line 1766 addr 0xbc2 */
  /* file winbase.c line 1766 addr 0xbc5 */
} /* 0xbc9 */
LPWSTR lstrcpyW (LPWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xbc9 */
  /* file winbase.c line 1767 addr 0xbc9 */
  /* file winbase.c line 1767 addr 0xbcc */
} /* 0xbd0 */
int lstrlenA (LPCSTR a /* 0x8 */)
{ /* 0xbd0 */
  /* file winbase.c line 1768 addr 0xbd0 */
  /* file winbase.c line 1768 addr 0xbd3 */
} /* 0xbd7 */
int lstrlenW (LPCWSTR a /* 0x8 */)
{ /* 0xbd7 */
  /* file winbase.c line 1769 addr 0xbd7 */
  /* file winbase.c line 1769 addr 0xbda */
} /* 0xbde */
BOOL MakeAbsoluteSD (PSECURITY_DESCRIPTOR a /* 0x8 */, PSECURITY_DESCRIPTOR b /* 0xc */, PDWORD c /* 0x10 */, PACL d /* 0x14 */, PDWORD e /* 0x18 */, PACL f /* 0x1c */, PDWORD g /* 0x20 */, PSID h /* 0x24 */, PDWORD i /* 0x28 */, PSID j /* 0x2c */, PDWORD k /* 0x30 */)
{ /* 0xbde */
  /* file winbase.c line 1770 addr 0xbde */
  /* file winbase.c line 1770 addr 0xbe1 */
} /* 0xbe5 */
BOOL MakeSelfRelativeSD (PSECURITY_DESCRIPTOR a /* 0x8 */, PSECURITY_DESCRIPTOR b /* 0xc */, PDWORD c /* 0x10 */)
{ /* 0xbe5 */
  /* file winbase.c line 1772 addr 0xbe5 */
  /* file winbase.c line 1772 addr 0xbe8 */
} /* 0xbec */
void MapGenericMask (PDWORD a /* 0x8 */, PGENERIC_MAPPING b /* 0xc */)
{ /* 0xbec */
  /* file winbase.c line 1773 addr 0xbec */
  /* file winbase.c line 1773 addr 0xbef */
} /* 0xbf3 */
PVOID MapViewOfFile (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0xbf3 */
  /* file winbase.c line 1774 addr 0xbf3 */
  /* file winbase.c line 1774 addr 0xbf6 */
} /* 0xbfa */
PVOID MapViewOfFileEx (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, PVOID f /* 0x1c */)
{ /* 0xbfa */
  /* file winbase.c line 1775 addr 0xbfa */
  /* file winbase.c line 1775 addr 0xbfd */
} /* 0xc01 */
BOOL MoveFileA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xc01 */
  /* file winbase.c line 1776 addr 0xc01 */
  /* file winbase.c line 1776 addr 0xc04 */
} /* 0xc08 */
BOOL MoveFileExA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xc08 */
  /* file winbase.c line 1777 addr 0xc08 */
  /* file winbase.c line 1777 addr 0xc0b */
} /* 0xc0f */
BOOL MoveFileExW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xc0f */
  /* file winbase.c line 1778 addr 0xc0f */
  /* file winbase.c line 1778 addr 0xc12 */
} /* 0xc16 */
BOOL MoveFileW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xc16 */
  /* file winbase.c line 1779 addr 0xc16 */
  /* file winbase.c line 1779 addr 0xc19 */
} /* 0xc1d */
int MulDiv (int a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xc1d */
  /* file winbase.c line 1780 addr 0xc1d */
  /* file winbase.c line 1780 addr 0xc20 */
} /* 0xc24 */
BOOL NotifyChangeEventLog (HANDLE a /* 0x8 */, HANDLE b /* 0xc */)
{ /* 0xc24 */
  /* file winbase.c line 1781 addr 0xc24 */
  /* file winbase.c line 1781 addr 0xc27 */
} /* 0xc2b */
BOOL ObjectCloseAuditAlarmA (LPCSTR a /* 0x8 */, PVOID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xc2b */
  /* file winbase.c line 1782 addr 0xc2b */
  /* file winbase.c line 1782 addr 0xc2e */
} /* 0xc32 */
BOOL ObjectCloseAuditAlarmW (LPCWSTR a /* 0x8 */, PVOID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xc32 */
  /* file winbase.c line 1783 addr 0xc32 */
  /* file winbase.c line 1783 addr 0xc35 */
} /* 0xc39 */
BOOL ObjectDeleteAuditAlarmA (LPCSTR a /* 0x8 */, PVOID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xc39 */
  /* file winbase.c line 1784 addr 0xc39 */
  /* file winbase.c line 1784 addr 0xc3c */
} /* 0xc40 */
BOOL ObjectDeleteAuditAlarmW (LPCWSTR a /* 0x8 */, PVOID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xc40 */
  /* file winbase.c line 1785 addr 0xc40 */
  /* file winbase.c line 1785 addr 0xc43 */
} /* 0xc47 */
BOOL ObjectOpenAuditAlarmA (LPCSTR a /* 0x8 */, PVOID b /* 0xc */, LPSTR c /* 0x10 */, LPSTR d /* 0x14 */, PSECURITY_DESCRIPTOR e /* 0x18 */, HANDLE f /* 0x1c */, DWORD g /* 0x20 */, DWORD h /* 0x24 */, PPRIVILEGE_SET i /* 0x28 */, BOOL j /* 0x2c */, BOOL k /* 0x30 */, PBOOL l /* 0x34 */)
{ /* 0xc47 */
  /* file winbase.c line 1786 addr 0xc47 */
  /* file winbase.c line 1786 addr 0xc4a */
} /* 0xc4e */
BOOL ObjectOpenAuditAlarmW (LPCWSTR a /* 0x8 */, PVOID b /* 0xc */, LPWSTR c /* 0x10 */, LPWSTR d /* 0x14 */, PSECURITY_DESCRIPTOR e /* 0x18 */, HANDLE f /* 0x1c */, DWORD g /* 0x20 */, DWORD h /* 0x24 */, PPRIVILEGE_SET i /* 0x28 */, BOOL j /* 0x2c */, BOOL k /* 0x30 */, PBOOL l /* 0x34 */)
{ /* 0xc4e */
  /* file winbase.c line 1787 addr 0xc4e */
  /* file winbase.c line 1787 addr 0xc51 */
} /* 0xc55 */
BOOL ObjectPrivilegeAuditAlarmA (LPCSTR a /* 0x8 */, PVOID b /* 0xc */, HANDLE c /* 0x10 */, DWORD d /* 0x14 */, PPRIVILEGE_SET e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0xc55 */
  /* file winbase.c line 1788 addr 0xc55 */
  /* file winbase.c line 1788 addr 0xc58 */
} /* 0xc5c */
BOOL ObjectPrivilegeAuditAlarmW (LPCWSTR a /* 0x8 */, PVOID b /* 0xc */, HANDLE c /* 0x10 */, DWORD d /* 0x14 */, PPRIVILEGE_SET e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0xc5c */
  /* file winbase.c line 1789 addr 0xc5c */
  /* file winbase.c line 1789 addr 0xc5f */
} /* 0xc63 */
HANDLE OpenBackupEventLogA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xc63 */
  /* file winbase.c line 1790 addr 0xc63 */
  /* file winbase.c line 1790 addr 0xc66 */
} /* 0xc6a */
HANDLE OpenBackupEventLogW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xc6a */
  /* file winbase.c line 1791 addr 0xc6a */
  /* file winbase.c line 1791 addr 0xc6d */
} /* 0xc71 */
HANDLE OpenEventA (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xc71 */
  /* file winbase.c line 1792 addr 0xc71 */
  /* file winbase.c line 1792 addr 0xc74 */
} /* 0xc78 */
HANDLE OpenEventLogA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xc78 */
  /* file winbase.c line 1793 addr 0xc78 */
  /* file winbase.c line 1793 addr 0xc7b */
} /* 0xc7f */
HANDLE OpenEventLogW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xc7f */
  /* file winbase.c line 1794 addr 0xc7f */
  /* file winbase.c line 1794 addr 0xc82 */
} /* 0xc86 */
HANDLE OpenEventW (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xc86 */
  /* file winbase.c line 1795 addr 0xc86 */
  /* file winbase.c line 1795 addr 0xc89 */
} /* 0xc8d */
HFILE OpenFile (LPCSTR a /* 0x8 */, LPOFSTRUCT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xc8d */
  /* file winbase.c line 1796 addr 0xc8d */
  /* file winbase.c line 1796 addr 0xc90 */
} /* 0xc94 */
HANDLE OpenFileMappingA (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xc94 */
  /* file winbase.c line 1797 addr 0xc94 */
  /* file winbase.c line 1797 addr 0xc97 */
} /* 0xc9b */
HANDLE OpenFileMappingW (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xc9b */
  /* file winbase.c line 1798 addr 0xc9b */
  /* file winbase.c line 1798 addr 0xc9e */
} /* 0xca2 */
HANDLE OpenMutexA (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xca2 */
  /* file winbase.c line 1799 addr 0xca2 */
  /* file winbase.c line 1799 addr 0xca5 */
} /* 0xca9 */
HANDLE OpenMutexW (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xca9 */
  /* file winbase.c line 1800 addr 0xca9 */
  /* file winbase.c line 1800 addr 0xcac */
} /* 0xcb0 */
HANDLE OpenProcess (DWORD a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xcb0 */
  /* file winbase.c line 1801 addr 0xcb0 */
  /* file winbase.c line 1801 addr 0xcb3 */
} /* 0xcb7 */
BOOL OpenProcessToken (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PHANDLE c /* 0x10 */)
{ /* 0xcb7 */
  /* file winbase.c line 1802 addr 0xcb7 */
  /* file winbase.c line 1802 addr 0xcba */
} /* 0xcbe */
HANDLE OpenSemaphoreA (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xcbe */
  /* file winbase.c line 1803 addr 0xcbe */
  /* file winbase.c line 1803 addr 0xcc1 */
} /* 0xcc5 */
HANDLE OpenSemaphoreW (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xcc5 */
  /* file winbase.c line 1804 addr 0xcc5 */
  /* file winbase.c line 1804 addr 0xcc8 */
} /* 0xccc */
BOOL OpenThreadToken (HANDLE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, PHANDLE d /* 0x14 */)
{ /* 0xccc */
  /* file winbase.c line 1808 addr 0xccc */
  /* file winbase.c line 1808 addr 0xccf */
} /* 0xcd3 */
HANDLE OpenWaitableTimerA (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xcd3 */
  /* file winbase.c line 1809 addr 0xcd3 */
  /* file winbase.c line 1809 addr 0xcd6 */
} /* 0xcda */
HANDLE OpenWaitableTimerW (DWORD a /* 0x8 */, BOOL b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xcda */
  /* file winbase.c line 1810 addr 0xcda */
  /* file winbase.c line 1810 addr 0xcdd */
} /* 0xce1 */
void OutputDebugStringA (LPCSTR a /* 0x8 */)
{ /* 0xce1 */
  /* file winbase.c line 1811 addr 0xce1 */
  /* file winbase.c line 1811 addr 0xce4 */
} /* 0xce8 */
void OutputDebugStringW (LPCWSTR a /* 0x8 */)
{ /* 0xce8 */
  /* file winbase.c line 1812 addr 0xce8 */
  /* file winbase.c line 1812 addr 0xceb */
} /* 0xcef */
BOOL PeekNamedPipe (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PDWORD e /* 0x18 */, PDWORD f /* 0x1c */)
{ /* 0xcef */
  /* file winbase.c line 1813 addr 0xcef */
  /* file winbase.c line 1813 addr 0xcf2 */
} /* 0xcf6 */
BOOL PostQueuedCompletionStatus (HANDLE a /* 0x8 */, DWORD b /* 0xc */, ULONG_PTR c /* 0x10 */, LPOVERLAPPED d /* 0x14 */)
{ /* 0xcf6 */
  /* file winbase.c line 1814 addr 0xcf6 */
  /* file winbase.c line 1814 addr 0xcf9 */
} /* 0xcfd */
DWORD PrepareTape (HANDLE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xcfd */
  /* file winbase.c line 1815 addr 0xcfd */
  /* file winbase.c line 1815 addr 0xd00 */
} /* 0xd04 */
BOOL PrivilegeCheck (HANDLE a /* 0x8 */, PPRIVILEGE_SET b /* 0xc */, PBOOL c /* 0x10 */)
{ /* 0xd04 */
  /* file winbase.c line 1816 addr 0xd04 */
  /* file winbase.c line 1816 addr 0xd07 */
} /* 0xd0b */
BOOL PrivilegedServiceAuditAlarmA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, HANDLE c /* 0x10 */, PPRIVILEGE_SET d /* 0x14 */, BOOL e /* 0x18 */)
{ /* 0xd0b */
  /* file winbase.c line 1817 addr 0xd0b */
  /* file winbase.c line 1817 addr 0xd0e */
} /* 0xd12 */
BOOL PrivilegedServiceAuditAlarmW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, HANDLE c /* 0x10 */, PPRIVILEGE_SET d /* 0x14 */, BOOL e /* 0x18 */)
{ /* 0xd12 */
  /* file winbase.c line 1818 addr 0xd12 */
  /* file winbase.c line 1818 addr 0xd15 */
} /* 0xd19 */
BOOL PulseEvent (HANDLE a /* 0x8 */)
{ /* 0xd19 */
  /* file winbase.c line 1822 addr 0xd19 */
  /* file winbase.c line 1822 addr 0xd1c */
} /* 0xd20 */
BOOL PurgeComm (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xd20 */
  /* file winbase.c line 1823 addr 0xd20 */
  /* file winbase.c line 1823 addr 0xd23 */
} /* 0xd27 */
DWORD QueryDosDeviceA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xd27 */
  /* file winbase.c line 1827 addr 0xd27 */
  /* file winbase.c line 1827 addr 0xd2a */
} /* 0xd2e */
DWORD QueryDosDeviceW (LPCWSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xd2e */
  /* file winbase.c line 1828 addr 0xd2e */
  /* file winbase.c line 1828 addr 0xd31 */
} /* 0xd35 */
BOOL QueryPerformanceCounter (PLARGE_INTEGER a /* 0x8 */)
{ /* 0xd35 */
  /* file winbase.c line 1832 addr 0xd35 */
  /* file winbase.c line 1832 addr 0xd38 */
} /* 0xd3c */
BOOL QueryPerformanceFrequency (PLARGE_INTEGER a /* 0x8 */)
{ /* 0xd3c */
  /* file winbase.c line 1833 addr 0xd3c */
  /* file winbase.c line 1833 addr 0xd3f */
} /* 0xd43 */
DWORD QueueUserAPC (PAPCFUNC a /* 0x8 */, HANDLE b /* 0xc */, ULONG_PTR c /* 0x10 */)
{ /* 0xd43 */
  /* file winbase.c line 1834 addr 0xd43 */
  /* file winbase.c line 1834 addr 0xd46 */
} /* 0xd4a */
void RaiseException (DWORD a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD const *d /* 0x14 */)
{ /* 0xd4a */
  /* file winbase.c line 1838 addr 0xd4a */
  /* file winbase.c line 1838 addr 0xd4d */
} /* 0xd51 */
BOOL ReadDirectoryChangesW (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, BOOL d /* 0x14 */, DWORD e /* 0x18 */, PDWORD f /* 0x1c */, LPOVERLAPPED g /* 0x20 */, LPOVERLAPPED_COMPLETION_ROUTINE h /* 0x24 */)
{ /* 0xd51 */
  /* file winbase.c line 1839 addr 0xd51 */
  /* file winbase.c line 1839 addr 0xd54 */
} /* 0xd58 */
BOOL ReadEventLogA (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, DWORD *f /* 0x1c */, DWORD *g /* 0x20 */)
{ /* 0xd58 */
  /* file winbase.c line 1840 addr 0xd58 */
  /* file winbase.c line 1840 addr 0xd5b */
} /* 0xd5f */
BOOL ReadEventLogW (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, DWORD *f /* 0x1c */, DWORD *g /* 0x20 */)
{ /* 0xd5f */
  /* file winbase.c line 1841 addr 0xd5f */
  /* file winbase.c line 1841 addr 0xd62 */
} /* 0xd66 */
BOOL ReadFile (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, LPOVERLAPPED e /* 0x18 */)
{ /* 0xd66 */
  /* file winbase.c line 1842 addr 0xd66 */
  /* file winbase.c line 1842 addr 0xd69 */
} /* 0xd6d */
BOOL ReadFileEx (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, LPOVERLAPPED d /* 0x14 */, LPOVERLAPPED_COMPLETION_ROUTINE e /* 0x18 */)
{ /* 0xd6d */
  /* file winbase.c line 1843 addr 0xd6d */
  /* file winbase.c line 1843 addr 0xd70 */
} /* 0xd74 */
BOOL ReadFileScatter (HANDLE a /* 0x8 */, FILE_SEGMENT_ELEMENT *b /* 0xc */, DWORD c /* 0x10 */, LPDWORD d /* 0x14 */, LPOVERLAPPED e /* 0x18 */)
{ /* 0xd74 */
  /* file winbase.c line 1844 addr 0xd74 */
  /* file winbase.c line 1844 addr 0xd77 */
} /* 0xd7b */
BOOL ReadProcessMemory (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0xd7b */
  /* file winbase.c line 1845 addr 0xd7b */
  /* file winbase.c line 1845 addr 0xd7e */
} /* 0xd82 */
HANDLE RegisterEventSourceA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xd82 */
  /* file winbase.c line 1846 addr 0xd82 */
  /* file winbase.c line 1846 addr 0xd85 */
} /* 0xd89 */
HANDLE RegisterEventSourceW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xd89 */
  /* file winbase.c line 1847 addr 0xd89 */
  /* file winbase.c line 1847 addr 0xd8c */
} /* 0xd90 */
BOOL ReleaseMutex (HANDLE a /* 0x8 */)
{ /* 0xd90 */
  /* file winbase.c line 1855 addr 0xd90 */
  /* file winbase.c line 1855 addr 0xd93 */
} /* 0xd97 */
BOOL ReleaseSemaphore (HANDLE a /* 0x8 */, LONG b /* 0xc */, LPLONG c /* 0x10 */)
{ /* 0xd97 */
  /* file winbase.c line 1856 addr 0xd97 */
  /* file winbase.c line 1856 addr 0xd9a */
} /* 0xd9e */
BOOL RemoveDirectoryA (LPCSTR a /* 0x8 */)
{ /* 0xd9e */
  /* file winbase.c line 1857 addr 0xd9e */
  /* file winbase.c line 1857 addr 0xda1 */
} /* 0xda5 */
BOOL RemoveDirectoryW (LPCWSTR a /* 0x8 */)
{ /* 0xda5 */
  /* file winbase.c line 1858 addr 0xda5 */
  /* file winbase.c line 1858 addr 0xda8 */
} /* 0xdac */
BOOL ReportEventA (HANDLE a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, DWORD d /* 0x14 */, PSID e /* 0x18 */, int f /* 0x1c */, DWORD g /* 0x20 */, LPCSTR *h /* 0x24 */, PVOID i /* 0x28 */)
{ /* 0xdac */
  WORD f /* 0xfffffffa */;
  WORD c /* 0xfffffffc */;
  WORD b /* 0xfffffffe */;
  /* file winbase.c line 1869 addr 0xdac */
  /* file winbase.c line 1869 addr 0xdc7 */
} /* 0xdcb */
BOOL ReportEventW (HANDLE a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, DWORD d /* 0x14 */, PSID e /* 0x18 */, int f /* 0x1c */, DWORD g /* 0x20 */, LPCWSTR *h /* 0x24 */, PVOID i /* 0x28 */)
{ /* 0xdcb */
  WORD f /* 0xfffffffa */;
  WORD c /* 0xfffffffc */;
  WORD b /* 0xfffffffe */;
  /* file winbase.c line 1870 addr 0xdcb */
  /* file winbase.c line 1870 addr 0xde6 */
} /* 0xdea */
BOOL ResetEvent (HANDLE a /* 0x8 */)
{ /* 0xdea */
  /* file winbase.c line 1874 addr 0xdea */
  /* file winbase.c line 1874 addr 0xded */
} /* 0xdf1 */
UINT ResetWriteWatch (LPVOID a /* 0x8 */, SIZE_T b /* 0xc */)
{ /* 0xdf1 */
  /* file winbase.c line 1876 addr 0xdf1 */
  /* file winbase.c line 1876 addr 0xdf4 */
} /* 0xdf8 */
DWORD ResumeThread (HANDLE a /* 0x8 */)
{ /* 0xdf8 */
  /* file winbase.c line 1880 addr 0xdf8 */
  /* file winbase.c line 1880 addr 0xdfb */
} /* 0xdff */
BOOL RevertToSelf ()
{ /* 0xdff */
  /* file winbase.c line 1881 addr 0xdff */
  /* file winbase.c line 1881 addr 0xe02 */
} /* 0xe04 */
DWORD SearchPathA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, DWORD d /* 0x14 */, LPSTR e /* 0x18 */, LPSTR *f /* 0x1c */)
{ /* 0xe04 */
  /* file winbase.c line 1882 addr 0xe04 */
  /* file winbase.c line 1882 addr 0xe07 */
} /* 0xe0b */
DWORD SearchPathW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, DWORD d /* 0x14 */, LPWSTR e /* 0x18 */, LPWSTR *f /* 0x1c */)
{ /* 0xe0b */
  /* file winbase.c line 1883 addr 0xe0b */
  /* file winbase.c line 1883 addr 0xe0e */
} /* 0xe12 */
BOOL SetAclInformation (PACL a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, ACL_INFORMATION_CLASS d /* 0x14 */)
{ /* 0xe12 */
  /* file winbase.c line 1884 addr 0xe12 */
  /* file winbase.c line 1884 addr 0xe15 */
} /* 0xe19 */
BOOL SetCommBreak (HANDLE a /* 0x8 */)
{ /* 0xe19 */
  /* file winbase.c line 1885 addr 0xe19 */
  /* file winbase.c line 1885 addr 0xe1c */
} /* 0xe20 */
BOOL SetCommConfig (HANDLE a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xe20 */
  /* file winbase.c line 1886 addr 0xe20 */
  /* file winbase.c line 1886 addr 0xe23 */
} /* 0xe27 */
BOOL SetCommMask (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xe27 */
  /* file winbase.c line 1887 addr 0xe27 */
  /* file winbase.c line 1887 addr 0xe2a */
} /* 0xe2e */
BOOL SetCommState (HANDLE a /* 0x8 */, LPDCB b /* 0xc */)
{ /* 0xe2e */
  /* file winbase.c line 1888 addr 0xe2e */
  /* file winbase.c line 1888 addr 0xe31 */
} /* 0xe35 */
BOOL SetCommTimeouts (HANDLE a /* 0x8 */, LPCOMMTIMEOUTS b /* 0xc */)
{ /* 0xe35 */
  /* file winbase.c line 1889 addr 0xe35 */
  /* file winbase.c line 1889 addr 0xe38 */
} /* 0xe3c */
BOOL SetComputerNameA (LPCSTR a /* 0x8 */)
{ /* 0xe3c */
  /* file winbase.c line 1890 addr 0xe3c */
  /* file winbase.c line 1890 addr 0xe3f */
} /* 0xe43 */
BOOL SetComputerNameW (LPCWSTR a /* 0x8 */)
{ /* 0xe43 */
  /* file winbase.c line 1891 addr 0xe43 */
  /* file winbase.c line 1891 addr 0xe46 */
} /* 0xe4a */
BOOL SetCurrentDirectoryA (LPCSTR a /* 0x8 */)
{ /* 0xe4a */
  /* file winbase.c line 1896 addr 0xe4a */
  /* file winbase.c line 1896 addr 0xe4d */
} /* 0xe51 */
BOOL SetCurrentDirectoryW (LPCWSTR a /* 0x8 */)
{ /* 0xe51 */
  /* file winbase.c line 1897 addr 0xe51 */
  /* file winbase.c line 1897 addr 0xe54 */
} /* 0xe58 */
BOOL SetDefaultCommConfigA (LPCSTR a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xe58 */
  /* file winbase.c line 1898 addr 0xe58 */
  /* file winbase.c line 1898 addr 0xe5b */
} /* 0xe5f */
BOOL SetDefaultCommConfigW (LPCWSTR a /* 0x8 */, LPCOMMCONFIG b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xe5f */
  /* file winbase.c line 1899 addr 0xe5f */
  /* file winbase.c line 1899 addr 0xe62 */
} /* 0xe66 */
BOOL SetEndOfFile (HANDLE a /* 0x8 */)
{ /* 0xe66 */
  /* file winbase.c line 1904 addr 0xe66 */
  /* file winbase.c line 1904 addr 0xe69 */
} /* 0xe6d */
BOOL SetEnvironmentVariableA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xe6d */
  /* file winbase.c line 1905 addr 0xe6d */
  /* file winbase.c line 1905 addr 0xe70 */
} /* 0xe74 */
BOOL SetEnvironmentVariableW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xe74 */
  /* file winbase.c line 1906 addr 0xe74 */
  /* file winbase.c line 1906 addr 0xe77 */
} /* 0xe7b */
UINT SetErrorMode (UINT a /* 0x8 */)
{ /* 0xe7b */
  /* file winbase.c line 1907 addr 0xe7b */
  /* file winbase.c line 1907 addr 0xe7e */
} /* 0xe82 */
BOOL SetEvent (HANDLE a /* 0x8 */)
{ /* 0xe82 */
  /* file winbase.c line 1911 addr 0xe82 */
  /* file winbase.c line 1911 addr 0xe85 */
} /* 0xe89 */
void SetFileApisToANSI ()
{ /* 0xe89 */
  /* file winbase.c line 1913 addr 0xe89 */
  /* file winbase.c line 1913 addr 0xe8c */
} /* 0xe8e */
void SetFileApisToOEM ()
{ /* 0xe8e */
  /* file winbase.c line 1914 addr 0xe8e */
  /* file winbase.c line 1914 addr 0xe91 */
} /* 0xe93 */
BOOL SetFileAttributesA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xe93 */
  /* file winbase.c line 1915 addr 0xe93 */
  /* file winbase.c line 1915 addr 0xe96 */
} /* 0xe9a */
BOOL SetFileAttributesW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xe9a */
  /* file winbase.c line 1916 addr 0xe9a */
  /* file winbase.c line 1916 addr 0xe9d */
} /* 0xea1 */
DWORD SetFilePointer (HANDLE a /* 0x8 */, LONG b /* 0xc */, PLONG c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xea1 */
  /* file winbase.c line 1917 addr 0xea1 */
  /* file winbase.c line 1917 addr 0xea4 */
} /* 0xea8 */
BOOL SetFilePointerEx (HANDLE a /* 0x8 */, LARGE_INTEGER b /* 0xc */, PLARGE_INTEGER c /* 0x14 */, DWORD d /* 0x18 */)
{ /* 0xea8 */
  /* file winbase.c line 1918 addr 0xea8 */
  /* file winbase.c line 1918 addr 0xeab */
} /* 0xeaf */
BOOL SetFileSecurityA (LPCSTR a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */)
{ /* 0xeaf */
  /* file winbase.c line 1919 addr 0xeaf */
  /* file winbase.c line 1919 addr 0xeb2 */
} /* 0xeb6 */
BOOL SetFileSecurityW (LPCWSTR a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */)
{ /* 0xeb6 */
  /* file winbase.c line 1920 addr 0xeb6 */
  /* file winbase.c line 1920 addr 0xeb9 */
} /* 0xebd */
BOOL SetFileTime (HANDLE a /* 0x8 */, FILETIME const *b /* 0xc */, FILETIME const *c /* 0x10 */, FILETIME const *d /* 0x14 */)
{ /* 0xebd */
  /* file winbase.c line 1925 addr 0xebd */
  /* file winbase.c line 1925 addr 0xec0 */
} /* 0xec4 */
UINT SetHandleCount (UINT a /* 0x8 */)
{ /* 0xec4 */
  /* file winbase.c line 1933 addr 0xec4 */
  /* file winbase.c line 1933 addr 0xec7 */
} /* 0xecb */
BOOL SetHandleInformation (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xecb */
  /* file winbase.c line 1934 addr 0xecb */
  /* file winbase.c line 1934 addr 0xece */
} /* 0xed2 */
BOOL SetKernelObjectSecurity (HANDLE a /* 0x8 */, SECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */)
{ /* 0xed2 */
  /* file winbase.c line 1935 addr 0xed2 */
  /* file winbase.c line 1935 addr 0xed5 */
} /* 0xed9 */
void SetLastError (DWORD a /* 0x8 */)
{ /* 0xed9 */
  /* file winbase.c line 1936 addr 0xed9 */
  /* file winbase.c line 1936 addr 0xedc */
} /* 0xee0 */
void SetLastErrorEx (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xee0 */
  /* file winbase.c line 1937 addr 0xee0 */
  /* file winbase.c line 1937 addr 0xee3 */
} /* 0xee7 */
BOOL SetLocalTime (SYSTEMTIME const *a /* 0x8 */)
{ /* 0xee7 */
  /* file winbase.c line 1938 addr 0xee7 */
  /* file winbase.c line 1938 addr 0xeea */
} /* 0xeee */
BOOL SetMailslotInfo (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xeee */
  /* file winbase.c line 1939 addr 0xeee */
  /* file winbase.c line 1939 addr 0xef1 */
} /* 0xef5 */
BOOL SetNamedPipeHandleState (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, PDWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0xef5 */
  /* file winbase.c line 1940 addr 0xef5 */
  /* file winbase.c line 1940 addr 0xef8 */
} /* 0xefc */
BOOL SetPriorityClass (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xefc */
  /* file winbase.c line 1941 addr 0xefc */
  /* file winbase.c line 1941 addr 0xeff */
} /* 0xf03 */
BOOL SetPrivateObjectSecurity (SECURITY_INFORMATION a /* 0x8 */, PSECURITY_DESCRIPTOR b /* 0xc */, PSECURITY_DESCRIPTOR *c /* 0x10 */, PGENERIC_MAPPING d /* 0x14 */, HANDLE e /* 0x18 */)
{ /* 0xf03 */
  /* file winbase.c line 1942 addr 0xf03 */
  /* file winbase.c line 1942 addr 0xf06 */
} /* 0xf0a */
BOOL SetProcessAffinityMask (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xf0a */
  /* file winbase.c line 1943 addr 0xf0a */
  /* file winbase.c line 1943 addr 0xf0d */
} /* 0xf11 */
BOOL SetProcessPriorityBoost (HANDLE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xf11 */
  /* file winbase.c line 1947 addr 0xf11 */
  /* file winbase.c line 1947 addr 0xf14 */
} /* 0xf18 */
BOOL SetProcessShutdownParameters (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xf18 */
  /* file winbase.c line 1948 addr 0xf18 */
  /* file winbase.c line 1948 addr 0xf1b */
} /* 0xf1f */
BOOL SetProcessWorkingSetSize (HANDLE a /* 0x8 */, SIZE_T b /* 0xc */, SIZE_T c /* 0x10 */)
{ /* 0xf1f */
  /* file winbase.c line 1949 addr 0xf1f */
  /* file winbase.c line 1949 addr 0xf22 */
} /* 0xf26 */
BOOL SetSecurityDescriptorControl (PSECURITY_DESCRIPTOR a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xf26 */
  SECURITY_DESCRIPTOR_CONTROL c /* 0xfffffffc */;
  SECURITY_DESCRIPTOR_CONTROL b /* 0xfffffffe */;
  /* file winbase.c line 1950 addr 0xf26 */
  /* file winbase.c line 1950 addr 0xf3a */
} /* 0xf3e */
BOOL SetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR a /* 0x8 */, BOOL b /* 0xc */, PACL c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xf3e */
  /* file winbase.c line 1951 addr 0xf3e */
  /* file winbase.c line 1951 addr 0xf41 */
} /* 0xf45 */
BOOL SetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR a /* 0x8 */, PSID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xf45 */
  /* file winbase.c line 1952 addr 0xf45 */
  /* file winbase.c line 1952 addr 0xf48 */
} /* 0xf4c */
BOOL SetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR a /* 0x8 */, PSID b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xf4c */
  /* file winbase.c line 1953 addr 0xf4c */
  /* file winbase.c line 1953 addr 0xf4f */
} /* 0xf53 */
BOOL SetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR a /* 0x8 */, BOOL b /* 0xc */, PACL c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xf53 */
  /* file winbase.c line 1954 addr 0xf53 */
  /* file winbase.c line 1954 addr 0xf56 */
} /* 0xf5a */
BOOL SetStdHandle (DWORD a /* 0x8 */, HANDLE b /* 0xc */)
{ /* 0xf5a */
  /* file winbase.c line 1955 addr 0xf5a */
  /* file winbase.c line 1955 addr 0xf5d */
} /* 0xf61 */
BOOL SetSystemPowerState (BOOL a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xf61 */
  /* file winbase.c line 1957 addr 0xf61 */
  /* file winbase.c line 1957 addr 0xf64 */
} /* 0xf68 */
BOOL SetSystemTime (SYSTEMTIME const *a /* 0x8 */)
{ /* 0xf68 */
  /* file winbase.c line 1958 addr 0xf68 */
  /* file winbase.c line 1958 addr 0xf6b */
} /* 0xf6f */
BOOL SetSystemTimeAdjustment (DWORD a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xf6f */
  /* file winbase.c line 1959 addr 0xf6f */
  /* file winbase.c line 1959 addr 0xf72 */
} /* 0xf76 */
DWORD SetTapeParameters (HANDLE a /* 0x8 */, DWORD b /* 0xc */, PVOID c /* 0x10 */)
{ /* 0xf76 */
  /* file winbase.c line 1960 addr 0xf76 */
  /* file winbase.c line 1960 addr 0xf79 */
} /* 0xf7d */
DWORD SetTapePosition (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0xf7d */
  /* file winbase.c line 1961 addr 0xf7d */
  /* file winbase.c line 1961 addr 0xf80 */
} /* 0xf84 */
DWORD SetThreadAffinityMask (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xf84 */
  /* file winbase.c line 1962 addr 0xf84 */
  /* file winbase.c line 1962 addr 0xf87 */
} /* 0xf8b */
BOOL SetThreadContext (HANDLE a /* 0x8 */, CONTEXT const *b /* 0xc */)
{ /* 0xf8b */
  /* file winbase.c line 1963 addr 0xf8b */
  /* file winbase.c line 1963 addr 0xf8e */
} /* 0xf92 */
DWORD SetThreadIdealProcessor (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xf92 */
  /* file winbase.c line 1967 addr 0xf92 */
  /* file winbase.c line 1967 addr 0xf95 */
} /* 0xf99 */
BOOL SetThreadPriority (HANDLE a /* 0x8 */, int b /* 0xc */)
{ /* 0xf99 */
  /* file winbase.c line 1968 addr 0xf99 */
  /* file winbase.c line 1968 addr 0xf9c */
} /* 0xfa0 */
BOOL SetThreadPriorityBoost (HANDLE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xfa0 */
  /* file winbase.c line 1969 addr 0xfa0 */
  /* file winbase.c line 1969 addr 0xfa3 */
} /* 0xfa7 */
BOOL SetThreadToken (PHANDLE a /* 0x8 */, HANDLE b /* 0xc */)
{ /* 0xfa7 */
  /* file winbase.c line 1970 addr 0xfa7 */
  /* file winbase.c line 1970 addr 0xfaa */
} /* 0xfae */
BOOL SetTimeZoneInformation (TIME_ZONE_INFORMATION const *a /* 0x8 */)
{ /* 0xfae */
  /* file winbase.c line 1971 addr 0xfae */
  /* file winbase.c line 1971 addr 0xfb1 */
} /* 0xfb5 */
BOOL SetTokenInformation (HANDLE a /* 0x8 */, TOKEN_INFORMATION_CLASS b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xfb5 */
  /* file winbase.c line 1972 addr 0xfb5 */
  /* file winbase.c line 1972 addr 0xfb8 */
} /* 0xfbc */
LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter (LPTOP_LEVEL_EXCEPTION_FILTER a /* 0x8 */)
{ /* 0xfbc */
  /* file winbase.c line 1973 addr 0xfbc */
  /* file winbase.c line 1973 addr 0xfbf */
} /* 0xfc3 */
BOOL SetupComm (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xfc3 */
  /* file winbase.c line 1974 addr 0xfc3 */
  /* file winbase.c line 1974 addr 0xfc6 */
} /* 0xfca */
BOOL SetVolumeLabelA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xfca */
  /* file winbase.c line 1975 addr 0xfca */
  /* file winbase.c line 1975 addr 0xfcd */
} /* 0xfd1 */
BOOL SetVolumeLabelW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xfd1 */
  /* file winbase.c line 1976 addr 0xfd1 */
  /* file winbase.c line 1976 addr 0xfd4 */
} /* 0xfd8 */
BOOL SetWaitableTimer (HANDLE a /* 0x8 */, LARGE_INTEGER const *b /* 0xc */, LONG c /* 0x10 */, PTIMERAPCROUTINE d /* 0x14 */, PVOID e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0xfd8 */
  /* file winbase.c line 1981 addr 0xfd8 */
  /* file winbase.c line 1981 addr 0xfdb */
} /* 0xfdf */
DWORD SignalObjectAndWait (HANDLE a /* 0x8 */, HANDLE b /* 0xc */, DWORD c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xfdf */
  /* file winbase.c line 1982 addr 0xfdf */
  /* file winbase.c line 1982 addr 0xfe2 */
} /* 0xfe6 */
DWORD SizeofResource (HINSTANCE a /* 0x8 */, HRSRC b /* 0xc */)
{ /* 0xfe6 */
  /* file winbase.c line 1983 addr 0xfe6 */
  /* file winbase.c line 1983 addr 0xfe9 */
} /* 0xfed */
void Sleep (DWORD a /* 0x8 */)
{ /* 0xfed */
  /* file winbase.c line 1984 addr 0xfed */
  /* file winbase.c line 1984 addr 0xff0 */
} /* 0xff4 */
DWORD SleepEx (DWORD a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xff4 */
  /* file winbase.c line 1985 addr 0xff4 */
  /* file winbase.c line 1985 addr 0xff7 */
} /* 0xffb */
DWORD SuspendThread (HANDLE a /* 0x8 */)
{ /* 0xffb */
  /* file winbase.c line 1986 addr 0xffb */
  /* file winbase.c line 1986 addr 0xffe */
} /* 0x1002 */
void SwitchToFiber (PVOID a /* 0x8 */)
{ /* 0x1002 */
  /* file winbase.c line 1987 addr 0x1002 */
  /* file winbase.c line 1987 addr 0x1005 */
} /* 0x1009 */
BOOL SwitchToThread ()
{ /* 0x1009 */
  /* file winbase.c line 1988 addr 0x1009 */
  /* file winbase.c line 1988 addr 0x100c */
} /* 0x100e */
BOOL SystemTimeToFileTime (SYSTEMTIME const *a /* 0x8 */, LPFILETIME b /* 0xc */)
{ /* 0x100e */
  /* file winbase.c line 1989 addr 0x100e */
  /* file winbase.c line 1989 addr 0x1011 */
} /* 0x1015 */
BOOL SystemTimeToTzSpecificLocalTime (LPTIME_ZONE_INFORMATION a /* 0x8 */, LPSYSTEMTIME b /* 0xc */, LPSYSTEMTIME c /* 0x10 */)
{ /* 0x1015 */
  /* file winbase.c line 1990 addr 0x1015 */
  /* file winbase.c line 1990 addr 0x1018 */
} /* 0x101c */
BOOL TerminateProcess (HANDLE a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x101c */
  /* file winbase.c line 1991 addr 0x101c */
  /* file winbase.c line 1991 addr 0x101f */
} /* 0x1023 */
BOOL TerminateThread (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x1023 */
  /* file winbase.c line 1992 addr 0x1023 */
  /* file winbase.c line 1992 addr 0x1026 */
} /* 0x102a */
DWORD TlsAlloc ()
{ /* 0x102a */
  /* file winbase.c line 1993 addr 0x102a */
  /* file winbase.c line 1993 addr 0x102d */
} /* 0x102f */
BOOL TlsFree (DWORD a /* 0x8 */)
{ /* 0x102f */
  /* file winbase.c line 1994 addr 0x102f */
  /* file winbase.c line 1994 addr 0x1032 */
} /* 0x1036 */
PVOID TlsGetValue (DWORD a /* 0x8 */)
{ /* 0x1036 */
  /* file winbase.c line 1995 addr 0x1036 */
  /* file winbase.c line 1995 addr 0x1039 */
} /* 0x103d */
BOOL TlsSetValue (DWORD a /* 0x8 */, PVOID b /* 0xc */)
{ /* 0x103d */
  /* file winbase.c line 1996 addr 0x103d */
  /* file winbase.c line 1996 addr 0x1040 */
} /* 0x1044 */
BOOL TransactNamedPipe (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PVOID d /* 0x14 */, DWORD e /* 0x18 */, PDWORD f /* 0x1c */, LPOVERLAPPED g /* 0x20 */)
{ /* 0x1044 */
  /* file winbase.c line 1997 addr 0x1044 */
  /* file winbase.c line 1997 addr 0x1047 */
} /* 0x104b */
BOOL TransmitCommChar (HANDLE a /* 0x8 */, int b /* 0xc */)
{ /* 0x104b */
  char b /* 0xffffffff */;
  /* file winbase.c line 1998 addr 0x104b */
  /* file winbase.c line 1998 addr 0x1057 */
} /* 0x105b */
BOOL TryEnterCriticalSection (LPCRITICAL_SECTION a /* 0x8 */)
{ /* 0x105b */
  /* file winbase.c line 1999 addr 0x105b */
  /* file winbase.c line 1999 addr 0x105e */
} /* 0x1062 */
LONG UnhandledExceptionFilter (LPEXCEPTION_POINTERS a /* 0x8 */)
{ /* 0x1062 */
  /* file winbase.c line 2000 addr 0x1062 */
  /* file winbase.c line 2000 addr 0x1065 */
} /* 0x1069 */
BOOL UnlockFile (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x1069 */
  /* file winbase.c line 2001 addr 0x1069 */
  /* file winbase.c line 2001 addr 0x106c */
} /* 0x1070 */
BOOL UnlockFileEx (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, LPOVERLAPPED e /* 0x18 */)
{ /* 0x1070 */
  /* file winbase.c line 2002 addr 0x1070 */
  /* file winbase.c line 2002 addr 0x1073 */
} /* 0x1077 */
BOOL UnmapViewOfFile (PVOID a /* 0x8 */)
{ /* 0x1077 */
  /* file winbase.c line 2005 addr 0x1077 */
  /* file winbase.c line 2005 addr 0x107a */
} /* 0x107e */
BOOL UpdateResourceA (HANDLE a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, int d /* 0x14 */, PVOID e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x107e */
  WORD d /* 0xfffffffe */;
  /* file winbase.c line 2010 addr 0x107e */
  /* file winbase.c line 2010 addr 0x108b */
} /* 0x108f */
BOOL UpdateResourceW (HANDLE a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, int d /* 0x14 */, PVOID e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0x108f */
  WORD d /* 0xfffffffe */;
  /* file winbase.c line 2011 addr 0x108f */
  /* file winbase.c line 2011 addr 0x109c */
} /* 0x10a0 */
BOOL VerifyVersionInfoA (LPOSVERSIONINFOEXA a /* 0x8 */, DWORD b /* 0xc */, DWORDLONG c /* 0x10 */)
{ /* 0x10a0 */
  /* file winbase.c line 2012 addr 0x10a0 */
  /* file winbase.c line 2012 addr 0x10a3 */
} /* 0x10a7 */
BOOL VerifyVersionInfoW (LPOSVERSIONINFOEXW a /* 0x8 */, DWORD b /* 0xc */, DWORDLONG c /* 0x10 */)
{ /* 0x10a7 */
  /* file winbase.c line 2013 addr 0x10a7 */
  /* file winbase.c line 2013 addr 0x10aa */
} /* 0x10ae */
PVOID VirtualAlloc (PVOID a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x10ae */
  /* file winbase.c line 2014 addr 0x10ae */
  /* file winbase.c line 2014 addr 0x10b1 */
} /* 0x10b5 */
PVOID VirtualAllocEx (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0x10b5 */
  /* file winbase.c line 2015 addr 0x10b5 */
  /* file winbase.c line 2015 addr 0x10b8 */
} /* 0x10bc */
BOOL VirtualFree (PVOID a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x10bc */
  /* file winbase.c line 2016 addr 0x10bc */
  /* file winbase.c line 2016 addr 0x10bf */
} /* 0x10c3 */
BOOL VirtualFreeEx (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x10c3 */
  /* file winbase.c line 2017 addr 0x10c3 */
  /* file winbase.c line 2017 addr 0x10c6 */
} /* 0x10ca */
BOOL VirtualLock (PVOID a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x10ca */
  /* file winbase.c line 2018 addr 0x10ca */
  /* file winbase.c line 2018 addr 0x10cd */
} /* 0x10d1 */
BOOL VirtualProtect (PVOID a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x10d1 */
  /* file winbase.c line 2019 addr 0x10d1 */
  /* file winbase.c line 2019 addr 0x10d4 */
} /* 0x10d8 */
BOOL VirtualProtectEx (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x10d8 */
  /* file winbase.c line 2020 addr 0x10d8 */
  /* file winbase.c line 2020 addr 0x10db */
} /* 0x10df */
DWORD VirtualQuery (LPCVOID a /* 0x8 */, PMEMORY_BASIC_INFORMATION b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x10df */
  /* file winbase.c line 2021 addr 0x10df */
  /* file winbase.c line 2021 addr 0x10e2 */
} /* 0x10e6 */
DWORD VirtualQueryEx (HANDLE a /* 0x8 */, LPCVOID b /* 0xc */, PMEMORY_BASIC_INFORMATION c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x10e6 */
  /* file winbase.c line 2022 addr 0x10e6 */
  /* file winbase.c line 2022 addr 0x10e9 */
} /* 0x10ed */
BOOL VirtualUnlock (PVOID a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x10ed */
  /* file winbase.c line 2023 addr 0x10ed */
  /* file winbase.c line 2023 addr 0x10f0 */
} /* 0x10f4 */
BOOL WaitCommEvent (HANDLE a /* 0x8 */, PDWORD b /* 0xc */, LPOVERLAPPED c /* 0x10 */)
{ /* 0x10f4 */
  /* file winbase.c line 2024 addr 0x10f4 */
  /* file winbase.c line 2024 addr 0x10f7 */
} /* 0x10fb */
BOOL WaitForDebugEvent (LPDEBUG_EVENT a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x10fb */
  /* file winbase.c line 2025 addr 0x10fb */
  /* file winbase.c line 2025 addr 0x10fe */
} /* 0x1102 */
DWORD WaitForMultipleObjects (DWORD a /* 0x8 */, HANDLE const *b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x1102 */
  /* file winbase.c line 2026 addr 0x1102 */
  /* file winbase.c line 2026 addr 0x1105 */
} /* 0x1109 */
DWORD WaitForMultipleObjectsEx (DWORD a /* 0x8 */, HANDLE const *b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */, BOOL e /* 0x18 */)
{ /* 0x1109 */
  /* file winbase.c line 2027 addr 0x1109 */
  /* file winbase.c line 2027 addr 0x110c */
} /* 0x1110 */
DWORD WaitForSingleObject (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x1110 */
  /* file winbase.c line 2028 addr 0x1110 */
  /* file winbase.c line 2028 addr 0x1113 */
} /* 0x1117 */
DWORD WaitForSingleObjectEx (HANDLE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x1117 */
  /* file winbase.c line 2029 addr 0x1117 */
  /* file winbase.c line 2029 addr 0x111a */
} /* 0x111e */
BOOL WaitNamedPipeA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x111e */
  /* file winbase.c line 2030 addr 0x111e */
  /* file winbase.c line 2030 addr 0x1121 */
} /* 0x1125 */
BOOL WaitNamedPipeW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x1125 */
  /* file winbase.c line 2031 addr 0x1125 */
  /* file winbase.c line 2031 addr 0x1128 */
} /* 0x112c */
BOOL WinLoadTrustProvider (GUID *a /* 0x8 */)
{ /* 0x112c */
  /* file winbase.c line 2032 addr 0x112c */
  /* file winbase.c line 2032 addr 0x112f */
} /* 0x1133 */
BOOL WriteFile (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, LPOVERLAPPED e /* 0x18 */)
{ /* 0x1133 */
  /* file winbase.c line 2033 addr 0x1133 */
  /* file winbase.c line 2033 addr 0x1136 */
} /* 0x113a */
BOOL WriteFileEx (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, LPOVERLAPPED d /* 0x14 */, LPOVERLAPPED_COMPLETION_ROUTINE e /* 0x18 */)
{ /* 0x113a */
  /* file winbase.c line 2034 addr 0x113a */
  /* file winbase.c line 2034 addr 0x113d */
} /* 0x1141 */
BOOL WriteFileGather (HANDLE a /* 0x8 */, FILE_SEGMENT_ELEMENT *b /* 0xc */, DWORD c /* 0x10 */, LPDWORD d /* 0x14 */, LPOVERLAPPED e /* 0x18 */)
{ /* 0x1141 */
  /* file winbase.c line 2035 addr 0x1141 */
  /* file winbase.c line 2035 addr 0x1144 */
} /* 0x1148 */
BOOL WritePrivateProfileSectionA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x1148 */
  /* file winbase.c line 2036 addr 0x1148 */
  /* file winbase.c line 2036 addr 0x114b */
} /* 0x114f */
BOOL WritePrivateProfileSectionW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x114f */
  /* file winbase.c line 2037 addr 0x114f */
  /* file winbase.c line 2037 addr 0x1152 */
} /* 0x1156 */
BOOL WritePrivateProfileStringA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x1156 */
  /* file winbase.c line 2038 addr 0x1156 */
  /* file winbase.c line 2038 addr 0x1159 */
} /* 0x115d */
BOOL WritePrivateProfileStringW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x115d */
  /* file winbase.c line 2039 addr 0x115d */
  /* file winbase.c line 2039 addr 0x1160 */
} /* 0x1164 */
BOOL WritePrivateProfileStructA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPVOID c /* 0x10 */, UINT d /* 0x14 */, LPCSTR e /* 0x18 */)
{ /* 0x1164 */
  /* file winbase.c line 2040 addr 0x1164 */
  /* file winbase.c line 2040 addr 0x1167 */
} /* 0x116b */
BOOL WritePrivateProfileStructW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPVOID c /* 0x10 */, UINT d /* 0x14 */, LPCWSTR e /* 0x18 */)
{ /* 0x116b */
  /* file winbase.c line 2041 addr 0x116b */
  /* file winbase.c line 2041 addr 0x116e */
} /* 0x1172 */
BOOL WriteProcessMemory (HANDLE a /* 0x8 */, LPVOID b /* 0xc */, LPCVOID c /* 0x10 */, SIZE_T d /* 0x14 */, SIZE_T *e /* 0x18 */)
{ /* 0x1172 */
  /* file winbase.c line 2042 addr 0x1172 */
  /* file winbase.c line 2042 addr 0x1175 */
} /* 0x1179 */
BOOL WriteProfileSectionA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x1179 */
  /* file winbase.c line 2043 addr 0x1179 */
  /* file winbase.c line 2043 addr 0x117c */
} /* 0x1180 */
BOOL WriteProfileSectionW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x1180 */
  /* file winbase.c line 2044 addr 0x1180 */
  /* file winbase.c line 2044 addr 0x1183 */
} /* 0x1187 */
BOOL WriteProfileStringA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0x1187 */
  /* file winbase.c line 2045 addr 0x1187 */
  /* file winbase.c line 2045 addr 0x118a */
} /* 0x118e */
BOOL WriteProfileStringW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0x118e */
  /* file winbase.c line 2046 addr 0x118e */
  /* file winbase.c line 2046 addr 0x1191 */
} /* 0x1195 */
DWORD WriteTapemark (HANDLE a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0x1195 */
  /* file winbase.c line 2047 addr 0x1195 */
  /* file winbase.c line 2047 addr 0x1198 */
} /* 0x119c */
typedef STARTUPINFOA STARTUPINFO;
typedef STARTUPINFOA *LPSTARTUPINFO;
typedef WIN32_FIND_DATAA WIN32_FIND_DATA;
typedef WIN32_FIND_DATAA *PWIN32_FIND_DATA;
typedef WIN32_FIND_DATAA *LPWIN32_FIND_DATA;
typedef HW_PROFILE_INFOA HW_PROFILE_INFO;
typedef HW_PROFILE_INFOA *LPHW_PROFILE_INFO;
 wincon.c:
struct _CHAR_INFO { /* size 4 id 258 */
  union %anon259 { /* size 2 */
    WCHAR UnicodeChar; /* bitsize 16, bitpos 0 */
    CHAR AsciiChar; /* bitsize 8, bitpos 0 */
  } Char; /* bitsize 16, bitpos 0 */
  WORD Attributes; /* bitsize 16, bitpos 16 */
};
typedef struct _CHAR_INFO /* id 258 */ CHAR_INFO;
typedef struct _CHAR_INFO /* id 258 */ *PCHAR_INFO;
struct _SMALL_RECT { /* size 8 id 260 */
  SHORT Left; /* bitsize 16, bitpos 0 */
  SHORT Top; /* bitsize 16, bitpos 16 */
  SHORT Right; /* bitsize 16, bitpos 32 */
  SHORT Bottom; /* bitsize 16, bitpos 48 */
};
typedef struct _SMALL_RECT /* id 260 */ SMALL_RECT;
typedef struct _SMALL_RECT /* id 260 */ *PSMALL_RECT;
struct _CONSOLE_CURSOR_INFO { /* size 8 id 261 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  BOOL bVisible; /* bitsize 32, bitpos 32 */
};
typedef struct _CONSOLE_CURSOR_INFO /* id 261 */ CONSOLE_CURSOR_INFO;
typedef struct _CONSOLE_CURSOR_INFO /* id 261 */ *PCONSOLE_CURSOR_INFO;
struct _COORD { /* size 4 id 262 */
  SHORT X; /* bitsize 16, bitpos 0 */
  SHORT Y; /* bitsize 16, bitpos 16 */
};
typedef struct _COORD /* id 262 */ COORD;
typedef struct _COORD /* id 262 */ *PCOORD;
struct _CONSOLE_FONT_INFO { /* size 8 id 263 */
  DWORD nFont; /* bitsize 32, bitpos 0 */
  COORD dwFontSize; /* bitsize 32, bitpos 32 */
};
typedef struct _CONSOLE_FONT_INFO /* id 263 */ CONSOLE_FONT_INFO;
typedef struct _CONSOLE_FONT_INFO /* id 263 */ *PCONSOLE_FONT_INFO;
struct _CONSOLE_SCREEN_BUFFER_INFO { /* size 22 id 264 */
  COORD dwSize; /* bitsize 32, bitpos 0 */
  COORD dwCursorPosition; /* bitsize 32, bitpos 32 */
  WORD wAttributes; /* bitsize 16, bitpos 64 */
  SMALL_RECT srWindow; /* bitsize 64, bitpos 80 */
  COORD dwMaximumWindowSize; /* bitsize 32, bitpos 144 */
};
typedef struct _CONSOLE_SCREEN_BUFFER_INFO /* id 264 */ CONSOLE_SCREEN_BUFFER_INFO;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO /* id 264 */ *PCONSOLE_SCREEN_BUFFER_INFO;
typedef BOOL (*PHANDLER_ROUTINE) (/* unknown */);
struct _KEY_EVENT_RECORD { /* size 16 id 265 */
  BOOL bKeyDown; /* bitsize 32, bitpos 0 */
  WORD wRepeatCount; /* bitsize 16, bitpos 32 */
  WORD wVirtualKeyCode; /* bitsize 16, bitpos 48 */
  WORD wVirtualScanCode; /* bitsize 16, bitpos 64 */
  union %anon259 { /* size 2 */
    WCHAR UnicodeChar; /* bitsize 16, bitpos 0 */
    CHAR AsciiChar; /* bitsize 8, bitpos 0 */
  } uChar; /* bitsize 16, bitpos 80 */
  DWORD dwControlKeyState; /* bitsize 32, bitpos 96 */
};
typedef struct _KEY_EVENT_RECORD /* id 265 */ KEY_EVENT_RECORD;
struct _MOUSE_EVENT_RECORD { /* size 16 id 266 */
  COORD dwMousePosition; /* bitsize 32, bitpos 0 */
  DWORD dwButtonState; /* bitsize 32, bitpos 32 */
  DWORD dwControlKeyState; /* bitsize 32, bitpos 64 */
  DWORD dwEventFlags; /* bitsize 32, bitpos 96 */
};
typedef struct _MOUSE_EVENT_RECORD /* id 266 */ MOUSE_EVENT_RECORD;
struct _WINDOW_BUFFER_SIZE_RECORD { /* size 4 id 267 */
  COORD dwSize; /* bitsize 32, bitpos 0 */
};
typedef struct _WINDOW_BUFFER_SIZE_RECORD /* id 267 */ WINDOW_BUFFER_SIZE_RECORD;
struct _MENU_EVENT_RECORD { /* size 4 id 268 */
  UINT dwCommandId; /* bitsize 32, bitpos 0 */
};
typedef struct _MENU_EVENT_RECORD /* id 268 */ MENU_EVENT_RECORD;
typedef struct _MENU_EVENT_RECORD /* id 268 */ *PMENU_EVENT_RECORD;
struct _FOCUS_EVENT_RECORD { /* size 4 id 269 */
  BOOL bSetFocus; /* bitsize 32, bitpos 0 */
};
typedef struct _FOCUS_EVENT_RECORD /* id 269 */ FOCUS_EVENT_RECORD;
struct _INPUT_RECORD { /* size 20 id 270 */
  WORD EventType; /* bitsize 16, bitpos 0 */
  union %anon271 { /* size 16 */
    KEY_EVENT_RECORD KeyEvent; /* bitsize 128, bitpos 0 */
    MOUSE_EVENT_RECORD MouseEvent; /* bitsize 128, bitpos 0 */
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent; /* bitsize 32, bitpos 0 */
    MENU_EVENT_RECORD MenuEvent; /* bitsize 32, bitpos 0 */
    FOCUS_EVENT_RECORD FocusEvent; /* bitsize 32, bitpos 0 */
  } Event; /* bitsize 128, bitpos 32 */
};
typedef struct _INPUT_RECORD /* id 270 */ INPUT_RECORD;
typedef struct _INPUT_RECORD /* id 270 */ *PINPUT_RECORD;
BOOL AllocConsole ()
{ /* 0x119c */
  /* file wincon.c line 132 addr 0x119c */
  /* file wincon.c line 132 addr 0x119f */
} /* 0x11a1 */
HANDLE CreateConsoleScreenBuffer (DWORD a /* 0x8 */, DWORD b /* 0xc */, SECURITY_ATTRIBUTES const *c /* 0x10 */, DWORD d /* 0x14 */, LPVOID e /* 0x18 */)
{ /* 0x11a1 */
  /* file wincon.c line 137 addr 0x11a1 */
  /* file wincon.c line 137 addr 0x11a4 */
} /* 0x11a8 */
BOOL FillConsoleOutputAttribute (HANDLE a /* 0x8 */, int b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x11a8 */
  WORD b /* 0xfffffffe */;
  /* file wincon.c line 138 addr 0x11a8 */
  /* file wincon.c line 138 addr 0x11b5 */
} /* 0x11b9 */
BOOL FillConsoleOutputCharacterA (HANDLE a /* 0x8 */, int b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x11b9 */
  CHAR b /* 0xffffffff */;
  /* file wincon.c line 139 addr 0x11b9 */
  /* file wincon.c line 139 addr 0x11c5 */
} /* 0x11c9 */
BOOL FillConsoleOutputCharacterW (HANDLE a /* 0x8 */, int b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x11c9 */
  WCHAR b /* 0xfffffffe */;
  /* file wincon.c line 140 addr 0x11c9 */
  /* file wincon.c line 140 addr 0x11d6 */
} /* 0x11da */
BOOL FlushConsoleInputBuffer (HANDLE a /* 0x8 */)
{ /* 0x11da */
  /* file wincon.c line 141 addr 0x11da */
  /* file wincon.c line 141 addr 0x11dd */
} /* 0x11e1 */
BOOL FreeConsole ()
{ /* 0x11e1 */
  /* file wincon.c line 142 addr 0x11e1 */
  /* file wincon.c line 142 addr 0x11e4 */
} /* 0x11e6 */
BOOL GenerateConsoleCtrlEvent (DWORD a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x11e6 */
  /* file wincon.c line 143 addr 0x11e6 */
  /* file wincon.c line 143 addr 0x11e9 */
} /* 0x11ed */
UINT GetConsoleCP ()
{ /* 0x11ed */
  /* file wincon.c line 144 addr 0x11ed */
  /* file wincon.c line 144 addr 0x11f0 */
} /* 0x11f2 */
BOOL GetConsoleCursorInfo (HANDLE a /* 0x8 */, PCONSOLE_CURSOR_INFO b /* 0xc */)
{ /* 0x11f2 */
  /* file wincon.c line 145 addr 0x11f2 */
  /* file wincon.c line 145 addr 0x11f5 */
} /* 0x11f9 */
BOOL GetConsoleMode (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x11f9 */
  /* file wincon.c line 146 addr 0x11f9 */
  /* file wincon.c line 146 addr 0x11fc */
} /* 0x1200 */
UINT GetConsoleOutputCP ()
{ /* 0x1200 */
  /* file wincon.c line 147 addr 0x1200 */
  /* file wincon.c line 147 addr 0x1203 */
} /* 0x1205 */
BOOL GetConsoleScreenBufferInfo (HANDLE a /* 0x8 */, PCONSOLE_SCREEN_BUFFER_INFO b /* 0xc */)
{ /* 0x1205 */
  /* file wincon.c line 148 addr 0x1205 */
  /* file wincon.c line 148 addr 0x1208 */
} /* 0x120c */
DWORD GetConsoleTitleA (LPSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x120c */
  /* file wincon.c line 149 addr 0x120c */
  /* file wincon.c line 149 addr 0x120f */
} /* 0x1213 */
DWORD GetConsoleTitleW (LPWSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x1213 */
  /* file wincon.c line 150 addr 0x1213 */
  /* file wincon.c line 150 addr 0x1216 */
} /* 0x121a */
COORD GetLargestConsoleWindowSize (HANDLE a /* 0x8 */)
{ /* 0x121a */
  /* file wincon.c line 158 addr 0x121a */
  /* file wincon.c line 158 addr 0x121d */
} /* 0x1221 */
BOOL GetNumberOfConsoleInputEvents (HANDLE a /* 0x8 */, PDWORD b /* 0xc */)
{ /* 0x1221 */
  /* file wincon.c line 159 addr 0x1221 */
  /* file wincon.c line 159 addr 0x1224 */
} /* 0x1228 */
BOOL GetNumberOfConsoleMouseButtons (PDWORD a /* 0x8 */)
{ /* 0x1228 */
  /* file wincon.c line 160 addr 0x1228 */
  /* file wincon.c line 160 addr 0x122b */
} /* 0x122f */
BOOL PeekConsoleInputA (HANDLE a /* 0x8 */, PINPUT_RECORD b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x122f */
  /* file wincon.c line 161 addr 0x122f */
  /* file wincon.c line 161 addr 0x1232 */
} /* 0x1236 */
BOOL PeekConsoleInputW (HANDLE a /* 0x8 */, PINPUT_RECORD b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x1236 */
  /* file wincon.c line 162 addr 0x1236 */
  /* file wincon.c line 162 addr 0x1239 */
} /* 0x123d */
BOOL ReadConsoleA (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PVOID e /* 0x18 */)
{ /* 0x123d */
  /* file wincon.c line 163 addr 0x123d */
  /* file wincon.c line 163 addr 0x1240 */
} /* 0x1244 */
BOOL ReadConsoleW (HANDLE a /* 0x8 */, PVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PVOID e /* 0x18 */)
{ /* 0x1244 */
  /* file wincon.c line 164 addr 0x1244 */
  /* file wincon.c line 164 addr 0x1247 */
} /* 0x124b */
BOOL ReadConsoleInputA (HANDLE a /* 0x8 */, PINPUT_RECORD b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x124b */
  /* file wincon.c line 165 addr 0x124b */
  /* file wincon.c line 165 addr 0x124e */
} /* 0x1252 */
BOOL ReadConsoleInputW (HANDLE a /* 0x8 */, PINPUT_RECORD b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x1252 */
  /* file wincon.c line 166 addr 0x1252 */
  /* file wincon.c line 166 addr 0x1255 */
} /* 0x1259 */
BOOL ReadConsoleOutputAttribute (HANDLE a /* 0x8 */, LPWORD b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, LPDWORD e /* 0x18 */)
{ /* 0x1259 */
  /* file wincon.c line 167 addr 0x1259 */
  /* file wincon.c line 167 addr 0x125c */
} /* 0x1260 */
BOOL ReadConsoleOutputCharacterA (HANDLE a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x1260 */
  /* file wincon.c line 168 addr 0x1260 */
  /* file wincon.c line 168 addr 0x1263 */
} /* 0x1267 */
BOOL ReadConsoleOutputCharacterW (HANDLE a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x1267 */
  /* file wincon.c line 169 addr 0x1267 */
  /* file wincon.c line 169 addr 0x126a */
} /* 0x126e */
BOOL ReadConsoleOutputA (HANDLE a /* 0x8 */, PCHAR_INFO b /* 0xc */, COORD c /* 0x10 */, COORD d /* 0x14 */, PSMALL_RECT e /* 0x18 */)
{ /* 0x126e */
  /* file wincon.c line 170 addr 0x126e */
  /* file wincon.c line 170 addr 0x1271 */
} /* 0x1275 */
BOOL ReadConsoleOutputW (HANDLE a /* 0x8 */, PCHAR_INFO b /* 0xc */, COORD c /* 0x10 */, COORD d /* 0x14 */, PSMALL_RECT e /* 0x18 */)
{ /* 0x1275 */
  /* file wincon.c line 171 addr 0x1275 */
  /* file wincon.c line 171 addr 0x1278 */
} /* 0x127c */
BOOL ScrollConsoleScreenBufferA (HANDLE a /* 0x8 */, SMALL_RECT const *b /* 0xc */, SMALL_RECT const *c /* 0x10 */, COORD d /* 0x14 */, CHAR_INFO const *e /* 0x18 */)
{ /* 0x127c */
  /* file wincon.c line 172 addr 0x127c */
  /* file wincon.c line 172 addr 0x127f */
} /* 0x1283 */
BOOL ScrollConsoleScreenBufferW (HANDLE a /* 0x8 */, SMALL_RECT const *b /* 0xc */, SMALL_RECT const *c /* 0x10 */, COORD d /* 0x14 */, CHAR_INFO const *e /* 0x18 */)
{ /* 0x1283 */
  /* file wincon.c line 173 addr 0x1283 */
  /* file wincon.c line 173 addr 0x1286 */
} /* 0x128a */
BOOL SetConsoleActiveScreenBuffer (HANDLE a /* 0x8 */)
{ /* 0x128a */
  /* file wincon.c line 174 addr 0x128a */
  /* file wincon.c line 174 addr 0x128d */
} /* 0x1291 */
BOOL SetConsoleCP (UINT a /* 0x8 */)
{ /* 0x1291 */
  /* file wincon.c line 175 addr 0x1291 */
  /* file wincon.c line 175 addr 0x1294 */
} /* 0x1298 */
BOOL SetConsoleCtrlHandler (PHANDLER_ROUTINE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x1298 */
  /* file wincon.c line 176 addr 0x1298 */
  /* file wincon.c line 176 addr 0x129b */
} /* 0x129f */
BOOL SetConsoleCursorInfo (HANDLE a /* 0x8 */, CONSOLE_CURSOR_INFO const *b /* 0xc */)
{ /* 0x129f */
  /* file wincon.c line 177 addr 0x129f */
  /* file wincon.c line 177 addr 0x12a2 */
} /* 0x12a6 */
BOOL SetConsoleCursorPosition (HANDLE a /* 0x8 */, COORD b /* 0xc */)
{ /* 0x12a6 */
  /* file wincon.c line 178 addr 0x12a6 */
  /* file wincon.c line 178 addr 0x12a9 */
} /* 0x12ad */
BOOL SetConsoleMode (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x12ad */
  /* file wincon.c line 182 addr 0x12ad */
  /* file wincon.c line 182 addr 0x12b0 */
} /* 0x12b4 */
BOOL SetConsoleOutputCP (UINT a /* 0x8 */)
{ /* 0x12b4 */
  /* file wincon.c line 183 addr 0x12b4 */
  /* file wincon.c line 183 addr 0x12b7 */
} /* 0x12bb */
BOOL SetConsoleScreenBufferSize (HANDLE a /* 0x8 */, COORD b /* 0xc */)
{ /* 0x12bb */
  /* file wincon.c line 184 addr 0x12bb */
  /* file wincon.c line 184 addr 0x12be */
} /* 0x12c2 */
BOOL SetConsoleTextAttribute (HANDLE a /* 0x8 */, int b /* 0xc */)
{ /* 0x12c2 */
  WORD b /* 0xfffffffe */;
  /* file wincon.c line 185 addr 0x12c2 */
  /* file wincon.c line 185 addr 0x12cf */
} /* 0x12d3 */
BOOL SetConsoleTitleA (LPCSTR a /* 0x8 */)
{ /* 0x12d3 */
  /* file wincon.c line 186 addr 0x12d3 */
  /* file wincon.c line 186 addr 0x12d6 */
} /* 0x12da */
BOOL SetConsoleTitleW (LPCWSTR a /* 0x8 */)
{ /* 0x12da */
  /* file wincon.c line 187 addr 0x12da */
  /* file wincon.c line 187 addr 0x12dd */
} /* 0x12e1 */
BOOL SetConsoleWindowInfo (HANDLE a /* 0x8 */, BOOL b /* 0xc */, SMALL_RECT const *c /* 0x10 */)
{ /* 0x12e1 */
  /* file wincon.c line 188 addr 0x12e1 */
  /* file wincon.c line 188 addr 0x12e4 */
} /* 0x12e8 */
BOOL WriteConsoleA (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PVOID e /* 0x18 */)
{ /* 0x12e8 */
  /* file wincon.c line 189 addr 0x12e8 */
  /* file wincon.c line 189 addr 0x12eb */
} /* 0x12ef */
BOOL WriteConsoleW (HANDLE a /* 0x8 */, PCVOID b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */, PVOID e /* 0x18 */)
{ /* 0x12ef */
  /* file wincon.c line 190 addr 0x12ef */
  /* file wincon.c line 190 addr 0x12f2 */
} /* 0x12f6 */
BOOL WriteConsoleInputA (HANDLE a /* 0x8 */, INPUT_RECORD const *b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x12f6 */
  /* file wincon.c line 191 addr 0x12f6 */
  /* file wincon.c line 191 addr 0x12f9 */
} /* 0x12fd */
BOOL WriteConsoleInputW (HANDLE a /* 0x8 */, INPUT_RECORD const *b /* 0xc */, DWORD c /* 0x10 */, PDWORD d /* 0x14 */)
{ /* 0x12fd */
  /* file wincon.c line 192 addr 0x12fd */
  /* file wincon.c line 192 addr 0x1300 */
} /* 0x1304 */
BOOL WriteConsoleOutputA (HANDLE a /* 0x8 */, CHAR_INFO const *b /* 0xc */, COORD c /* 0x10 */, COORD d /* 0x14 */, PSMALL_RECT e /* 0x18 */)
{ /* 0x1304 */
  /* file wincon.c line 193 addr 0x1304 */
  /* file wincon.c line 193 addr 0x1307 */
} /* 0x130b */
BOOL WriteConsoleOutputW (HANDLE a /* 0x8 */, CHAR_INFO const *b /* 0xc */, COORD c /* 0x10 */, COORD d /* 0x14 */, PSMALL_RECT e /* 0x18 */)
{ /* 0x130b */
  /* file wincon.c line 194 addr 0x130b */
  /* file wincon.c line 194 addr 0x130e */
} /* 0x1312 */
BOOL WriteConsoleOutputAttribute (HANDLE a /* 0x8 */, WORD const *b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x1312 */
  /* file wincon.c line 195 addr 0x1312 */
  /* file wincon.c line 195 addr 0x1315 */
} /* 0x1319 */
BOOL WriteConsoleOutputCharacterA (HANDLE a /* 0x8 */, LPCSTR b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x1319 */
  /* file wincon.c line 196 addr 0x1319 */
  /* file wincon.c line 196 addr 0x131c */
} /* 0x1320 */
BOOL WriteConsoleOutputCharacterW (HANDLE a /* 0x8 */, LPCWSTR b /* 0xc */, DWORD c /* 0x10 */, COORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x1320 */
  /* file wincon.c line 197 addr 0x1320 */
  /* file wincon.c line 197 addr 0x1323 */
} /* 0x1327 */
