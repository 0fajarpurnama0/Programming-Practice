
user32.o:     file format pe-i386

SYMBOL TABLE:
[  0](sec -2)(fl 0x00)(ty   0)(scl 103) (nx 1) 0x00000000 user32.c
File 
[  2](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 1) 0x00000000 _ActivateKeyboardLayout@8
AUX tagndx 0 ttlsiz 0x0 lnnos 0 next 0
[  4](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000007 _AdjustWindowRect@12
[  5](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000000e _AdjustWindowRectEx@16
[  6](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000015 _AnyPopup@0
[  7](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000001a _AppendMenuA@16
[  8](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000021 _AppendMenuW@16
[  9](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000028 _ArrangeIconicWindows@4
[ 10](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000002f _AttachThreadInput@12
[ 11](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000036 _BeginDeferWindowPos@4
[ 12](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000003d _BeginPaint@8
[ 13](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000044 _BringWindowToTop@4
[ 14](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000004b _BroadcastSystemMessage@20
[ 15](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000052 _BroadcastSystemMessageA@20
[ 16](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000059 _BroadcastSystemMessageW@20
[ 17](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000060 _CallMsgFilterA@8
[ 18](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000067 _CallMsgFilterW@8
[ 19](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000006e _CallNextHookEx@16
[ 20](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000075 _CallWindowProcA@20
[ 21](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000007c _CallWindowProcW@20
[ 22](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000083 _CascadeWindows@20
[ 23](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000008a _ChangeClipboardChain@8
[ 24](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000091 _ChangeDisplaySettingsA@8
[ 25](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000098 _ChangeDisplaySettingsW@8
[ 26](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000009f _ChangeDisplaySettingsExA@20
[ 27](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000a6 _ChangeDisplaySettingsExW@20
[ 28](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000ad _ChangeMenuA@20
[ 29](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000b4 _ChangeMenuW@20
[ 30](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000bb _CharLowerA@4
[ 31](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000c2 _CharLowerW@4
[ 32](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000c9 _CharLowerBuffA@8
[ 33](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d0 _CharLowerBuffW@8
[ 34](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000d7 _CharNextA@4
[ 35](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000de _CharNextW@4
[ 36](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000e5 _CharNextExA@12
[ 37](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000f6 _CharPrevA@8
[ 38](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000000fd _CharPrevW@8
[ 39](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000104 _CharPrevExA@16
[ 40](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000115 _CharToOemA@8
[ 41](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000011c _CharToOemW@8
[ 42](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000123 _CharToOemBuffA@12
[ 43](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000012a _CharToOemBuffW@12
[ 44](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000131 _CharUpperA@4
[ 45](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000138 _CharUpperW@4
[ 46](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000013f _CharUpperBuffA@8
[ 47](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000146 _CharUpperBuffW@8
[ 48](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000014d _CheckDlgButton@12
[ 49](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000154 _CheckMenuItem@12
[ 50](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000015b _CheckMenuRadioItem@20
[ 51](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000162 _CheckRadioButton@16
[ 52](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000169 _ChildWindowFromPoint@12
[ 53](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000170 _ChildWindowFromPointEx@16
[ 54](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000177 _ClientToScreen@8
[ 55](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000017e _ClipCursor@4
[ 56](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000185 _CloseClipboard@0
[ 57](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000018a _CloseDesktop@4
[ 58](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000191 _CloseWindow@4
[ 59](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000198 _CloseWindowStation@4
[ 60](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000019f _CopyAcceleratorTableA@12
[ 61](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001a6 _CopyAcceleratorTableW@12
[ 62](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ad _CopyIcon@4
[ 63](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001b4 _CopyImage@20
[ 64](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001bb _CopyRect@8
[ 65](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001c2 _CountClipboardFormats@0
[ 66](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001c7 _CreateAcceleratorTableA@8
[ 67](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ce _CreateAcceleratorTableW@8
[ 68](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001d5 _CreateCaret@16
[ 69](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001dc _CreateCursor@28
[ 70](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001e3 _CreateDesktopA@24
[ 71](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ea _CreateDesktopW@24
[ 72](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001f1 _CreateDialogIndirectParamA@20
[ 73](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001f8 _CreateDialogIndirectParamW@20
[ 74](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000001ff _CreateDialogParamA@20
[ 75](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000206 _CreateDialogParamW@20
[ 76](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000020d _CreateIcon@28
[ 77](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000223 _CreateIconFromResource@16
[ 78](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000022a _CreateIconFromResourceEx@28
[ 79](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000231 _CreateIconIndirect@4
[ 80](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000238 _CreateMDIWindowA@40
[ 81](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000023f _CreateMDIWindowW@40
[ 82](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000246 _CreateMenu@0
[ 83](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000024b _CreatePopupMenu@0
[ 84](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000250 _CreateWindowExA@48
[ 85](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000257 _CreateWindowExW@48
[ 86](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000025e _CreateWindowStationA@16
[ 87](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000265 _CreateWindowStationW@16
[ 88](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000026c _DefDlgProcA@16
[ 89](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000273 _DefDlgProcW@16
[ 90](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000027a _DeferWindowPos@32
[ 91](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000281 _DefFrameProcA@20
[ 92](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000288 _DefFrameProcW@20
[ 93](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000028f _DefMDIChildProcA@16
[ 94](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000296 _DefMDIChildProcW@16
[ 95](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000029d _DefWindowProcA@16
[ 96](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002a4 _DefWindowProcW@16
[ 97](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ab _DeleteMenu@12
[ 98](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002b2 _DeregisterShellHookWindow@4
[ 99](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002b9 _DestroyAcceleratorTable@4
[100](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c0 _DestroyCaret@0
[101](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002c5 _DestroyCursor@4
[102](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002cc _DestroyIcon@4
[103](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002d3 _DestroyMenu@4
[104](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002da _DestroyWindow@4
[105](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002e1 _DialogBoxIndirectParamA@20
[106](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002e8 _DialogBoxIndirectParamW@20
[107](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002ef _DialogBoxParamA@20
[108](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002f6 _DialogBoxParamW@20
[109](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000002fd _DispatchMessageA@4
[110](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000304 _DispatchMessageW@4
[111](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000030b _DlgDirListA@20
[112](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000312 _DlgDirListW@20
[113](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000319 _DlgDirListComboBoxA@20
[114](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000320 _DlgDirListComboBoxW@20
[115](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000327 _DlgDirSelectComboBoxExA@16
[116](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000032e _DlgDirSelectComboBoxExW@16
[117](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000335 _DlgDirSelectExA@16
[118](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000033c _DlgDirSelectExW@16
[119](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000343 _DragDetect@12
[120](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000034a _DragObject@20
[121](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000351 _DrawAnimatedRects@16
[122](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000358 _DrawCaption@16
[123](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000035f _DrawEdge@16
[124](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000366 _DrawFocusRect@8
[125](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000036d _DrawFrameControl@16
[126](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000374 _DrawIcon@16
[127](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000037b _DrawIconEx@36
[128](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000382 _DrawMenuBar@4
[129](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000389 _DrawStateA@40
[130](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000390 _DrawStateW@40
[131](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000397 _DrawTextA@20
[132](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000039e _DrawTextW@20
[133](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003a5 _DrawTextExA@24
[134](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ac _DrawTextExW@24
[135](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003b3 _EmptyClipboard@0
[136](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003b8 _EnableMenuItem@12
[137](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003bf _EnableScrollBar@12
[138](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003c6 _EnableWindow@8
[139](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003cd _EndDeferWindowPos@4
[140](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003d4 _EndDialog@8
[141](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003db _EndMenu@0
[142](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003e0 _EndPaint@8
[143](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003e7 _EnumChildWindows@12
[144](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003ee _EnumClipboardFormats@4
[145](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003f5 _EnumDesktopsA@12
[146](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000003fc _EnumDesktopsW@12
[147](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000403 _EnumDesktopWindows@12
[148](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000040a _EnumDisplayMonitors@16
[149](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000411 _EnumDisplaySettingsA@12
[150](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000418 _EnumDisplaySettingsW@12
[151](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000041f _EnumDisplayDevicesA@16
[152](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000426 _EnumDisplayDevicesW@16
[153](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000042d _EnumPropsA@8
[154](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000434 _EnumPropsW@8
[155](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000043b _EnumPropsExA@12
[156](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000442 _EnumPropsExW@12
[157](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000449 _EnumThreadWindows@12
[158](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000450 _EnumWindows@8
[159](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000457 _EnumWindowStationsA@8
[160](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000045e _EnumWindowStationsW@8
[161](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000465 _EqualRect@8
[162](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000046c _ExitWindowsEx@8
[163](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000473 _FindWindowA@8
[164](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000047a _FindWindowExA@16
[165](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000481 _FindWindowExW@16
[166](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000488 _FindWindowW@8
[167](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000048f _FlashWindow@8
[168](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000496 _FrameRect@12
[169](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000049d _FrameRgn@20
[170](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004a4 _GetActiveWindow@0
[171](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004a9 _GetAncestor@8
[172](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004b0 _GetAsyncKeyState@4
[173](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004b7 _GetCapture@0
[174](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004bc _GetCaretBlinkTime@0
[175](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004c1 _GetCaretPos@4
[176](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004c8 _GetClassInfoA@12
[177](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004cf _GetClassInfoExA@12
[178](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004d6 _GetClassInfoW@12
[179](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004dd _GetClassInfoExW@12
[180](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004e4 _GetClassLongA@8
[181](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004eb _GetClassLongW@8
[182](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004f2 _GetClassNameA@12
[183](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000004f9 _GetClassNameW@12
[184](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000500 _GetClassWord@8
[185](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000507 _GetClientRect@8
[186](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000050e _GetClipboardData@4
[187](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000515 _GetClipboardFormatNameA@12
[188](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000051c _GetClipboardFormatNameW@12
[189](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000523 _GetClipboardOwner@0
[190](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000528 _GetClipboardViewer@0
[191](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000052d _GetClipCursor@4
[192](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000534 _GetCursorPos@4
[193](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000053b _GetDC@4
[194](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000542 _GetDCEx@12
[195](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000549 _GetDesktopWindow@0
[196](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000054e _GetDialogBaseUnits@0
[197](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000553 _GetDlgCtrlID@4
[198](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000055a _GetDlgItem@8
[199](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000561 _GetDlgItemInt@16
[200](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000568 _GetDlgItemTextA@16
[201](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000056f _GetDlgItemTextW@16
[202](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000576 _GetDoubleClickTime@0
[203](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000057b _GetFocus@0
[204](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000580 _GetForegroundWindow@0
[205](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000585 _GetIconInfo@8
[206](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000058c _GetInputState@0
[207](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000591 _GetKBCodePage@0
[208](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000596 _GetKeyboardLayout@4
[209](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000059d _GetKeyboardLayoutList@8
[210](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005a4 _GetKeyboardLayoutNameA@4
[211](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005ab _GetKeyboardLayoutNameW@4
[212](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b2 _GetKeyboardState@4
[213](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005b9 _GetKeyboardType@4
[214](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005c0 _GetKeyNameTextA@12
[215](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005c7 _GetKeyNameTextW@12
[216](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005ce _GetKeyState@4
[217](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005d5 _GetLastActivePopup@4
[218](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005dc _GetMenu@4
[219](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005e3 _GetMenuCheckMarkDimensions@0
[220](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005e8 _GetMenuContextHelpId@4
[221](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005ef _GetMenuDefaultItem@12
[222](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005f6 _GetMenuItemCount@4
[223](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000005fd _GetMenuItemID@8
[224](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000604 _GetMenuItemInfoA@16
[225](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000060b _GetMenuItemInfoW@16
[226](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000612 _GetMenuItemRect@16
[227](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000619 _GetMenuState@12
[228](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000620 _GetMenuStringA@20
[229](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000627 _GetMenuStringW@20
[230](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000062e _GetMessageA@16
[231](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000635 _GetMessageW@16
[232](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000063c _GetMessageExtraInfo@0
[233](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000641 _GetMessagePos@0
[234](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000646 _GetMessageTime@0
[235](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000064b _GetNextDlgGroupItem@12
[236](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000652 _GetNextDlgTabItem@12
[237](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000659 _GetOpenClipboardWindow@0
[238](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000065e _GetParent@4
[239](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000665 _GetPriorityClipboardFormat@8
[240](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000066c _GetPropA@8
[241](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000673 _GetPropW@8
[242](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000067a _GetQueueStatus@4
[243](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000681 _GetScrollInfo@12
[244](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000688 _GetScrollPos@8
[245](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000068f _GetScrollRange@16
[246](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000696 _GetSubMenu@8
[247](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000069d _GetSysColor@4
[248](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006a4 _GetSysColorBrush@4
[249](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ab _GetSystemMenu@8
[250](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006b2 _GetSystemMetrics@4
[251](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006b9 _GetTabbedTextExtentA@20
[252](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c0 _GetTabbedTextExtentW@20
[253](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006c7 _GetWindowLongA@8
[254](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ce _GetWindowLongW@8
[255](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006d5 _GetThreadDesktop@4
[256](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006dc _GetTopWindow@4
[257](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006e3 _GetUpdateRect@12
[258](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ea _GetUpdateRgn@12
[259](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f1 _GetUserObjectInformationA@20
[260](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006f8 _GetUserObjectInformationW@20
[261](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000006ff _GetUserObjectSecurity@20
[262](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000706 _GetWindow@8
[263](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000070d _GetWindowContextHelpId@4
[264](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000714 _GetWindowDC@4
[265](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000071b _GetWindowPlacement@8
[266](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000722 _GetWindowRect@8
[267](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000729 _GetWindowRgn@8
[268](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000730 _GetWindowTextA@12
[269](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000737 _GetWindowTextLengthA@4
[270](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000073e _GetWindowTextLengthW@4
[271](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000745 _GetWindowTextW@12
[272](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000074c _GetWindowWord@8
[273](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000753 _GetAltTabInfoA@20
[274](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000075a _GetAltTabInfoW@20
[275](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000761 _GetComboBoxInfo@8
[276](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000768 _GetCursorInfo@4
[277](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000076f _GetLastInputInfo@4
[278](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000776 _GetListBoxInfo@4
[279](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000077d _GetMenuBarInfo@16
[280](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000784 _GetMenuInfo@8
[281](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000078b _GetScrollBarInfo@12
[282](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000792 _GetWindowInfo@8
[283](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000799 _GetMonitorInfoA@8
[284](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007a0 _GetMonitorInfoW@8
[285](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007a7 _GetWindowModuleFileNameA@12
[286](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007ae _GetWindowModuleFileNameW@12
[287](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007b5 _GrayStringA@36
[288](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007bc _GrayStringW@36
[289](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007c3 _HideCaret@4
[290](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007ca _HiliteMenuItem@16
[291](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007d1 _InflateRect@12
[292](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007d8 _InSendMessage@0
[293](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007dd _InsertMenuA@20
[294](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007e4 _InsertMenuW@20
[295](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007eb _InsertMenuItemA@16
[296](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007f2 _InsertMenuItemW@16
[297](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000007f9 _InternalGetWindowText@12
[298](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000800 _IntersectRect@12
[299](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000807 _InvalidateRect@12
[300](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000080e _InvalidateRgn@12
[301](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000815 _InvertRect@8
[302](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000081c _IsCharAlphaA@4
[303](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000082c _IsCharAlphaNumericA@4
[304](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000083c _IsCharAlphaNumericW@4
[305](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000084d _IsCharAlphaW@4
[306](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000085e _IsCharLowerA@4
[307](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000086e _IsCharLowerW@4
[308](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000087f _IsCharUpperA@4
[309](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000088f _IsCharUpperW@4
[310](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008a0 _IsChild@8
[311](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008a7 _IsClipboardFormatAvailable@4
[312](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ae _IsDialogMessageA@8
[313](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008b5 _IsDialogMessageW@8
[314](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008bc _IsDlgButtonChecked@8
[315](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008c3 _IsIconic@4
[316](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ca _IsMenu@4
[317](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008d1 _IsRectEmpty@4
[318](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008d8 _IsWindow@4
[319](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008df _IsWindowEnabled@4
[320](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008e6 _IsWindowUnicode@4
[321](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008ed _IsWindowVisible@4
[322](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008f4 _IsZoomed@4
[323](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000008fb _keybd_event@16
[324](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000911 _KillTimer@8
[325](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000918 _LoadAcceleratorsA@8
[326](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000091f _LoadAcceleratorsW@8
[327](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000926 _LoadBitmapA@8
[328](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000092d _LoadBitmapW@8
[329](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000934 _LoadCursorA@8
[330](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000093b _LoadCursorFromFileA@4
[331](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000942 _LoadCursorFromFileW@4
[332](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000949 _LoadCursorW@8
[333](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000950 _LoadIconA@8
[334](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000957 _LoadIconW@8
[335](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000095e _LoadImageA@24
[336](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000965 _LoadImageW@24
[337](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000096c _LoadKeyboardLayoutA@8
[338](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000973 _LoadKeyboardLayoutW@8
[339](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000097a _LoadMenuA@8
[340](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000981 _LoadMenuIndirectA@4
[341](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000988 _LoadMenuIndirectW@4
[342](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000098f _LoadMenuW@8
[343](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000996 _LoadStringA@16
[344](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x0000099d _LoadStringW@16
[345](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009a4 _LockWindowUpdate@4
[346](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009ab _LookupIconIdFromDirectory@8
[347](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009b2 _LookupIconIdFromDirectoryEx@20
[348](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009b9 _MapDialogRect@8
[349](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009c0 _MapVirtualKeyA@8
[350](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009c7 _MapVirtualKeyExA@12
[351](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009ce _MapVirtualKeyExW@12
[352](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009d5 _MapVirtualKeyW@8
[353](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009dc _MapWindowPoints@16
[354](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009e3 _MenuItemFromPoint@16
[355](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009ea _MessageBeep@4
[356](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009f1 _MessageBoxA@16
[357](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009f8 _MessageBoxW@16
[358](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x000009ff _MessageBoxExA@20
[359](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a10 _MessageBoxExW@20
[360](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a21 _MessageBoxIndirectA@4
[361](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a28 _MessageBoxIndirectW@4
[362](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a2f _ModifyMenuA@20
[363](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a36 _ModifyMenuW@20
[364](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a3d _mouse_event@20
[365](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a44 _MoveWindow@24
[366](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a4b _MsgWaitForMultipleObjects@20
[367](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a52 _MsgWaitForMultipleObjectsEx@20
[368](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a59 _OemKeyScan@4
[369](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a6a _OemToCharA@8
[370](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a71 _OemToCharBuffA@12
[371](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a78 _OemToCharBuffW@12
[372](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a7f _OemToCharW@8
[373](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a86 _OffsetRect@12
[374](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a8d _OpenClipboard@4
[375](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a94 _OpenDesktopA@16
[376](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000a9b _OpenDesktopW@16
[377](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000aa2 _OpenIcon@4
[378](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000aa9 _OpenInputDesktop@12
[379](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ab0 _OpenWindowStationA@12
[380](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ab7 _OpenWindowStationW@12
[381](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000abe _PaintDesktop@4
[382](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ac5 _PeekMessageA@20
[383](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000acc _PeekMessageW@20
[384](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ad3 _PostMessageA@16
[385](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ada _PostMessageW@16
[386](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ae1 _PostQuitMessage@4
[387](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ae8 _PostThreadMessageA@16
[388](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000aef _PostThreadMessageW@16
[389](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000af6 _PtInRect@12
[390](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000afd _RealChildWindowFromPoint@12
[391](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b04 _RealGetWindowClassA@12
[392](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b0b _RealGetWindowClassW@12
[393](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b12 _RedrawWindow@16
[394](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b19 _RegisterClassA@4
[395](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b20 _RegisterClassW@4
[396](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b27 _RegisterClassExA@4
[397](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b2e _RegisterClassExW@4
[398](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b35 _RegisterClipboardFormatA@4
[399](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b3c _RegisterClipboardFormatW@4
[400](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b43 _RegisterHotKey@16
[401](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b4a _RegisterWindowMessageA@4
[402](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b51 _RegisterWindowMessageW@4
[403](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b58 _ReleaseCapture@0
[404](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b5d _ReleaseDC@8
[405](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b64 _RemoveMenu@12
[406](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b6b _RemovePropA@8
[407](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b72 _RemovePropW@8
[408](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b79 _ReplyMessage@4
[409](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b80 _ScreenToClient@8
[410](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b87 _ScrollDC@28
[411](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b8e _ScrollWindow@20
[412](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b95 _ScrollWindowEx@32
[413](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000b9c _SendDlgItemMessageA@20
[414](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ba3 _SendDlgItemMessageW@20
[415](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000baa _SendMessageA@16
[416](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bb1 _SendMessageCallbackA@24
[417](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bb8 _SendMessageCallbackW@24
[418](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bbf _SendMessageTimeoutA@28
[419](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bc6 _SendMessageTimeoutW@28
[420](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bcd _SendMessageW@16
[421](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bd4 _SendNotifyMessageA@16
[422](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bdb _SendNotifyMessageW@16
[423](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000be2 _SetActiveWindow@4
[424](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000be9 _SetCapture@4
[425](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bf0 _SetCaretBlinkTime@4
[426](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bf7 _SetCaretPos@8
[427](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000bfe _SetClassLongA@12
[428](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c05 _SetClassLongW@12
[429](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c0c _SetClassWord@12
[430](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c1d _SetClipboardData@8
[431](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c24 _SetClipboardViewer@4
[432](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c2b _SetCursor@4
[433](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c32 _SetCursorPos@8
[434](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c39 _SetDebugErrorLevel@4
[435](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c40 _SetDlgItemInt@16
[436](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c47 _SetDlgItemTextA@12
[437](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c4e _SetDlgItemTextW@12
[438](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c55 _SetDoubleClickTime@4
[439](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c5c _SetFocus@4
[440](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c63 _SetForegroundWindow@4
[441](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c6a _SetKeyboardState@4
[442](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c71 _SetMenu@8
[443](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c78 _SetMenuContextHelpId@8
[444](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c7f _SetMenuDefaultItem@12
[445](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c86 _SetMenuInfo@8
[446](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c8d _SetMenuItemBitmaps@20
[447](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c94 _SetMenuItemInfoA@16
[448](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000c9b _SetMenuItemInfoW@16
[449](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ca2 _SetMessageExtraInfo@4
[450](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ca9 _SetMessageQueue@4
[451](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cb0 _SetParent@8
[452](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cb7 _SetProcessWindowStation@4
[453](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cbe _SetPropA@12
[454](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cc5 _SetPropW@12
[455](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ccc _SetRect@20
[456](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cd3 _SetRectEmpty@4
[457](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cda _SetScrollInfo@16
[458](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ce1 _SetScrollPos@16
[459](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ce8 _SetScrollRange@20
[460](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cef _SetSysColors@12
[461](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cf6 _SetSystemCursor@8
[462](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000cfd _SetThreadDesktop@4
[463](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d04 _SetTimer@16
[464](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d0b _SetUserObjectInformationA@16
[465](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d12 _SetUserObjectInformationW@16
[466](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d19 _SetUserObjectSecurity@12
[467](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d20 _SetWindowContextHelpId@8
[468](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d27 _SetWindowLongA@12
[469](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d2e _SetWindowLongW@12
[470](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d35 _SetWindowPlacement@8
[471](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d3c _SetWindowPos@28
[472](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d43 _SetWindowRgn@12
[473](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d4a _SetWindowsHookA@8
[474](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d51 _SetWindowsHookW@8
[475](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d58 _SetWindowsHookExA@16
[476](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d5f _SetWindowsHookExW@16
[477](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d66 _SetWindowTextA@8
[478](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d6d _SetWindowTextW@8
[479](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d74 _SetWindowWord@12
[480](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d85 _ShowCaret@4
[481](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d8c _ShowCursor@4
[482](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d93 _ShowOwnedPopups@8
[483](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000d9a _ShowScrollBar@12
[484](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000da1 _ShowWindow@8
[485](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000da8 _ShowWindowAsync@8
[486](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000daf _SubtractRect@12
[487](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000db6 _SwapMouseButton@4
[488](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dbd _SwitchDesktop@4
[489](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dc4 _SystemParametersInfoA@16
[490](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dcb _SystemParametersInfoW@16
[491](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dd2 _TabbedTextOutA@32
[492](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dd9 _TabbedTextOutW@32
[493](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000de0 _TileWindows@20
[494](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000de7 _ToAscii@20
[495](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dee _ToAsciiEx@24
[496](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000df5 _ToUnicode@24
[497](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000dfc _ToUnicodeEx@28
[498](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e03 _TrackMouseEvent@4
[499](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e0a _TrackPopupMenu@28
[500](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e11 _TrackPopupMenuEx@24
[501](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e18 _TranslateAcceleratorA@12
[502](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e1f _TranslateAcceleratorW@12
[503](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e26 _TranslateMDISysAccel@8
[504](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e2d _TranslateMessage@4
[505](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e34 _UnhookWindowsHook@8
[506](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e3b _UnhookWindowsHookEx@4
[507](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e42 _UnionRect@12
[508](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e49 _UnloadKeyboardLayout@4
[509](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e50 _UnregisterClassA@8
[510](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e57 _UnregisterClassW@8
[511](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e5e _UnregisterHotKey@8
[512](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e65 _UpdateWindow@4
[513](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e6c _ValidateRect@8
[514](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e73 _ValidateRgn@8
[515](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e7a _VkKeyScanA@4
[516](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e8a _VkKeyScanExA@8
[517](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000e9a _VkKeyScanExW@8
[518](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000eab _VkKeyScanW@4
[519](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ebc _WaitForInputIdle@8
[520](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ec3 _WaitMessage@0
[521](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ec8 _WindowFromDC@4
[522](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ecf _WindowFromPoint@8
[523](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ed6 _WinExec@8
[524](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000edd _WinHelpA@16
[525](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ee4 _WinHelpW@16
[526](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000eeb _wsprintfA
[527](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ef0 _wsprintfW
[528](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000ef5 _wvsprintfA@12
[529](sec  1)(fl 0x00)(ty  20)(scl   2) (nx 0) 0x00000efc _wvsprintfW@12
[530](sec  1)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .text
AUX scnlen 0xf03 nreloc 0 nlnno 0
[532](sec  2)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .data
AUX scnlen 0x0 nreloc 0 nlnno 0
[534](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .bss
AUX scnlen 0x0 nreloc 0 nlnno 0
[536](sec  4)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stab
AUX scnlen 0xf99c nreloc 531 nlnno 0
[538](sec  5)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .stabstr
AUX scnlen 0x252f4 nreloc 0 nlnno 0


/cygdrive/c/cg/projects/recstudio4/support/win32api/user32.c:
typedef int32 int;
typedef int8 char;
typedef int32 long int;
typedef uint32 unsigned int;
typedef uint32 long unsigned int;
typedef int64 long long int;
typedef uint64 long long unsigned int;
typedef int16 short int;
typedef uint16 short unsigned int;
typedef int8 signed char;
typedef uint8 unsigned char;
typedef float float;
typedef double double;
typedef float96 long double;
typedef struct %anon1 { /* size 8 */
  int real; /* bitsize 32, bitpos 0 */
  int imag; /* bitsize 32, bitpos 32 */
} complex int;
typedef complex float0 complex float;
typedef complex float0 complex double;
typedef complex float0 complex long double;
typedef void void;
typedef char *__builtin_va_list;
typedef bool32 boolean;
typedef boolean _Bool;
struct _EXCEPTION_REGISTRATION_RECORD { /* id 0 */
};
 /usr/include/w32api/windef.h:
typedef long unsigned int DWORD;
typedef int WINBOOL;
typedef int *PWINBOOL;
typedef int *LPWINBOOL;
typedef WINBOOL BOOL;
typedef unsigned char BYTE;
typedef BOOL *PBOOL;
typedef BOOL *LPBOOL;
typedef short unsigned int WORD;
typedef float FLOAT;
typedef FLOAT *PFLOAT;
typedef BYTE *PBYTE;
typedef BYTE *LPBYTE;
typedef int *PINT;
typedef int *LPINT;
typedef WORD *PWORD;
typedef WORD *LPWORD;
typedef long int *LPLONG;
typedef DWORD *PDWORD;
typedef DWORD *LPDWORD;
typedef void const *PCVOID;
typedef void const *LPCVOID;
typedef int INT;
typedef unsigned int UINT;
typedef unsigned int *PUINT;
typedef unsigned int *LPUINT;
typedef unsigned int WPARAM;
typedef long int LPARAM;
typedef long int LRESULT;
typedef long int HRESULT;
typedef WORD ATOM;
typedef void *HGLOBAL;
typedef void *HLOCAL;
typedef void *GLOBALHANDLE;
typedef void *LOCALHANDLE;
typedef void *HGDIOBJ;
struct HACCEL__ { /* size 4 id 2 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HACCEL__ /* id 2 */ *HACCEL;
struct HBITMAP__ { /* size 4 id 3 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBITMAP__ /* id 3 */ *HBITMAP;
struct HBRUSH__ { /* size 4 id 4 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HBRUSH__ /* id 4 */ *HBRUSH;
struct HCOLORSPACE__ { /* size 4 id 5 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HCOLORSPACE__ /* id 5 */ *HCOLORSPACE;
struct HDC__ { /* size 4 id 6 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDC__ /* id 6 */ *HDC;
struct HGLRC__ { /* size 4 id 7 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HGLRC__ /* id 7 */ *HGLRC;
struct HDESK__ { /* size 4 id 8 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDESK__ /* id 8 */ *HDESK;
struct HENHMETAFILE__ { /* size 4 id 9 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HENHMETAFILE__ /* id 9 */ *HENHMETAFILE;
struct HFONT__ { /* size 4 id 10 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HFONT__ /* id 10 */ *HFONT;
struct HICON__ { /* size 4 id 11 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HICON__ /* id 11 */ *HICON;
struct HKEY__ { /* size 4 id 12 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKEY__ /* id 12 */ *HKEY;
struct HMONITOR__ { /* size 4 id 13 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMONITOR__ /* id 13 */ *HMONITOR;
struct HTERMINAL__ { /* size 4 id 14 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTERMINAL__ /* id 14 */ *HTERMINAL;
struct HWINEVENTHOOK__ { /* size 4 id 15 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINEVENTHOOK__ /* id 15 */ *HWINEVENTHOOK;
typedef HKEY *PHKEY;
struct HMENU__ { /* size 4 id 16 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMENU__ /* id 16 */ *HMENU;
struct HMETAFILE__ { /* size 4 id 17 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HMETAFILE__ /* id 17 */ *HMETAFILE;
struct HINSTANCE__ { /* size 4 id 18 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HINSTANCE__ /* id 18 */ *HINSTANCE;
typedef HINSTANCE HMODULE;
struct HPALETTE__ { /* size 4 id 19 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPALETTE__ /* id 19 */ *HPALETTE;
struct HPEN__ { /* size 4 id 20 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HPEN__ /* id 20 */ *HPEN;
struct HRGN__ { /* size 4 id 21 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRGN__ /* id 21 */ *HRGN;
struct HRSRC__ { /* size 4 id 22 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HRSRC__ /* id 22 */ *HRSRC;
struct HSTR__ { /* size 4 id 23 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HSTR__ /* id 23 */ *HSTR;
struct HTASK__ { /* size 4 id 24 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HTASK__ /* id 24 */ *HTASK;
struct HWND__ { /* size 4 id 25 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWND__ /* id 25 */ *HWND;
struct HWINSTA__ { /* size 4 id 26 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HWINSTA__ /* id 26 */ *HWINSTA;
struct HKL__ { /* size 4 id 27 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HKL__ /* id 27 */ *HKL;
typedef int HFILE;
typedef HICON HCURSOR;
typedef DWORD COLORREF;
typedef int (*FARPROC) (/* unknown */);
typedef int (*NEARPROC) (/* unknown */);
typedef int (*PROC) (/* unknown */);
struct tagRECT { /* size 16 id 28 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECT /* id 28 */ RECT;
typedef struct tagRECT /* id 28 */ *PRECT;
typedef struct tagRECT /* id 28 */ *LPRECT;
typedef RECT const *LPCRECT;
struct tagRECTL { /* size 16 id 29 */
  long int left; /* bitsize 32, bitpos 0 */
  long int top; /* bitsize 32, bitpos 32 */
  long int right; /* bitsize 32, bitpos 64 */
  long int bottom; /* bitsize 32, bitpos 96 */
};
typedef struct tagRECTL /* id 29 */ RECTL;
typedef struct tagRECTL /* id 29 */ *PRECTL;
typedef struct tagRECTL /* id 29 */ *LPRECTL;
typedef RECTL const *LPCRECTL;
struct tagPOINT { /* size 8 id 30 */
  long int x; /* bitsize 32, bitpos 0 */
  long int y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINT /* id 30 */ POINT;
typedef struct tagPOINT /* id 30 */ POINTL;
typedef struct tagPOINT /* id 30 */ *PPOINT;
typedef struct tagPOINT /* id 30 */ *LPPOINT;
typedef struct tagPOINT /* id 30 */ *PPOINTL;
typedef struct tagPOINT /* id 30 */ *LPPOINTL;
struct tagSIZE { /* size 8 id 31 */
  long int cx; /* bitsize 32, bitpos 0 */
  long int cy; /* bitsize 32, bitpos 32 */
};
typedef struct tagSIZE /* id 31 */ SIZE;
typedef struct tagSIZE /* id 31 */ SIZEL;
typedef struct tagSIZE /* id 31 */ *PSIZE;
typedef struct tagSIZE /* id 31 */ *LPSIZE;
typedef struct tagSIZE /* id 31 */ *PSIZEL;
typedef struct tagSIZE /* id 31 */ *LPSIZEL;
struct tagPOINTS { /* size 4 id 32 */
  short int x; /* bitsize 16, bitpos 0 */
  short int y; /* bitsize 16, bitpos 16 */
};
typedef struct tagPOINTS /* id 32 */ POINTS;
typedef struct tagPOINTS /* id 32 */ *PPOINTS;
typedef struct tagPOINTS /* id 32 */ *LPPOINTS;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/winnt.h:
typedef char CHAR;
typedef short int SHORT;
typedef long int LONG;
typedef char CCHAR;
typedef char *PCCHAR;
typedef unsigned char UCHAR;
typedef unsigned char *PUCHAR;
typedef short unsigned int USHORT;
typedef short unsigned int *PUSHORT;
typedef long unsigned int ULONG;
typedef long unsigned int *PULONG;
typedef char *PSZ;
typedef void *PVOID;
typedef void *LPVOID;
typedef void *PVOID64;
typedef short unsigned int wchar_t;
typedef wchar_t WCHAR;
typedef WCHAR *PWCHAR;
typedef WCHAR *LPWCH;
typedef WCHAR *PWCH;
typedef WCHAR *NWPSTR;
typedef WCHAR *LPWSTR;
typedef WCHAR *PWSTR;
typedef WCHAR const *LPCWCH;
typedef WCHAR const *PCWCH;
typedef WCHAR const *LPCWSTR;
typedef WCHAR const *PCWSTR;
typedef CHAR *PCHAR;
typedef CHAR *LPCH;
typedef CHAR *PCH;
typedef CHAR *NPSTR;
typedef CHAR *LPSTR;
typedef CHAR *PSTR;
typedef CHAR const *LPCCH;
typedef CHAR const *PCSTR;
typedef CHAR const *LPCSTR;
typedef CHAR TCHAR;
typedef CHAR _TCHAR;
typedef TCHAR TBYTE;
typedef TCHAR *PTCH;
typedef TCHAR *PTBYTE;
typedef TCHAR *LPTCH;
typedef TCHAR *PTSTR;
typedef TCHAR *LPTSTR;
typedef TCHAR *LP;
typedef TCHAR *PTCHAR;
typedef TCHAR const *LPCTSTR;
typedef SHORT *PSHORT;
typedef LONG *PLONG;
typedef void *HANDLE;
typedef HANDLE *PHANDLE;
typedef HANDLE *LPHANDLE;
typedef DWORD LCID;
typedef PDWORD PLCID;
typedef WORD LANGID;
typedef long long int LONGLONG;
typedef long long unsigned int DWORDLONG;
typedef LONGLONG *PLONGLONG;
typedef DWORDLONG *PDWORDLONG;
typedef DWORDLONG ULONGLONG;
typedef DWORDLONG *PULONGLONG;
typedef LONGLONG USN;
typedef BYTE BOOLEAN;
typedef BYTE *PBOOLEAN;
typedef BYTE FCHAR;
typedef WORD FSHORT;
typedef DWORD FLONG;
typedef DWORD ACCESS_MASK;
typedef DWORD *PACCESS_MASK;
struct _GUID { /* size 16 id 33 */
  long unsigned int Data1; /* bitsize 32, bitpos 0 */
  short unsigned int Data2; /* bitsize 16, bitpos 32 */
  short unsigned int Data3; /* bitsize 16, bitpos 48 */
  unsigned char Data4[8]:uint32; /* bitsize 64, bitpos 64 */
};
typedef struct _GUID /* id 33 */ GUID;
typedef struct _GUID /* id 33 */ *REFGUID;
typedef struct _GUID /* id 33 */ *LPGUID;
struct _GENERIC_MAPPING { /* size 16 id 34 */
  ACCESS_MASK GenericRead; /* bitsize 32, bitpos 0 */
  ACCESS_MASK GenericWrite; /* bitsize 32, bitpos 32 */
  ACCESS_MASK GenericExecute; /* bitsize 32, bitpos 64 */
  ACCESS_MASK GenericAll; /* bitsize 32, bitpos 96 */
};
typedef struct _GENERIC_MAPPING /* id 34 */ GENERIC_MAPPING;
typedef struct _GENERIC_MAPPING /* id 34 */ *PGENERIC_MAPPING;
struct _ACE_HEADER { /* size 4 id 35 */
  BYTE AceType; /* bitsize 8, bitpos 0 */
  BYTE AceFlags; /* bitsize 8, bitpos 8 */
  WORD AceSize; /* bitsize 16, bitpos 16 */
};
typedef struct _ACE_HEADER /* id 35 */ ACE_HEADER;
typedef struct _ACE_HEADER /* id 35 */ *PACE_HEADER;
struct _ACCESS_ALLOWED_ACE { /* size 12 id 36 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_ACE /* id 36 */ *PACCESS_ALLOWED_ACE;
struct _ACCESS_DENIED_ACE { /* size 12 id 37 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_DENIED_ACE /* id 37 */ ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_ACE /* id 37 */ *PACCESS_DENIED_ACE;
struct _SYSTEM_AUDIT_ACE { /* size 12 id 38 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_AUDIT_ACE /* id 38 */ SYSTEM_AUDIT_ACE;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
struct _SYSTEM_ALARM_ACE { /* size 12 id 39 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ SYSTEM_ALARM_ACE;
typedef struct _SYSTEM_ALARM_ACE /* id 39 */ *PSYSTEM_ALARM_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE { /* size 48 id 40 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE /* id 40 */ *PACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE { /* size 48 id 41 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ ACCESS_DENIED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_OBJECT_ACE /* id 41 */ *PACCESS_DENIED_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE { /* size 48 id 42 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ SYSTEM_AUDIT_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE /* id 42 */ *PSYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE { /* size 48 id 43 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD Flags; /* bitsize 32, bitpos 64 */
  GUID ObjectType; /* bitsize 128, bitpos 96 */
  GUID InheritedObjectType; /* bitsize 128, bitpos 224 */
  DWORD SidStart; /* bitsize 32, bitpos 352 */
};
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ SYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_ALARM_OBJECT_ACE /* id 43 */ *PSYSTEM_ALARM_OBJECT_ACE;
struct _ACL { /* size 8 id 44 */
  BYTE AclRevision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  WORD AclSize; /* bitsize 16, bitpos 16 */
  WORD AceCount; /* bitsize 16, bitpos 32 */
  WORD Sbz2; /* bitsize 16, bitpos 48 */
};
typedef struct _ACL /* id 44 */ ACL;
typedef struct _ACL /* id 44 */ *PACL;
struct _ACL_REVISION_INFORMATION { /* size 4 id 45 */
  DWORD AclRevision; /* bitsize 32, bitpos 0 */
};
typedef struct _ACL_REVISION_INFORMATION /* id 45 */ ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION { /* size 12 id 46 */
  DWORD AceCount; /* bitsize 32, bitpos 0 */
  DWORD AclBytesInUse; /* bitsize 32, bitpos 32 */
  DWORD AclBytesFree; /* bitsize 32, bitpos 64 */
};
typedef struct _ACL_SIZE_INFORMATION /* id 46 */ ACL_SIZE_INFORMATION;
struct _FLOATING_SAVE_AREA { /* size 112 id 47 */
  DWORD ControlWord; /* bitsize 32, bitpos 0 */
  DWORD StatusWord; /* bitsize 32, bitpos 32 */
  DWORD TagWord; /* bitsize 32, bitpos 64 */
  DWORD ErrorOffset; /* bitsize 32, bitpos 96 */
  DWORD ErrorSelector; /* bitsize 32, bitpos 128 */
  DWORD DataOffset; /* bitsize 32, bitpos 160 */
  DWORD DataSelector; /* bitsize 32, bitpos 192 */
  BYTE RegisterArea[80]:uint32; /* bitsize 640, bitpos 224 */
  DWORD Cr0NpxState; /* bitsize 32, bitpos 864 */
};
typedef struct _FLOATING_SAVE_AREA /* id 47 */ FLOATING_SAVE_AREA;
struct _CONTEXT { /* size 716 id 48 */
  DWORD ContextFlags; /* bitsize 32, bitpos 0 */
  DWORD Dr0; /* bitsize 32, bitpos 32 */
  DWORD Dr1; /* bitsize 32, bitpos 64 */
  DWORD Dr2; /* bitsize 32, bitpos 96 */
  DWORD Dr3; /* bitsize 32, bitpos 128 */
  DWORD Dr6; /* bitsize 32, bitpos 160 */
  DWORD Dr7; /* bitsize 32, bitpos 192 */
  FLOATING_SAVE_AREA FloatSave; /* bitsize 896, bitpos 224 */
  DWORD SegGs; /* bitsize 32, bitpos 1120 */
  DWORD SegFs; /* bitsize 32, bitpos 1152 */
  DWORD SegEs; /* bitsize 32, bitpos 1184 */
  DWORD SegDs; /* bitsize 32, bitpos 1216 */
  DWORD Edi; /* bitsize 32, bitpos 1248 */
  DWORD Esi; /* bitsize 32, bitpos 1280 */
  DWORD Ebx; /* bitsize 32, bitpos 1312 */
  DWORD Edx; /* bitsize 32, bitpos 1344 */
  DWORD Ecx; /* bitsize 32, bitpos 1376 */
  DWORD Eax; /* bitsize 32, bitpos 1408 */
  DWORD Ebp; /* bitsize 32, bitpos 1440 */
  DWORD Eip; /* bitsize 32, bitpos 1472 */
  DWORD SegCs; /* bitsize 32, bitpos 1504 */
  DWORD EFlags; /* bitsize 32, bitpos 1536 */
  DWORD Esp; /* bitsize 32, bitpos 1568 */
  DWORD SegSs; /* bitsize 32, bitpos 1600 */
  BYTE ExtendedRegisters[512]:uint32; /* bitsize 4096, bitpos 1632 */
};
typedef struct _CONTEXT /* id 48 */ CONTEXT;
typedef CONTEXT *PCONTEXT;
typedef CONTEXT *LPCONTEXT;
struct _EXCEPTION_RECORD { /* size 80 id 49 */
  DWORD ExceptionCode; /* bitsize 32, bitpos 0 */
  DWORD ExceptionFlags; /* bitsize 32, bitpos 32 */
  struct _EXCEPTION_RECORD /* id 49 */ *ExceptionRecord; /* bitsize 32, bitpos 64 */
  PVOID ExceptionAddress; /* bitsize 32, bitpos 96 */
  DWORD NumberParameters; /* bitsize 32, bitpos 128 */
  DWORD ExceptionInformation[15]:uint32; /* bitsize 480, bitpos 160 */
};
typedef struct _EXCEPTION_RECORD /* id 49 */ EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 49 */ *LPEXCEPTION_RECORD;
struct _EXCEPTION_POINTERS { /* size 8 id 50 */
  PEXCEPTION_RECORD ExceptionRecord; /* bitsize 32, bitpos 0 */
  PCONTEXT ContextRecord; /* bitsize 32, bitpos 32 */
};
typedef struct _EXCEPTION_POINTERS /* id 50 */ EXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 50 */ *LPEXCEPTION_POINTERS;
union _LARGE_INTEGER { /* size 8 id 51 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon52 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    LONG HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  LONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _LARGE_INTEGER /* id 51 */ LARGE_INTEGER;
typedef union _LARGE_INTEGER /* id 51 */ *PLARGE_INTEGER;
union _ULARGE_INTEGER { /* size 8 id 53 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  } u; /* bitsize 64, bitpos 0 */
  struct %anon54 { /* size 8 */
    DWORD LowPart; /* bitsize 32, bitpos 0 */
    DWORD HighPart; /* bitsize 32, bitpos 32 */
  }; /* bitsize 64, bitpos 0 */
  ULONGLONG QuadPart; /* bitsize 64, bitpos 0 */
};
typedef union _ULARGE_INTEGER /* id 53 */ ULARGE_INTEGER;
typedef union _ULARGE_INTEGER /* id 53 */ *PULARGE_INTEGER;
struct _LUID { /* size 8 id 55 */
  DWORD LowPart; /* bitsize 32, bitpos 0 */
  LONG HighPart; /* bitsize 32, bitpos 32 */
};
typedef struct _LUID /* id 55 */ LUID;
typedef struct _LUID /* id 55 */ *PLUID;
struct _LUID_AND_ATTRIBUTES { /* size 12 id 56 */
  LUID Luid; /* bitsize 64, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
};
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ LUID_AND_ATTRIBUTES;
typedef struct _LUID_AND_ATTRIBUTES /* id 56 */ *PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
struct _PRIVILEGE_SET { /* size 20 id 57 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  DWORD Control; /* bitsize 32, bitpos 32 */
  LUID_AND_ATTRIBUTES Privilege[1]:uint32; /* bitsize 96, bitpos 64 */
};
typedef struct _PRIVILEGE_SET /* id 57 */ PRIVILEGE_SET;
typedef struct _PRIVILEGE_SET /* id 57 */ *PPRIVILEGE_SET;
struct _SECURITY_ATTRIBUTES { /* size 12 id 58 */
  DWORD nLength; /* bitsize 32, bitpos 0 */
  LPVOID lpSecurityDescriptor; /* bitsize 32, bitpos 32 */
  BOOL bInheritHandle; /* bitsize 32, bitpos 64 */
};
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ SECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *PSECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 58 */ *LPSECURITY_ATTRIBUTES;
enum _SECURITY_IMPERSONATION_LEVEL { SecurityAnonymous, SecurityIdentification, SecurityImpersonation, SecurityDelegation };
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
struct _SECURITY_QUALITY_OF_SERVICE { /* size 12 id 59 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 32 */
  SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode; /* bitsize 8, bitpos 64 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 72 */
};
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ SECURITY_QUALITY_OF_SERVICE;
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 59 */ *PSECURITY_QUALITY_OF_SERVICE;
typedef PVOID PACCESS_TOKEN;
struct _SE_IMPERSONATION_STATE { /* size 12 id 60 */
  PACCESS_TOKEN Token; /* bitsize 32, bitpos 0 */
  BOOLEAN CopyOnOpen; /* bitsize 8, bitpos 32 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 40 */
  SECURITY_IMPERSONATION_LEVEL Level; /* bitsize 32, bitpos 64 */
};
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ SE_IMPERSONATION_STATE;
typedef struct _SE_IMPERSONATION_STATE /* id 60 */ *PSE_IMPERSONATION_STATE;
struct _SID_IDENTIFIER_AUTHORITY { /* size 6 id 61 */
  BYTE Value[6]:uint32; /* bitsize 48, bitpos 0 */
};
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ SID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 61 */ *LPSID_IDENTIFIER_AUTHORITY;
typedef PVOID PSID;
struct _SID { /* size 12 id 62 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE SubAuthorityCount; /* bitsize 8, bitpos 8 */
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority; /* bitsize 48, bitpos 16 */
  DWORD SubAuthority[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _SID /* id 62 */ SID;
typedef struct _SID /* id 62 */ *PISID;
struct _SID_AND_ATTRIBUTES { /* size 8 id 63 */
  PSID Sid; /* bitsize 32, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 32 */
};
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ SID_AND_ATTRIBUTES;
typedef struct _SID_AND_ATTRIBUTES /* id 63 */ *PSID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1]:uint32;
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
struct _TOKEN_SOURCE { /* size 16 id 64 */
  CHAR SourceName[8]:uint32; /* bitsize 64, bitpos 0 */
  LUID SourceIdentifier; /* bitsize 64, bitpos 64 */
};
typedef struct _TOKEN_SOURCE /* id 64 */ TOKEN_SOURCE;
typedef struct _TOKEN_SOURCE /* id 64 */ *PTOKEN_SOURCE;
struct _TOKEN_CONTROL { /* size 40 id 65 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LUID ModifiedId; /* bitsize 64, bitpos 128 */
  TOKEN_SOURCE TokenSource; /* bitsize 128, bitpos 192 */
};
typedef struct _TOKEN_CONTROL /* id 65 */ TOKEN_CONTROL;
typedef struct _TOKEN_CONTROL /* id 65 */ *PTOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL { /* size 4 id 66 */
  PACL DefaultDacl; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_DEFAULT_DACL /* id 66 */ *PTOKEN_DEFAULT_DACL;
struct _TOKEN_GROUPS { /* size 12 id 67 */
  DWORD GroupCount; /* bitsize 32, bitpos 0 */
  SID_AND_ATTRIBUTES Groups[1]:uint32; /* bitsize 64, bitpos 32 */
};
typedef struct _TOKEN_GROUPS /* id 67 */ TOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *PTOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 67 */ *LPTOKEN_GROUPS;
struct _TOKEN_OWNER { /* size 4 id 68 */
  PSID Owner; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_OWNER /* id 68 */ TOKEN_OWNER;
typedef struct _TOKEN_OWNER /* id 68 */ *PTOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP { /* size 4 id 69 */
  PSID PrimaryGroup; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ TOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIMARY_GROUP /* id 69 */ *PTOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES { /* size 16 id 70 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  LUID_AND_ATTRIBUTES Privileges[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _TOKEN_PRIVILEGES /* id 70 */ TOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 70 */ *LPTOKEN_PRIVILEGES;
enum tagTOKEN_TYPE { TokenPrimary = 1, TokenImpersonation };
typedef enum tagTOKEN_TYPE TOKEN_TYPE;
typedef enum tagTOKEN_TYPE *PTOKEN_TYPE;
struct _TOKEN_STATISTICS { /* size 56 id 71 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ExpirationTime; /* bitsize 64, bitpos 128 */
  TOKEN_TYPE TokenType; /* bitsize 32, bitpos 192 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 224 */
  DWORD DynamicCharged; /* bitsize 32, bitpos 256 */
  DWORD DynamicAvailable; /* bitsize 32, bitpos 288 */
  DWORD GroupCount; /* bitsize 32, bitpos 320 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 352 */
  LUID ModifiedId; /* bitsize 64, bitpos 384 */
};
typedef struct _TOKEN_STATISTICS /* id 71 */ TOKEN_STATISTICS;
typedef struct _TOKEN_STATISTICS /* id 71 */ *PTOKEN_STATISTICS;
struct _TOKEN_USER { /* size 8 id 72 */
  SID_AND_ATTRIBUTES User; /* bitsize 64, bitpos 0 */
};
typedef struct _TOKEN_USER /* id 72 */ TOKEN_USER;
typedef struct _TOKEN_USER /* id 72 */ *PTOKEN_USER;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
struct _SECURITY_DESCRIPTOR { /* size 20 id 73 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  SECURITY_DESCRIPTOR_CONTROL Control; /* bitsize 16, bitpos 16 */
  PSID Owner; /* bitsize 32, bitpos 32 */
  PSID Group; /* bitsize 32, bitpos 64 */
  PACL Sacl; /* bitsize 32, bitpos 96 */
  PACL Dacl; /* bitsize 32, bitpos 128 */
};
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PSECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 73 */ *PISECURITY_DESCRIPTOR;
enum _TOKEN_INFORMATION_CLASS { TokenUser = 1, TokenGroups, TokenPrivileges, TokenOwner, TokenPrimaryGroup, TokenDefaultDacl, TokenSource, TokenType, TokenImpersonationLevel, TokenStatistics, TokenRestrictedSids, TokenSessionId, TokenGroupsAndPrivileges, TokenSessionReference, TokenSandBoxInert, TokenAuditPolicy, TokenOrigin };
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
enum _SID_NAME_USE { SidTypeUser = 1, SidTypeGroup, SidTypeDomain, SidTypeAlias, SidTypeWellKnownGroup, SidTypeDeletedAccount, SidTypeInvalid, SidTypeUnknown, SidTypeComputer };
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
struct _QUOTA_LIMITS { /* size 32 id 74 */
  long unsigned int PagedPoolLimit; /* bitsize 32, bitpos 0 */
  long unsigned int NonPagedPoolLimit; /* bitsize 32, bitpos 32 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 64 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 96 */
  long unsigned int PagefileLimit; /* bitsize 32, bitpos 128 */
  LARGE_INTEGER TimeLimit; /* bitsize 64, bitpos 192 */
};
typedef struct _QUOTA_LIMITS /* id 74 */ QUOTA_LIMITS;
typedef struct _QUOTA_LIMITS /* id 74 */ *PQUOTA_LIMITS;
struct _IO_COUNTERS { /* size 48 id 75 */
  ULONGLONG ReadOperationCount; /* bitsize 64, bitpos 0 */
  ULONGLONG WriteOperationCount; /* bitsize 64, bitpos 64 */
  ULONGLONG OtherOperationCount; /* bitsize 64, bitpos 128 */
  ULONGLONG ReadTransferCount; /* bitsize 64, bitpos 192 */
  ULONGLONG WriteTransferCount; /* bitsize 64, bitpos 256 */
  ULONGLONG OtherTransferCount; /* bitsize 64, bitpos 320 */
};
typedef struct _IO_COUNTERS /* id 75 */ IO_COUNTERS;
typedef struct _IO_COUNTERS /* id 75 */ *PIO_COUNTERS;
struct _FILE_NOTIFY_INFORMATION { /* size 16 id 76 */
  DWORD NextEntryOffset; /* bitsize 32, bitpos 0 */
  DWORD Action; /* bitsize 32, bitpos 32 */
  DWORD FileNameLength; /* bitsize 32, bitpos 64 */
  WCHAR FileName[1]:uint32; /* bitsize 16, bitpos 96 */
};
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ FILE_NOTIFY_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION /* id 76 */ *PFILE_NOTIFY_INFORMATION;
struct _TAPE_ERASE { /* size 8 id 77 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_ERASE /* id 77 */ TAPE_ERASE;
typedef struct _TAPE_ERASE /* id 77 */ *PTAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS { /* size 32 id 78 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  DWORD DefaultBlockSize; /* bitsize 32, bitpos 32 */
  DWORD MaximumBlockSize; /* bitsize 32, bitpos 64 */
  DWORD MinimumBlockSize; /* bitsize 32, bitpos 96 */
  DWORD MaximumPartitionCount; /* bitsize 32, bitpos 128 */
  DWORD FeaturesLow; /* bitsize 32, bitpos 160 */
  DWORD FeaturesHigh; /* bitsize 32, bitpos 192 */
  DWORD EOTWarningZoneSize; /* bitsize 32, bitpos 224 */
};
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 78 */ *PTAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS { /* size 32 id 79 */
  LARGE_INTEGER Capacity; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER Remaining; /* bitsize 64, bitpos 64 */
  DWORD BlockSize; /* bitsize 32, bitpos 128 */
  DWORD PartitionCount; /* bitsize 32, bitpos 160 */
  BOOLEAN WriteProtected; /* bitsize 8, bitpos 192 */
};
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 79 */ *PTAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION { /* size 16 id 80 */
  ULONG Type; /* bitsize 32, bitpos 0 */
  ULONG Partition; /* bitsize 32, bitpos 32 */
  ULONG OffsetLow; /* bitsize 32, bitpos 64 */
  ULONG OffsetHigh; /* bitsize 32, bitpos 96 */
};
typedef struct _TAPE_GET_POSITION /* id 80 */ TAPE_GET_POSITION;
typedef struct _TAPE_GET_POSITION /* id 80 */ *PTAPE_GET_POSITION;
struct _TAPE_PREPARE { /* size 8 id 81 */
  DWORD Operation; /* bitsize 32, bitpos 0 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 32 */
};
typedef struct _TAPE_PREPARE /* id 81 */ TAPE_PREPARE;
typedef struct _TAPE_PREPARE /* id 81 */ *PTAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS { /* size 8 id 82 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  ULONG EOTWarningZoneSize; /* bitsize 32, bitpos 32 */
};
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 82 */ *PTAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS { /* size 4 id 83 */
  ULONG BlockSize; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 83 */ *PTAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION { /* size 24 id 84 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Partition; /* bitsize 32, bitpos 32 */
  LARGE_INTEGER Offset; /* bitsize 64, bitpos 64 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 128 */
};
typedef struct _TAPE_SET_POSITION /* id 84 */ TAPE_SET_POSITION;
typedef struct _TAPE_SET_POSITION /* id 84 */ *PTAPE_SET_POSITION;
struct _TAPE_WRITE_MARKS { /* size 12 id 85 */
  DWORD Type; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  BOOLEAN Immediate; /* bitsize 8, bitpos 64 */
};
typedef struct _TAPE_WRITE_MARKS /* id 85 */ TAPE_WRITE_MARKS;
typedef struct _TAPE_WRITE_MARKS /* id 85 */ *PTAPE_WRITE_MARKS;
struct _TAPE_CREATE_PARTITION { /* size 12 id 86 */
  DWORD Method; /* bitsize 32, bitpos 0 */
  DWORD Count; /* bitsize 32, bitpos 32 */
  DWORD Size; /* bitsize 32, bitpos 64 */
};
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ TAPE_CREATE_PARTITION;
typedef struct _TAPE_CREATE_PARTITION /* id 86 */ *PTAPE_CREATE_PARTITION;
struct _MEMORY_BASIC_INFORMATION { /* size 28 id 87 */
  PVOID BaseAddress; /* bitsize 32, bitpos 0 */
  PVOID AllocationBase; /* bitsize 32, bitpos 32 */
  DWORD AllocationProtect; /* bitsize 32, bitpos 64 */
  DWORD RegionSize; /* bitsize 32, bitpos 96 */
  DWORD State; /* bitsize 32, bitpos 128 */
  DWORD Protect; /* bitsize 32, bitpos 160 */
  DWORD Type; /* bitsize 32, bitpos 192 */
};
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ MEMORY_BASIC_INFORMATION;
typedef struct _MEMORY_BASIC_INFORMATION /* id 87 */ *PMEMORY_BASIC_INFORMATION;
struct _MESSAGE_RESOURCE_ENTRY { /* size 6 id 88 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  BYTE Text[1]:uint32; /* bitsize 8, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ MESSAGE_RESOURCE_ENTRY;
typedef struct _MESSAGE_RESOURCE_ENTRY /* id 88 */ *PMESSAGE_RESOURCE_ENTRY;
struct _MESSAGE_RESOURCE_BLOCK { /* size 12 id 89 */
  DWORD LowId; /* bitsize 32, bitpos 0 */
  DWORD HighId; /* bitsize 32, bitpos 32 */
  DWORD OffsetToEntries; /* bitsize 32, bitpos 64 */
};
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ MESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_BLOCK /* id 89 */ *PMESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA { /* size 16 id 90 */
  DWORD NumberOfBlocks; /* bitsize 32, bitpos 0 */
  MESSAGE_RESOURCE_BLOCK Blocks[1]:uint32; /* bitsize 96, bitpos 32 */
};
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ MESSAGE_RESOURCE_DATA;
typedef struct _MESSAGE_RESOURCE_DATA /* id 90 */ *PMESSAGE_RESOURCE_DATA;
struct _LIST_ENTRY { /* size 8 id 91 */
  struct _LIST_ENTRY /* id 91 */ *Flink; /* bitsize 32, bitpos 0 */
  struct _LIST_ENTRY /* id 91 */ *Blink; /* bitsize 32, bitpos 32 */
};
typedef struct _LIST_ENTRY /* id 91 */ LIST_ENTRY;
typedef struct _LIST_ENTRY /* id 91 */ *PLIST_ENTRY;
struct _SINGLE_LIST_ENTRY { /* size 4 id 92 */
  struct _SINGLE_LIST_ENTRY /* id 92 */ *Next; /* bitsize 32, bitpos 0 */
};
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ SINGLE_LIST_ENTRY;
typedef struct _SINGLE_LIST_ENTRY /* id 92 */ *PSINGLE_LIST_ENTRY;
union _SLIST_HEADER { /* size 8 id 93 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
  struct %anon94 { /* size 8 */
    SINGLE_LIST_ENTRY Next; /* bitsize 32, bitpos 0 */
    WORD Depth; /* bitsize 16, bitpos 32 */
    WORD Sequence; /* bitsize 16, bitpos 48 */
  }; /* bitsize 64, bitpos 0 */
};
typedef union _SLIST_HEADER /* id 93 */ SLIST_HEADER;
typedef union _SLIST_HEADER /* id 93 */ *PSLIST_HEADER;
struct _RTL_CRITICAL_SECTION_DEBUG { /* size 32 id 95 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD CreatorBackTraceIndex; /* bitsize 16, bitpos 16 */
  struct _RTL_CRITICAL_SECTION /* id 96 */ *CriticalSection; /* bitsize 32, bitpos 32 */
  LIST_ENTRY ProcessLocksList; /* bitsize 64, bitpos 64 */
  DWORD EntryCount; /* bitsize 32, bitpos 128 */
  DWORD ContentionCount; /* bitsize 32, bitpos 160 */
  DWORD Spare[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ RTL_CRITICAL_SECTION_DEBUG;
typedef struct _RTL_CRITICAL_SECTION_DEBUG /* id 95 */ *PRTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION { /* size 24 id 96 */
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo; /* bitsize 32, bitpos 0 */
  LONG LockCount; /* bitsize 32, bitpos 32 */
  LONG RecursionCount; /* bitsize 32, bitpos 64 */
  HANDLE OwningThread; /* bitsize 32, bitpos 96 */
  HANDLE LockSemaphore; /* bitsize 32, bitpos 128 */
  DWORD Reserved; /* bitsize 32, bitpos 160 */
};
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ RTL_CRITICAL_SECTION;
typedef struct _RTL_CRITICAL_SECTION /* id 96 */ *PRTL_CRITICAL_SECTION;
struct _EVENTLOGRECORD { /* size 56 id 97 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  DWORD Reserved; /* bitsize 32, bitpos 32 */
  DWORD RecordNumber; /* bitsize 32, bitpos 64 */
  DWORD TimeGenerated; /* bitsize 32, bitpos 96 */
  DWORD TimeWritten; /* bitsize 32, bitpos 128 */
  DWORD EventID; /* bitsize 32, bitpos 160 */
  WORD EventType; /* bitsize 16, bitpos 192 */
  WORD NumStrings; /* bitsize 16, bitpos 208 */
  WORD EventCategory; /* bitsize 16, bitpos 224 */
  WORD ReservedFlags; /* bitsize 16, bitpos 240 */
  DWORD ClosingRecordNumber; /* bitsize 32, bitpos 256 */
  DWORD StringOffset; /* bitsize 32, bitpos 288 */
  DWORD UserSidLength; /* bitsize 32, bitpos 320 */
  DWORD UserSidOffset; /* bitsize 32, bitpos 352 */
  DWORD DataLength; /* bitsize 32, bitpos 384 */
  DWORD DataOffset; /* bitsize 32, bitpos 416 */
};
typedef struct _EVENTLOGRECORD /* id 97 */ EVENTLOGRECORD;
typedef struct _EVENTLOGRECORD /* id 97 */ *PEVENTLOGRECORD;
struct _OSVERSIONINFOA { /* size 148 id 98 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
};
typedef struct _OSVERSIONINFOA /* id 98 */ OSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *POSVERSIONINFOA;
typedef struct _OSVERSIONINFOA /* id 98 */ *LPOSVERSIONINFOA;
struct _OSVERSIONINFOW { /* size 276 id 99 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
};
typedef struct _OSVERSIONINFOW /* id 99 */ OSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *POSVERSIONINFOW;
typedef struct _OSVERSIONINFOW /* id 99 */ *LPOSVERSIONINFOW;
struct _OSVERSIONINFOEXA { /* size 156 id 100 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  CHAR szCSDVersion[128]:uint32; /* bitsize 1024, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 1184 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 1200 */
  WORD wSuiteMask; /* bitsize 16, bitpos 1216 */
  BYTE wProductType; /* bitsize 8, bitpos 1232 */
  BYTE wReserved; /* bitsize 8, bitpos 1240 */
};
typedef struct _OSVERSIONINFOEXA /* id 100 */ OSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *POSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXA /* id 100 */ *LPOSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW { /* size 284 id 101 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  WCHAR szCSDVersion[128]:uint32; /* bitsize 2048, bitpos 160 */
  WORD wServicePackMajor; /* bitsize 16, bitpos 2208 */
  WORD wServicePackMinor; /* bitsize 16, bitpos 2224 */
  WORD wSuiteMask; /* bitsize 16, bitpos 2240 */
  BYTE wProductType; /* bitsize 8, bitpos 2256 */
  BYTE wReserved; /* bitsize 8, bitpos 2264 */
};
typedef struct _OSVERSIONINFOEXW /* id 101 */ OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *POSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOEXW /* id 101 */ *LPOSVERSIONINFOEXW;
struct _IMAGE_VXD_HEADER { /* size 196 id 102 */
  WORD e32_magic; /* bitsize 16, bitpos 0 */
  BYTE e32_border; /* bitsize 8, bitpos 16 */
  BYTE e32_worder; /* bitsize 8, bitpos 24 */
  DWORD e32_level; /* bitsize 32, bitpos 32 */
  WORD e32_cpu; /* bitsize 16, bitpos 64 */
  WORD e32_os; /* bitsize 16, bitpos 80 */
  DWORD e32_ver; /* bitsize 32, bitpos 96 */
  DWORD e32_mflags; /* bitsize 32, bitpos 128 */
  DWORD e32_mpages; /* bitsize 32, bitpos 160 */
  DWORD e32_startobj; /* bitsize 32, bitpos 192 */
  DWORD e32_eip; /* bitsize 32, bitpos 224 */
  DWORD e32_stackobj; /* bitsize 32, bitpos 256 */
  DWORD e32_esp; /* bitsize 32, bitpos 288 */
  DWORD e32_pagesize; /* bitsize 32, bitpos 320 */
  DWORD e32_lastpagesize; /* bitsize 32, bitpos 352 */
  DWORD e32_fixupsize; /* bitsize 32, bitpos 384 */
  DWORD e32_fixupsum; /* bitsize 32, bitpos 416 */
  DWORD e32_ldrsize; /* bitsize 32, bitpos 448 */
  DWORD e32_ldrsum; /* bitsize 32, bitpos 480 */
  DWORD e32_objtab; /* bitsize 32, bitpos 512 */
  DWORD e32_objcnt; /* bitsize 32, bitpos 544 */
  DWORD e32_objmap; /* bitsize 32, bitpos 576 */
  DWORD e32_itermap; /* bitsize 32, bitpos 608 */
  DWORD e32_rsrctab; /* bitsize 32, bitpos 640 */
  DWORD e32_rsrccnt; /* bitsize 32, bitpos 672 */
  DWORD e32_restab; /* bitsize 32, bitpos 704 */
  DWORD e32_enttab; /* bitsize 32, bitpos 736 */
  DWORD e32_dirtab; /* bitsize 32, bitpos 768 */
  DWORD e32_dircnt; /* bitsize 32, bitpos 800 */
  DWORD e32_fpagetab; /* bitsize 32, bitpos 832 */
  DWORD e32_frectab; /* bitsize 32, bitpos 864 */
  DWORD e32_impmod; /* bitsize 32, bitpos 896 */
  DWORD e32_impmodcnt; /* bitsize 32, bitpos 928 */
  DWORD e32_impproc; /* bitsize 32, bitpos 960 */
  DWORD e32_pagesum; /* bitsize 32, bitpos 992 */
  DWORD e32_datapage; /* bitsize 32, bitpos 1024 */
  DWORD e32_preload; /* bitsize 32, bitpos 1056 */
  DWORD e32_nrestab; /* bitsize 32, bitpos 1088 */
  DWORD e32_cbnrestab; /* bitsize 32, bitpos 1120 */
  DWORD e32_nressum; /* bitsize 32, bitpos 1152 */
  DWORD e32_autodata; /* bitsize 32, bitpos 1184 */
  DWORD e32_debuginfo; /* bitsize 32, bitpos 1216 */
  DWORD e32_debuglen; /* bitsize 32, bitpos 1248 */
  DWORD e32_instpreload; /* bitsize 32, bitpos 1280 */
  DWORD e32_instdemand; /* bitsize 32, bitpos 1312 */
  DWORD e32_heapsize; /* bitsize 32, bitpos 1344 */
  BYTE e32_res3[12]:uint32; /* bitsize 96, bitpos 1376 */
  DWORD e32_winresoff; /* bitsize 32, bitpos 1472 */
  DWORD e32_winreslen; /* bitsize 32, bitpos 1504 */
  WORD e32_devid; /* bitsize 16, bitpos 1536 */
  WORD e32_ddkver; /* bitsize 16, bitpos 1552 */
};
typedef struct _IMAGE_VXD_HEADER /* id 102 */ IMAGE_VXD_HEADER;
typedef struct _IMAGE_VXD_HEADER /* id 102 */ *PIMAGE_VXD_HEADER;
struct _IMAGE_FILE_HEADER { /* size 20 id 103 */
  WORD Machine; /* bitsize 16, bitpos 0 */
  WORD NumberOfSections; /* bitsize 16, bitpos 16 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD PointerToSymbolTable; /* bitsize 32, bitpos 64 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 96 */
  WORD SizeOfOptionalHeader; /* bitsize 16, bitpos 128 */
  WORD Characteristics; /* bitsize 16, bitpos 144 */
};
typedef struct _IMAGE_FILE_HEADER /* id 103 */ IMAGE_FILE_HEADER;
typedef struct _IMAGE_FILE_HEADER /* id 103 */ *PIMAGE_FILE_HEADER;
struct _IMAGE_DATA_DIRECTORY { /* size 8 id 104 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_DATA_DIRECTORY /* id 104 */ *PIMAGE_DATA_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER { /* size 224 id 105 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD ImageBase; /* bitsize 32, bitpos 224 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  DWORD SizeOfStackReserve; /* bitsize 32, bitpos 576 */
  DWORD SizeOfStackCommit; /* bitsize 32, bitpos 608 */
  DWORD SizeOfHeapReserve; /* bitsize 32, bitpos 640 */
  DWORD SizeOfHeapCommit; /* bitsize 32, bitpos 672 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 704 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 736 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 768 */
};
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ IMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER /* id 105 */ *PIMAGE_OPTIONAL_HEADER32;
struct _IMAGE_OPTIONAL_HEADER64 { /* size 240 id 106 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  ULONGLONG ImageBase; /* bitsize 64, bitpos 192 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 256 */
  DWORD FileAlignment; /* bitsize 32, bitpos 288 */
  WORD MajorOperatingSystemVersion; /* bitsize 16, bitpos 320 */
  WORD MinorOperatingSystemVersion; /* bitsize 16, bitpos 336 */
  WORD MajorImageVersion; /* bitsize 16, bitpos 352 */
  WORD MinorImageVersion; /* bitsize 16, bitpos 368 */
  WORD MajorSubsystemVersion; /* bitsize 16, bitpos 384 */
  WORD MinorSubsystemVersion; /* bitsize 16, bitpos 400 */
  DWORD Win32VersionValue; /* bitsize 32, bitpos 416 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 448 */
  DWORD SizeOfHeaders; /* bitsize 32, bitpos 480 */
  DWORD CheckSum; /* bitsize 32, bitpos 512 */
  WORD Subsystem; /* bitsize 16, bitpos 544 */
  WORD DllCharacteristics; /* bitsize 16, bitpos 560 */
  ULONGLONG SizeOfStackReserve; /* bitsize 64, bitpos 576 */
  ULONGLONG SizeOfStackCommit; /* bitsize 64, bitpos 640 */
  ULONGLONG SizeOfHeapReserve; /* bitsize 64, bitpos 704 */
  ULONGLONG SizeOfHeapCommit; /* bitsize 64, bitpos 768 */
  DWORD LoaderFlags; /* bitsize 32, bitpos 832 */
  DWORD NumberOfRvaAndSizes; /* bitsize 32, bitpos 864 */
  IMAGE_DATA_DIRECTORY DataDirectory[16]:uint32; /* bitsize 1024, bitpos 896 */
};
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ IMAGE_OPTIONAL_HEADER64;
typedef struct _IMAGE_OPTIONAL_HEADER64 /* id 106 */ *PIMAGE_OPTIONAL_HEADER64;
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;
struct _IMAGE_ROM_OPTIONAL_HEADER { /* size 56 id 107 */
  WORD Magic; /* bitsize 16, bitpos 0 */
  BYTE MajorLinkerVersion; /* bitsize 8, bitpos 16 */
  BYTE MinorLinkerVersion; /* bitsize 8, bitpos 24 */
  DWORD SizeOfCode; /* bitsize 32, bitpos 32 */
  DWORD SizeOfInitializedData; /* bitsize 32, bitpos 64 */
  DWORD SizeOfUninitializedData; /* bitsize 32, bitpos 96 */
  DWORD AddressOfEntryPoint; /* bitsize 32, bitpos 128 */
  DWORD BaseOfCode; /* bitsize 32, bitpos 160 */
  DWORD BaseOfData; /* bitsize 32, bitpos 192 */
  DWORD BaseOfBss; /* bitsize 32, bitpos 224 */
  DWORD GprMask; /* bitsize 32, bitpos 256 */
  DWORD CprMask[4]:uint32; /* bitsize 128, bitpos 288 */
  DWORD GpValue; /* bitsize 32, bitpos 416 */
};
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER /* id 107 */ *PIMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_DOS_HEADER { /* size 64 id 108 */
  WORD e_magic; /* bitsize 16, bitpos 0 */
  WORD e_cblp; /* bitsize 16, bitpos 16 */
  WORD e_cp; /* bitsize 16, bitpos 32 */
  WORD e_crlc; /* bitsize 16, bitpos 48 */
  WORD e_cparhdr; /* bitsize 16, bitpos 64 */
  WORD e_minalloc; /* bitsize 16, bitpos 80 */
  WORD e_maxalloc; /* bitsize 16, bitpos 96 */
  WORD e_ss; /* bitsize 16, bitpos 112 */
  WORD e_sp; /* bitsize 16, bitpos 128 */
  WORD e_csum; /* bitsize 16, bitpos 144 */
  WORD e_ip; /* bitsize 16, bitpos 160 */
  WORD e_cs; /* bitsize 16, bitpos 176 */
  WORD e_lfarlc; /* bitsize 16, bitpos 192 */
  WORD e_ovno; /* bitsize 16, bitpos 208 */
  WORD e_res[4]:uint32; /* bitsize 64, bitpos 224 */
  WORD e_oemid; /* bitsize 16, bitpos 288 */
  WORD e_oeminfo; /* bitsize 16, bitpos 304 */
  WORD e_res2[10]:uint32; /* bitsize 160, bitpos 320 */
  LONG e_lfanew; /* bitsize 32, bitpos 480 */
};
typedef struct _IMAGE_DOS_HEADER /* id 108 */ IMAGE_DOS_HEADER;
typedef struct _IMAGE_DOS_HEADER /* id 108 */ *PIMAGE_DOS_HEADER;
struct _IMAGE_OS2_HEADER { /* size 64 id 109 */
  WORD ne_magic; /* bitsize 16, bitpos 0 */
  CHAR ne_ver; /* bitsize 8, bitpos 16 */
  CHAR ne_rev; /* bitsize 8, bitpos 24 */
  WORD ne_enttab; /* bitsize 16, bitpos 32 */
  WORD ne_cbenttab; /* bitsize 16, bitpos 48 */
  LONG ne_crc; /* bitsize 32, bitpos 64 */
  WORD ne_flags; /* bitsize 16, bitpos 96 */
  WORD ne_autodata; /* bitsize 16, bitpos 112 */
  WORD ne_heap; /* bitsize 16, bitpos 128 */
  WORD ne_stack; /* bitsize 16, bitpos 144 */
  LONG ne_csip; /* bitsize 32, bitpos 160 */
  LONG ne_sssp; /* bitsize 32, bitpos 192 */
  WORD ne_cseg; /* bitsize 16, bitpos 224 */
  WORD ne_cmod; /* bitsize 16, bitpos 240 */
  WORD ne_cbnrestab; /* bitsize 16, bitpos 256 */
  WORD ne_segtab; /* bitsize 16, bitpos 272 */
  WORD ne_rsrctab; /* bitsize 16, bitpos 288 */
  WORD ne_restab; /* bitsize 16, bitpos 304 */
  WORD ne_modtab; /* bitsize 16, bitpos 320 */
  WORD ne_imptab; /* bitsize 16, bitpos 336 */
  LONG ne_nrestab; /* bitsize 32, bitpos 352 */
  WORD ne_cmovent; /* bitsize 16, bitpos 384 */
  WORD ne_align; /* bitsize 16, bitpos 400 */
  WORD ne_cres; /* bitsize 16, bitpos 416 */
  BYTE ne_exetyp; /* bitsize 8, bitpos 432 */
  BYTE ne_flagsothers; /* bitsize 8, bitpos 440 */
  WORD ne_pretthunks; /* bitsize 16, bitpos 448 */
  WORD ne_psegrefbytes; /* bitsize 16, bitpos 464 */
  WORD ne_swaparea; /* bitsize 16, bitpos 480 */
  WORD ne_expver; /* bitsize 16, bitpos 496 */
};
typedef struct _IMAGE_OS2_HEADER /* id 109 */ IMAGE_OS2_HEADER;
typedef struct _IMAGE_OS2_HEADER /* id 109 */ *PIMAGE_OS2_HEADER;
struct _IMAGE_NT_HEADERS { /* size 248 id 110 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS /* id 110 */ IMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS /* id 110 */ *PIMAGE_NT_HEADERS32;
struct _IMAGE_NT_HEADERS64 { /* size 248 id 111 */
  DWORD Signature; /* bitsize 32, bitpos 0 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 32 */
  IMAGE_OPTIONAL_HEADER OptionalHeader; /* bitsize 1792, bitpos 192 */
};
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ IMAGE_NT_HEADERS64;
typedef struct _IMAGE_NT_HEADERS64 /* id 111 */ *PIMAGE_NT_HEADERS64;
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;
struct _IMAGE_ROM_HEADERS { /* size 76 id 112 */
  IMAGE_FILE_HEADER FileHeader; /* bitsize 160, bitpos 0 */
  IMAGE_ROM_OPTIONAL_HEADER OptionalHeader; /* bitsize 448, bitpos 160 */
};
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ IMAGE_ROM_HEADERS;
typedef struct _IMAGE_ROM_HEADERS /* id 112 */ *PIMAGE_ROM_HEADERS;
struct _IMAGE_SECTION_HEADER { /* size 40 id 113 */
  BYTE Name[8]:uint32; /* bitsize 64, bitpos 0 */
  union %anon114 { /* size 4 */
    DWORD PhysicalAddress; /* bitsize 32, bitpos 0 */
    DWORD VirtualSize; /* bitsize 32, bitpos 0 */
  } Misc; /* bitsize 32, bitpos 64 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 96 */
  DWORD SizeOfRawData; /* bitsize 32, bitpos 128 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRelocations; /* bitsize 32, bitpos 192 */
  DWORD PointerToLinenumbers; /* bitsize 32, bitpos 224 */
  WORD NumberOfRelocations; /* bitsize 16, bitpos 256 */
  WORD NumberOfLinenumbers; /* bitsize 16, bitpos 272 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ IMAGE_SECTION_HEADER;
typedef struct _IMAGE_SECTION_HEADER /* id 113 */ *PIMAGE_SECTION_HEADER;
struct _IMAGE_SYMBOL { /* size 18 id 115 */
  union %anon116 { /* size 8 */
    BYTE ShortName[8]:uint32; /* bitsize 64, bitpos 0 */
    struct %anon117 { /* size 8 */
      DWORD Short; /* bitsize 32, bitpos 0 */
      DWORD Long; /* bitsize 32, bitpos 32 */
    } Name; /* bitsize 64, bitpos 0 */
    PBYTE LongName[2]:uint32; /* bitsize 64, bitpos 0 */
  } N; /* bitsize 64, bitpos 0 */
  DWORD Value; /* bitsize 32, bitpos 64 */
  SHORT SectionNumber; /* bitsize 16, bitpos 96 */
  WORD Type; /* bitsize 16, bitpos 112 */
  BYTE StorageClass; /* bitsize 8, bitpos 128 */
  BYTE NumberOfAuxSymbols; /* bitsize 8, bitpos 136 */
};
typedef struct _IMAGE_SYMBOL /* id 115 */ IMAGE_SYMBOL;
typedef struct _IMAGE_SYMBOL /* id 115 */ *PIMAGE_SYMBOL;
union _IMAGE_AUX_SYMBOL { /* size 18 id 118 */
  struct %anon119 { /* size 18 */
    DWORD TagIndex; /* bitsize 32, bitpos 0 */
    union %anon120 { /* size 4 */
      struct %anon121 { /* size 4 */
        WORD Linenumber; /* bitsize 16, bitpos 0 */
        WORD Size; /* bitsize 16, bitpos 16 */
      } LnSz; /* bitsize 32, bitpos 0 */
      DWORD TotalSize; /* bitsize 32, bitpos 0 */
    } Misc; /* bitsize 32, bitpos 32 */
    union %anon122 { /* size 8 */
      struct %anon123 { /* size 8 */
        DWORD PointerToLinenumber; /* bitsize 32, bitpos 0 */
        DWORD PointerToNextFunction; /* bitsize 32, bitpos 32 */
      } Function; /* bitsize 64, bitpos 0 */
      struct %anon124 { /* size 8 */
        WORD Dimension[4]:uint32; /* bitsize 64, bitpos 0 */
      } Array; /* bitsize 64, bitpos 0 */
    } FcnAry; /* bitsize 64, bitpos 64 */
    WORD TvIndex; /* bitsize 16, bitpos 128 */
  } Sym; /* bitsize 144, bitpos 0 */
  struct %anon125 { /* size 18 */
    BYTE Name[18]:uint32; /* bitsize 144, bitpos 0 */
  } File; /* bitsize 144, bitpos 0 */
  struct %anon126 { /* size 16 */
    DWORD Length; /* bitsize 32, bitpos 0 */
    WORD NumberOfRelocations; /* bitsize 16, bitpos 32 */
    WORD NumberOfLinenumbers; /* bitsize 16, bitpos 48 */
    DWORD CheckSum; /* bitsize 32, bitpos 64 */
    SHORT Number; /* bitsize 16, bitpos 96 */
    BYTE Selection; /* bitsize 8, bitpos 112 */
  } Section; /* bitsize 128, bitpos 0 */
};
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ IMAGE_AUX_SYMBOL;
typedef union _IMAGE_AUX_SYMBOL /* id 118 */ *PIMAGE_AUX_SYMBOL;
struct _IMAGE_COFF_SYMBOLS_HEADER { /* size 32 id 127 */
  DWORD NumberOfSymbols; /* bitsize 32, bitpos 0 */
  DWORD LvaToFirstSymbol; /* bitsize 32, bitpos 32 */
  DWORD NumberOfLinenumbers; /* bitsize 32, bitpos 64 */
  DWORD LvaToFirstLinenumber; /* bitsize 32, bitpos 96 */
  DWORD RvaToFirstByteOfCode; /* bitsize 32, bitpos 128 */
  DWORD RvaToLastByteOfCode; /* bitsize 32, bitpos 160 */
  DWORD RvaToFirstByteOfData; /* bitsize 32, bitpos 192 */
  DWORD RvaToLastByteOfData; /* bitsize 32, bitpos 224 */
};
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ IMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER /* id 127 */ *PIMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_RELOCATION { /* size 10 id 128 */
  union %anon129 { /* size 4 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
    DWORD RelocCount; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD SymbolTableIndex; /* bitsize 32, bitpos 32 */
  WORD Type; /* bitsize 16, bitpos 64 */
};
typedef struct _IMAGE_RELOCATION /* id 128 */ IMAGE_RELOCATION;
typedef struct _IMAGE_RELOCATION /* id 128 */ *PIMAGE_RELOCATION;
struct _IMAGE_BASE_RELOCATION { /* size 8 id 130 */
  DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  DWORD SizeOfBlock; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_BASE_RELOCATION /* id 130 */ *PIMAGE_BASE_RELOCATION;
struct _IMAGE_LINENUMBER { /* size 6 id 131 */
  union %anon132 { /* size 4 */
    DWORD SymbolTableIndex; /* bitsize 32, bitpos 0 */
    DWORD VirtualAddress; /* bitsize 32, bitpos 0 */
  } Type; /* bitsize 32, bitpos 0 */
  WORD Linenumber; /* bitsize 16, bitpos 32 */
};
typedef struct _IMAGE_LINENUMBER /* id 131 */ IMAGE_LINENUMBER;
typedef struct _IMAGE_LINENUMBER /* id 131 */ *PIMAGE_LINENUMBER;
struct _IMAGE_ARCHIVE_MEMBER_HEADER { /* size 60 id 133 */
  BYTE Name[16]:uint32; /* bitsize 128, bitpos 0 */
  BYTE Date[12]:uint32; /* bitsize 96, bitpos 128 */
  BYTE UserID[6]:uint32; /* bitsize 48, bitpos 224 */
  BYTE GroupID[6]:uint32; /* bitsize 48, bitpos 272 */
  BYTE Mode[8]:uint32; /* bitsize 64, bitpos 320 */
  BYTE Size[10]:uint32; /* bitsize 80, bitpos 384 */
  BYTE EndHeader[2]:uint32; /* bitsize 16, bitpos 464 */
};
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER /* id 133 */ *PIMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_EXPORT_DIRECTORY { /* size 40 id 134 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD Base; /* bitsize 32, bitpos 128 */
  DWORD NumberOfFunctions; /* bitsize 32, bitpos 160 */
  DWORD NumberOfNames; /* bitsize 32, bitpos 192 */
  DWORD AddressOfFunctions; /* bitsize 32, bitpos 224 */
  DWORD AddressOfNames; /* bitsize 32, bitpos 256 */
  DWORD AddressOfNameOrdinals; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ IMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_EXPORT_DIRECTORY /* id 134 */ *PIMAGE_EXPORT_DIRECTORY;
struct _IMAGE_IMPORT_BY_NAME { /* size 4 id 135 */
  WORD Hint; /* bitsize 16, bitpos 0 */
  BYTE Name[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_IMPORT_BY_NAME /* id 135 */ *PIMAGE_IMPORT_BY_NAME;
struct _IMAGE_THUNK_DATA32 { /* size 4 id 136 */
  union %anon137 { /* size 4 */
    DWORD ForwarderString; /* bitsize 32, bitpos 0 */
    DWORD Function; /* bitsize 32, bitpos 0 */
    DWORD Ordinal; /* bitsize 32, bitpos 0 */
    DWORD AddressOfData; /* bitsize 32, bitpos 0 */
  } u1; /* bitsize 32, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ IMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA32 /* id 136 */ *PIMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64 { /* size 8 id 138 */
  union %anon139 { /* size 8 */
    ULONGLONG ForwarderString; /* bitsize 64, bitpos 0 */
    ULONGLONG Function; /* bitsize 64, bitpos 0 */
    ULONGLONG Ordinal; /* bitsize 64, bitpos 0 */
    ULONGLONG AddressOfData; /* bitsize 64, bitpos 0 */
  } u1; /* bitsize 64, bitpos 0 */
};
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ IMAGE_THUNK_DATA64;
typedef struct _IMAGE_THUNK_DATA64 /* id 138 */ *PIMAGE_THUNK_DATA64;
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;
struct _IMAGE_IMPORT_DESCRIPTOR { /* size 20 id 140 */
  union %anon141 { /* size 4 */
    DWORD Characteristics; /* bitsize 32, bitpos 0 */
    DWORD OriginalFirstThunk; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  DWORD ForwarderChain; /* bitsize 32, bitpos 64 */
  DWORD Name; /* bitsize 32, bitpos 96 */
  DWORD FirstThunk; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ IMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_IMPORT_DESCRIPTOR /* id 140 */ *PIMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR { /* size 8 id 142 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD NumberOfModuleForwarderRefs; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR /* id 142 */ *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_BOUND_FORWARDER_REF { /* size 8 id 143 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 0 */
  WORD OffsetModuleName; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
};
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_BOUND_FORWARDER_REF /* id 143 */ *PIMAGE_BOUND_FORWARDER_REF;
typedef void (*PIMAGE_TLS_CALLBACK) (/* unknown */);
struct _IMAGE_TLS_DIRECTORY32 { /* size 24 id 144 */
  DWORD StartAddressOfRawData; /* bitsize 32, bitpos 0 */
  DWORD EndAddressOfRawData; /* bitsize 32, bitpos 32 */
  DWORD AddressOfIndex; /* bitsize 32, bitpos 64 */
  DWORD AddressOfCallBacks; /* bitsize 32, bitpos 96 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 128 */
  DWORD Characteristics; /* bitsize 32, bitpos 160 */
};
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ IMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY32 /* id 144 */ *PIMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64 { /* size 40 id 145 */
  ULONGLONG StartAddressOfRawData; /* bitsize 64, bitpos 0 */
  ULONGLONG EndAddressOfRawData; /* bitsize 64, bitpos 64 */
  ULONGLONG AddressOfIndex; /* bitsize 64, bitpos 128 */
  ULONGLONG AddressOfCallBacks; /* bitsize 64, bitpos 192 */
  DWORD SizeOfZeroFill; /* bitsize 32, bitpos 256 */
  DWORD Characteristics; /* bitsize 32, bitpos 288 */
};
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ IMAGE_TLS_DIRECTORY64;
typedef struct _IMAGE_TLS_DIRECTORY64 /* id 145 */ *PIMAGE_TLS_DIRECTORY64;
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY { /* size 16 id 146 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  WORD NumberOfNamedEntries; /* bitsize 16, bitpos 96 */
  WORD NumberOfIdEntries; /* bitsize 16, bitpos 112 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ IMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY /* id 146 */ *PIMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY { /* size 8 id 147 */
  union %anon148 { /* size 4 */
    struct %anon149 { /* size 4 */
      DWORD NameOffset; /* bitsize 31, bitpos 0 */
      DWORD NameIsString; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
    DWORD Name; /* bitsize 32, bitpos 0 */
    WORD Id; /* bitsize 16, bitpos 0 */
  }; /* bitsize 32, bitpos 0 */
  union %anon150 { /* size 4 */
    DWORD OffsetToData; /* bitsize 32, bitpos 0 */
    struct %anon151 { /* size 4 */
      DWORD OffsetToDirectory; /* bitsize 31, bitpos 0 */
      DWORD DataIsDirectory; /* bitsize 1, bitpos 31 */
    }; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 32 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY /* id 147 */ *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING { /* size 4 id 152 */
  WORD Length; /* bitsize 16, bitpos 0 */
  CHAR NameString[1]:uint32; /* bitsize 8, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING /* id 152 */ *PIMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U { /* size 4 id 153 */
  WORD Length; /* bitsize 16, bitpos 0 */
  WCHAR NameString[1]:uint32; /* bitsize 16, bitpos 16 */
};
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U /* id 153 */ *PIMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_RESOURCE_DATA_ENTRY { /* size 16 id 154 */
  DWORD OffsetToData; /* bitsize 32, bitpos 0 */
  DWORD Size; /* bitsize 32, bitpos 32 */
  DWORD CodePage; /* bitsize 32, bitpos 64 */
  DWORD Reserved; /* bitsize 32, bitpos 96 */
};
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY /* id 154 */ *PIMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY { /* size 64 id 155 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  DWORD DeCommitFreeBlockThreshold; /* bitsize 32, bitpos 192 */
  DWORD DeCommitTotalFreeThreshold; /* bitsize 32, bitpos 224 */
  PVOID LockPrefixTable; /* bitsize 32, bitpos 256 */
  DWORD MaximumAllocationSize; /* bitsize 32, bitpos 288 */
  DWORD VirtualMemoryThreshold; /* bitsize 32, bitpos 320 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 352 */
  DWORD Reserved[4]:uint32; /* bitsize 128, bitpos 384 */
};
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY /* id 155 */ *PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct %anon156 { /* size 96 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD GlobalFlagsClear; /* bitsize 32, bitpos 96 */
  DWORD GlobalFlagsSet; /* bitsize 32, bitpos 128 */
  DWORD CriticalSectionDefaultTimeout; /* bitsize 32, bitpos 160 */
  ULONGLONG DeCommitFreeBlockThreshold; /* bitsize 64, bitpos 192 */
  ULONGLONG DeCommitTotalFreeThreshold; /* bitsize 64, bitpos 256 */
  ULONGLONG LockPrefixTable; /* bitsize 64, bitpos 320 */
  ULONGLONG MaximumAllocationSize; /* bitsize 64, bitpos 384 */
  ULONGLONG VirtualMemoryThreshold; /* bitsize 64, bitpos 448 */
  ULONGLONG ProcessAffinityMask; /* bitsize 64, bitpos 512 */
  DWORD ProcessHeapFlags; /* bitsize 32, bitpos 576 */
  WORD CSDFlags; /* bitsize 16, bitpos 608 */
  WORD Reserved1; /* bitsize 16, bitpos 624 */
  ULONGLONG EditList; /* bitsize 64, bitpos 640 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 704 */
} IMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct %anon156 *PIMAGE_LOAD_CONFIG_DIRECTORY64;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY { /* size 20 id 157 */
  DWORD BeginAddress; /* bitsize 32, bitpos 0 */
  DWORD EndAddress; /* bitsize 32, bitpos 32 */
  PVOID ExceptionHandler; /* bitsize 32, bitpos 64 */
  PVOID HandlerData; /* bitsize 32, bitpos 96 */
  DWORD PrologEndAddress; /* bitsize 32, bitpos 128 */
};
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY /* id 157 */ *PIMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY { /* size 8 id 158 */
  unsigned int FuncStart; /* bitsize 32, bitpos 0 */
  unsigned int PrologLen; /* bitsize 8, bitpos 32 */
  unsigned int FuncLen; /* bitsize 22, bitpos 40 */
  unsigned int ThirtyTwoBit; /* bitsize 1, bitpos 62 */
  unsigned int ExceptionFlag; /* bitsize 1, bitpos 63 */
};
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY /* id 158 */ *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_DEBUG_DIRECTORY { /* size 28 id 159 */
  DWORD Characteristics; /* bitsize 32, bitpos 0 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 32 */
  WORD MajorVersion; /* bitsize 16, bitpos 64 */
  WORD MinorVersion; /* bitsize 16, bitpos 80 */
  DWORD Type; /* bitsize 32, bitpos 96 */
  DWORD SizeOfData; /* bitsize 32, bitpos 128 */
  DWORD AddressOfRawData; /* bitsize 32, bitpos 160 */
  DWORD PointerToRawData; /* bitsize 32, bitpos 192 */
};
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_DEBUG_DIRECTORY /* id 159 */ *PIMAGE_DEBUG_DIRECTORY;
struct _FPO_DATA { /* size 16 id 160 */
  DWORD ulOffStart; /* bitsize 32, bitpos 0 */
  DWORD cbProcSize; /* bitsize 32, bitpos 32 */
  DWORD cdwLocals; /* bitsize 32, bitpos 64 */
  WORD cdwParams; /* bitsize 16, bitpos 96 */
  WORD cbProlog; /* bitsize 8, bitpos 112 */
  WORD cbRegs; /* bitsize 3, bitpos 120 */
  WORD fHasSEH; /* bitsize 1, bitpos 123 */
  WORD fUseBP; /* bitsize 1, bitpos 124 */
  WORD reserved; /* bitsize 1, bitpos 125 */
  WORD cbFrame; /* bitsize 2, bitpos 126 */
};
typedef struct _FPO_DATA /* id 160 */ FPO_DATA;
typedef struct _FPO_DATA /* id 160 */ *PFPO_DATA;
struct _IMAGE_DEBUG_MISC { /* size 16 id 161 */
  DWORD DataType; /* bitsize 32, bitpos 0 */
  DWORD Length; /* bitsize 32, bitpos 32 */
  BOOLEAN Unicode; /* bitsize 8, bitpos 64 */
  BYTE Reserved[3]:uint32; /* bitsize 24, bitpos 72 */
  BYTE Data[1]:uint32; /* bitsize 8, bitpos 96 */
};
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DEBUG_MISC /* id 161 */ *PIMAGE_DEBUG_MISC;
struct _IMAGE_FUNCTION_ENTRY { /* size 12 id 162 */
  DWORD StartingAddress; /* bitsize 32, bitpos 0 */
  DWORD EndingAddress; /* bitsize 32, bitpos 32 */
  DWORD EndOfPrologue; /* bitsize 32, bitpos 64 */
};
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_FUNCTION_ENTRY /* id 162 */ *PIMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64 { /* size 24 id 163 */
  ULONGLONG StartingAddress; /* bitsize 64, bitpos 0 */
  ULONGLONG EndingAddress; /* bitsize 64, bitpos 64 */
  union %anon164 { /* size 8 */
    ULONGLONG EndOfPrologue; /* bitsize 64, bitpos 0 */
    ULONGLONG UnwindInfoAddress; /* bitsize 64, bitpos 0 */
  }; /* bitsize 64, bitpos 128 */
};
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ IMAGE_FUNCTION_ENTRY64;
typedef struct _IMAGE_FUNCTION_ENTRY64 /* id 163 */ *PIMAGE_FUNCTION_ENTRY64;
struct _IMAGE_SEPARATE_DEBUG_HEADER { /* size 48 id 165 */
  WORD Signature; /* bitsize 16, bitpos 0 */
  WORD Flags; /* bitsize 16, bitpos 16 */
  WORD Machine; /* bitsize 16, bitpos 32 */
  WORD Characteristics; /* bitsize 16, bitpos 48 */
  DWORD TimeDateStamp; /* bitsize 32, bitpos 64 */
  DWORD CheckSum; /* bitsize 32, bitpos 96 */
  DWORD ImageBase; /* bitsize 32, bitpos 128 */
  DWORD SizeOfImage; /* bitsize 32, bitpos 160 */
  DWORD NumberOfSections; /* bitsize 32, bitpos 192 */
  DWORD ExportedNamesSize; /* bitsize 32, bitpos 224 */
  DWORD DebugDirectorySize; /* bitsize 32, bitpos 256 */
  DWORD SectionAlignment; /* bitsize 32, bitpos 288 */
  DWORD Reserved[2]:uint32; /* bitsize 64, bitpos 320 */
};
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER /* id 165 */ *PIMAGE_SEPARATE_DEBUG_HEADER;
enum _CM_SERVICE_NODE_TYPE { DriverType = 1, FileSystemType, Win32ServiceOwnProcess = 16, Win32ServiceShareProcess = 32, AdapterType = 4, RecognizerType = 8 };
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
enum _CM_SERVICE_LOAD_TYPE { BootLoad, SystemLoad, AutoLoad, DemandLoad, DisableLoad };
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
enum _CM_ERROR_CONTROL_TYPE { IgnoreError, NormalError, SevereError, CriticalError };
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
struct _NT_TIB { /* size 28 id 166 */
  struct _EXCEPTION_REGISTRATION_RECORD /* id 0 */ *ExceptionList; /* bitsize 32, bitpos 0 */
  PVOID StackBase; /* bitsize 32, bitpos 32 */
  PVOID StackLimit; /* bitsize 32, bitpos 64 */
  PVOID SubSystemTib; /* bitsize 32, bitpos 96 */
  union %anon167 { /* size 4 */
    PVOID FiberData; /* bitsize 32, bitpos 0 */
    DWORD Version; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 128 */
  PVOID ArbitraryUserPointer; /* bitsize 32, bitpos 160 */
  struct _NT_TIB /* id 166 */ *Self; /* bitsize 32, bitpos 192 */
};
typedef struct _NT_TIB /* id 166 */ NT_TIB;
typedef struct _NT_TIB /* id 166 */ *PNT_TIB;
struct _REPARSE_DATA_BUFFER { /* size 24 id 168 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  union %anon169 { /* size 16 */
    struct %anon170 { /* size 16 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      ULONG Flags; /* bitsize 32, bitpos 64 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 96 */
    } SymbolicLinkReparseBuffer; /* bitsize 128, bitpos 0 */
    struct %anon171 { /* size 10 */
      WORD SubstituteNameOffset; /* bitsize 16, bitpos 0 */
      WORD SubstituteNameLength; /* bitsize 16, bitpos 16 */
      WORD PrintNameOffset; /* bitsize 16, bitpos 32 */
      WORD PrintNameLength; /* bitsize 16, bitpos 48 */
      WCHAR PathBuffer[1]:uint32; /* bitsize 16, bitpos 64 */
    } MountPointReparseBuffer; /* bitsize 80, bitpos 0 */
    struct %anon172 { /* size 1 */
      BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
    } GenericReparseBuffer; /* bitsize 8, bitpos 0 */
  }; /* bitsize 128, bitpos 64 */
};
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ REPARSE_DATA_BUFFER;
typedef struct _REPARSE_DATA_BUFFER /* id 168 */ *PREPARSE_DATA_BUFFER;
struct _REPARSE_GUID_DATA_BUFFER { /* size 28 id 173 */
  DWORD ReparseTag; /* bitsize 32, bitpos 0 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 32 */
  WORD Reserved; /* bitsize 16, bitpos 48 */
  GUID ReparseGuid; /* bitsize 128, bitpos 64 */
  struct %anon172 { /* size 1 */
    BYTE DataBuffer[1]:uint32; /* bitsize 8, bitpos 0 */
  } GenericReparseBuffer; /* bitsize 8, bitpos 192 */
};
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ REPARSE_GUID_DATA_BUFFER;
typedef struct _REPARSE_GUID_DATA_BUFFER /* id 173 */ *PREPARSE_GUID_DATA_BUFFER;
struct _REPARSE_POINT_INFORMATION { /* size 4 id 174 */
  WORD ReparseDataLength; /* bitsize 16, bitpos 0 */
  WORD UnparsedNameLength; /* bitsize 16, bitpos 16 */
};
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ REPARSE_POINT_INFORMATION;
typedef struct _REPARSE_POINT_INFORMATION /* id 174 */ *PREPARSE_POINT_INFORMATION;
union _FILE_SEGMENT_ELEMENT { /* size 8 id 175 */
  PVOID64 Buffer; /* bitsize 32, bitpos 0 */
  ULONGLONG Alignment; /* bitsize 64, bitpos 0 */
};
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ FILE_SEGMENT_ELEMENT;
typedef union _FILE_SEGMENT_ELEMENT /* id 175 */ *PFILE_SEGMENT_ELEMENT;
enum _JOBOBJECTINFOCLASS { JobObjectBasicAccountingInformation = 1, JobObjectBasicLimitInformation, JobObjectBasicProcessIdList, JobObjectBasicUIRestrictions, JobObjectSecurityLimitInformation, JobObjectEndOfJobTimeInformation, JobObjectAssociateCompletionPortInformation, JobObjectBasicAndIoAccountingInformation, JobObjectExtendedLimitInformation, JobObjectJobSetInformation, MaxJobObjectInfoClass };
typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION { /* size 48 id 176 */
  LARGE_INTEGER TotalUserTime; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER TotalKernelTime; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ThisPeriodTotalUserTime; /* bitsize 64, bitpos 128 */
  LARGE_INTEGER ThisPeriodTotalKernelTime; /* bitsize 64, bitpos 192 */
  DWORD TotalPageFaultCount; /* bitsize 32, bitpos 256 */
  DWORD TotalProcesses; /* bitsize 32, bitpos 288 */
  DWORD ActiveProcesses; /* bitsize 32, bitpos 320 */
  DWORD TotalTerminatedProcesses; /* bitsize 32, bitpos 352 */
};
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION /* id 176 */ *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION { /* size 48 id 177 */
  LARGE_INTEGER PerProcessUserTimeLimit; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER PerJobUserTimeLimit; /* bitsize 64, bitpos 64 */
  DWORD LimitFlags; /* bitsize 32, bitpos 128 */
  long unsigned int MinimumWorkingSetSize; /* bitsize 32, bitpos 160 */
  long unsigned int MaximumWorkingSetSize; /* bitsize 32, bitpos 192 */
  DWORD ActiveProcessLimit; /* bitsize 32, bitpos 224 */
  long unsigned int Affinity; /* bitsize 32, bitpos 256 */
  DWORD PriorityClass; /* bitsize 32, bitpos 288 */
  DWORD SchedulingClass; /* bitsize 32, bitpos 320 */
};
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ JOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION /* id 177 */ *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST { /* size 12 id 178 */
  DWORD NumberOfAssignedProcesses; /* bitsize 32, bitpos 0 */
  DWORD NumberOfProcessIdsInList; /* bitsize 32, bitpos 32 */
  long unsigned int ProcessIdList[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ JOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST /* id 178 */ *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS { /* size 4 id 179 */
  DWORD UIRestrictionsClass; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ JOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS /* id 179 */ *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION { /* size 20 id 180 */
  DWORD SecurityLimitFlags; /* bitsize 32, bitpos 0 */
  HANDLE JobToken; /* bitsize 32, bitpos 32 */
  PTOKEN_GROUPS SidsToDisable; /* bitsize 32, bitpos 64 */
  PTOKEN_PRIVILEGES PrivilegesToDelete; /* bitsize 32, bitpos 96 */
  PTOKEN_GROUPS RestrictedSids; /* bitsize 32, bitpos 128 */
};
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ JOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION /* id 180 */ *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION { /* size 4 id 181 */
  DWORD EndOfJobTimeAction; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION /* id 181 */ *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT { /* size 8 id 182 */
  PVOID CompletionKey; /* bitsize 32, bitpos 0 */
  HANDLE CompletionPort; /* bitsize 32, bitpos 32 */
};
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT /* id 182 */ *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION { /* size 96 id 183 */
  JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
};
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION /* id 183 */ *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION { /* size 112 id 184 */
  JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation; /* bitsize 384, bitpos 0 */
  IO_COUNTERS IoInfo; /* bitsize 384, bitpos 384 */
  long unsigned int ProcessMemoryLimit; /* bitsize 32, bitpos 768 */
  long unsigned int JobMemoryLimit; /* bitsize 32, bitpos 800 */
  long unsigned int PeakProcessMemoryUsed; /* bitsize 32, bitpos 832 */
  long unsigned int PeakJobMemoryUsed; /* bitsize 32, bitpos 864 */
};
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION /* id 184 */ *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_JOBSET_INFORMATION { /* size 4 id 185 */
  DWORD MemberLevel; /* bitsize 32, bitpos 0 */
};
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ JOBOBJECT_JOBSET_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION /* id 185 */ *PJOBOBJECT_JOBSET_INFORMATION;
enum _LATENCY_TIME { LT_DONT_CARE, LT_LOWEST_LATENCY };
typedef enum _LATENCY_TIME LATENCY_TIME;
typedef enum _LATENCY_TIME *PLATENCY_TIME;
enum _SYSTEM_POWER_STATE { PowerSystemUnspecified, PowerSystemWorking, PowerSystemSleeping1, PowerSystemSleeping2, PowerSystemSleeping3, PowerSystemHibernate, PowerSystemShutdown, PowerSystemMaximum };
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject } POWER_ACTION;
typedef (enum { PowerActionNone, PowerActionReserved, PowerActionSleep, PowerActionHibernate, PowerActionShutdown, PowerActionShutdownReset, PowerActionShutdownOff, PowerActionWarmEject }) *PPOWER_ACTION;
enum _DEVICE_POWER_STATE { PowerDeviceUnspecified, PowerDeviceD0, PowerDeviceD1, PowerDeviceD2, PowerDeviceD3, PowerDeviceMaximum };
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef struct %anon186 { /* size 8 */
  DWORD Granularity; /* bitsize 32, bitpos 0 */
  DWORD Capacity; /* bitsize 32, bitpos 32 */
} BATTERY_REPORTING_SCALE;
typedef struct %anon186 *PBATTERY_REPORTING_SCALE;
struct _POWER_ACTION_POLICY { /* size 12 id 187 */
  POWER_ACTION Action; /* bitsize 32, bitpos 0 */
  ULONG Flags; /* bitsize 32, bitpos 32 */
  ULONG EventCode; /* bitsize 32, bitpos 64 */
};
typedef struct _POWER_ACTION_POLICY /* id 187 */ POWER_ACTION_POLICY;
typedef struct _POWER_ACTION_POLICY /* id 187 */ *PPOWER_ACTION_POLICY;
struct _SYSTEM_POWER_LEVEL { /* size 24 id 188 */
  BOOLEAN Enable; /* bitsize 8, bitpos 0 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 8 */
  ULONG BatteryLevel; /* bitsize 32, bitpos 32 */
  POWER_ACTION_POLICY PowerPolicy; /* bitsize 96, bitpos 64 */
  SYSTEM_POWER_STATE MinSystemState; /* bitsize 32, bitpos 160 */
};
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ SYSTEM_POWER_LEVEL;
typedef struct _SYSTEM_POWER_LEVEL /* id 188 */ *PSYSTEM_POWER_LEVEL;
struct _SYSTEM_POWER_POLICY { /* size 232 id 189 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  POWER_ACTION_POLICY PowerButton; /* bitsize 96, bitpos 32 */
  POWER_ACTION_POLICY SleepButton; /* bitsize 96, bitpos 128 */
  POWER_ACTION_POLICY LidClose; /* bitsize 96, bitpos 224 */
  SYSTEM_POWER_STATE LidOpenWake; /* bitsize 32, bitpos 320 */
  ULONG Reserved; /* bitsize 32, bitpos 352 */
  POWER_ACTION_POLICY Idle; /* bitsize 96, bitpos 384 */
  ULONG IdleTimeout; /* bitsize 32, bitpos 480 */
  UCHAR IdleSensitivity; /* bitsize 8, bitpos 512 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 520 */
  UCHAR Spare2[2]:uint32; /* bitsize 16, bitpos 528 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 576 */
  SYSTEM_POWER_STATE ReducedLatencySleep; /* bitsize 32, bitpos 608 */
  ULONG WinLogonFlags; /* bitsize 32, bitpos 640 */
  ULONG Spare3; /* bitsize 32, bitpos 672 */
  ULONG DozeS4Timeout; /* bitsize 32, bitpos 704 */
  ULONG BroadcastCapacityResolution; /* bitsize 32, bitpos 736 */
  SYSTEM_POWER_LEVEL DischargePolicy[4]:uint32; /* bitsize 768, bitpos 768 */
  ULONG VideoTimeout; /* bitsize 32, bitpos 1536 */
  BOOLEAN VideoDimDisplay; /* bitsize 8, bitpos 1568 */
  ULONG VideoReserved[3]:uint32; /* bitsize 96, bitpos 1600 */
  ULONG SpindownTimeout; /* bitsize 32, bitpos 1696 */
  BOOLEAN OptimizeForPower; /* bitsize 8, bitpos 1728 */
  UCHAR FanThrottleTolerance; /* bitsize 8, bitpos 1736 */
  UCHAR ForcedThrottle; /* bitsize 8, bitpos 1744 */
  UCHAR MinThrottle; /* bitsize 8, bitpos 1752 */
  POWER_ACTION_POLICY OverThrottled; /* bitsize 96, bitpos 1760 */
};
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ SYSTEM_POWER_POLICY;
typedef struct _SYSTEM_POWER_POLICY /* id 189 */ *PSYSTEM_POWER_POLICY;
struct _SYSTEM_POWER_CAPABILITIES { /* size 76 id 190 */
  BOOLEAN PowerButtonPresent; /* bitsize 8, bitpos 0 */
  BOOLEAN SleepButtonPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN LidPresent; /* bitsize 8, bitpos 16 */
  BOOLEAN SystemS1; /* bitsize 8, bitpos 24 */
  BOOLEAN SystemS2; /* bitsize 8, bitpos 32 */
  BOOLEAN SystemS3; /* bitsize 8, bitpos 40 */
  BOOLEAN SystemS4; /* bitsize 8, bitpos 48 */
  BOOLEAN SystemS5; /* bitsize 8, bitpos 56 */
  BOOLEAN HiberFilePresent; /* bitsize 8, bitpos 64 */
  BOOLEAN FullWake; /* bitsize 8, bitpos 72 */
  BOOLEAN VideoDimPresent; /* bitsize 8, bitpos 80 */
  BOOLEAN ApmPresent; /* bitsize 8, bitpos 88 */
  BOOLEAN UpsPresent; /* bitsize 8, bitpos 96 */
  BOOLEAN ThermalControl; /* bitsize 8, bitpos 104 */
  BOOLEAN ProcessorThrottle; /* bitsize 8, bitpos 112 */
  UCHAR ProcessorMinThrottle; /* bitsize 8, bitpos 120 */
  UCHAR ProcessorMaxThrottle; /* bitsize 8, bitpos 128 */
  UCHAR spare2[4]:uint32; /* bitsize 32, bitpos 136 */
  BOOLEAN DiskSpinDown; /* bitsize 8, bitpos 168 */
  UCHAR spare3[8]:uint32; /* bitsize 64, bitpos 176 */
  BOOLEAN SystemBatteriesPresent; /* bitsize 8, bitpos 240 */
  BOOLEAN BatteriesAreShortTerm; /* bitsize 8, bitpos 248 */
  BATTERY_REPORTING_SCALE BatteryScale[3]:uint32; /* bitsize 192, bitpos 256 */
  SYSTEM_POWER_STATE AcOnLineWake; /* bitsize 32, bitpos 448 */
  SYSTEM_POWER_STATE SoftLidWake; /* bitsize 32, bitpos 480 */
  SYSTEM_POWER_STATE RtcWake; /* bitsize 32, bitpos 512 */
  SYSTEM_POWER_STATE MinDeviceWakeState; /* bitsize 32, bitpos 544 */
  SYSTEM_POWER_STATE DefaultLowLatencyWake; /* bitsize 32, bitpos 576 */
};
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ SYSTEM_POWER_CAPABILITIES;
typedef struct _SYSTEM_POWER_CAPABILITIES /* id 190 */ *PSYSTEM_POWER_CAPABILITIES;
struct _SYSTEM_BATTERY_STATE { /* size 32 id 191 */
  BOOLEAN AcOnLine; /* bitsize 8, bitpos 0 */
  BOOLEAN BatteryPresent; /* bitsize 8, bitpos 8 */
  BOOLEAN Charging; /* bitsize 8, bitpos 16 */
  BOOLEAN Discharging; /* bitsize 8, bitpos 24 */
  BOOLEAN Spare1[4]:uint32; /* bitsize 32, bitpos 32 */
  ULONG MaxCapacity; /* bitsize 32, bitpos 64 */
  ULONG RemainingCapacity; /* bitsize 32, bitpos 96 */
  ULONG Rate; /* bitsize 32, bitpos 128 */
  ULONG EstimatedTime; /* bitsize 32, bitpos 160 */
  ULONG DefaultAlert1; /* bitsize 32, bitpos 192 */
  ULONG DefaultAlert2; /* bitsize 32, bitpos 224 */
};
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ SYSTEM_BATTERY_STATE;
typedef struct _SYSTEM_BATTERY_STATE /* id 191 */ *PSYSTEM_BATTERY_STATE;
enum _POWER_INFORMATION_LEVEL { SystemPowerPolicyAc, SystemPowerPolicyDc, VerifySystemPolicyAc, VerifySystemPolicyDc, SystemPowerCapabilities, SystemBatteryState, SystemPowerStateHandler, ProcessorStateHandler, SystemPowerPolicyCurrent, AdministratorPowerPolicy, SystemReserveHiberFile, ProcessorInformation, SystemPowerInformation, ProcessorStateHandler2, LastWakeTime, LastSleepTime, SystemExecutionState, SystemPowerStateNotifyHandler, ProcessorPowerPolicyAc, ProcessorPowerPolicyDc, VerifyProcessorPowerPolicyAc, VerifyProcessorPowerPolicyDc, ProcessorPowerPolicyCurrent };
typedef enum _POWER_INFORMATION_LEVEL POWER_INFORMATION_LEVEL;
struct _SYSTEM_POWER_INFORMATION { /* size 16 id 192 */
  ULONG MaxIdlenessAllowed; /* bitsize 32, bitpos 0 */
  ULONG Idleness; /* bitsize 32, bitpos 32 */
  ULONG TimeRemaining; /* bitsize 32, bitpos 64 */
  UCHAR CoolingMode; /* bitsize 8, bitpos 96 */
};
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ SYSTEM_POWER_INFORMATION;
typedef struct _SYSTEM_POWER_INFORMATION /* id 192 */ *PSYSTEM_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY_INFO { /* size 20 id 193 */
  ULONG TimeCheck; /* bitsize 32, bitpos 0 */
  ULONG DemoteLimit; /* bitsize 32, bitpos 32 */
  ULONG PromoteLimit; /* bitsize 32, bitpos 64 */
  UCHAR DemotePercent; /* bitsize 8, bitpos 96 */
  UCHAR PromotePercent; /* bitsize 8, bitpos 104 */
  UCHAR Spare[2]:uint32; /* bitsize 16, bitpos 112 */
  ULONG AllowDemotion; /* bitsize 1, bitpos 128 */
  ULONG AllowPromotion; /* bitsize 1, bitpos 129 */
  ULONG Reserved; /* bitsize 30, bitpos 130 */
};
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ PROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESSOR_POWER_POLICY_INFO /* id 193 */ *PPROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_POWER_POLICY { /* size 76 id 194 */
  ULONG Revision; /* bitsize 32, bitpos 0 */
  UCHAR DynamicThrottle; /* bitsize 8, bitpos 32 */
  UCHAR Spare[3]:uint32; /* bitsize 24, bitpos 40 */
  ULONG Reserved; /* bitsize 32, bitpos 64 */
  ULONG PolicyCount; /* bitsize 32, bitpos 96 */
  PROCESSOR_POWER_POLICY_INFO Policy[3]:uint32; /* bitsize 480, bitpos 128 */
};
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ PROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_POWER_POLICY /* id 194 */ *PPROCESSOR_POWER_POLICY;
struct _ADMINISTRATOR_POWER_POLICY { /* size 24 id 195 */
  SYSTEM_POWER_STATE MinSleep; /* bitsize 32, bitpos 0 */
  SYSTEM_POWER_STATE MaxSleep; /* bitsize 32, bitpos 32 */
  ULONG MinVideoTimeout; /* bitsize 32, bitpos 64 */
  ULONG MaxVideoTimeout; /* bitsize 32, bitpos 96 */
  ULONG MinSpindownTimeout; /* bitsize 32, bitpos 128 */
  ULONG MaxSpindownTimeout; /* bitsize 32, bitpos 160 */
};
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ ADMINISTRATOR_POWER_POLICY;
typedef struct _ADMINISTRATOR_POWER_POLICY /* id 195 */ *PADMINISTRATOR_POWER_POLICY;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef OSVERSIONINFOA *POSVERSIONINFO;
typedef OSVERSIONINFOA *LPOSVERSIONINFO;
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *POSVERSIONINFOEX;
typedef OSVERSIONINFOEXA *LPOSVERSIONINFOEX;
 /usr/include/string.h:
 /usr/include/sys/reent.h:
typedef long unsigned int __ULong;
struct _Bigint { /* size 24 id 196 */
  struct _Bigint /* id 196 */ *_next; /* bitsize 32, bitpos 0 */
  int _k; /* bitsize 32, bitpos 32 */
  int _maxwds; /* bitsize 32, bitpos 64 */
  int _sign; /* bitsize 32, bitpos 96 */
  int _wds; /* bitsize 32, bitpos 128 */
  __ULong _x[1]:uint32; /* bitsize 32, bitpos 160 */
};
struct __tm { /* size 36 id 197 */
  int __tm_sec; /* bitsize 32, bitpos 0 */
  int __tm_min; /* bitsize 32, bitpos 32 */
  int __tm_hour; /* bitsize 32, bitpos 64 */
  int __tm_mday; /* bitsize 32, bitpos 96 */
  int __tm_mon; /* bitsize 32, bitpos 128 */
  int __tm_year; /* bitsize 32, bitpos 160 */
  int __tm_wday; /* bitsize 32, bitpos 192 */
  int __tm_yday; /* bitsize 32, bitpos 224 */
  int __tm_isdst; /* bitsize 32, bitpos 256 */
};
struct _on_exit_args { /* size 264 id 198 */
  void *_fnargs[32]:uint32; /* bitsize 1024, bitpos 0 */
  void *_dso_handle[32]:uint32; /* bitsize 1024, bitpos 1024 */
  __ULong _fntypes; /* bitsize 32, bitpos 2048 */
  __ULong _is_cxa; /* bitsize 32, bitpos 2080 */
};
struct _atexit { /* size 400 id 199 */
  struct _atexit /* id 199 */ *_next; /* bitsize 32, bitpos 0 */
  int _ind; /* bitsize 32, bitpos 32 */
  void (*_fns[32]) (/* unknown */):uint32; /* bitsize 1024, bitpos 64 */
  struct _on_exit_args /* id 198 */ _on_exit_args; /* bitsize 2112, bitpos 1088 */
};
struct __sbuf { /* size 8 id 200 */
  unsigned char *_base; /* bitsize 32, bitpos 0 */
  int _size; /* bitsize 32, bitpos 32 */
};
typedef long int _fpos_t;
typedef long long int _fpos64_t;
struct __sFILE { /* size 92 id 201 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  void *_cookie; /* bitsize 32, bitpos 224 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 256 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 288 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 320 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 352 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 384 */
  unsigned char *_up; /* bitsize 32, bitpos 448 */
  int _ur; /* bitsize 32, bitpos 480 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 512 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 536 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 544 */
  int _blksize; /* bitsize 32, bitpos 608 */
  int _offset; /* bitsize 32, bitpos 640 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 672 */
  void *_lock; /* bitsize 32, bitpos 704 */
};
struct __sFILE64 { /* size 104 id 203 */
  unsigned char *_p; /* bitsize 32, bitpos 0 */
  int _r; /* bitsize 32, bitpos 32 */
  int _w; /* bitsize 32, bitpos 64 */
  short int _flags; /* bitsize 16, bitpos 96 */
  short int _file; /* bitsize 16, bitpos 112 */
  struct __sbuf /* id 200 */ _bf; /* bitsize 64, bitpos 128 */
  int _lbfsize; /* bitsize 32, bitpos 192 */
  struct _reent /* id 202 */ *_data; /* bitsize 32, bitpos 224 */
  void *_cookie; /* bitsize 32, bitpos 256 */
  int (*_read) (/* unknown */); /* bitsize 32, bitpos 288 */
  int (*_write) (/* unknown */); /* bitsize 32, bitpos 320 */
  _fpos_t (*_seek) (/* unknown */); /* bitsize 32, bitpos 352 */
  int (*_close) (/* unknown */); /* bitsize 32, bitpos 384 */
  struct __sbuf /* id 200 */ _ub; /* bitsize 64, bitpos 416 */
  unsigned char *_up; /* bitsize 32, bitpos 480 */
  int _ur; /* bitsize 32, bitpos 512 */
  unsigned char _ubuf[3]:uint32; /* bitsize 24, bitpos 544 */
  unsigned char _nbuf[1]:uint32; /* bitsize 8, bitpos 568 */
  struct __sbuf /* id 200 */ _lb; /* bitsize 64, bitpos 576 */
  int _blksize; /* bitsize 32, bitpos 640 */
  int _flags2; /* bitsize 32, bitpos 672 */
  long long int _offset; /* bitsize 64, bitpos 704 */
  _fpos64_t (*_seek64) (/* unknown */); /* bitsize 32, bitpos 768 */
  void *_lock; /* bitsize 32, bitpos 800 */
};
typedef struct __sFILE64 /* id 203 */ __FILE;
struct _glue { /* size 12 id 204 */
  struct _glue /* id 204 */ *_next; /* bitsize 32, bitpos 0 */
  int _niobs; /* bitsize 32, bitpos 32 */
  __FILE *_iobs; /* bitsize 32, bitpos 64 */
};
struct _rand48 { /* size 14 id 205 */
  short unsigned int _seed[3]:uint32; /* bitsize 48, bitpos 0 */
  short unsigned int _mult[3]:uint32; /* bitsize 48, bitpos 48 */
  short unsigned int _add; /* bitsize 16, bitpos 96 */
};
struct _reent { /* size 1064 id 202 */
  int _errno; /* bitsize 32, bitpos 0 */
  __FILE *_stdin; /* bitsize 32, bitpos 32 */
  __FILE *_stdout; /* bitsize 32, bitpos 64 */
  __FILE *_stderr; /* bitsize 32, bitpos 96 */
  int _inc; /* bitsize 32, bitpos 128 */
  char _emergency[25]:uint32; /* bitsize 200, bitpos 160 */
  int _current_category; /* bitsize 32, bitpos 384 */
  char const *_current_locale; /* bitsize 32, bitpos 416 */
  int __sdidinit; /* bitsize 32, bitpos 448 */
  void (*__cleanup) (/* unknown */); /* bitsize 32, bitpos 480 */
  struct _Bigint /* id 196 */ *_result; /* bitsize 32, bitpos 512 */
  int _result_k; /* bitsize 32, bitpos 544 */
  struct _Bigint /* id 196 */ *_p5s; /* bitsize 32, bitpos 576 */
  struct _Bigint /* id 196 */ **_freelist; /* bitsize 32, bitpos 608 */
  int _cvtlen; /* bitsize 32, bitpos 640 */
  char *_cvtbuf; /* bitsize 32, bitpos 672 */
  union %anon206 { /* size 240 */
    struct %anon207 { /* size 208 */
      unsigned int _unused_rand; /* bitsize 32, bitpos 0 */
      char *_strtok_last; /* bitsize 32, bitpos 32 */
      char _asctime_buf[26]:uint32; /* bitsize 208, bitpos 64 */
      struct __tm /* id 197 */ _localtime_buf; /* bitsize 288, bitpos 288 */
      int _gamma_signgam; /* bitsize 32, bitpos 576 */
      long long unsigned int _rand_next; /* bitsize 64, bitpos 640 */
      struct _rand48 /* id 205 */ _r48; /* bitsize 112, bitpos 704 */
      struct %anon208 { /* size 8 */
        int __count; /* bitsize 32, bitpos 0 */
        union %anon209 { /* size 4 */
          unsigned int __wch; /* bitsize 32, bitpos 0 */
          unsigned char __wchb[4]:uint32; /* bitsize 32, bitpos 0 */
        } __value; /* bitsize 32, bitpos 32 */
      } _mblen_state; /* bitsize 64, bitpos 832 */
      struct %anon208 _mbtowc_state; /* bitsize 64, bitpos 896 */
      struct %anon208 _wctomb_state; /* bitsize 64, bitpos 960 */
      char _l64a_buf[8]:uint32; /* bitsize 64, bitpos 1024 */
      char _signal_buf[24]:uint32; /* bitsize 192, bitpos 1088 */
      int _getdate_err; /* bitsize 32, bitpos 1280 */
      struct %anon208 _mbrlen_state; /* bitsize 64, bitpos 1312 */
      struct %anon208 _mbrtowc_state; /* bitsize 64, bitpos 1376 */
      struct %anon208 _mbsrtowcs_state; /* bitsize 64, bitpos 1440 */
      struct %anon208 _wcrtomb_state; /* bitsize 64, bitpos 1504 */
      struct %anon208 _wcsrtombs_state; /* bitsize 64, bitpos 1568 */
    } _reent; /* bitsize 1664, bitpos 0 */
    struct %anon210 { /* size 240 */
      unsigned char *_nextf[30]:uint32; /* bitsize 960, bitpos 0 */
      unsigned int _nmalloc[30]:uint32; /* bitsize 960, bitpos 960 */
    } _unused; /* bitsize 1920, bitpos 0 */
  } _new; /* bitsize 1920, bitpos 704 */
  struct _atexit /* id 199 */ *_atexit; /* bitsize 32, bitpos 2624 */
  struct _atexit /* id 199 */ _atexit0; /* bitsize 3200, bitpos 2656 */
  void (**_sig_func) (/* unknown */); /* bitsize 32, bitpos 5856 */
  struct _glue /* id 204 */ __sglue; /* bitsize 96, bitpos 5888 */
  __FILE __sf[3]:uint32; /* bitsize 2496, bitpos 6016 */
};
 /usr/include/sys/_types.h:
typedef long int _off_t;
typedef long long int _off64_t;
typedef int _ssize_t;
typedef struct %anon208 _mbstate_t;
typedef void *_flock_t;
typedef void *_iconv_t;
 /usr/include/sys/lock.h:
typedef void *_LOCK_T;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h:
typedef unsigned int wint_t;
typedef unsigned int size_t;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/../../../../include/w32api/basetsd.h:
typedef int LONG32;
typedef int *PLONG32;
typedef int INT32;
typedef int *PINT32;
typedef unsigned int ULONG32;
typedef unsigned int *PULONG32;
typedef unsigned int DWORD32;
typedef unsigned int *PDWORD32;
typedef unsigned int UINT32;
typedef unsigned int *PUINT32;
typedef int INT_PTR;
typedef int *PINT_PTR;
typedef unsigned int UINT_PTR;
typedef unsigned int *PUINT_PTR;
typedef long int LONG_PTR;
typedef long int *PLONG_PTR;
typedef long unsigned int ULONG_PTR;
typedef long unsigned int *PULONG_PTR;
typedef short unsigned int UHALF_PTR;
typedef short unsigned int *PUHALF_PTR;
typedef short int HALF_PTR;
typedef short int *PHALF_PTR;
typedef long unsigned int HANDLE_PTR;
typedef ULONG_PTR SIZE_T;
typedef ULONG_PTR *PSIZE_T;
typedef LONG_PTR SSIZE_T;
typedef LONG_PTR *PSSIZE_T;
typedef ULONG_PTR DWORD_PTR;
typedef ULONG_PTR *PDWORD_PTR;
typedef long long int LONG64;
typedef long long int *PLONG64;
typedef long long int INT64;
typedef long long int *PINT64;
typedef long long unsigned int ULONG64;
typedef long long unsigned int *PULONG64;
typedef long long unsigned int DWORD64;
typedef long long unsigned int *PDWORD64;
typedef long long unsigned int UINT64;
typedef long long unsigned int *PUINT64;
 /usr/include/w32api/wingdi.h:
struct _ABC { /* size 12 id 211 */
  int abcA; /* bitsize 32, bitpos 0 */
  UINT abcB; /* bitsize 32, bitpos 32 */
  int abcC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABC /* id 211 */ ABC;
typedef struct _ABC /* id 211 */ *LPABC;
struct _ABCFLOAT { /* size 12 id 212 */
  FLOAT abcfA; /* bitsize 32, bitpos 0 */
  FLOAT abcfB; /* bitsize 32, bitpos 32 */
  FLOAT abcfC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABCFLOAT /* id 212 */ ABCFLOAT;
typedef struct _ABCFLOAT /* id 212 */ *LPABCFLOAT;
struct tagBITMAP { /* size 24 id 213 */
  LONG bmType; /* bitsize 32, bitpos 0 */
  LONG bmWidth; /* bitsize 32, bitpos 32 */
  LONG bmHeight; /* bitsize 32, bitpos 64 */
  LONG bmWidthBytes; /* bitsize 32, bitpos 96 */
  WORD bmPlanes; /* bitsize 16, bitpos 128 */
  WORD bmBitsPixel; /* bitsize 16, bitpos 144 */
  LPVOID bmBits; /* bitsize 32, bitpos 160 */
};
typedef struct tagBITMAP /* id 213 */ BITMAP;
typedef struct tagBITMAP /* id 213 */ *PBITMAP;
typedef struct tagBITMAP /* id 213 */ *LPBITMAP;
struct tagBITMAPCOREHEADER { /* size 12 id 214 */
  DWORD bcSize; /* bitsize 32, bitpos 0 */
  WORD bcWidth; /* bitsize 16, bitpos 32 */
  WORD bcHeight; /* bitsize 16, bitpos 48 */
  WORD bcPlanes; /* bitsize 16, bitpos 64 */
  WORD bcBitCount; /* bitsize 16, bitpos 80 */
};
typedef struct tagBITMAPCOREHEADER /* id 214 */ BITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 214 */ *LPBITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 214 */ *PBITMAPCOREHEADER;
struct tagRGBTRIPLE { /* size 3 id 215 */
  BYTE rgbtBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbtGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbtRed; /* bitsize 8, bitpos 16 */
};
typedef struct tagRGBTRIPLE /* id 215 */ RGBTRIPLE;
typedef struct tagRGBTRIPLE /* id 215 */ *LPRGBTRIPLE;
struct tagBITMAPFILEHEADER { /* size 14 id 216 */
  WORD bfType; /* bitsize 16, bitpos 0 */
  DWORD bfSize; /* bitsize 32, bitpos 16 */
  WORD bfReserved1; /* bitsize 16, bitpos 48 */
  WORD bfReserved2; /* bitsize 16, bitpos 64 */
  DWORD bfOffBits; /* bitsize 32, bitpos 80 */
};
typedef struct tagBITMAPFILEHEADER /* id 216 */ BITMAPFILEHEADER;
typedef struct tagBITMAPFILEHEADER /* id 216 */ *LPBITMAPFILEHEADER;
typedef struct tagBITMAPFILEHEADER /* id 216 */ *PBITMAPFILEHEADER;
struct _BITMAPCOREINFO { /* size 16 id 217 */
  BITMAPCOREHEADER bmciHeader; /* bitsize 96, bitpos 0 */
  RGBTRIPLE bmciColors[1]:uint32; /* bitsize 24, bitpos 96 */
};
typedef struct _BITMAPCOREINFO /* id 217 */ BITMAPCOREINFO;
typedef struct _BITMAPCOREINFO /* id 217 */ *LPBITMAPCOREINFO;
typedef struct _BITMAPCOREINFO /* id 217 */ *PBITMAPCOREINFO;
struct tagBITMAPINFOHEADER { /* size 40 id 218 */
  DWORD biSize; /* bitsize 32, bitpos 0 */
  LONG biWidth; /* bitsize 32, bitpos 32 */
  LONG biHeight; /* bitsize 32, bitpos 64 */
  WORD biPlanes; /* bitsize 16, bitpos 96 */
  WORD biBitCount; /* bitsize 16, bitpos 112 */
  DWORD biCompression; /* bitsize 32, bitpos 128 */
  DWORD biSizeImage; /* bitsize 32, bitpos 160 */
  LONG biXPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG biYPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD biClrUsed; /* bitsize 32, bitpos 256 */
  DWORD biClrImportant; /* bitsize 32, bitpos 288 */
};
typedef struct tagBITMAPINFOHEADER /* id 218 */ BITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 218 */ *LPBITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 218 */ *PBITMAPINFOHEADER;
struct tagRGBQUAD { /* size 4 id 219 */
  BYTE rgbBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbRed; /* bitsize 8, bitpos 16 */
  BYTE rgbReserved; /* bitsize 8, bitpos 24 */
};
typedef struct tagRGBQUAD /* id 219 */ RGBQUAD;
typedef struct tagRGBQUAD /* id 219 */ *LPRGBQUAD;
struct tagBITMAPINFO { /* size 44 id 220 */
  BITMAPINFOHEADER bmiHeader; /* bitsize 320, bitpos 0 */
  RGBQUAD bmiColors[1]:uint32; /* bitsize 32, bitpos 320 */
};
typedef struct tagBITMAPINFO /* id 220 */ BITMAPINFO;
typedef struct tagBITMAPINFO /* id 220 */ *LPBITMAPINFO;
typedef struct tagBITMAPINFO /* id 220 */ *PBITMAPINFO;
typedef long int FXPT16DOT16;
typedef long int *LPFXPT16DOT16;
typedef long int FXPT2DOT30;
typedef long int *LPFXPT2DOT30;
struct tagCIEXYZ { /* size 12 id 221 */
  FXPT2DOT30 ciexyzX; /* bitsize 32, bitpos 0 */
  FXPT2DOT30 ciexyzY; /* bitsize 32, bitpos 32 */
  FXPT2DOT30 ciexyzZ; /* bitsize 32, bitpos 64 */
};
typedef struct tagCIEXYZ /* id 221 */ CIEXYZ;
typedef struct tagCIEXYZ /* id 221 */ *LPCIEXYZ;
struct tagCIEXYZTRIPLE { /* size 36 id 222 */
  CIEXYZ ciexyzRed; /* bitsize 96, bitpos 0 */
  CIEXYZ ciexyzGreen; /* bitsize 96, bitpos 96 */
  CIEXYZ ciexyzBlue; /* bitsize 96, bitpos 192 */
};
typedef struct tagCIEXYZTRIPLE /* id 222 */ CIEXYZTRIPLE;
typedef struct tagCIEXYZTRIPLE /* id 222 */ *LPCIEXYZTRIPLE;
typedef struct %anon223 { /* size 108 */
  DWORD bV4Size; /* bitsize 32, bitpos 0 */
  LONG bV4Width; /* bitsize 32, bitpos 32 */
  LONG bV4Height; /* bitsize 32, bitpos 64 */
  WORD bV4Planes; /* bitsize 16, bitpos 96 */
  WORD bV4BitCount; /* bitsize 16, bitpos 112 */
  DWORD bV4V4Compression; /* bitsize 32, bitpos 128 */
  DWORD bV4SizeImage; /* bitsize 32, bitpos 160 */
  LONG bV4XPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG bV4YPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD bV4ClrUsed; /* bitsize 32, bitpos 256 */
  DWORD bV4ClrImportant; /* bitsize 32, bitpos 288 */
  DWORD bV4RedMask; /* bitsize 32, bitpos 320 */
  DWORD bV4GreenMask; /* bitsize 32, bitpos 352 */
  DWORD bV4BlueMask; /* bitsize 32, bitpos 384 */
  DWORD bV4AlphaMask; /* bitsize 32, bitpos 416 */
  DWORD bV4CSType; /* bitsize 32, bitpos 448 */
  CIEXYZTRIPLE bV4Endpoints; /* bitsize 288, bitpos 480 */
  DWORD bV4GammaRed; /* bitsize 32, bitpos 768 */
  DWORD bV4GammaGreen; /* bitsize 32, bitpos 800 */
  DWORD bV4GammaBlue; /* bitsize 32, bitpos 832 */
} BITMAPV4HEADER;
typedef struct %anon223 *LPBITMAPV4HEADER;
typedef struct %anon223 *PBITMAPV4HEADER;
typedef struct %anon224 { /* size 124 */
  DWORD bV5Size; /* bitsize 32, bitpos 0 */
  LONG bV5Width; /* bitsize 32, bitpos 32 */
  LONG bV5Height; /* bitsize 32, bitpos 64 */
  WORD bV5Planes; /* bitsize 16, bitpos 96 */
  WORD bV5BitCount; /* bitsize 16, bitpos 112 */
  DWORD bV5Compression; /* bitsize 32, bitpos 128 */
  DWORD bV5SizeImage; /* bitsize 32, bitpos 160 */
  LONG bV5XPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG bV5YPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD bV5ClrUsed; /* bitsize 32, bitpos 256 */
  DWORD bV5ClrImportant; /* bitsize 32, bitpos 288 */
  DWORD bV5RedMask; /* bitsize 32, bitpos 320 */
  DWORD bV5GreenMask; /* bitsize 32, bitpos 352 */
  DWORD bV5BlueMask; /* bitsize 32, bitpos 384 */
  DWORD bV5AlphaMask; /* bitsize 32, bitpos 416 */
  DWORD bV5CSType; /* bitsize 32, bitpos 448 */
  CIEXYZTRIPLE bV5Endpoints; /* bitsize 288, bitpos 480 */
  DWORD bV5GammaRed; /* bitsize 32, bitpos 768 */
  DWORD bV5GammaGreen; /* bitsize 32, bitpos 800 */
  DWORD bV5GammaBlue; /* bitsize 32, bitpos 832 */
  DWORD bV5Intent; /* bitsize 32, bitpos 864 */
  DWORD bV5ProfileData; /* bitsize 32, bitpos 896 */
  DWORD bV5ProfileSize; /* bitsize 32, bitpos 928 */
  DWORD bV5Reserved; /* bitsize 32, bitpos 960 */
} BITMAPV5HEADER;
typedef struct %anon224 *LPBITMAPV5HEADER;
typedef struct %anon224 *PBITMAPV5HEADER;
struct tagFONTSIGNATURE { /* size 24 id 225 */
  DWORD fsUsb[4]:uint32; /* bitsize 128, bitpos 0 */
  DWORD fsCsb[2]:uint32; /* bitsize 64, bitpos 128 */
};
typedef struct tagFONTSIGNATURE /* id 225 */ FONTSIGNATURE;
typedef struct tagFONTSIGNATURE /* id 225 */ *LPFONTSIGNATURE;
typedef struct %anon226 { /* size 32 */
  UINT ciCharset; /* bitsize 32, bitpos 0 */
  UINT ciACP; /* bitsize 32, bitpos 32 */
  FONTSIGNATURE fs; /* bitsize 192, bitpos 64 */
} CHARSETINFO;
typedef struct %anon226 *LPCHARSETINFO;
struct tagCOLORADJUSTMENT { /* size 24 id 227 */
  WORD caSize; /* bitsize 16, bitpos 0 */
  WORD caFlags; /* bitsize 16, bitpos 16 */
  WORD caIlluminantIndex; /* bitsize 16, bitpos 32 */
  WORD caRedGamma; /* bitsize 16, bitpos 48 */
  WORD caGreenGamma; /* bitsize 16, bitpos 64 */
  WORD caBlueGamma; /* bitsize 16, bitpos 80 */
  WORD caReferenceBlack; /* bitsize 16, bitpos 96 */
  WORD caReferenceWhite; /* bitsize 16, bitpos 112 */
  SHORT caContrast; /* bitsize 16, bitpos 128 */
  SHORT caBrightness; /* bitsize 16, bitpos 144 */
  SHORT caColorfulness; /* bitsize 16, bitpos 160 */
  SHORT caRedGreenTint; /* bitsize 16, bitpos 176 */
};
typedef struct tagCOLORADJUSTMENT /* id 227 */ COLORADJUSTMENT;
typedef struct tagCOLORADJUSTMENT /* id 227 */ *LPCOLORADJUSTMENT;
struct _devicemodeA { /* size 156 id 228 */
  BYTE dmDeviceName[32]:uint32; /* bitsize 256, bitpos 0 */
  WORD dmSpecVersion; /* bitsize 16, bitpos 256 */
  WORD dmDriverVersion; /* bitsize 16, bitpos 272 */
  WORD dmSize; /* bitsize 16, bitpos 288 */
  WORD dmDriverExtra; /* bitsize 16, bitpos 304 */
  DWORD dmFields; /* bitsize 32, bitpos 320 */
  union %anon229 { /* size 16 */
    struct %anon230 { /* size 16 */
      short int dmOrientation; /* bitsize 16, bitpos 0 */
      short int dmPaperSize; /* bitsize 16, bitpos 16 */
      short int dmPaperLength; /* bitsize 16, bitpos 32 */
      short int dmPaperWidth; /* bitsize 16, bitpos 48 */
      short int dmScale; /* bitsize 16, bitpos 64 */
      short int dmCopies; /* bitsize 16, bitpos 80 */
      short int dmDefaultSource; /* bitsize 16, bitpos 96 */
      short int dmPrintQuality; /* bitsize 16, bitpos 112 */
    }; /* bitsize 128, bitpos 0 */
    POINTL dmPosition; /* bitsize 64, bitpos 0 */
    DWORD dmDisplayOrientation; /* bitsize 32, bitpos 0 */
    DWORD dmDisplayFixedOutput; /* bitsize 32, bitpos 0 */
  }; /* bitsize 128, bitpos 352 */
  short int dmColor; /* bitsize 16, bitpos 480 */
  short int dmDuplex; /* bitsize 16, bitpos 496 */
  short int dmYResolution; /* bitsize 16, bitpos 512 */
  short int dmTTOption; /* bitsize 16, bitpos 528 */
  short int dmCollate; /* bitsize 16, bitpos 544 */
  BYTE dmFormName[32]:uint32; /* bitsize 256, bitpos 560 */
  WORD dmLogPixels; /* bitsize 16, bitpos 816 */
  DWORD dmBitsPerPel; /* bitsize 32, bitpos 832 */
  DWORD dmPelsWidth; /* bitsize 32, bitpos 864 */
  DWORD dmPelsHeight; /* bitsize 32, bitpos 896 */
  union %anon231 { /* size 4 */
    DWORD dmDisplayFlags; /* bitsize 32, bitpos 0 */
    DWORD dmNup; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 928 */
  DWORD dmDisplayFrequency; /* bitsize 32, bitpos 960 */
  DWORD dmICMMethod; /* bitsize 32, bitpos 992 */
  DWORD dmICMIntent; /* bitsize 32, bitpos 1024 */
  DWORD dmMediaType; /* bitsize 32, bitpos 1056 */
  DWORD dmDitherType; /* bitsize 32, bitpos 1088 */
  DWORD dmReserved1; /* bitsize 32, bitpos 1120 */
  DWORD dmReserved2; /* bitsize 32, bitpos 1152 */
  DWORD dmPanningWidth; /* bitsize 32, bitpos 1184 */
  DWORD dmPanningHeight; /* bitsize 32, bitpos 1216 */
};
typedef struct _devicemodeA /* id 228 */ DEVMODEA;
typedef struct _devicemodeA /* id 228 */ *LPDEVMODEA;
typedef struct _devicemodeA /* id 228 */ *PDEVMODEA;
struct _devicemodeW { /* size 220 id 232 */
  WCHAR dmDeviceName[32]:uint32; /* bitsize 512, bitpos 0 */
  WORD dmSpecVersion; /* bitsize 16, bitpos 512 */
  WORD dmDriverVersion; /* bitsize 16, bitpos 528 */
  WORD dmSize; /* bitsize 16, bitpos 544 */
  WORD dmDriverExtra; /* bitsize 16, bitpos 560 */
  DWORD dmFields; /* bitsize 32, bitpos 576 */
  union %anon229 { /* size 16 */
    struct %anon230 { /* size 16 */
      short int dmOrientation; /* bitsize 16, bitpos 0 */
      short int dmPaperSize; /* bitsize 16, bitpos 16 */
      short int dmPaperLength; /* bitsize 16, bitpos 32 */
      short int dmPaperWidth; /* bitsize 16, bitpos 48 */
      short int dmScale; /* bitsize 16, bitpos 64 */
      short int dmCopies; /* bitsize 16, bitpos 80 */
      short int dmDefaultSource; /* bitsize 16, bitpos 96 */
      short int dmPrintQuality; /* bitsize 16, bitpos 112 */
    }; /* bitsize 128, bitpos 0 */
    POINTL dmPosition; /* bitsize 64, bitpos 0 */
    DWORD dmDisplayOrientation; /* bitsize 32, bitpos 0 */
    DWORD dmDisplayFixedOutput; /* bitsize 32, bitpos 0 */
  }; /* bitsize 128, bitpos 608 */
  short int dmColor; /* bitsize 16, bitpos 736 */
  short int dmDuplex; /* bitsize 16, bitpos 752 */
  short int dmYResolution; /* bitsize 16, bitpos 768 */
  short int dmTTOption; /* bitsize 16, bitpos 784 */
  short int dmCollate; /* bitsize 16, bitpos 800 */
  WCHAR dmFormName[32]:uint32; /* bitsize 512, bitpos 816 */
  WORD dmLogPixels; /* bitsize 16, bitpos 1328 */
  DWORD dmBitsPerPel; /* bitsize 32, bitpos 1344 */
  DWORD dmPelsWidth; /* bitsize 32, bitpos 1376 */
  DWORD dmPelsHeight; /* bitsize 32, bitpos 1408 */
  union %anon231 { /* size 4 */
    DWORD dmDisplayFlags; /* bitsize 32, bitpos 0 */
    DWORD dmNup; /* bitsize 32, bitpos 0 */
  }; /* bitsize 32, bitpos 1440 */
  DWORD dmDisplayFrequency; /* bitsize 32, bitpos 1472 */
  DWORD dmICMMethod; /* bitsize 32, bitpos 1504 */
  DWORD dmICMIntent; /* bitsize 32, bitpos 1536 */
  DWORD dmMediaType; /* bitsize 32, bitpos 1568 */
  DWORD dmDitherType; /* bitsize 32, bitpos 1600 */
  DWORD dmReserved1; /* bitsize 32, bitpos 1632 */
  DWORD dmReserved2; /* bitsize 32, bitpos 1664 */
  DWORD dmPanningWidth; /* bitsize 32, bitpos 1696 */
  DWORD dmPanningHeight; /* bitsize 32, bitpos 1728 */
};
typedef struct _devicemodeW /* id 232 */ DEVMODEW;
typedef struct _devicemodeW /* id 232 */ *LPDEVMODEW;
typedef struct _devicemodeW /* id 232 */ *PDEVMODEW;
struct tagDIBSECTION { /* size 84 id 233 */
  BITMAP dsBm; /* bitsize 192, bitpos 0 */
  BITMAPINFOHEADER dsBmih; /* bitsize 320, bitpos 192 */
  DWORD dsBitfields[3]:uint32; /* bitsize 96, bitpos 512 */
  HANDLE dshSection; /* bitsize 32, bitpos 608 */
  DWORD dsOffset; /* bitsize 32, bitpos 640 */
};
typedef struct tagDIBSECTION /* id 233 */ DIBSECTION;
struct _DOCINFOA { /* size 20 id 234 */
  int cbSize; /* bitsize 32, bitpos 0 */
  LPCSTR lpszDocName; /* bitsize 32, bitpos 32 */
  LPCSTR lpszOutput; /* bitsize 32, bitpos 64 */
  LPCSTR lpszDatatype; /* bitsize 32, bitpos 96 */
  DWORD fwType; /* bitsize 32, bitpos 128 */
};
typedef struct _DOCINFOA /* id 234 */ DOCINFOA;
typedef struct _DOCINFOA /* id 234 */ *LPDOCINFOA;
struct _DOCINFOW { /* size 20 id 235 */
  int cbSize; /* bitsize 32, bitpos 0 */
  LPCWSTR lpszDocName; /* bitsize 32, bitpos 32 */
  LPCWSTR lpszOutput; /* bitsize 32, bitpos 64 */
  LPCWSTR lpszDatatype; /* bitsize 32, bitpos 96 */
  DWORD fwType; /* bitsize 32, bitpos 128 */
};
typedef struct _DOCINFOW /* id 235 */ DOCINFOW;
typedef struct _DOCINFOW /* id 235 */ *LPDOCINFOW;
struct tagEMR { /* size 8 id 236 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
};
typedef struct tagEMR /* id 236 */ EMR;
typedef struct tagEMR /* id 236 */ *PEMR;
struct tagEMRANGLEARC { /* size 28 id 237 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlCenter; /* bitsize 64, bitpos 64 */
  DWORD nRadius; /* bitsize 32, bitpos 128 */
  FLOAT eStartAngle; /* bitsize 32, bitpos 160 */
  FLOAT eSweepAngle; /* bitsize 32, bitpos 192 */
};
typedef struct tagEMRANGLEARC /* id 237 */ EMRANGLEARC;
typedef struct tagEMRANGLEARC /* id 237 */ *PEMRANGLEARC;
struct tagEMRARC { /* size 40 id 238 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  POINTL ptlStart; /* bitsize 64, bitpos 192 */
  POINTL ptlEnd; /* bitsize 64, bitpos 256 */
};
typedef struct tagEMRARC /* id 238 */ EMRARC;
typedef struct tagEMRARC /* id 238 */ *PEMRARC;
typedef struct tagEMRARC /* id 238 */ EMRARCTO;
typedef struct tagEMRARC /* id 238 */ *PEMRARCTO;
typedef struct tagEMRARC /* id 238 */ EMRCHORD;
typedef struct tagEMRARC /* id 238 */ *PEMRCHORD;
typedef struct tagEMRARC /* id 238 */ EMRPIE;
typedef struct tagEMRARC /* id 238 */ *PEMRPIE;
struct _XFORM { /* size 24 id 239 */
  FLOAT eM11; /* bitsize 32, bitpos 0 */
  FLOAT eM12; /* bitsize 32, bitpos 32 */
  FLOAT eM21; /* bitsize 32, bitpos 64 */
  FLOAT eM22; /* bitsize 32, bitpos 96 */
  FLOAT eDx; /* bitsize 32, bitpos 128 */
  FLOAT eDy; /* bitsize 32, bitpos 160 */
};
typedef struct _XFORM /* id 239 */ XFORM;
typedef struct _XFORM /* id 239 */ *PXFORM;
typedef struct _XFORM /* id 239 */ *LPXFORM;
struct tagEMRBITBLT { /* size 96 id 240 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 704 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 736 */
};
typedef struct tagEMRBITBLT /* id 240 */ EMRBITBLT;
typedef struct tagEMRBITBLT /* id 240 */ *PEMRBITBLT;
struct tagLOGBRUSH { /* size 12 id 241 */
  UINT lbStyle; /* bitsize 32, bitpos 0 */
  COLORREF lbColor; /* bitsize 32, bitpos 32 */
  LONG lbHatch; /* bitsize 32, bitpos 64 */
};
typedef struct tagLOGBRUSH /* id 241 */ LOGBRUSH;
typedef struct tagLOGBRUSH /* id 241 */ *PLOGBRUSH;
typedef struct tagLOGBRUSH /* id 241 */ *LPLOGBRUSH;
typedef LOGBRUSH PATTERN;
typedef LOGBRUSH *PPATTERN;
typedef LOGBRUSH *LPPATTERN;
struct tagEMRCREATEBRUSHINDIRECT { /* size 24 id 242 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  LOGBRUSH lb; /* bitsize 96, bitpos 96 */
};
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 242 */ EMRCREATEBRUSHINDIRECT;
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 242 */ *PEMRCREATEBRUSHINDIRECT;
typedef LONG LCSCSTYPE;
typedef LONG LCSGAMUTMATCH;
struct tagLOGCOLORSPACEA { /* size 328 id 243 */
  DWORD lcsSignature; /* bitsize 32, bitpos 0 */
  DWORD lcsVersion; /* bitsize 32, bitpos 32 */
  DWORD lcsSize; /* bitsize 32, bitpos 64 */
  LCSCSTYPE lcsCSType; /* bitsize 32, bitpos 96 */
  LCSGAMUTMATCH lcsIntent; /* bitsize 32, bitpos 128 */
  CIEXYZTRIPLE lcsEndpoints; /* bitsize 288, bitpos 160 */
  DWORD lcsGammaRed; /* bitsize 32, bitpos 448 */
  DWORD lcsGammaGreen; /* bitsize 32, bitpos 480 */
  DWORD lcsGammaBlue; /* bitsize 32, bitpos 512 */
  CHAR lcsFilename[260]:uint32; /* bitsize 2080, bitpos 544 */
};
typedef struct tagLOGCOLORSPACEA /* id 243 */ LOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEA /* id 243 */ *LPLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW { /* size 588 id 244 */
  DWORD lcsSignature; /* bitsize 32, bitpos 0 */
  DWORD lcsVersion; /* bitsize 32, bitpos 32 */
  DWORD lcsSize; /* bitsize 32, bitpos 64 */
  LCSCSTYPE lcsCSType; /* bitsize 32, bitpos 96 */
  LCSGAMUTMATCH lcsIntent; /* bitsize 32, bitpos 128 */
  CIEXYZTRIPLE lcsEndpoints; /* bitsize 288, bitpos 160 */
  DWORD lcsGammaRed; /* bitsize 32, bitpos 448 */
  DWORD lcsGammaGreen; /* bitsize 32, bitpos 480 */
  DWORD lcsGammaBlue; /* bitsize 32, bitpos 512 */
  WCHAR lcsFilename[260]:uint32; /* bitsize 4160, bitpos 544 */
};
typedef struct tagLOGCOLORSPACEW /* id 244 */ LOGCOLORSPACEW;
typedef struct tagLOGCOLORSPACEW /* id 244 */ *LPLOGCOLORSPACEW;
struct tagEMRCREATECOLORSPACE { /* size 600 id 245 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
  LOGCOLORSPACEW lcs; /* bitsize 4704, bitpos 96 */
};
typedef struct tagEMRCREATECOLORSPACE /* id 245 */ EMRCREATECOLORSPACE;
typedef struct tagEMRCREATECOLORSPACE /* id 245 */ *PEMRCREATECOLORSPACE;
struct tagEMRCREATEDIBPATTERNBRUSHPT { /* size 32 id 246 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 246 */ EMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 246 */ *PEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH { /* size 32 id 247 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEMONOBRUSH /* id 247 */ EMRCREATEMONOBRUSH;
typedef struct tagEMRCREATEMONOBRUSH /* id 247 */ *PEMRCREATEMONOBRUSH;
struct tagPALETTEENTRY { /* size 4 id 248 */
  BYTE peRed; /* bitsize 8, bitpos 0 */
  BYTE peGreen; /* bitsize 8, bitpos 8 */
  BYTE peBlue; /* bitsize 8, bitpos 16 */
  BYTE peFlags; /* bitsize 8, bitpos 24 */
};
typedef struct tagPALETTEENTRY /* id 248 */ PALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 248 */ *LPPALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 248 */ *PPALETTEENTRY;
struct tagLOGPALETTE { /* size 8 id 249 */
  WORD palVersion; /* bitsize 16, bitpos 0 */
  WORD palNumEntries; /* bitsize 16, bitpos 16 */
  PALETTEENTRY palPalEntry[1]:uint32; /* bitsize 32, bitpos 32 */
};
typedef struct tagLOGPALETTE /* id 249 */ LOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *NPLOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *PLOGPALETTE;
typedef struct tagLOGPALETTE /* id 249 */ *LPLOGPALETTE;
struct tagEMRCREATEPALETTE { /* size 20 id 250 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  LOGPALETTE lgpl; /* bitsize 64, bitpos 96 */
};
typedef struct tagEMRCREATEPALETTE /* id 250 */ EMRCREATEPALETTE;
typedef struct tagEMRCREATEPALETTE /* id 250 */ *PEMRCREATEPALETTE;
struct tagLOGPEN { /* size 16 id 251 */
  UINT lopnStyle; /* bitsize 32, bitpos 0 */
  POINT lopnWidth; /* bitsize 64, bitpos 32 */
  COLORREF lopnColor; /* bitsize 32, bitpos 96 */
};
typedef struct tagLOGPEN /* id 251 */ LOGPEN;
typedef struct tagLOGPEN /* id 251 */ *PLOGPEN;
typedef struct tagLOGPEN /* id 251 */ *LPLOGPEN;
struct tagEMRCREATEPEN { /* size 28 id 252 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  LOGPEN lopn; /* bitsize 128, bitpos 96 */
};
typedef struct tagEMRCREATEPEN /* id 252 */ EMRCREATEPEN;
typedef struct tagEMRCREATEPEN /* id 252 */ *PEMRCREATEPEN;
struct tagEMRELLIPSE { /* size 24 id 253 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRELLIPSE /* id 253 */ EMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 253 */ *PEMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 253 */ EMRRECTANGLE;
typedef struct tagEMRELLIPSE /* id 253 */ *PEMRRECTANGLE;
struct tagEMREOF { /* size 20 id 254 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD nPalEntries; /* bitsize 32, bitpos 64 */
  DWORD offPalEntries; /* bitsize 32, bitpos 96 */
  DWORD nSizeLast; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMREOF /* id 254 */ EMREOF;
typedef struct tagEMREOF /* id 254 */ *PEMREOF;
struct tagEMREXCLUDECLIPRECT { /* size 24 id 255 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclClip; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ EMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ *PEMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ EMRINTERSECTCLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 255 */ *PEMRINTERSECTCLIPRECT;
struct tagPANOSE { /* size 10 id 256 */
  BYTE bFamilyType; /* bitsize 8, bitpos 0 */
  BYTE bSerifStyle; /* bitsize 8, bitpos 8 */
  BYTE bWeight; /* bitsize 8, bitpos 16 */
  BYTE bProportion; /* bitsize 8, bitpos 24 */
  BYTE bContrast; /* bitsize 8, bitpos 32 */
  BYTE bStrokeVariation; /* bitsize 8, bitpos 40 */
  BYTE bArmStyle; /* bitsize 8, bitpos 48 */
  BYTE bLetterform; /* bitsize 8, bitpos 56 */
  BYTE bMidline; /* bitsize 8, bitpos 64 */
  BYTE bXHeight; /* bitsize 8, bitpos 72 */
};
typedef struct tagPANOSE /* id 256 */ PANOSE;
struct tagLOGFONTA { /* size 60 id 257 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  CHAR lfFaceName[32]:uint32; /* bitsize 256, bitpos 224 */
};
typedef struct tagLOGFONTA /* id 257 */ LOGFONTA;
typedef struct tagLOGFONTA /* id 257 */ *PLOGFONTA;
typedef struct tagLOGFONTA /* id 257 */ *LPLOGFONTA;
struct tagLOGFONTW { /* size 92 id 258 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  WCHAR lfFaceName[32]:uint32; /* bitsize 512, bitpos 224 */
};
typedef struct tagLOGFONTW /* id 258 */ LOGFONTW;
typedef struct tagLOGFONTW /* id 258 */ *PLOGFONTW;
typedef struct tagLOGFONTW /* id 258 */ *LPLOGFONTW;
struct tagEXTLOGFONTA { /* size 192 id 259 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
  DWORD elfVersion; /* bitsize 32, bitpos 1248 */
  DWORD elfStyleSize; /* bitsize 32, bitpos 1280 */
  DWORD elfMatch; /* bitsize 32, bitpos 1312 */
  DWORD elfReserved; /* bitsize 32, bitpos 1344 */
  BYTE elfVendorId[4]:uint32; /* bitsize 32, bitpos 1376 */
  DWORD elfCulture; /* bitsize 32, bitpos 1408 */
  PANOSE elfPanose; /* bitsize 80, bitpos 1440 */
};
typedef struct tagEXTLOGFONTA /* id 259 */ EXTLOGFONTA;
typedef struct tagEXTLOGFONTA /* id 259 */ *PEXTLOGFONTA;
typedef struct tagEXTLOGFONTA /* id 259 */ *LPEXTLOGFONTA;
struct tagEXTLOGFONTW { /* size 320 id 260 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
  DWORD elfVersion; /* bitsize 32, bitpos 2272 */
  DWORD elfStyleSize; /* bitsize 32, bitpos 2304 */
  DWORD elfMatch; /* bitsize 32, bitpos 2336 */
  DWORD elfReserved; /* bitsize 32, bitpos 2368 */
  BYTE elfVendorId[4]:uint32; /* bitsize 32, bitpos 2400 */
  DWORD elfCulture; /* bitsize 32, bitpos 2432 */
  PANOSE elfPanose; /* bitsize 80, bitpos 2464 */
};
typedef struct tagEXTLOGFONTW /* id 260 */ EXTLOGFONTW;
typedef struct tagEXTLOGFONTW /* id 260 */ *PEXTLOGFONTW;
typedef struct tagEXTLOGFONTW /* id 260 */ *LPEXTLOGFONTW;
struct tagEMREXTCREATEFONTINDIRECTW { /* size 332 id 261 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihFont; /* bitsize 32, bitpos 64 */
  EXTLOGFONTW elfw; /* bitsize 2560, bitpos 96 */
};
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 261 */ EMREXTCREATEFONTINDIRECTW;
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 261 */ *PEMREXTCREATEFONTINDIRECTW;
struct tagEXTLOGPEN { /* size 28 id 262 */
  UINT elpPenStyle; /* bitsize 32, bitpos 0 */
  UINT elpWidth; /* bitsize 32, bitpos 32 */
  UINT elpBrushStyle; /* bitsize 32, bitpos 64 */
  COLORREF elpColor; /* bitsize 32, bitpos 96 */
  LONG elpHatch; /* bitsize 32, bitpos 128 */
  DWORD elpNumEntries; /* bitsize 32, bitpos 160 */
  DWORD elpStyleEntry[1]:uint32; /* bitsize 32, bitpos 192 */
};
typedef struct tagEXTLOGPEN /* id 262 */ EXTLOGPEN;
typedef struct tagEXTLOGPEN /* id 262 */ *PEXTLOGPEN;
typedef struct tagEXTLOGPEN /* id 262 */ *LPEXTLOGPEN;
struct tagEMREXTCREATEPEN { /* size 56 id 263 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  DWORD offBmi; /* bitsize 32, bitpos 96 */
  DWORD cbBmi; /* bitsize 32, bitpos 128 */
  DWORD offBits; /* bitsize 32, bitpos 160 */
  DWORD cbBits; /* bitsize 32, bitpos 192 */
  EXTLOGPEN elp; /* bitsize 224, bitpos 224 */
};
typedef struct tagEMREXTCREATEPEN /* id 263 */ EMREXTCREATEPEN;
typedef struct tagEMREXTCREATEPEN /* id 263 */ *PEMREXTCREATEPEN;
struct tagEMREXTFLOODFILL { /* size 24 id 264 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlStart; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
  DWORD iMode; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMREXTFLOODFILL /* id 264 */ EMREXTFLOODFILL;
typedef struct tagEMREXTFLOODFILL /* id 264 */ *PEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN { /* size 20 id 265 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbRgnData; /* bitsize 32, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 96 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 128 */
};
typedef struct tagEMREXTSELECTCLIPRGN /* id 265 */ EMREXTSELECTCLIPRGN;
typedef struct tagEMREXTSELECTCLIPRGN /* id 265 */ *PEMREXTSELECTCLIPRGN;
struct tagEMRTEXT { /* size 40 id 266 */
  POINTL ptlReference; /* bitsize 64, bitpos 0 */
  DWORD nChars; /* bitsize 32, bitpos 64 */
  DWORD offString; /* bitsize 32, bitpos 96 */
  DWORD fOptions; /* bitsize 32, bitpos 128 */
  RECTL rcl; /* bitsize 128, bitpos 160 */
  DWORD offDx; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRTEXT /* id 266 */ EMRTEXT;
typedef struct tagEMRTEXT /* id 266 */ *PEMRTEXT;
struct tagEMREXTTEXTOUTA { /* size 76 id 267 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  EMRTEXT emrtext; /* bitsize 320, bitpos 288 */
};
typedef struct tagEMREXTTEXTOUTA /* id 267 */ EMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ *PEMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ EMREXTTEXTOUTW;
typedef struct tagEMREXTTEXTOUTA /* id 267 */ *PEMREXTTEXTOUTW;
struct tagEMRFILLPATH { /* size 24 id 268 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRFILLPATH /* id 268 */ EMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ EMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 268 */ EMRSTROKEPATH;
typedef struct tagEMRFILLPATH /* id 268 */ *PEMRSTROKEPATH;
struct tagEMRFILLRGN { /* size 36 id 269 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRFILLRGN /* id 269 */ EMRFILLRGN;
typedef struct tagEMRFILLRGN /* id 269 */ *PEMRFILLRGN;
struct tagEMRFORMAT { /* size 16 id 270 */
  DWORD dSignature; /* bitsize 32, bitpos 0 */
  DWORD nVersion; /* bitsize 32, bitpos 32 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  DWORD offData; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRFORMAT /* id 270 */ EMRFORMAT;
struct tagEMRFRAMERGN { /* size 44 id 271 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  SIZEL szlStroke; /* bitsize 64, bitpos 256 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 320 */
};
typedef struct tagEMRFRAMERGN /* id 271 */ EMRFRAMERGN;
typedef struct tagEMRFRAMERGN /* id 271 */ *PEMRFRAMERGN;
struct tagEMRGDICOMMENT { /* size 16 id 272 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  BYTE Data[1]:uint32; /* bitsize 8, bitpos 96 */
};
typedef struct tagEMRGDICOMMENT /* id 272 */ EMRGDICOMMENT;
typedef struct tagEMRGDICOMMENT /* id 272 */ *PEMRGDICOMMENT;
struct tagEMRINVERTRGN { /* size 32 id 273 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  BYTE RgnData[1]:uint32; /* bitsize 8, bitpos 224 */
};
typedef struct tagEMRINVERTRGN /* id 273 */ EMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ *PEMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ EMRPAINTRGN;
typedef struct tagEMRINVERTRGN /* id 273 */ *PEMRPAINTRGN;
struct tagEMRLINETO { /* size 16 id 274 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptl; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRLINETO /* id 274 */ EMRLINETO;
typedef struct tagEMRLINETO /* id 274 */ *PEMRLINETO;
typedef struct tagEMRLINETO /* id 274 */ EMRMOVETOEX;
typedef struct tagEMRLINETO /* id 274 */ *PEMRMOVETOEX;
struct tagEMRMASKBLT { /* size 128 id 275 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG xMask; /* bitsize 32, bitpos 800 */
  LONG yMask; /* bitsize 32, bitpos 832 */
  DWORD iUsageMask; /* bitsize 32, bitpos 864 */
  DWORD offBmiMask; /* bitsize 32, bitpos 896 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 928 */
  DWORD offBitsMask; /* bitsize 32, bitpos 960 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 992 */
};
typedef struct tagEMRMASKBLT /* id 275 */ EMRMASKBLT;
typedef struct tagEMRMASKBLT /* id 275 */ *PEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM { /* size 36 id 276 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 256 */
};
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 276 */ EMRMODIFYWORLDTRANSFORM;
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 276 */ *PEMRMODIFYWORLDTRANSFORM;
struct tagEMROFFSETCLIPRGN { /* size 16 id 277 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOffset; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMROFFSETCLIPRGN /* id 277 */ EMROFFSETCLIPRGN;
typedef struct tagEMROFFSETCLIPRGN /* id 277 */ *PEMROFFSETCLIPRGN;
struct tagEMRPLGBLT { /* size 140 id 278 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  POINTL aptlDest[3]:uint32; /* bitsize 192, bitpos 192 */
  LONG xSrc; /* bitsize 32, bitpos 384 */
  LONG ySrc; /* bitsize 32, bitpos 416 */
  LONG cxSrc; /* bitsize 32, bitpos 448 */
  LONG cySrc; /* bitsize 32, bitpos 480 */
  XFORM xformSrc; /* bitsize 192, bitpos 512 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 704 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 736 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 768 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 800 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 832 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 864 */
  LONG xMask; /* bitsize 32, bitpos 896 */
  LONG yMask; /* bitsize 32, bitpos 928 */
  DWORD iUsageMask; /* bitsize 32, bitpos 960 */
  DWORD offBmiMask; /* bitsize 32, bitpos 992 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 1024 */
  DWORD offBitsMask; /* bitsize 32, bitpos 1056 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 1088 */
};
typedef struct tagEMRPLGBLT /* id 278 */ EMRPLGBLT;
typedef struct tagEMRPLGBLT /* id 278 */ *PEMRPLGBLT;
struct tagEMRPOLYDRAW { /* size 40 id 279 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 224 */
  BYTE abTypes[1]:uint32; /* bitsize 8, bitpos 288 */
};
typedef struct tagEMRPOLYDRAW /* id 279 */ EMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW /* id 279 */ *PEMRPOLYDRAW;
struct tagEMRPOLYDRAW16 { /* size 36 id 280 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTS apts[1]:uint32; /* bitsize 32, bitpos 224 */
  BYTE abTypes[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRPOLYDRAW16 /* id 280 */ EMRPOLYDRAW16;
typedef struct tagEMRPOLYDRAW16 /* id 280 */ *PEMRPOLYDRAW16;
struct tagEMRPOLYLINE { /* size 36 id 281 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 281 */ EMRPOLYLINETO;
typedef struct tagEMRPOLYLINE /* id 281 */ *PEMRPOLYLINETO;
struct tagEMRPOLYLINE16 { /* size 36 id 282 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTL apts[1]:uint32; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ EMRPOLYLINETO16;
typedef struct tagEMRPOLYLINE16 /* id 282 */ *PEMRPOLYLINETO16;
struct tagEMRPOLYPOLYLINE { /* size 44 id 283 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cptl; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]:uint32; /* bitsize 32, bitpos 256 */
  POINTL aptl[1]:uint32; /* bitsize 64, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ EMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ *PEMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ EMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE /* id 283 */ *PEMRPOLYPOLYGON;
struct tagEMRPOLYPOLYLINE16 { /* size 40 id 284 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cpts; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]:uint32; /* bitsize 32, bitpos 256 */
  POINTS apts[1]:uint32; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ EMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ *PEMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ EMRPOLYPOLYGON16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 284 */ *PEMRPOLYPOLYGON16;
struct tagEMRPOLYTEXTOUTA { /* size 80 id 285 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  LONG cStrings; /* bitsize 32, bitpos 288 */
  EMRTEXT aemrtext[1]:uint32; /* bitsize 320, bitpos 320 */
};
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ EMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ *PEMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ EMRPOLYTEXTOUTW;
typedef struct tagEMRPOLYTEXTOUTA /* id 285 */ *PEMRPOLYTEXTOUTW;
struct tagEMRRESIZEPALETTE { /* size 16 id 286 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD cEntries; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRRESIZEPALETTE /* id 286 */ EMRRESIZEPALETTE;
typedef struct tagEMRRESIZEPALETTE /* id 286 */ *PEMRRESIZEPALETTE;
struct tagEMRRESTOREDC { /* size 12 id 287 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG iRelative; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRRESTOREDC /* id 287 */ EMRRESTOREDC;
typedef struct tagEMRRESTOREDC /* id 287 */ *PEMRRESTOREDC;
struct tagEMRROUNDRECT { /* size 32 id 288 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  SIZEL szlCorner; /* bitsize 64, bitpos 192 */
};
typedef struct tagEMRROUNDRECT /* id 288 */ EMRROUNDRECT;
typedef struct tagEMRROUNDRECT /* id 288 */ *PEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX { /* size 24 id 289 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG xNum; /* bitsize 32, bitpos 64 */
  LONG xDenom; /* bitsize 32, bitpos 96 */
  LONG yNum; /* bitsize 32, bitpos 128 */
  LONG yDenom; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ EMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ *PEMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ EMRSCALEWINDOWEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 289 */ *PEMRSCALEWINDOWEXTEX;
struct tagEMRSELECTCOLORSPACE { /* size 12 id 290 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ EMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ *PEMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ EMRDELETECOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 290 */ *PEMRDELETECOLORSPACE;
struct tagEMRSELECTOBJECT { /* size 12 id 291 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihObject; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTOBJECT /* id 291 */ EMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ *PEMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ EMRDELETEOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 291 */ *PEMRDELETEOBJECT;
struct tagEMRSELECTPALETTE { /* size 12 id 292 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTPALETTE /* id 292 */ EMRSELECTPALETTE;
typedef struct tagEMRSELECTPALETTE /* id 292 */ *PEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION { /* size 12 id 293 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iArcDirection; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETARCDIRECTION /* id 293 */ EMRSETARCDIRECTION;
typedef struct tagEMRSETARCDIRECTION /* id 293 */ *PEMRSETARCDIRECTION;
struct tagEMRSETTEXTCOLOR { /* size 12 id 294 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORREF crColor; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ EMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ *PEMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ EMRSETTEXTCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 294 */ *PEMRSETTEXTCOLOR;
struct tagEMRSETCOLORADJUSTMENT { /* size 32 id 295 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORADJUSTMENT ColorAdjustment; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETCOLORADJUSTMENT /* id 295 */ EMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETCOLORADJUSTMENT /* id 295 */ *PEMRSETCOLORADJUSTMENT;
struct tagEMRSETDIBITSTODEVICE { /* size 76 id 296 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD iStartScan; /* bitsize 32, bitpos 544 */
  DWORD cScans; /* bitsize 32, bitpos 576 */
};
typedef struct tagEMRSETDIBITSTODEVICE /* id 296 */ EMRSETDIBITSTODEVICE;
typedef struct tagEMRSETDIBITSTODEVICE /* id 296 */ *PEMRSETDIBITSTODEVICE;
struct tagEMRSETMAPPERFLAGS { /* size 12 id 297 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMAPPERFLAGS /* id 297 */ EMRSETMAPPERFLAGS;
typedef struct tagEMRSETMAPPERFLAGS /* id 297 */ *PEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT { /* size 12 id 298 */
  EMR emr; /* bitsize 64, bitpos 0 */
  FLOAT eMiterLimit; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMITERLIMIT /* id 298 */ EMRSETMITERLIMIT;
typedef struct tagEMRSETMITERLIMIT /* id 298 */ *PEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES { /* size 24 id 299 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD iStart; /* bitsize 32, bitpos 96 */
  DWORD cEntries; /* bitsize 32, bitpos 128 */
  PALETTEENTRY aPalEntries[1]:uint32; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSETPALETTEENTRIES /* id 299 */ EMRSETPALETTEENTRIES;
typedef struct tagEMRSETPALETTEENTRIES /* id 299 */ *PEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV { /* size 20 id 300 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlPixel; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMRSETPIXELV /* id 300 */ EMRSETPIXELV;
typedef struct tagEMRSETPIXELV /* id 300 */ *PEMRSETPIXELV;
struct tagEMRSETVIEWPORTEXTEX { /* size 16 id 301 */
  EMR emr; /* bitsize 64, bitpos 0 */
  SIZEL szlExtent; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ EMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ *PEMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ EMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 301 */ *PEMRSETWINDOWEXTEX;
struct tagEMRSETVIEWPORTORGEX { /* size 16 id 302 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOrigin; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ EMRSETBRUSHORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 302 */ *PEMRSETBRUSHORGEX;
struct tagEMRSETWORLDTRANSFORM { /* size 32 id 303 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETWORLDTRANSFORM /* id 303 */ EMRSETWORLDTRANSFORM;
typedef struct tagEMRSETWORLDTRANSFORM /* id 303 */ *PEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT { /* size 108 id 304 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG cxSrc; /* bitsize 32, bitpos 800 */
  LONG cySrc; /* bitsize 32, bitpos 832 */
};
typedef struct tagEMRSTRETCHBLT /* id 304 */ EMRSTRETCHBLT;
typedef struct tagEMRSTRETCHBLT /* id 304 */ *PEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS { /* size 80 id 305 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD dwRop; /* bitsize 32, bitpos 544 */
  LONG cxDest; /* bitsize 32, bitpos 576 */
  LONG cyDest; /* bitsize 32, bitpos 608 */
};
typedef struct tagEMRSTRETCHDIBITS /* id 305 */ EMRSTRETCHDIBITS;
typedef struct tagEMRSTRETCHDIBITS /* id 305 */ *PEMRSTRETCHDIBITS;
struct tagABORTPATH { /* size 8 id 306 */
  EMR emr; /* bitsize 64, bitpos 0 */
};
typedef struct tagABORTPATH /* id 306 */ EMRABORTPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRABORTPATH;
typedef struct tagABORTPATH /* id 306 */ EMRBEGINPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRBEGINPATH;
typedef struct tagABORTPATH /* id 306 */ EMRENDPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRENDPATH;
typedef struct tagABORTPATH /* id 306 */ EMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 306 */ *PEMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 306 */ EMRFLATTENPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRFLATTENPATH;
typedef struct tagABORTPATH /* id 306 */ EMRWIDENPATH;
typedef struct tagABORTPATH /* id 306 */ *PEMRWIDENPATH;
typedef struct tagABORTPATH /* id 306 */ EMRSETMETARGN;
typedef struct tagABORTPATH /* id 306 */ *PEMRSETMETARGN;
typedef struct tagABORTPATH /* id 306 */ EMRSAVEDC;
typedef struct tagABORTPATH /* id 306 */ *PEMRSAVEDC;
typedef struct tagABORTPATH /* id 306 */ EMRREALIZEPALETTE;
typedef struct tagABORTPATH /* id 306 */ *PEMRREALIZEPALETTE;
struct tagEMRSELECTCLIPPATH { /* size 12 id 307 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iMode; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ EMRENABLEICM;
typedef struct tagEMRSELECTCLIPPATH /* id 307 */ *PEMRENABLEICM;
struct tagMETAHEADER { /* size 18 id 308 */
  WORD mtType; /* bitsize 16, bitpos 0 */
  WORD mtHeaderSize; /* bitsize 16, bitpos 16 */
  WORD mtVersion; /* bitsize 16, bitpos 32 */
  DWORD mtSize; /* bitsize 32, bitpos 48 */
  WORD mtNoObjects; /* bitsize 16, bitpos 80 */
  DWORD mtMaxRecord; /* bitsize 32, bitpos 96 */
  WORD mtNoParameters; /* bitsize 16, bitpos 128 */
};
typedef struct tagMETAHEADER /* id 308 */ METAHEADER;
typedef struct tagMETAHEADER /* id 308 */ *PMETAHEADER;
typedef struct tagMETAHEADER /* id 308 */ *LPMETAHEADER;
struct tagENHMETAHEADER { /* size 100 id 309 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  RECTL rclFrame; /* bitsize 128, bitpos 192 */
  DWORD dSignature; /* bitsize 32, bitpos 320 */
  DWORD nVersion; /* bitsize 32, bitpos 352 */
  DWORD nBytes; /* bitsize 32, bitpos 384 */
  DWORD nRecords; /* bitsize 32, bitpos 416 */
  WORD nHandles; /* bitsize 16, bitpos 448 */
  WORD sReserved; /* bitsize 16, bitpos 464 */
  DWORD nDescription; /* bitsize 32, bitpos 480 */
  DWORD offDescription; /* bitsize 32, bitpos 512 */
  DWORD nPalEntries; /* bitsize 32, bitpos 544 */
  SIZEL szlDevice; /* bitsize 64, bitpos 576 */
  SIZEL szlMillimeters; /* bitsize 64, bitpos 640 */
  DWORD cbPixelFormat; /* bitsize 32, bitpos 704 */
  DWORD offPixelFormat; /* bitsize 32, bitpos 736 */
  DWORD bOpenGL; /* bitsize 32, bitpos 768 */
};
typedef struct tagENHMETAHEADER /* id 309 */ ENHMETAHEADER;
typedef struct tagENHMETAHEADER /* id 309 */ *LPENHMETAHEADER;
struct tagMETARECORD { /* size 8 id 310 */
  DWORD rdSize; /* bitsize 32, bitpos 0 */
  WORD rdFunction; /* bitsize 16, bitpos 32 */
  WORD rdParm[1]:uint32; /* bitsize 16, bitpos 48 */
};
typedef struct tagMETARECORD /* id 310 */ METARECORD;
typedef struct tagMETARECORD /* id 310 */ *PMETARECORD;
typedef struct tagMETARECORD /* id 310 */ *LPMETARECORD;
struct tagENHMETARECORD { /* size 12 id 311 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  DWORD dParm[1]:uint32; /* bitsize 32, bitpos 64 */
};
typedef struct tagENHMETARECORD /* id 311 */ ENHMETARECORD;
typedef struct tagENHMETARECORD /* id 311 */ *LPENHMETARECORD;
struct tagHANDLETABLE { /* size 4 id 312 */
  HGDIOBJ objectHandle[1]:uint32; /* bitsize 32, bitpos 0 */
};
typedef struct tagHANDLETABLE /* id 312 */ HANDLETABLE;
typedef struct tagHANDLETABLE /* id 312 */ *LPHANDLETABLE;
struct tagTEXTMETRICA { /* size 56 id 313 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BYTE tmFirstChar; /* bitsize 8, bitpos 352 */
  BYTE tmLastChar; /* bitsize 8, bitpos 360 */
  BYTE tmDefaultChar; /* bitsize 8, bitpos 368 */
  BYTE tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
};
typedef struct tagTEXTMETRICA /* id 313 */ TEXTMETRICA;
typedef struct tagTEXTMETRICA /* id 313 */ *PTEXTMETRICA;
typedef struct tagTEXTMETRICA /* id 313 */ *LPTEXTMETRICA;
struct tagTEXTMETRICW { /* size 60 id 314 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  WCHAR tmFirstChar; /* bitsize 16, bitpos 352 */
  WCHAR tmLastChar; /* bitsize 16, bitpos 368 */
  WCHAR tmDefaultChar; /* bitsize 16, bitpos 384 */
  WCHAR tmBreakChar; /* bitsize 16, bitpos 400 */
  BYTE tmItalic; /* bitsize 8, bitpos 416 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 424 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 432 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 440 */
  BYTE tmCharSet; /* bitsize 8, bitpos 448 */
};
typedef struct tagTEXTMETRICW /* id 314 */ TEXTMETRICW;
typedef struct tagTEXTMETRICW /* id 314 */ *PTEXTMETRICW;
typedef struct tagTEXTMETRICW /* id 314 */ *LPTEXTMETRICW;
struct _RGNDATAHEADER { /* size 32 id 315 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD iType; /* bitsize 32, bitpos 32 */
  DWORD nCount; /* bitsize 32, bitpos 64 */
  DWORD nRgnSize; /* bitsize 32, bitpos 96 */
  RECT rcBound; /* bitsize 128, bitpos 128 */
};
typedef struct _RGNDATAHEADER /* id 315 */ RGNDATAHEADER;
struct _RGNDATA { /* size 36 id 316 */
  RGNDATAHEADER rdh; /* bitsize 256, bitpos 0 */
  char Buffer[1]:uint32; /* bitsize 8, bitpos 256 */
};
typedef struct _RGNDATA /* id 316 */ RGNDATA;
typedef struct _RGNDATA /* id 316 */ *PRGNDATA;
typedef struct _RGNDATA /* id 316 */ *LPRGNDATA;
struct tagGCP_RESULTSA { /* size 36 id 317 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  LPSTR lpOutString; /* bitsize 32, bitpos 32 */
  UINT *lpOrder; /* bitsize 32, bitpos 64 */
  INT *lpDx; /* bitsize 32, bitpos 96 */
  INT *lpCaretPos; /* bitsize 32, bitpos 128 */
  LPSTR lpClass; /* bitsize 32, bitpos 160 */
  LPWSTR lpGlyphs; /* bitsize 32, bitpos 192 */
  UINT nGlyphs; /* bitsize 32, bitpos 224 */
  UINT nMaxFit; /* bitsize 32, bitpos 256 */
};
typedef struct tagGCP_RESULTSA /* id 317 */ GCP_RESULTSA;
typedef struct tagGCP_RESULTSA /* id 317 */ *LPGCP_RESULTSA;
struct tagGCP_RESULTSW { /* size 36 id 318 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  LPWSTR lpOutString; /* bitsize 32, bitpos 32 */
  UINT *lpOrder; /* bitsize 32, bitpos 64 */
  INT *lpDx; /* bitsize 32, bitpos 96 */
  INT *lpCaretPos; /* bitsize 32, bitpos 128 */
  LPWSTR lpClass; /* bitsize 32, bitpos 160 */
  LPWSTR lpGlyphs; /* bitsize 32, bitpos 192 */
  UINT nGlyphs; /* bitsize 32, bitpos 224 */
  UINT nMaxFit; /* bitsize 32, bitpos 256 */
};
typedef struct tagGCP_RESULTSW /* id 318 */ GCP_RESULTSW;
typedef struct tagGCP_RESULTSW /* id 318 */ *LPGCP_RESULTSW;
struct _GLYPHMETRICS { /* size 20 id 319 */
  UINT gmBlackBoxX; /* bitsize 32, bitpos 0 */
  UINT gmBlackBoxY; /* bitsize 32, bitpos 32 */
  POINT gmptGlyphOrigin; /* bitsize 64, bitpos 64 */
  short int gmCellIncX; /* bitsize 16, bitpos 128 */
  short int gmCellIncY; /* bitsize 16, bitpos 144 */
};
typedef struct _GLYPHMETRICS /* id 319 */ GLYPHMETRICS;
typedef struct _GLYPHMETRICS /* id 319 */ *LPGLYPHMETRICS;
struct tagKERNINGPAIR { /* size 8 id 320 */
  WORD wFirst; /* bitsize 16, bitpos 0 */
  WORD wSecond; /* bitsize 16, bitpos 16 */
  int iKernAmount; /* bitsize 32, bitpos 32 */
};
typedef struct tagKERNINGPAIR /* id 320 */ KERNINGPAIR;
typedef struct tagKERNINGPAIR /* id 320 */ *LPKERNINGPAIR;
struct _FIXED { /* size 4 id 321 */
  WORD fract; /* bitsize 16, bitpos 0 */
  short int value; /* bitsize 16, bitpos 16 */
};
typedef struct _FIXED /* id 321 */ FIXED;
struct _MAT2 { /* size 16 id 322 */
  FIXED eM11; /* bitsize 32, bitpos 0 */
  FIXED eM12; /* bitsize 32, bitpos 32 */
  FIXED eM21; /* bitsize 32, bitpos 64 */
  FIXED eM22; /* bitsize 32, bitpos 96 */
};
typedef struct _MAT2 /* id 322 */ MAT2;
typedef struct _MAT2 /* id 322 */ *LPMAT2;
struct _OUTLINETEXTMETRICA { /* size 212 id 323 */
  UINT otmSize; /* bitsize 32, bitpos 0 */
  TEXTMETRICA otmTextMetrics; /* bitsize 448, bitpos 32 */
  BYTE otmFiller; /* bitsize 8, bitpos 480 */
  PANOSE otmPanoseNumber; /* bitsize 80, bitpos 488 */
  UINT otmfsSelection; /* bitsize 32, bitpos 576 */
  UINT otmfsType; /* bitsize 32, bitpos 608 */
  int otmsCharSlopeRise; /* bitsize 32, bitpos 640 */
  int otmsCharSlopeRun; /* bitsize 32, bitpos 672 */
  int otmItalicAngle; /* bitsize 32, bitpos 704 */
  UINT otmEMSquare; /* bitsize 32, bitpos 736 */
  int otmAscent; /* bitsize 32, bitpos 768 */
  int otmDescent; /* bitsize 32, bitpos 800 */
  UINT otmLineGap; /* bitsize 32, bitpos 832 */
  UINT otmsCapEmHeight; /* bitsize 32, bitpos 864 */
  UINT otmsXHeight; /* bitsize 32, bitpos 896 */
  RECT otmrcFontBox; /* bitsize 128, bitpos 928 */
  int otmMacAscent; /* bitsize 32, bitpos 1056 */
  int otmMacDescent; /* bitsize 32, bitpos 1088 */
  UINT otmMacLineGap; /* bitsize 32, bitpos 1120 */
  UINT otmusMinimumPPEM; /* bitsize 32, bitpos 1152 */
  POINT otmptSubscriptSize; /* bitsize 64, bitpos 1184 */
  POINT otmptSubscriptOffset; /* bitsize 64, bitpos 1248 */
  POINT otmptSuperscriptSize; /* bitsize 64, bitpos 1312 */
  POINT otmptSuperscriptOffset; /* bitsize 64, bitpos 1376 */
  UINT otmsStrikeoutSize; /* bitsize 32, bitpos 1440 */
  int otmsStrikeoutPosition; /* bitsize 32, bitpos 1472 */
  int otmsUnderscoreSize; /* bitsize 32, bitpos 1504 */
  int otmsUnderscorePosition; /* bitsize 32, bitpos 1536 */
  PSTR otmpFamilyName; /* bitsize 32, bitpos 1568 */
  PSTR otmpFaceName; /* bitsize 32, bitpos 1600 */
  PSTR otmpStyleName; /* bitsize 32, bitpos 1632 */
  PSTR otmpFullName; /* bitsize 32, bitpos 1664 */
};
typedef struct _OUTLINETEXTMETRICA /* id 323 */ OUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICA /* id 323 */ *POUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICA /* id 323 */ *LPOUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW { /* size 216 id 324 */
  UINT otmSize; /* bitsize 32, bitpos 0 */
  TEXTMETRICW otmTextMetrics; /* bitsize 480, bitpos 32 */
  BYTE otmFiller; /* bitsize 8, bitpos 512 */
  PANOSE otmPanoseNumber; /* bitsize 80, bitpos 520 */
  UINT otmfsSelection; /* bitsize 32, bitpos 608 */
  UINT otmfsType; /* bitsize 32, bitpos 640 */
  int otmsCharSlopeRise; /* bitsize 32, bitpos 672 */
  int otmsCharSlopeRun; /* bitsize 32, bitpos 704 */
  int otmItalicAngle; /* bitsize 32, bitpos 736 */
  UINT otmEMSquare; /* bitsize 32, bitpos 768 */
  int otmAscent; /* bitsize 32, bitpos 800 */
  int otmDescent; /* bitsize 32, bitpos 832 */
  UINT otmLineGap; /* bitsize 32, bitpos 864 */
  UINT otmsCapEmHeight; /* bitsize 32, bitpos 896 */
  UINT otmsXHeight; /* bitsize 32, bitpos 928 */
  RECT otmrcFontBox; /* bitsize 128, bitpos 960 */
  int otmMacAscent; /* bitsize 32, bitpos 1088 */
  int otmMacDescent; /* bitsize 32, bitpos 1120 */
  UINT otmMacLineGap; /* bitsize 32, bitpos 1152 */
  UINT otmusMinimumPPEM; /* bitsize 32, bitpos 1184 */
  POINT otmptSubscriptSize; /* bitsize 64, bitpos 1216 */
  POINT otmptSubscriptOffset; /* bitsize 64, bitpos 1280 */
  POINT otmptSuperscriptSize; /* bitsize 64, bitpos 1344 */
  POINT otmptSuperscriptOffset; /* bitsize 64, bitpos 1408 */
  UINT otmsStrikeoutSize; /* bitsize 32, bitpos 1472 */
  int otmsStrikeoutPosition; /* bitsize 32, bitpos 1504 */
  int otmsUnderscoreSize; /* bitsize 32, bitpos 1536 */
  int otmsUnderscorePosition; /* bitsize 32, bitpos 1568 */
  PSTR otmpFamilyName; /* bitsize 32, bitpos 1600 */
  PSTR otmpFaceName; /* bitsize 32, bitpos 1632 */
  PSTR otmpStyleName; /* bitsize 32, bitpos 1664 */
  PSTR otmpFullName; /* bitsize 32, bitpos 1696 */
};
typedef struct _OUTLINETEXTMETRICW /* id 324 */ OUTLINETEXTMETRICW;
typedef struct _OUTLINETEXTMETRICW /* id 324 */ *POUTLINETEXTMETRICW;
typedef struct _OUTLINETEXTMETRICW /* id 324 */ *LPOUTLINETEXTMETRICW;
struct _RASTERIZER_STATUS { /* size 6 id 325 */
  short int nSize; /* bitsize 16, bitpos 0 */
  short int wFlags; /* bitsize 16, bitpos 16 */
  short int nLanguageID; /* bitsize 16, bitpos 32 */
};
typedef struct _RASTERIZER_STATUS /* id 325 */ RASTERIZER_STATUS;
typedef struct _RASTERIZER_STATUS /* id 325 */ *LPRASTERIZER_STATUS;
struct _POLYTEXTA { /* size 40 id 326 */
  int x; /* bitsize 32, bitpos 0 */
  int y; /* bitsize 32, bitpos 32 */
  UINT n; /* bitsize 32, bitpos 64 */
  LPCSTR lpstr; /* bitsize 32, bitpos 96 */
  UINT uiFlags; /* bitsize 32, bitpos 128 */
  RECT rcl; /* bitsize 128, bitpos 160 */
  int *pdx; /* bitsize 32, bitpos 288 */
};
typedef struct _POLYTEXTA /* id 326 */ POLYTEXTA;
typedef struct _POLYTEXTA /* id 326 */ *PPOLYTEXTA;
typedef struct _POLYTEXTA /* id 326 */ *LPPOLYTEXTA;
struct _POLYTEXTW { /* size 40 id 327 */
  int x; /* bitsize 32, bitpos 0 */
  int y; /* bitsize 32, bitpos 32 */
  UINT n; /* bitsize 32, bitpos 64 */
  LPCWSTR lpstr; /* bitsize 32, bitpos 96 */
  UINT uiFlags; /* bitsize 32, bitpos 128 */
  RECT rcl; /* bitsize 128, bitpos 160 */
  int *pdx; /* bitsize 32, bitpos 288 */
};
typedef struct _POLYTEXTW /* id 327 */ POLYTEXTW;
typedef struct _POLYTEXTW /* id 327 */ *PPOLYTEXTW;
typedef struct _POLYTEXTW /* id 327 */ *LPPOLYTEXTW;
struct tagPIXELFORMATDESCRIPTOR { /* size 40 id 328 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerType; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  DWORD dwLayerMask; /* bitsize 32, bitpos 224 */
  DWORD dwVisibleMask; /* bitsize 32, bitpos 256 */
  DWORD dwDamageMask; /* bitsize 32, bitpos 288 */
};
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ PIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ *PPIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 328 */ *LPPIXELFORMATDESCRIPTOR;
struct tagMETAFILEPICT { /* size 16 id 329 */
  LONG mm; /* bitsize 32, bitpos 0 */
  LONG xExt; /* bitsize 32, bitpos 32 */
  LONG yExt; /* bitsize 32, bitpos 64 */
  HMETAFILE hMF; /* bitsize 32, bitpos 96 */
};
typedef struct tagMETAFILEPICT /* id 329 */ METAFILEPICT;
typedef struct tagMETAFILEPICT /* id 329 */ *LPMETAFILEPICT;
struct tagLOCALESIGNATURE { /* size 32 id 330 */
  DWORD lsUsb[4]:uint32; /* bitsize 128, bitpos 0 */
  DWORD lsCsbDefault[2]:uint32; /* bitsize 64, bitpos 128 */
  DWORD lsCsbSupported[2]:uint32; /* bitsize 64, bitpos 192 */
};
typedef struct tagLOCALESIGNATURE /* id 330 */ LOCALESIGNATURE;
typedef struct tagLOCALESIGNATURE /* id 330 */ *PLOCALESIGNATURE;
typedef struct tagLOCALESIGNATURE /* id 330 */ *LPLOCALESIGNATURE;
typedef LONG LCSTYPE;
struct tagNEWTEXTMETRICA { /* size 72 id 331 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BYTE tmFirstChar; /* bitsize 8, bitpos 352 */
  BYTE tmLastChar; /* bitsize 8, bitpos 360 */
  BYTE tmDefaultChar; /* bitsize 8, bitpos 368 */
  BYTE tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
  DWORD ntmFlags; /* bitsize 32, bitpos 448 */
  UINT ntmSizeEM; /* bitsize 32, bitpos 480 */
  UINT ntmCellHeight; /* bitsize 32, bitpos 512 */
  UINT ntmAvgWidth; /* bitsize 32, bitpos 544 */
};
typedef struct tagNEWTEXTMETRICA /* id 331 */ NEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICA /* id 331 */ *PNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICA /* id 331 */ *LPNEWTEXTMETRICA;
struct tagNEWTEXTMETRICW { /* size 76 id 332 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  WCHAR tmFirstChar; /* bitsize 16, bitpos 352 */
  WCHAR tmLastChar; /* bitsize 16, bitpos 368 */
  WCHAR tmDefaultChar; /* bitsize 16, bitpos 384 */
  WCHAR tmBreakChar; /* bitsize 16, bitpos 400 */
  BYTE tmItalic; /* bitsize 8, bitpos 416 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 424 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 432 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 440 */
  BYTE tmCharSet; /* bitsize 8, bitpos 448 */
  DWORD ntmFlags; /* bitsize 32, bitpos 480 */
  UINT ntmSizeEM; /* bitsize 32, bitpos 512 */
  UINT ntmCellHeight; /* bitsize 32, bitpos 544 */
  UINT ntmAvgWidth; /* bitsize 32, bitpos 576 */
};
typedef struct tagNEWTEXTMETRICW /* id 332 */ NEWTEXTMETRICW;
typedef struct tagNEWTEXTMETRICW /* id 332 */ *PNEWTEXTMETRICW;
typedef struct tagNEWTEXTMETRICW /* id 332 */ *LPNEWTEXTMETRICW;
struct tagNEWTEXTMETRICEXA { /* size 96 id 333 */
  NEWTEXTMETRICA ntmTm; /* bitsize 576, bitpos 0 */
  FONTSIGNATURE ntmFontSig; /* bitsize 192, bitpos 576 */
};
typedef struct tagNEWTEXTMETRICEXA /* id 333 */ NEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW { /* size 100 id 334 */
  NEWTEXTMETRICW ntmTm; /* bitsize 608, bitpos 0 */
  FONTSIGNATURE ntmFontSig; /* bitsize 192, bitpos 608 */
};
typedef struct tagNEWTEXTMETRICEXW /* id 334 */ NEWTEXTMETRICEXW;
struct tagPELARRAY { /* size 20 id 335 */
  LONG paXCount; /* bitsize 32, bitpos 0 */
  LONG paYCount; /* bitsize 32, bitpos 32 */
  LONG paXExt; /* bitsize 32, bitpos 64 */
  LONG paYExt; /* bitsize 32, bitpos 96 */
  BYTE paRGBs; /* bitsize 8, bitpos 128 */
};
typedef struct tagPELARRAY /* id 335 */ PELARRAY;
typedef struct tagPELARRAY /* id 335 */ *PPELARRAY;
typedef struct tagPELARRAY /* id 335 */ *LPPELARRAY;
struct tagENUMLOGFONTA { /* size 156 id 336 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
};
typedef struct tagENUMLOGFONTA /* id 336 */ ENUMLOGFONTA;
typedef struct tagENUMLOGFONTA /* id 336 */ *LPENUMLOGFONTA;
struct tagENUMLOGFONTW { /* size 284 id 337 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
};
typedef struct tagENUMLOGFONTW /* id 337 */ ENUMLOGFONTW;
typedef struct tagENUMLOGFONTW /* id 337 */ *LPENUMLOGFONTW;
struct tagENUMLOGFONTEXA { /* size 188 id 338 */
  LOGFONTA elfLogFont; /* bitsize 480, bitpos 0 */
  BYTE elfFullName[64]:uint32; /* bitsize 512, bitpos 480 */
  BYTE elfStyle[32]:uint32; /* bitsize 256, bitpos 992 */
  BYTE elfScript[32]:uint32; /* bitsize 256, bitpos 1248 */
};
typedef struct tagENUMLOGFONTEXA /* id 338 */ ENUMLOGFONTEXA;
typedef struct tagENUMLOGFONTEXA /* id 338 */ *LPENUMLOGFONTEXA;
struct tagENUMLOGFONTEXW { /* size 348 id 339 */
  LOGFONTW elfLogFont; /* bitsize 736, bitpos 0 */
  WCHAR elfFullName[64]:uint32; /* bitsize 1024, bitpos 736 */
  WCHAR elfStyle[32]:uint32; /* bitsize 512, bitpos 1760 */
  WCHAR elfScript[32]:uint32; /* bitsize 512, bitpos 2272 */
};
typedef struct tagENUMLOGFONTEXW /* id 339 */ ENUMLOGFONTEXW;
typedef struct tagENUMLOGFONTEXW /* id 339 */ *LPENUMLOGFONTEXW;
struct tagPOINTFX { /* size 8 id 340 */
  FIXED x; /* bitsize 32, bitpos 0 */
  FIXED y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINTFX /* id 340 */ POINTFX;
typedef struct tagPOINTFX /* id 340 */ *LPPOINTFX;
struct tagTTPOLYCURVE { /* size 12 id 341 */
  WORD wType; /* bitsize 16, bitpos 0 */
  WORD cpfx; /* bitsize 16, bitpos 16 */
  POINTFX apfx[1]:uint32; /* bitsize 64, bitpos 32 */
};
typedef struct tagTTPOLYCURVE /* id 341 */ TTPOLYCURVE;
typedef struct tagTTPOLYCURVE /* id 341 */ *LPTTPOLYCURVE;
struct tagTTPOLYGONHEADER { /* size 16 id 342 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
  POINTFX pfxStart; /* bitsize 64, bitpos 64 */
};
typedef struct tagTTPOLYGONHEADER /* id 342 */ TTPOLYGONHEADER;
typedef struct tagTTPOLYGONHEADER /* id 342 */ *LPTTPOLYGONHEADER;
struct _POINTFLOAT { /* size 8 id 343 */
  FLOAT x; /* bitsize 32, bitpos 0 */
  FLOAT y; /* bitsize 32, bitpos 32 */
};
typedef struct _POINTFLOAT /* id 343 */ POINTFLOAT;
typedef struct _POINTFLOAT /* id 343 */ *PPOINTFLOAT;
struct _GLYPHMETRICSFLOAT { /* size 24 id 344 */
  FLOAT gmfBlackBoxX; /* bitsize 32, bitpos 0 */
  FLOAT gmfBlackBoxY; /* bitsize 32, bitpos 32 */
  POINTFLOAT gmfptGlyphOrigin; /* bitsize 64, bitpos 64 */
  FLOAT gmfCellIncX; /* bitsize 32, bitpos 128 */
  FLOAT gmfCellIncY; /* bitsize 32, bitpos 160 */
};
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ GLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ *PGLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 344 */ *LPGLYPHMETRICSFLOAT;
struct tagLAYERPLANEDESCRIPTOR { /* size 32 id 345 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerPlane; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  COLORREF crTransparent; /* bitsize 32, bitpos 224 */
};
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ LAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ *PLAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 345 */ *LPLAYERPLANEDESCRIPTOR;
struct _BLENDFUNCTION { /* size 4 id 346 */
  BYTE BlendOp; /* bitsize 8, bitpos 0 */
  BYTE BlendFlags; /* bitsize 8, bitpos 8 */
  BYTE SourceConstantAlpha; /* bitsize 8, bitpos 16 */
  BYTE AlphaFormat; /* bitsize 8, bitpos 24 */
};
typedef struct _BLENDFUNCTION /* id 346 */ BLENDFUNCTION;
typedef struct _BLENDFUNCTION /* id 346 */ *PBLENDFUNCTION;
typedef struct _BLENDFUNCTION /* id 346 */ *LPBLENDFUNCTION;
struct _DESIGNVECTOR { /* size 72 id 347 */
  DWORD dvReserved; /* bitsize 32, bitpos 0 */
  DWORD dvNumAxes; /* bitsize 32, bitpos 32 */
  LONG dvValues[16]:uint32; /* bitsize 512, bitpos 64 */
};
typedef struct _DESIGNVECTOR /* id 347 */ DESIGNVECTOR;
typedef struct _DESIGNVECTOR /* id 347 */ *PDESIGNVECTOR;
typedef struct _DESIGNVECTOR /* id 347 */ *LPDESIGNVECTOR;
typedef USHORT COLOR16;
struct _TRIVERTEX { /* size 16 id 348 */
  LONG x; /* bitsize 32, bitpos 0 */
  LONG y; /* bitsize 32, bitpos 32 */
  COLOR16 Red; /* bitsize 16, bitpos 64 */
  COLOR16 Green; /* bitsize 16, bitpos 80 */
  COLOR16 Blue; /* bitsize 16, bitpos 96 */
  COLOR16 Alpha; /* bitsize 16, bitpos 112 */
};
typedef struct _TRIVERTEX /* id 348 */ TRIVERTEX;
typedef struct _TRIVERTEX /* id 348 */ *PTRIVERTEX;
typedef struct _TRIVERTEX /* id 348 */ *LPTRIVERTEX;
struct _GRADIENT_TRIANGLE { /* size 12 id 349 */
  ULONG Vertex1; /* bitsize 32, bitpos 0 */
  ULONG Vertex2; /* bitsize 32, bitpos 32 */
  ULONG Vertex3; /* bitsize 32, bitpos 64 */
};
typedef struct _GRADIENT_TRIANGLE /* id 349 */ GRADIENT_TRIANGLE;
typedef struct _GRADIENT_TRIANGLE /* id 349 */ *PGRADIENT_TRIANGLE;
typedef struct _GRADIENT_TRIANGLE /* id 349 */ *LPGRADIENT_TRIANGLE;
struct _GRADIENT_RECT { /* size 8 id 350 */
  ULONG UpperLeft; /* bitsize 32, bitpos 0 */
  ULONG LowerRight; /* bitsize 32, bitpos 32 */
};
typedef struct _GRADIENT_RECT /* id 350 */ GRADIENT_RECT;
typedef struct _GRADIENT_RECT /* id 350 */ *PGRADIENT_RECT;
typedef struct _GRADIENT_RECT /* id 350 */ *LPGRADIENT_RECT;
struct _DISPLAY_DEVICEA { /* size 424 id 351 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  CHAR DeviceName[32]:uint32; /* bitsize 256, bitpos 32 */
  CHAR DeviceString[128]:uint32; /* bitsize 1024, bitpos 288 */
  DWORD StateFlags; /* bitsize 32, bitpos 1312 */
  CHAR DeviceID[128]:uint32; /* bitsize 1024, bitpos 1344 */
  CHAR DeviceKey[128]:uint32; /* bitsize 1024, bitpos 2368 */
};
typedef struct _DISPLAY_DEVICEA /* id 351 */ DISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEA /* id 351 */ *PDISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEA /* id 351 */ *LPDISPLAY_DEVICEA;
struct _DISPLAY_DEVICEW { /* size 840 id 352 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  WCHAR DeviceName[32]:uint32; /* bitsize 512, bitpos 32 */
  WCHAR DeviceString[128]:uint32; /* bitsize 2048, bitpos 544 */
  DWORD StateFlags; /* bitsize 32, bitpos 2592 */
  WCHAR DeviceID[128]:uint32; /* bitsize 2048, bitpos 2624 */
  WCHAR DeviceKey[128]:uint32; /* bitsize 2048, bitpos 4672 */
};
typedef struct _DISPLAY_DEVICEW /* id 352 */ DISPLAY_DEVICEW;
typedef struct _DISPLAY_DEVICEW /* id 352 */ *PDISPLAY_DEVICEW;
typedef struct _DISPLAY_DEVICEW /* id 352 */ *LPDISPLAY_DEVICEW;
typedef BOOL (*ABORTPROC) (/* unknown */);
typedef int (*MFENUMPROC) (/* unknown */);
typedef int (*ENHMFENUMPROC) (/* unknown */);
typedef int (*OLDFONTENUMPROCA) (/* unknown */);
typedef int (*OLDFONTENUMPROCW) (/* unknown */);
typedef OLDFONTENUMPROCA FONTENUMPROCA;
typedef OLDFONTENUMPROCW FONTENUMPROCW;
typedef int (*ICMENUMPROCA) (/* unknown */);
typedef int (*ICMENUMPROCW) (/* unknown */);
typedef void (*GOBJENUMPROC) (/* unknown */);
typedef void (*LINEDDAPROC) (/* unknown */);
typedef UINT (*LPFNDEVMODE) (/* unknown */);
typedef DWORD (*LPFNDEVCAPS) (/* unknown */);
typedef BYTE BCHAR;
typedef DOCINFOA DOCINFO;
typedef DOCINFOA *LPDOCINFO;
typedef LOGFONTA LOGFONT;
typedef LOGFONTA *PLOGFONT;
typedef LOGFONTA *LPLOGFONT;
typedef TEXTMETRICA TEXTMETRIC;
typedef TEXTMETRICA *PTEXTMETRIC;
typedef TEXTMETRICA *LPTEXTMETRIC;
typedef DEVMODEA DEVMODE;
typedef DEVMODEA *PDEVMODE;
typedef DEVMODEA *LPDEVMODE;
typedef EXTLOGFONTA EXTLOGFONT;
typedef EXTLOGFONTA *PEXTLOGFONT;
typedef EXTLOGFONTA *LPEXTLOGFONT;
typedef GCP_RESULTSA GCP_RESULTS;
typedef GCP_RESULTSA *LPGCP_RESULTS;
typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;
typedef OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;
typedef POLYTEXTA POLYTEXT;
typedef POLYTEXTA *PPOLYTEXT;
typedef POLYTEXTA *LPPOLYTEXT;
typedef LOGCOLORSPACEA LOGCOLORSPACE;
typedef LOGCOLORSPACEA *LPLOGCOLORSPACE;
typedef NEWTEXTMETRICA NEWTEXTMETRIC;
typedef NEWTEXTMETRICA *PNEWTEXTMETRIC;
typedef NEWTEXTMETRICA *LPNEWTEXTMETRIC;
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;
typedef ENUMLOGFONTA ENUMLOGFONT;
typedef ENUMLOGFONTA *LPENUMLOGFONT;
typedef ENUMLOGFONTEXA ENUMLOGFONTEX;
typedef ENUMLOGFONTEXA *LPENUMLOGFONTEX;
typedef DISPLAY_DEVICEA DISPLAY_DEVICE;
typedef DISPLAY_DEVICEA *PDISPLAY_DEVICE;
typedef DISPLAY_DEVICEA *LPDISPLAY_DEVICE;
 /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stdarg.h:
typedef __builtin_va_list __gnuc_va_list;
typedef __gnuc_va_list va_list;
 winuser.c:
typedef BOOL (*DLGPROC) (/* unknown */);
typedef void (*TIMERPROC) (/* unknown */);
typedef BOOL (*GRAYSTRINGPROC) (/* unknown */);
typedef LRESULT (*HOOKPROC) (/* unknown */);
typedef BOOL (*PROPENUMPROCA) (/* unknown */);
typedef BOOL (*PROPENUMPROCW) (/* unknown */);
typedef BOOL (*PROPENUMPROCEXA) (/* unknown */);
typedef BOOL (*PROPENUMPROCEXW) (/* unknown */);
typedef int (*EDITWORDBREAKPROCA) (/* unknown */);
typedef int (*EDITWORDBREAKPROCW) (/* unknown */);
typedef LRESULT (*WNDPROC) (/* unknown */);
typedef BOOL (*DRAWSTATEPROC) (/* unknown */);
typedef BOOL (*WNDENUMPROC) (/* unknown */);
typedef BOOL (*ENUMWINDOWSPROC) (/* unknown */);
typedef BOOL (*MONITORENUMPROC) (/* unknown */);
typedef BOOL (*NAMEENUMPROCA) (/* unknown */);
typedef BOOL (*NAMEENUMPROCW) (/* unknown */);
typedef NAMEENUMPROCA DESKTOPENUMPROCA;
typedef NAMEENUMPROCW DESKTOPENUMPROCW;
typedef NAMEENUMPROCA WINSTAENUMPROCA;
typedef NAMEENUMPROCW WINSTAENUMPROCW;
typedef void (*SENDASYNCPROC) (/* unknown */);
struct HHOOK__ { /* size 4 id 353 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HHOOK__ /* id 353 */ *HHOOK;
struct HDWP__ { /* size 4 id 354 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDWP__ /* id 354 */ *HDWP;
struct HDEVNOTIFY__ { /* size 4 id 355 */
  int i; /* bitsize 32, bitpos 0 */
};
typedef struct HDEVNOTIFY__ /* id 355 */ *HDEVNOTIFY;
struct tagMENUGETOBJECTINFO { /* size 20 id 356 */
  DWORD dwFlags; /* bitsize 32, bitpos 0 */
  UINT uPos; /* bitsize 32, bitpos 32 */
  HMENU hmenu; /* bitsize 32, bitpos 64 */
  PVOID riid; /* bitsize 32, bitpos 96 */
  PVOID pvObj; /* bitsize 32, bitpos 128 */
};
typedef struct tagMENUGETOBJECTINFO /* id 356 */ MENUGETOBJECTINFO;
typedef struct tagMENUGETOBJECTINFO /* id 356 */ *PMENUGETOBJECTINFO;
struct tagACCEL { /* size 6 id 357 */
  BYTE fVirt; /* bitsize 8, bitpos 0 */
  WORD key; /* bitsize 16, bitpos 16 */
  WORD cmd; /* bitsize 16, bitpos 32 */
};
typedef struct tagACCEL /* id 357 */ ACCEL;
typedef struct tagACCEL /* id 357 */ *LPACCEL;
struct tagACCESSTIMEOUT { /* size 12 id 358 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iTimeOutMSec; /* bitsize 32, bitpos 64 */
};
typedef struct tagACCESSTIMEOUT /* id 358 */ ACCESSTIMEOUT;
typedef struct tagACCESSTIMEOUT /* id 358 */ *LPACCESSTIMEOUT;
struct tagANIMATIONINFO { /* size 8 id 359 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iMinAnimate; /* bitsize 32, bitpos 32 */
};
typedef struct tagANIMATIONINFO /* id 359 */ ANIMATIONINFO;
typedef struct tagANIMATIONINFO /* id 359 */ *LPANIMATIONINFO;
struct tagCREATESTRUCTA { /* size 48 id 360 */
  LPVOID lpCreateParams; /* bitsize 32, bitpos 0 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 32 */
  HMENU hMenu; /* bitsize 32, bitpos 64 */
  HWND hwndParent; /* bitsize 32, bitpos 96 */
  int cy; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int y; /* bitsize 32, bitpos 192 */
  int x; /* bitsize 32, bitpos 224 */
  LONG style; /* bitsize 32, bitpos 256 */
  LPCSTR lpszName; /* bitsize 32, bitpos 288 */
  LPCSTR lpszClass; /* bitsize 32, bitpos 320 */
  DWORD dwExStyle; /* bitsize 32, bitpos 352 */
};
typedef struct tagCREATESTRUCTA /* id 360 */ CREATESTRUCTA;
typedef struct tagCREATESTRUCTA /* id 360 */ *LPCREATESTRUCTA;
struct tagCREATESTRUCTW { /* size 48 id 361 */
  LPVOID lpCreateParams; /* bitsize 32, bitpos 0 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 32 */
  HMENU hMenu; /* bitsize 32, bitpos 64 */
  HWND hwndParent; /* bitsize 32, bitpos 96 */
  int cy; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int y; /* bitsize 32, bitpos 192 */
  int x; /* bitsize 32, bitpos 224 */
  LONG style; /* bitsize 32, bitpos 256 */
  LPCWSTR lpszName; /* bitsize 32, bitpos 288 */
  LPCWSTR lpszClass; /* bitsize 32, bitpos 320 */
  DWORD dwExStyle; /* bitsize 32, bitpos 352 */
};
typedef struct tagCREATESTRUCTW /* id 361 */ CREATESTRUCTW;
typedef struct tagCREATESTRUCTW /* id 361 */ *LPCREATESTRUCTW;
struct tagCBT_CREATEWNDA { /* size 8 id 362 */
  LPCREATESTRUCTA lpcs; /* bitsize 32, bitpos 0 */
  HWND hwndInsertAfter; /* bitsize 32, bitpos 32 */
};
typedef struct tagCBT_CREATEWNDA /* id 362 */ CBT_CREATEWNDA;
typedef struct tagCBT_CREATEWNDA /* id 362 */ *LPCBT_CREATEWNDA;
struct tagCBT_CREATEWNDW { /* size 8 id 363 */
  LPCREATESTRUCTW lpcs; /* bitsize 32, bitpos 0 */
  HWND hwndInsertAfter; /* bitsize 32, bitpos 32 */
};
typedef struct tagCBT_CREATEWNDW /* id 363 */ CBT_CREATEWNDW;
typedef struct tagCBT_CREATEWNDW /* id 363 */ *LPCBT_CREATEWNDW;
struct tagCBTACTIVATESTRUCT { /* size 8 id 364 */
  BOOL fMouse; /* bitsize 32, bitpos 0 */
  HWND hWndActive; /* bitsize 32, bitpos 32 */
};
typedef struct tagCBTACTIVATESTRUCT /* id 364 */ CBTACTIVATESTRUCT;
typedef struct tagCBTACTIVATESTRUCT /* id 364 */ *LPCBTACTIVATESTRUCT;
struct tagCLIENTCREATESTRUCT { /* size 8 id 365 */
  HANDLE hWindowMenu; /* bitsize 32, bitpos 0 */
  UINT idFirstChild; /* bitsize 32, bitpos 32 */
};
typedef struct tagCLIENTCREATESTRUCT /* id 365 */ CLIENTCREATESTRUCT;
typedef struct tagCLIENTCREATESTRUCT /* id 365 */ *LPCLIENTCREATESTRUCT;
struct tagCOMPAREITEMSTRUCT { /* size 32 id 366 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  HWND hwndItem; /* bitsize 32, bitpos 64 */
  UINT itemID1; /* bitsize 32, bitpos 96 */
  DWORD itemData1; /* bitsize 32, bitpos 128 */
  UINT itemID2; /* bitsize 32, bitpos 160 */
  DWORD itemData2; /* bitsize 32, bitpos 192 */
  DWORD dwLocaleId; /* bitsize 32, bitpos 224 */
};
typedef struct tagCOMPAREITEMSTRUCT /* id 366 */ COMPAREITEMSTRUCT;
typedef struct tagCOMPAREITEMSTRUCT /* id 366 */ *LPCOMPAREITEMSTRUCT;
struct tagCOPYDATASTRUCT { /* size 12 id 367 */
  DWORD dwData; /* bitsize 32, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 32 */
  PVOID lpData; /* bitsize 32, bitpos 64 */
};
typedef struct tagCOPYDATASTRUCT /* id 367 */ COPYDATASTRUCT;
typedef struct tagCOPYDATASTRUCT /* id 367 */ *PCOPYDATASTRUCT;
struct tagCURSORSHAPE { /* size 24 id 368 */
  int xHotSpot; /* bitsize 32, bitpos 0 */
  int yHotSpot; /* bitsize 32, bitpos 32 */
  int cx; /* bitsize 32, bitpos 64 */
  int cy; /* bitsize 32, bitpos 96 */
  int cbWidth; /* bitsize 32, bitpos 128 */
  BYTE Planes; /* bitsize 8, bitpos 160 */
  BYTE BitsPixel; /* bitsize 8, bitpos 168 */
};
typedef struct tagCURSORSHAPE /* id 368 */ CURSORSHAPE;
typedef struct tagCURSORSHAPE /* id 368 */ *LPCURSORSHAPE;
struct tagCWPRETSTRUCT { /* size 20 id 369 */
  LRESULT lResult; /* bitsize 32, bitpos 0 */
  LPARAM lParam; /* bitsize 32, bitpos 32 */
  WPARAM wParam; /* bitsize 32, bitpos 64 */
  DWORD message; /* bitsize 32, bitpos 96 */
  HWND hwnd; /* bitsize 32, bitpos 128 */
};
typedef struct tagCWPRETSTRUCT /* id 369 */ CWPRETSTRUCT;
struct tagCWPSTRUCT { /* size 16 id 370 */
  LPARAM lParam; /* bitsize 32, bitpos 0 */
  WPARAM wParam; /* bitsize 32, bitpos 32 */
  UINT message; /* bitsize 32, bitpos 64 */
  HWND hwnd; /* bitsize 32, bitpos 96 */
};
typedef struct tagCWPSTRUCT /* id 370 */ CWPSTRUCT;
typedef struct tagCWPSTRUCT /* id 370 */ *PCWPSTRUCT;
struct tagDEBUGHOOKINFO { /* size 20 id 371 */
  DWORD idThread; /* bitsize 32, bitpos 0 */
  DWORD idThreadInstaller; /* bitsize 32, bitpos 32 */
  LPARAM lParam; /* bitsize 32, bitpos 64 */
  WPARAM wParam; /* bitsize 32, bitpos 96 */
  int code; /* bitsize 32, bitpos 128 */
};
typedef struct tagDEBUGHOOKINFO /* id 371 */ DEBUGHOOKINFO;
typedef struct tagDEBUGHOOKINFO /* id 371 */ *PDEBUGHOOKINFO;
typedef struct tagDEBUGHOOKINFO /* id 371 */ *LPDEBUGHOOKINFO;
struct tagDELETEITEMSTRUCT { /* size 20 id 372 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  HWND hwndItem; /* bitsize 32, bitpos 96 */
  UINT itemData; /* bitsize 32, bitpos 128 */
};
typedef struct tagDELETEITEMSTRUCT /* id 372 */ DELETEITEMSTRUCT;
typedef struct tagDELETEITEMSTRUCT /* id 372 */ *PDELETEITEMSTRUCT;
typedef struct tagDELETEITEMSTRUCT /* id 372 */ *LPDELETEITEMSTRUCT;
typedef struct %anon373 { /* size 18 */
  DWORD style; /* bitsize 32, bitpos 0 */
  DWORD dwExtendedStyle; /* bitsize 32, bitpos 32 */
  short int x; /* bitsize 16, bitpos 64 */
  short int y; /* bitsize 16, bitpos 80 */
  short int cx; /* bitsize 16, bitpos 96 */
  short int cy; /* bitsize 16, bitpos 112 */
  WORD id; /* bitsize 16, bitpos 128 */
} DLGITEMTEMPLATE;
typedef struct %anon373 *LPDLGITEMTEMPLATE;
typedef struct %anon374 { /* size 18 */
  DWORD style; /* bitsize 32, bitpos 0 */
  DWORD dwExtendedStyle; /* bitsize 32, bitpos 32 */
  WORD cdit; /* bitsize 16, bitpos 64 */
  short int x; /* bitsize 16, bitpos 80 */
  short int y; /* bitsize 16, bitpos 96 */
  short int cx; /* bitsize 16, bitpos 112 */
  short int cy; /* bitsize 16, bitpos 128 */
} DLGTEMPLATE;
typedef struct %anon374 *LPDLGTEMPLATE;
typedef struct %anon374 *LPDLGTEMPLATEA;
typedef struct %anon374 *LPDLGTEMPLATEW;
typedef DLGTEMPLATE const *LPCDLGTEMPLATE;
struct tagDRAWITEMSTRUCT { /* size 48 id 375 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  UINT itemAction; /* bitsize 32, bitpos 96 */
  UINT itemState; /* bitsize 32, bitpos 128 */
  HWND hwndItem; /* bitsize 32, bitpos 160 */
  HDC hDC; /* bitsize 32, bitpos 192 */
  RECT rcItem; /* bitsize 128, bitpos 224 */
  DWORD itemData; /* bitsize 32, bitpos 352 */
};
typedef struct tagDRAWITEMSTRUCT /* id 375 */ DRAWITEMSTRUCT;
typedef struct tagDRAWITEMSTRUCT /* id 375 */ *LPDRAWITEMSTRUCT;
typedef struct tagDRAWITEMSTRUCT /* id 375 */ *PDRAWITEMSTRUCT;
typedef struct %anon376 { /* size 20 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iTabLength; /* bitsize 32, bitpos 32 */
  int iLeftMargin; /* bitsize 32, bitpos 64 */
  int iRightMargin; /* bitsize 32, bitpos 96 */
  UINT uiLengthDrawn; /* bitsize 32, bitpos 128 */
} DRAWTEXTPARAMS;
typedef struct %anon376 *LPDRAWTEXTPARAMS;
struct tagPAINTSTRUCT { /* size 64 id 377 */
  HDC hdc; /* bitsize 32, bitpos 0 */
  BOOL fErase; /* bitsize 32, bitpos 32 */
  RECT rcPaint; /* bitsize 128, bitpos 64 */
  BOOL fRestore; /* bitsize 32, bitpos 192 */
  BOOL fIncUpdate; /* bitsize 32, bitpos 224 */
  BYTE rgbReserved[32]:uint32; /* bitsize 256, bitpos 256 */
};
typedef struct tagPAINTSTRUCT /* id 377 */ PAINTSTRUCT;
typedef struct tagPAINTSTRUCT /* id 377 */ *LPPAINTSTRUCT;
struct tagMSG { /* size 28 id 378 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  UINT message; /* bitsize 32, bitpos 32 */
  WPARAM wParam; /* bitsize 32, bitpos 64 */
  LPARAM lParam; /* bitsize 32, bitpos 96 */
  DWORD time; /* bitsize 32, bitpos 128 */
  POINT pt; /* bitsize 64, bitpos 160 */
};
typedef struct tagMSG /* id 378 */ MSG;
typedef struct tagMSG /* id 378 */ *LPMSG;
typedef struct tagMSG /* id 378 */ *PMSG;
struct _ICONINFO { /* size 20 id 379 */
  BOOL fIcon; /* bitsize 32, bitpos 0 */
  DWORD xHotspot; /* bitsize 32, bitpos 32 */
  DWORD yHotspot; /* bitsize 32, bitpos 64 */
  HBITMAP hbmMask; /* bitsize 32, bitpos 96 */
  HBITMAP hbmColor; /* bitsize 32, bitpos 128 */
};
typedef struct _ICONINFO /* id 379 */ ICONINFO;
typedef struct _ICONINFO /* id 379 */ *PICONINFO;
struct tagNMHDR { /* size 12 id 380 */
  HWND hwndFrom; /* bitsize 32, bitpos 0 */
  UINT idFrom; /* bitsize 32, bitpos 32 */
  UINT code; /* bitsize 32, bitpos 64 */
};
typedef struct tagNMHDR /* id 380 */ NMHDR;
typedef struct tagNMHDR /* id 380 */ *LPNMHDR;
struct _WNDCLASSA { /* size 40 id 381 */
  UINT style; /* bitsize 32, bitpos 0 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 32 */
  int cbClsExtra; /* bitsize 32, bitpos 64 */
  int cbWndExtra; /* bitsize 32, bitpos 96 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 128 */
  HICON hIcon; /* bitsize 32, bitpos 160 */
  HCURSOR hCursor; /* bitsize 32, bitpos 192 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 224 */
  LPCSTR lpszMenuName; /* bitsize 32, bitpos 256 */
  LPCSTR lpszClassName; /* bitsize 32, bitpos 288 */
};
typedef struct _WNDCLASSA /* id 381 */ WNDCLASSA;
typedef struct _WNDCLASSA /* id 381 */ *LPWNDCLASSA;
typedef struct _WNDCLASSA /* id 381 */ *PWNDCLASSA;
struct _WNDCLASSW { /* size 40 id 382 */
  UINT style; /* bitsize 32, bitpos 0 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 32 */
  int cbClsExtra; /* bitsize 32, bitpos 64 */
  int cbWndExtra; /* bitsize 32, bitpos 96 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 128 */
  HICON hIcon; /* bitsize 32, bitpos 160 */
  HCURSOR hCursor; /* bitsize 32, bitpos 192 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 224 */
  LPCWSTR lpszMenuName; /* bitsize 32, bitpos 256 */
  LPCWSTR lpszClassName; /* bitsize 32, bitpos 288 */
};
typedef struct _WNDCLASSW /* id 382 */ WNDCLASSW;
typedef struct _WNDCLASSW /* id 382 */ *LPWNDCLASSW;
typedef struct _WNDCLASSW /* id 382 */ *PWNDCLASSW;
struct _WNDCLASSEXA { /* size 48 id 383 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT style; /* bitsize 32, bitpos 32 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 64 */
  int cbClsExtra; /* bitsize 32, bitpos 96 */
  int cbWndExtra; /* bitsize 32, bitpos 128 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 160 */
  HICON hIcon; /* bitsize 32, bitpos 192 */
  HCURSOR hCursor; /* bitsize 32, bitpos 224 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 256 */
  LPCSTR lpszMenuName; /* bitsize 32, bitpos 288 */
  LPCSTR lpszClassName; /* bitsize 32, bitpos 320 */
  HICON hIconSm; /* bitsize 32, bitpos 352 */
};
typedef struct _WNDCLASSEXA /* id 383 */ WNDCLASSEXA;
typedef struct _WNDCLASSEXA /* id 383 */ *LPWNDCLASSEXA;
typedef struct _WNDCLASSEXA /* id 383 */ *PWNDCLASSEXA;
struct _WNDCLASSEXW { /* size 48 id 384 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT style; /* bitsize 32, bitpos 32 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 64 */
  int cbClsExtra; /* bitsize 32, bitpos 96 */
  int cbWndExtra; /* bitsize 32, bitpos 128 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 160 */
  HICON hIcon; /* bitsize 32, bitpos 192 */
  HCURSOR hCursor; /* bitsize 32, bitpos 224 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 256 */
  LPCWSTR lpszMenuName; /* bitsize 32, bitpos 288 */
  LPCWSTR lpszClassName; /* bitsize 32, bitpos 320 */
  HICON hIconSm; /* bitsize 32, bitpos 352 */
};
typedef struct _WNDCLASSEXW /* id 384 */ WNDCLASSEXW;
typedef struct _WNDCLASSEXW /* id 384 */ *LPWNDCLASSEXW;
typedef struct _WNDCLASSEXW /* id 384 */ *PWNDCLASSEXW;
struct tagMENUITEMINFOA { /* size 44 id 385 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT fMask; /* bitsize 32, bitpos 32 */
  UINT fType; /* bitsize 32, bitpos 64 */
  UINT fState; /* bitsize 32, bitpos 96 */
  UINT wID; /* bitsize 32, bitpos 128 */
  HMENU hSubMenu; /* bitsize 32, bitpos 160 */
  HBITMAP hbmpChecked; /* bitsize 32, bitpos 192 */
  HBITMAP hbmpUnchecked; /* bitsize 32, bitpos 224 */
  DWORD dwItemData; /* bitsize 32, bitpos 256 */
  LPSTR dwTypeData; /* bitsize 32, bitpos 288 */
  UINT cch; /* bitsize 32, bitpos 320 */
};
typedef struct tagMENUITEMINFOA /* id 385 */ MENUITEMINFOA;
typedef struct tagMENUITEMINFOA /* id 385 */ *LPMENUITEMINFOA;
typedef MENUITEMINFOA const *LPCMENUITEMINFOA;
struct tagMENUITEMINFOW { /* size 44 id 386 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT fMask; /* bitsize 32, bitpos 32 */
  UINT fType; /* bitsize 32, bitpos 64 */
  UINT fState; /* bitsize 32, bitpos 96 */
  UINT wID; /* bitsize 32, bitpos 128 */
  HMENU hSubMenu; /* bitsize 32, bitpos 160 */
  HBITMAP hbmpChecked; /* bitsize 32, bitpos 192 */
  HBITMAP hbmpUnchecked; /* bitsize 32, bitpos 224 */
  DWORD dwItemData; /* bitsize 32, bitpos 256 */
  LPWSTR dwTypeData; /* bitsize 32, bitpos 288 */
  UINT cch; /* bitsize 32, bitpos 320 */
};
typedef struct tagMENUITEMINFOW /* id 386 */ MENUITEMINFOW;
typedef struct tagMENUITEMINFOW /* id 386 */ *LPMENUITEMINFOW;
typedef MENUITEMINFOW const *LPCMENUITEMINFOW;
struct tagSCROLLINFO { /* size 28 id 387 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT fMask; /* bitsize 32, bitpos 32 */
  int nMin; /* bitsize 32, bitpos 64 */
  int nMax; /* bitsize 32, bitpos 96 */
  UINT nPage; /* bitsize 32, bitpos 128 */
  int nPos; /* bitsize 32, bitpos 160 */
  int nTrackPos; /* bitsize 32, bitpos 192 */
};
typedef struct tagSCROLLINFO /* id 387 */ SCROLLINFO;
typedef struct tagSCROLLINFO /* id 387 */ *LPSCROLLINFO;
typedef SCROLLINFO const *LPCSCROLLINFO;
struct _WINDOWPLACEMENT { /* size 44 id 388 */
  UINT length; /* bitsize 32, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 32 */
  UINT showCmd; /* bitsize 32, bitpos 64 */
  POINT ptMinPosition; /* bitsize 64, bitpos 96 */
  POINT ptMaxPosition; /* bitsize 64, bitpos 160 */
  RECT rcNormalPosition; /* bitsize 128, bitpos 224 */
};
typedef struct _WINDOWPLACEMENT /* id 388 */ WINDOWPLACEMENT;
typedef struct _WINDOWPLACEMENT /* id 388 */ *LPWINDOWPLACEMENT;
typedef struct _WINDOWPLACEMENT /* id 388 */ *PWINDOWPLACEMENT;
typedef struct %anon389 { /* size 4 */
  WORD versionNumber; /* bitsize 16, bitpos 0 */
  WORD offset; /* bitsize 16, bitpos 16 */
} MENUITEMTEMPLATEHEADER;
typedef struct %anon390 { /* size 6 */
  WORD mtOption; /* bitsize 16, bitpos 0 */
  WORD mtID; /* bitsize 16, bitpos 16 */
  WCHAR mtString[1]:uint32; /* bitsize 16, bitpos 32 */
} MENUITEMTEMPLATE;
typedef void MENUTEMPLATE;
typedef void MENUTEMPLATEA;
typedef void MENUTEMPLATEW;
typedef void *LPMENUTEMPLATEA;
typedef void *LPMENUTEMPLATEW;
typedef void *LPMENUTEMPLATE;
struct tagHELPINFO { /* size 28 id 391 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iContextType; /* bitsize 32, bitpos 32 */
  int iCtrlId; /* bitsize 32, bitpos 64 */
  HANDLE hItemHandle; /* bitsize 32, bitpos 96 */
  DWORD dwContextId; /* bitsize 32, bitpos 128 */
  POINT MousePos; /* bitsize 64, bitpos 160 */
};
typedef struct tagHELPINFO /* id 391 */ HELPINFO;
typedef struct tagHELPINFO /* id 391 */ *LPHELPINFO;
typedef void (*MSGBOXCALLBACK) (/* unknown */);
typedef struct %anon392 { /* size 40 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 64 */
  LPCSTR lpszText; /* bitsize 32, bitpos 96 */
  LPCSTR lpszCaption; /* bitsize 32, bitpos 128 */
  DWORD dwStyle; /* bitsize 32, bitpos 160 */
  LPCSTR lpszIcon; /* bitsize 32, bitpos 192 */
  DWORD dwContextHelpId; /* bitsize 32, bitpos 224 */
  MSGBOXCALLBACK lpfnMsgBoxCallback; /* bitsize 32, bitpos 256 */
  DWORD dwLanguageId; /* bitsize 32, bitpos 288 */
} MSGBOXPARAMSA;
typedef struct %anon392 *PMSGBOXPARAMSA;
typedef struct %anon392 *LPMSGBOXPARAMSA;
typedef struct %anon393 { /* size 40 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 64 */
  LPCWSTR lpszText; /* bitsize 32, bitpos 96 */
  LPCWSTR lpszCaption; /* bitsize 32, bitpos 128 */
  DWORD dwStyle; /* bitsize 32, bitpos 160 */
  LPCWSTR lpszIcon; /* bitsize 32, bitpos 192 */
  DWORD dwContextHelpId; /* bitsize 32, bitpos 224 */
  MSGBOXCALLBACK lpfnMsgBoxCallback; /* bitsize 32, bitpos 256 */
  DWORD dwLanguageId; /* bitsize 32, bitpos 288 */
} MSGBOXPARAMSW;
typedef struct %anon393 *PMSGBOXPARAMSW;
typedef struct %anon393 *LPMSGBOXPARAMSW;
struct tagUSEROBJECTFLAGS { /* size 12 id 394 */
  BOOL fInherit; /* bitsize 32, bitpos 0 */
  BOOL fReserved; /* bitsize 32, bitpos 32 */
  DWORD dwFlags; /* bitsize 32, bitpos 64 */
};
typedef struct tagUSEROBJECTFLAGS /* id 394 */ USEROBJECTFLAGS;
struct tagFILTERKEYS { /* size 24 id 395 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iWaitMSec; /* bitsize 32, bitpos 64 */
  DWORD iDelayMSec; /* bitsize 32, bitpos 96 */
  DWORD iRepeatMSec; /* bitsize 32, bitpos 128 */
  DWORD iBounceMSec; /* bitsize 32, bitpos 160 */
};
typedef struct tagFILTERKEYS /* id 395 */ FILTERKEYS;
struct tagHIGHCONTRASTA { /* size 12 id 396 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPSTR lpszDefaultScheme; /* bitsize 32, bitpos 64 */
};
typedef struct tagHIGHCONTRASTA /* id 396 */ HIGHCONTRASTA;
typedef struct tagHIGHCONTRASTA /* id 396 */ *LPHIGHCONTRASTA;
struct tagHIGHCONTRASTW { /* size 12 id 397 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPWSTR lpszDefaultScheme; /* bitsize 32, bitpos 64 */
};
typedef struct tagHIGHCONTRASTW /* id 397 */ HIGHCONTRASTW;
typedef struct tagHIGHCONTRASTW /* id 397 */ *LPHIGHCONTRASTW;
struct tagICONMETRICSA { /* size 76 id 398 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iHorzSpacing; /* bitsize 32, bitpos 32 */
  int iVertSpacing; /* bitsize 32, bitpos 64 */
  int iTitleWrap; /* bitsize 32, bitpos 96 */
  LOGFONTA lfFont; /* bitsize 480, bitpos 128 */
};
typedef struct tagICONMETRICSA /* id 398 */ ICONMETRICSA;
typedef struct tagICONMETRICSA /* id 398 */ *LPICONMETRICSA;
struct tagICONMETRICSW { /* size 108 id 399 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iHorzSpacing; /* bitsize 32, bitpos 32 */
  int iVertSpacing; /* bitsize 32, bitpos 64 */
  int iTitleWrap; /* bitsize 32, bitpos 96 */
  LOGFONTW lfFont; /* bitsize 736, bitpos 128 */
};
typedef struct tagICONMETRICSW /* id 399 */ ICONMETRICSW;
typedef struct tagICONMETRICSW /* id 399 */ *LPICONMETRICSW;
struct tagMINIMIZEDMETRICS { /* size 20 id 400 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iWidth; /* bitsize 32, bitpos 32 */
  int iHorzGap; /* bitsize 32, bitpos 64 */
  int iVertGap; /* bitsize 32, bitpos 96 */
  int iArrange; /* bitsize 32, bitpos 128 */
};
typedef struct tagMINIMIZEDMETRICS /* id 400 */ MINIMIZEDMETRICS;
typedef struct tagMINIMIZEDMETRICS /* id 400 */ *LPMINIMIZEDMETRICS;
struct tagMOUSEKEYS { /* size 28 id 401 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iMaxSpeed; /* bitsize 32, bitpos 64 */
  DWORD iTimeToMaxSpeed; /* bitsize 32, bitpos 96 */
  DWORD iCtrlSpeed; /* bitsize 32, bitpos 128 */
  DWORD dwReserved1; /* bitsize 32, bitpos 160 */
  DWORD dwReserved2; /* bitsize 32, bitpos 192 */
};
typedef struct tagMOUSEKEYS /* id 401 */ MOUSEKEYS;
typedef struct tagMOUSEKEYS /* id 401 */ *LPMOUSEKEYS;
struct tagNONCLIENTMETRICSA { /* size 340 id 402 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iBorderWidth; /* bitsize 32, bitpos 32 */
  int iScrollWidth; /* bitsize 32, bitpos 64 */
  int iScrollHeight; /* bitsize 32, bitpos 96 */
  int iCaptionWidth; /* bitsize 32, bitpos 128 */
  int iCaptionHeight; /* bitsize 32, bitpos 160 */
  LOGFONTA lfCaptionFont; /* bitsize 480, bitpos 192 */
  int iSmCaptionWidth; /* bitsize 32, bitpos 672 */
  int iSmCaptionHeight; /* bitsize 32, bitpos 704 */
  LOGFONTA lfSmCaptionFont; /* bitsize 480, bitpos 736 */
  int iMenuWidth; /* bitsize 32, bitpos 1216 */
  int iMenuHeight; /* bitsize 32, bitpos 1248 */
  LOGFONTA lfMenuFont; /* bitsize 480, bitpos 1280 */
  LOGFONTA lfStatusFont; /* bitsize 480, bitpos 1760 */
  LOGFONTA lfMessageFont; /* bitsize 480, bitpos 2240 */
};
typedef struct tagNONCLIENTMETRICSA /* id 402 */ NONCLIENTMETRICSA;
typedef struct tagNONCLIENTMETRICSA /* id 402 */ *LPNONCLIENTMETRICSA;
struct tagNONCLIENTMETRICSW { /* size 500 id 403 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iBorderWidth; /* bitsize 32, bitpos 32 */
  int iScrollWidth; /* bitsize 32, bitpos 64 */
  int iScrollHeight; /* bitsize 32, bitpos 96 */
  int iCaptionWidth; /* bitsize 32, bitpos 128 */
  int iCaptionHeight; /* bitsize 32, bitpos 160 */
  LOGFONTW lfCaptionFont; /* bitsize 736, bitpos 192 */
  int iSmCaptionWidth; /* bitsize 32, bitpos 928 */
  int iSmCaptionHeight; /* bitsize 32, bitpos 960 */
  LOGFONTW lfSmCaptionFont; /* bitsize 736, bitpos 992 */
  int iMenuWidth; /* bitsize 32, bitpos 1728 */
  int iMenuHeight; /* bitsize 32, bitpos 1760 */
  LOGFONTW lfMenuFont; /* bitsize 736, bitpos 1792 */
  LOGFONTW lfStatusFont; /* bitsize 736, bitpos 2528 */
  LOGFONTW lfMessageFont; /* bitsize 736, bitpos 3264 */
};
typedef struct tagNONCLIENTMETRICSW /* id 403 */ NONCLIENTMETRICSW;
typedef struct tagNONCLIENTMETRICSW /* id 403 */ *LPNONCLIENTMETRICSW;
struct tagSERIALKEYSA { /* size 28 id 404 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPSTR lpszActivePort; /* bitsize 32, bitpos 64 */
  LPSTR lpszPort; /* bitsize 32, bitpos 96 */
  UINT iBaudRate; /* bitsize 32, bitpos 128 */
  UINT iPortState; /* bitsize 32, bitpos 160 */
  UINT iActive; /* bitsize 32, bitpos 192 */
};
typedef struct tagSERIALKEYSA /* id 404 */ SERIALKEYSA;
typedef struct tagSERIALKEYSA /* id 404 */ *LPSERIALKEYSA;
struct tagSERIALKEYSW { /* size 28 id 405 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPWSTR lpszActivePort; /* bitsize 32, bitpos 64 */
  LPWSTR lpszPort; /* bitsize 32, bitpos 96 */
  UINT iBaudRate; /* bitsize 32, bitpos 128 */
  UINT iPortState; /* bitsize 32, bitpos 160 */
  UINT iActive; /* bitsize 32, bitpos 192 */
};
typedef struct tagSERIALKEYSW /* id 405 */ SERIALKEYSW;
typedef struct tagSERIALKEYSW /* id 405 */ *LPSERIALKEYSW;
struct tagSOUNDSENTRYA { /* size 48 id 406 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iFSTextEffect; /* bitsize 32, bitpos 64 */
  DWORD iFSTextEffectMSec; /* bitsize 32, bitpos 96 */
  DWORD iFSTextEffectColorBits; /* bitsize 32, bitpos 128 */
  DWORD iFSGrafEffect; /* bitsize 32, bitpos 160 */
  DWORD iFSGrafEffectMSec; /* bitsize 32, bitpos 192 */
  DWORD iFSGrafEffectColor; /* bitsize 32, bitpos 224 */
  DWORD iWindowsEffect; /* bitsize 32, bitpos 256 */
  DWORD iWindowsEffectMSec; /* bitsize 32, bitpos 288 */
  LPSTR lpszWindowsEffectDLL; /* bitsize 32, bitpos 320 */
  DWORD iWindowsEffectOrdinal; /* bitsize 32, bitpos 352 */
};
typedef struct tagSOUNDSENTRYA /* id 406 */ SOUNDSENTRYA;
typedef struct tagSOUNDSENTRYA /* id 406 */ *LPSOUNDSENTRYA;
struct tagSOUNDSENTRYW { /* size 48 id 407 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iFSTextEffect; /* bitsize 32, bitpos 64 */
  DWORD iFSTextEffectMSec; /* bitsize 32, bitpos 96 */
  DWORD iFSTextEffectColorBits; /* bitsize 32, bitpos 128 */
  DWORD iFSGrafEffect; /* bitsize 32, bitpos 160 */
  DWORD iFSGrafEffectMSec; /* bitsize 32, bitpos 192 */
  DWORD iFSGrafEffectColor; /* bitsize 32, bitpos 224 */
  DWORD iWindowsEffect; /* bitsize 32, bitpos 256 */
  DWORD iWindowsEffectMSec; /* bitsize 32, bitpos 288 */
  LPWSTR lpszWindowsEffectDLL; /* bitsize 32, bitpos 320 */
  DWORD iWindowsEffectOrdinal; /* bitsize 32, bitpos 352 */
};
typedef struct tagSOUNDSENTRYW /* id 407 */ SOUNDSENTRYW;
typedef struct tagSOUNDSENTRYW /* id 407 */ *LPSOUNDSENTRYW;
struct tagSTICKYKEYS { /* size 8 id 408 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
};
typedef struct tagSTICKYKEYS /* id 408 */ STICKYKEYS;
typedef struct tagSTICKYKEYS /* id 408 */ *LPSTICKYKEYS;
struct tagTOGGLEKEYS { /* size 8 id 409 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
};
typedef struct tagTOGGLEKEYS /* id 409 */ TOGGLEKEYS;
struct tagMOUSEHOOKSTRUCT { /* size 20 id 410 */
  POINT pt; /* bitsize 64, bitpos 0 */
  HWND hwnd; /* bitsize 32, bitpos 64 */
  UINT wHitTestCode; /* bitsize 32, bitpos 96 */
  DWORD dwExtraInfo; /* bitsize 32, bitpos 128 */
};
typedef struct tagMOUSEHOOKSTRUCT /* id 410 */ MOUSEHOOKSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT /* id 410 */ *LPMOUSEHOOKSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT /* id 410 */ *PMOUSEHOOKSTRUCT;
struct tagTRACKMOUSEEVENT { /* size 16 id 411 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  HWND hwndTrack; /* bitsize 32, bitpos 64 */
  DWORD dwHoverTime; /* bitsize 32, bitpos 96 */
};
typedef struct tagTRACKMOUSEEVENT /* id 411 */ TRACKMOUSEEVENT;
typedef struct tagTRACKMOUSEEVENT /* id 411 */ *LPTRACKMOUSEEVENT;
struct tagTPMPARAMS { /* size 20 id 412 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  RECT rcExclude; /* bitsize 128, bitpos 32 */
};
typedef struct tagTPMPARAMS /* id 412 */ TPMPARAMS;
typedef struct tagTPMPARAMS /* id 412 */ *LPTPMPARAMS;
struct tagEVENTMSG { /* size 20 id 413 */
  UINT message; /* bitsize 32, bitpos 0 */
  UINT paramL; /* bitsize 32, bitpos 32 */
  UINT paramH; /* bitsize 32, bitpos 64 */
  DWORD time; /* bitsize 32, bitpos 96 */
  HWND hwnd; /* bitsize 32, bitpos 128 */
};
typedef struct tagEVENTMSG /* id 413 */ EVENTMSG;
typedef struct tagEVENTMSG /* id 413 */ *PEVENTMSGMSG;
typedef struct tagEVENTMSG /* id 413 */ *LPEVENTMSGMSG;
typedef struct tagEVENTMSG /* id 413 */ *PEVENTMSG;
typedef struct tagEVENTMSG /* id 413 */ *LPEVENTMSG;
struct _WINDOWPOS { /* size 28 id 414 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  HWND hwndInsertAfter; /* bitsize 32, bitpos 32 */
  int x; /* bitsize 32, bitpos 64 */
  int y; /* bitsize 32, bitpos 96 */
  int cx; /* bitsize 32, bitpos 128 */
  int cy; /* bitsize 32, bitpos 160 */
  UINT flags; /* bitsize 32, bitpos 192 */
};
typedef struct _WINDOWPOS /* id 414 */ WINDOWPOS;
typedef struct _WINDOWPOS /* id 414 */ *PWINDOWPOS;
typedef struct _WINDOWPOS /* id 414 */ *LPWINDOWPOS;
struct tagNCCALCSIZE_PARAMS { /* size 52 id 415 */
  RECT rgrc[3]:uint32; /* bitsize 384, bitpos 0 */
  PWINDOWPOS lppos; /* bitsize 32, bitpos 384 */
};
typedef struct tagNCCALCSIZE_PARAMS /* id 415 */ NCCALCSIZE_PARAMS;
typedef struct tagNCCALCSIZE_PARAMS /* id 415 */ *LPNCCALCSIZE_PARAMS;
struct tagMDICREATESTRUCTA { /* size 36 id 416 */
  LPCSTR szClass; /* bitsize 32, bitpos 0 */
  LPCSTR szTitle; /* bitsize 32, bitpos 32 */
  HANDLE hOwner; /* bitsize 32, bitpos 64 */
  int x; /* bitsize 32, bitpos 96 */
  int y; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int cy; /* bitsize 32, bitpos 192 */
  DWORD style; /* bitsize 32, bitpos 224 */
  LPARAM lParam; /* bitsize 32, bitpos 256 */
};
typedef struct tagMDICREATESTRUCTA /* id 416 */ MDICREATESTRUCTA;
typedef struct tagMDICREATESTRUCTA /* id 416 */ *LPMDICREATESTRUCTA;
struct tagMDICREATESTRUCTW { /* size 36 id 417 */
  LPCWSTR szClass; /* bitsize 32, bitpos 0 */
  LPCWSTR szTitle; /* bitsize 32, bitpos 32 */
  HANDLE hOwner; /* bitsize 32, bitpos 64 */
  int x; /* bitsize 32, bitpos 96 */
  int y; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int cy; /* bitsize 32, bitpos 192 */
  DWORD style; /* bitsize 32, bitpos 224 */
  LPARAM lParam; /* bitsize 32, bitpos 256 */
};
typedef struct tagMDICREATESTRUCTW /* id 417 */ MDICREATESTRUCTW;
typedef struct tagMDICREATESTRUCTW /* id 417 */ *LPMDICREATESTRUCTW;
struct tagMINMAXINFO { /* size 40 id 418 */
  POINT ptReserved; /* bitsize 64, bitpos 0 */
  POINT ptMaxSize; /* bitsize 64, bitpos 64 */
  POINT ptMaxPosition; /* bitsize 64, bitpos 128 */
  POINT ptMinTrackSize; /* bitsize 64, bitpos 192 */
  POINT ptMaxTrackSize; /* bitsize 64, bitpos 256 */
};
typedef struct tagMINMAXINFO /* id 418 */ MINMAXINFO;
typedef struct tagMINMAXINFO /* id 418 */ *PMINMAXINFO;
typedef struct tagMINMAXINFO /* id 418 */ *LPMINMAXINFO;
struct tagMDINEXTMENU { /* size 12 id 419 */
  HMENU hmenuIn; /* bitsize 32, bitpos 0 */
  HMENU hmenuNext; /* bitsize 32, bitpos 32 */
  HWND hwndNext; /* bitsize 32, bitpos 64 */
};
typedef struct tagMDINEXTMENU /* id 419 */ MDINEXTMENU;
typedef struct tagMDINEXTMENU /* id 419 */ *PMDINEXTMENU;
typedef struct tagMDINEXTMENU /* id 419 */ *LPMDINEXTMENU;
struct tagMEASUREITEMSTRUCT { /* size 24 id 420 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  UINT itemWidth; /* bitsize 32, bitpos 96 */
  UINT itemHeight; /* bitsize 32, bitpos 128 */
  DWORD itemData; /* bitsize 32, bitpos 160 */
};
typedef struct tagMEASUREITEMSTRUCT /* id 420 */ MEASUREITEMSTRUCT;
typedef struct tagMEASUREITEMSTRUCT /* id 420 */ *PMEASUREITEMSTRUCT;
typedef struct tagMEASUREITEMSTRUCT /* id 420 */ *LPMEASUREITEMSTRUCT;
struct tagDROPSTRUCT { /* size 28 id 421 */
  HWND hwndSource; /* bitsize 32, bitpos 0 */
  HWND hwndSink; /* bitsize 32, bitpos 32 */
  DWORD wFmt; /* bitsize 32, bitpos 64 */
  DWORD dwData; /* bitsize 32, bitpos 96 */
  POINT ptDrop; /* bitsize 64, bitpos 128 */
  DWORD dwControlData; /* bitsize 32, bitpos 192 */
};
typedef struct tagDROPSTRUCT /* id 421 */ DROPSTRUCT;
typedef struct tagDROPSTRUCT /* id 421 */ *PDROPSTRUCT;
typedef struct tagDROPSTRUCT /* id 421 */ *LPDROPSTRUCT;
typedef DWORD HELPPOLY;
struct tagMULTIKEYHELPA { /* size 8 id 422 */
  DWORD mkSize; /* bitsize 32, bitpos 0 */
  CHAR mkKeylist; /* bitsize 8, bitpos 32 */
  CHAR szKeyphrase[1]:uint32; /* bitsize 8, bitpos 40 */
};
typedef struct tagMULTIKEYHELPA /* id 422 */ MULTIKEYHELPA;
typedef struct tagMULTIKEYHELPA /* id 422 */ *PMULTIKEYHELPA;
typedef struct tagMULTIKEYHELPA /* id 422 */ *LPMULTIKEYHELPA;
struct tagMULTIKEYHELPW { /* size 8 id 423 */
  DWORD mkSize; /* bitsize 32, bitpos 0 */
  WCHAR mkKeylist; /* bitsize 16, bitpos 32 */
  WCHAR szKeyphrase[1]:uint32; /* bitsize 16, bitpos 48 */
};
typedef struct tagMULTIKEYHELPW /* id 423 */ MULTIKEYHELPW;
typedef struct tagMULTIKEYHELPW /* id 423 */ *PMULTIKEYHELPW;
typedef struct tagMULTIKEYHELPW /* id 423 */ *LPMULTIKEYHELPW;
struct tagHELPWININFOA { /* size 28 id 424 */
  int wStructSize; /* bitsize 32, bitpos 0 */
  int x; /* bitsize 32, bitpos 32 */
  int y; /* bitsize 32, bitpos 64 */
  int dx; /* bitsize 32, bitpos 96 */
  int dy; /* bitsize 32, bitpos 128 */
  int wMax; /* bitsize 32, bitpos 160 */
  CHAR rgchMember[2]:uint32; /* bitsize 16, bitpos 192 */
};
typedef struct tagHELPWININFOA /* id 424 */ HELPWININFOA;
typedef struct tagHELPWININFOA /* id 424 */ *PHELPWININFOA;
typedef struct tagHELPWININFOA /* id 424 */ *LPHELPWININFOA;
struct tagHELPWININFOW { /* size 28 id 425 */
  int wStructSize; /* bitsize 32, bitpos 0 */
  int x; /* bitsize 32, bitpos 32 */
  int y; /* bitsize 32, bitpos 64 */
  int dx; /* bitsize 32, bitpos 96 */
  int dy; /* bitsize 32, bitpos 128 */
  int wMax; /* bitsize 32, bitpos 160 */
  WCHAR rgchMember[2]:uint32; /* bitsize 32, bitpos 192 */
};
typedef struct tagHELPWININFOW /* id 425 */ HELPWININFOW;
typedef struct tagHELPWININFOW /* id 425 */ *PHELPWININFOW;
typedef struct tagHELPWININFOW /* id 425 */ *LPHELPWININFOW;
struct tagSTYLESTRUCT { /* size 8 id 426 */
  DWORD styleOld; /* bitsize 32, bitpos 0 */
  DWORD styleNew; /* bitsize 32, bitpos 32 */
};
typedef struct tagSTYLESTRUCT /* id 426 */ STYLESTRUCT;
typedef struct tagSTYLESTRUCT /* id 426 */ *LPSTYLESTRUCT;
struct tagALTTABINFO { /* size 40 id 427 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  int cItems; /* bitsize 32, bitpos 32 */
  int cColumns; /* bitsize 32, bitpos 64 */
  int cRows; /* bitsize 32, bitpos 96 */
  int iColFocus; /* bitsize 32, bitpos 128 */
  int iRowFocus; /* bitsize 32, bitpos 160 */
  int cxItem; /* bitsize 32, bitpos 192 */
  int cyItem; /* bitsize 32, bitpos 224 */
  POINT ptStart; /* bitsize 64, bitpos 256 */
};
typedef struct tagALTTABINFO /* id 427 */ ALTTABINFO;
typedef struct tagALTTABINFO /* id 427 */ *PALTTABINFO;
typedef struct tagALTTABINFO /* id 427 */ *LPALTTABINFO;
struct tagCOMBOBOXINFO { /* size 52 id 428 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcItem; /* bitsize 128, bitpos 32 */
  RECT rcButton; /* bitsize 128, bitpos 160 */
  DWORD stateButton; /* bitsize 32, bitpos 288 */
  HWND hwndCombo; /* bitsize 32, bitpos 320 */
  HWND hwndItem; /* bitsize 32, bitpos 352 */
  HWND hwndList; /* bitsize 32, bitpos 384 */
};
typedef struct tagCOMBOBOXINFO /* id 428 */ COMBOBOXINFO;
typedef struct tagCOMBOBOXINFO /* id 428 */ *PCOMBOBOXINFO;
typedef struct tagCOMBOBOXINFO /* id 428 */ *LPCOMBOBOXINFO;
struct tagCURSORINFO { /* size 20 id 429 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD flags; /* bitsize 32, bitpos 32 */
  HCURSOR hCursor; /* bitsize 32, bitpos 64 */
  POINT ptScreenPos; /* bitsize 64, bitpos 96 */
};
typedef struct tagCURSORINFO /* id 429 */ CURSORINFO;
typedef struct tagCURSORINFO /* id 429 */ *PCURSORINFO;
typedef struct tagCURSORINFO /* id 429 */ *LPCURSORINFO;
struct tagMENUBARINFO { /* size 32 id 430 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcBar; /* bitsize 128, bitpos 32 */
  HMENU hMenu; /* bitsize 32, bitpos 160 */
  HWND hwndMenu; /* bitsize 32, bitpos 192 */
  BOOL fBarFocused; /* bitsize 1, bitpos 224 */
  BOOL fFocused; /* bitsize 1, bitpos 225 */
};
typedef struct tagMENUBARINFO /* id 430 */ MENUBARINFO;
typedef struct tagMENUBARINFO /* id 430 */ *PMENUBARINFO;
struct tagMENUINFO { /* size 28 id 431 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD fMask; /* bitsize 32, bitpos 32 */
  DWORD dwStyle; /* bitsize 32, bitpos 64 */
  UINT cyMax; /* bitsize 32, bitpos 96 */
  HBRUSH hbrBack; /* bitsize 32, bitpos 128 */
  DWORD dwContextHelpID; /* bitsize 32, bitpos 160 */
  ULONG_PTR dwMenuData; /* bitsize 32, bitpos 192 */
};
typedef struct tagMENUINFO /* id 431 */ MENUINFO;
typedef struct tagMENUINFO /* id 431 */ *LPMENUINFO;
typedef MENUINFO const *LPCMENUINFO;
struct tagSCROLLBARINFO { /* size 60 id 432 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcScrollBar; /* bitsize 128, bitpos 32 */
  int dxyLineButton; /* bitsize 32, bitpos 160 */
  int xyThumbTop; /* bitsize 32, bitpos 192 */
  int xyThumbBottom; /* bitsize 32, bitpos 224 */
  int reserved; /* bitsize 32, bitpos 256 */
  DWORD rgstate[6]:uint32; /* bitsize 192, bitpos 288 */
};
typedef struct tagSCROLLBARINFO /* id 432 */ SCROLLBARINFO;
typedef struct tagSCROLLBARINFO /* id 432 */ *PSCROLLBARINFO;
typedef struct tagSCROLLBARINFO /* id 432 */ *LPSCROLLBARINFO;
struct tagWINDOWINFO { /* size 60 id 433 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcWindow; /* bitsize 128, bitpos 32 */
  RECT rcClient; /* bitsize 128, bitpos 160 */
  DWORD dwStyle; /* bitsize 32, bitpos 288 */
  DWORD dwExStyle; /* bitsize 32, bitpos 320 */
  DWORD dwWindowStatus; /* bitsize 32, bitpos 352 */
  UINT cxWindowBorders; /* bitsize 32, bitpos 384 */
  UINT cyWindowBorders; /* bitsize 32, bitpos 416 */
  ATOM atomWindowType; /* bitsize 16, bitpos 448 */
  WORD wCreatorVersion; /* bitsize 16, bitpos 464 */
};
typedef struct tagWINDOWINFO /* id 433 */ WINDOWINFO;
typedef struct tagWINDOWINFO /* id 433 */ *PWINDOWINFO;
typedef struct tagWINDOWINFO /* id 433 */ *LPWINDOWINFO;
struct tagLASTINPUTINFO { /* size 8 id 434 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwTime; /* bitsize 32, bitpos 32 */
};
typedef struct tagLASTINPUTINFO /* id 434 */ LASTINPUTINFO;
typedef struct tagLASTINPUTINFO /* id 434 */ *PLASTINPUTINFO;
struct tagMONITORINFO { /* size 40 id 435 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcMonitor; /* bitsize 128, bitpos 32 */
  RECT rcWork; /* bitsize 128, bitpos 160 */
  DWORD dwFlags; /* bitsize 32, bitpos 288 */
};
typedef struct tagMONITORINFO /* id 435 */ MONITORINFO;
typedef struct tagMONITORINFO /* id 435 */ *LPMONITORINFO;
struct tagMONITORINFOEXA { /* size 72 id 436 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcMonitor; /* bitsize 128, bitpos 32 */
  RECT rcWork; /* bitsize 128, bitpos 160 */
  DWORD dwFlags; /* bitsize 32, bitpos 288 */
  CHAR szDevice[32]:uint32; /* bitsize 256, bitpos 320 */
};
typedef struct tagMONITORINFOEXA /* id 436 */ MONITORINFOEXA;
typedef struct tagMONITORINFOEXA /* id 436 */ *LPMONITORINFOEXA;
struct tagMONITORINFOEXW { /* size 104 id 437 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  RECT rcMonitor; /* bitsize 128, bitpos 32 */
  RECT rcWork; /* bitsize 128, bitpos 160 */
  DWORD dwFlags; /* bitsize 32, bitpos 288 */
  WCHAR szDevice[32]:uint32; /* bitsize 512, bitpos 320 */
};
typedef struct tagMONITORINFOEXW /* id 437 */ MONITORINFOEXW;
typedef struct tagMONITORINFOEXW /* id 437 */ *LPMONITORINFOEXW;
struct tagKBDLLHOOKSTRUCT { /* size 20 id 438 */
  DWORD vkCode; /* bitsize 32, bitpos 0 */
  DWORD scanCode; /* bitsize 32, bitpos 32 */
  DWORD flags; /* bitsize 32, bitpos 64 */
  DWORD time; /* bitsize 32, bitpos 96 */
  DWORD dwExtraInfo; /* bitsize 32, bitpos 128 */
};
typedef struct tagKBDLLHOOKSTRUCT /* id 438 */ KBDLLHOOKSTRUCT;
typedef struct tagKBDLLHOOKSTRUCT /* id 438 */ *LPKBDLLHOOKSTRUCT;
typedef struct tagKBDLLHOOKSTRUCT /* id 438 */ *PKBDLLHOOKSTRUCT;
typedef struct %anon439 { /* size 24 */
  POINT pt; /* bitsize 64, bitpos 0 */
  DWORD mouseData; /* bitsize 32, bitpos 64 */
  DWORD flags; /* bitsize 32, bitpos 96 */
  DWORD time; /* bitsize 32, bitpos 128 */
  ULONG_PTR dwExtraInfo; /* bitsize 32, bitpos 160 */
} MSLLHOOKSTRUCT;
typedef struct %anon439 *PMSLLHOOKSTRUCT;
typedef GUID const *LPCGUID;
#pragma cconv __stdcall
HKL ActivateKeyboardLayout (HKL a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x0 */
  /* file winuser.c line 3410 addr 0x0 */
  /* file winuser.c line 3410 addr 0x3 */
} /* 0x7 */
BOOL AdjustWindowRect (LPRECT a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x7 */
  /* file winuser.c line 3411 addr 0x7 */
  /* file winuser.c line 3411 addr 0xa */
} /* 0xe */
BOOL AdjustWindowRectEx (LPRECT a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xe */
  /* file winuser.c line 3412 addr 0xe */
  /* file winuser.c line 3412 addr 0x11 */
} /* 0x15 */
BOOL AnyPopup ()
{ /* 0x15 */
  /* file winuser.c line 3416 addr 0x15 */
  /* file winuser.c line 3416 addr 0x18 */
} /* 0x1a */
BOOL AppendMenuA (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT_PTR c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x1a */
  /* file winuser.c line 3417 addr 0x1a */
  /* file winuser.c line 3417 addr 0x1d */
} /* 0x21 */
BOOL AppendMenuW (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT_PTR c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x21 */
  /* file winuser.c line 3418 addr 0x21 */
  /* file winuser.c line 3418 addr 0x24 */
} /* 0x28 */
UINT ArrangeIconicWindows (HWND a /* 0x8 */)
{ /* 0x28 */
  /* file winuser.c line 3419 addr 0x28 */
  /* file winuser.c line 3419 addr 0x2b */
} /* 0x2f */
BOOL AttachThreadInput (DWORD a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x2f */
  /* file winuser.c line 3420 addr 0x2f */
  /* file winuser.c line 3420 addr 0x32 */
} /* 0x36 */
HDWP BeginDeferWindowPos (int a /* 0x8 */)
{ /* 0x36 */
  /* file winuser.c line 3421 addr 0x36 */
  /* file winuser.c line 3421 addr 0x39 */
} /* 0x3d */
HDC BeginPaint (HWND a /* 0x8 */, LPPAINTSTRUCT b /* 0xc */)
{ /* 0x3d */
  /* file winuser.c line 3422 addr 0x3d */
  /* file winuser.c line 3422 addr 0x40 */
} /* 0x44 */
BOOL BringWindowToTop (HWND a /* 0x8 */)
{ /* 0x44 */
  /* file winuser.c line 3423 addr 0x44 */
  /* file winuser.c line 3423 addr 0x47 */
} /* 0x4b */
long int BroadcastSystemMessage (DWORD a /* 0x8 */, LPDWORD b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x4b */
  /* file winuser.c line 3424 addr 0x4b */
  /* file winuser.c line 3424 addr 0x4e */
} /* 0x52 */
long int BroadcastSystemMessageA (DWORD a /* 0x8 */, LPDWORD b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x52 */
  /* file winuser.c line 3426 addr 0x52 */
  /* file winuser.c line 3426 addr 0x55 */
} /* 0x59 */
long int BroadcastSystemMessageW (DWORD a /* 0x8 */, LPDWORD b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x59 */
  /* file winuser.c line 3427 addr 0x59 */
  /* file winuser.c line 3427 addr 0x5c */
} /* 0x60 */
BOOL CallMsgFilterA (LPMSG a /* 0x8 */, INT b /* 0xc */)
{ /* 0x60 */
  /* file winuser.c line 3433 addr 0x60 */
  /* file winuser.c line 3433 addr 0x63 */
} /* 0x67 */
BOOL CallMsgFilterW (LPMSG a /* 0x8 */, INT b /* 0xc */)
{ /* 0x67 */
  /* file winuser.c line 3434 addr 0x67 */
  /* file winuser.c line 3434 addr 0x6a */
} /* 0x6e */
LRESULT CallNextHookEx (HHOOK a /* 0x8 */, int b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x6e */
  /* file winuser.c line 3435 addr 0x6e */
  /* file winuser.c line 3435 addr 0x71 */
} /* 0x75 */
LRESULT CallWindowProcA (WNDPROC a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x75 */
  /* file winuser.c line 3436 addr 0x75 */
  /* file winuser.c line 3436 addr 0x78 */
} /* 0x7c */
LRESULT CallWindowProcW (WNDPROC a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x7c */
  /* file winuser.c line 3437 addr 0x7c */
  /* file winuser.c line 3437 addr 0x7f */
} /* 0x83 */
WORD CascadeWindows (HWND a /* 0x8 */, UINT b /* 0xc */, LPCRECT c /* 0x10 */, UINT d /* 0x14 */, HWND const *e /* 0x18 */)
{ /* 0x83 */
  /* file winuser.c line 3438 addr 0x83 */
  /* file winuser.c line 3438 addr 0x86 */
} /* 0x8a */
BOOL ChangeClipboardChain (HWND a /* 0x8 */, HWND b /* 0xc */)
{ /* 0x8a */
  /* file winuser.c line 3439 addr 0x8a */
  /* file winuser.c line 3439 addr 0x8d */
} /* 0x91 */
LONG ChangeDisplaySettingsA (PDEVMODEA a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x91 */
  /* file winuser.c line 3441 addr 0x91 */
  /* file winuser.c line 3441 addr 0x94 */
} /* 0x98 */
LONG ChangeDisplaySettingsW (PDEVMODEW a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x98 */
  /* file winuser.c line 3442 addr 0x98 */
  /* file winuser.c line 3442 addr 0x9b */
} /* 0x9f */
LONG ChangeDisplaySettingsExA (LPCSTR a /* 0x8 */, LPDEVMODEA b /* 0xc */, HWND c /* 0x10 */, DWORD d /* 0x14 */, LPVOID e /* 0x18 */)
{ /* 0x9f */
  /* file winuser.c line 3443 addr 0x9f */
  /* file winuser.c line 3443 addr 0xa2 */
} /* 0xa6 */
LONG ChangeDisplaySettingsExW (LPCWSTR a /* 0x8 */, LPDEVMODEW b /* 0xc */, HWND c /* 0x10 */, DWORD d /* 0x14 */, LPVOID e /* 0x18 */)
{ /* 0xa6 */
  /* file winuser.c line 3444 addr 0xa6 */
  /* file winuser.c line 3444 addr 0xa9 */
} /* 0xad */
BOOL ChangeMenuA (HMENU a /* 0x8 */, UINT b /* 0xc */, LPCSTR c /* 0x10 */, UINT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0xad */
  /* file winuser.c line 3446 addr 0xad */
  /* file winuser.c line 3446 addr 0xb0 */
} /* 0xb4 */
BOOL ChangeMenuW (HMENU a /* 0x8 */, UINT b /* 0xc */, LPCWSTR c /* 0x10 */, UINT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0xb4 */
  /* file winuser.c line 3447 addr 0xb4 */
  /* file winuser.c line 3447 addr 0xb7 */
} /* 0xbb */
LPSTR CharLowerA (LPSTR a /* 0x8 */)
{ /* 0xbb */
  /* file winuser.c line 3448 addr 0xbb */
  /* file winuser.c line 3448 addr 0xbe */
} /* 0xc2 */
LPWSTR CharLowerW (LPWSTR a /* 0x8 */)
{ /* 0xc2 */
  /* file winuser.c line 3449 addr 0xc2 */
  /* file winuser.c line 3449 addr 0xc5 */
} /* 0xc9 */
DWORD CharLowerBuffA (LPSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xc9 */
  /* file winuser.c line 3450 addr 0xc9 */
  /* file winuser.c line 3450 addr 0xcc */
} /* 0xd0 */
DWORD CharLowerBuffW (LPWSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xd0 */
  /* file winuser.c line 3451 addr 0xd0 */
  /* file winuser.c line 3451 addr 0xd3 */
} /* 0xd7 */
LPSTR CharNextA (LPCSTR a /* 0x8 */)
{ /* 0xd7 */
  /* file winuser.c line 3452 addr 0xd7 */
  /* file winuser.c line 3452 addr 0xda */
} /* 0xde */
LPWSTR CharNextW (LPCWSTR a /* 0x8 */)
{ /* 0xde */
  /* file winuser.c line 3453 addr 0xde */
  /* file winuser.c line 3453 addr 0xe1 */
} /* 0xe5 */
LPSTR CharNextExA (int a /* 0x8 */, LPCSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xe5 */
  WORD a /* 0xfffffffe */;
  /* file winuser.c line 3454 addr 0xe5 */
  /* file winuser.c line 3454 addr 0xf2 */
} /* 0xf6 */
LPSTR CharPrevA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xf6 */
  /* file winuser.c line 3455 addr 0xf6 */
  /* file winuser.c line 3455 addr 0xf9 */
} /* 0xfd */
LPWSTR CharPrevW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xfd */
  /* file winuser.c line 3456 addr 0xfd */
  /* file winuser.c line 3456 addr 0x100 */
} /* 0x104 */
LPSTR CharPrevExA (int a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x104 */
  WORD a /* 0xfffffffe */;
  /* file winuser.c line 3457 addr 0x104 */
  /* file winuser.c line 3457 addr 0x111 */
} /* 0x115 */
BOOL CharToOemA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x115 */
  /* file winuser.c line 3458 addr 0x115 */
  /* file winuser.c line 3458 addr 0x118 */
} /* 0x11c */
BOOL CharToOemW (LPCWSTR a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0x11c */
  /* file winuser.c line 3459 addr 0x11c */
  /* file winuser.c line 3459 addr 0x11f */
} /* 0x123 */
BOOL CharToOemBuffA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x123 */
  /* file winuser.c line 3460 addr 0x123 */
  /* file winuser.c line 3460 addr 0x126 */
} /* 0x12a */
BOOL CharToOemBuffW (LPCWSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x12a */
  /* file winuser.c line 3461 addr 0x12a */
  /* file winuser.c line 3461 addr 0x12d */
} /* 0x131 */
LPSTR CharUpperA (LPSTR a /* 0x8 */)
{ /* 0x131 */
  /* file winuser.c line 3462 addr 0x131 */
  /* file winuser.c line 3462 addr 0x134 */
} /* 0x138 */
LPWSTR CharUpperW (LPWSTR a /* 0x8 */)
{ /* 0x138 */
  /* file winuser.c line 3463 addr 0x138 */
  /* file winuser.c line 3463 addr 0x13b */
} /* 0x13f */
DWORD CharUpperBuffA (LPSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x13f */
  /* file winuser.c line 3464 addr 0x13f */
  /* file winuser.c line 3464 addr 0x142 */
} /* 0x146 */
DWORD CharUpperBuffW (LPWSTR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x146 */
  /* file winuser.c line 3465 addr 0x146 */
  /* file winuser.c line 3465 addr 0x149 */
} /* 0x14d */
BOOL CheckDlgButton (HWND a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x14d */
  /* file winuser.c line 3466 addr 0x14d */
  /* file winuser.c line 3466 addr 0x150 */
} /* 0x154 */
DWORD CheckMenuItem (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x154 */
  /* file winuser.c line 3467 addr 0x154 */
  /* file winuser.c line 3467 addr 0x157 */
} /* 0x15b */
BOOL CheckMenuRadioItem (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x15b */
  /* file winuser.c line 3468 addr 0x15b */
  /* file winuser.c line 3468 addr 0x15e */
} /* 0x162 */
BOOL CheckRadioButton (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x162 */
  /* file winuser.c line 3469 addr 0x162 */
  /* file winuser.c line 3469 addr 0x165 */
} /* 0x169 */
HWND ChildWindowFromPoint (HWND a /* 0x8 */, POINT b /* 0xc */)
{ /* 0x169 */
  /* file winuser.c line 3470 addr 0x169 */
  /* file winuser.c line 3470 addr 0x16c */
} /* 0x170 */
HWND ChildWindowFromPointEx (HWND a /* 0x8 */, POINT b /* 0xc */, UINT c /* 0x14 */)
{ /* 0x170 */
  /* file winuser.c line 3471 addr 0x170 */
  /* file winuser.c line 3471 addr 0x173 */
} /* 0x177 */
BOOL ClientToScreen (HWND a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0x177 */
  /* file winuser.c line 3472 addr 0x177 */
  /* file winuser.c line 3472 addr 0x17a */
} /* 0x17e */
BOOL ClipCursor (LPCRECT a /* 0x8 */)
{ /* 0x17e */
  /* file winuser.c line 3473 addr 0x17e */
  /* file winuser.c line 3473 addr 0x181 */
} /* 0x185 */
BOOL CloseClipboard ()
{ /* 0x185 */
  /* file winuser.c line 3474 addr 0x185 */
  /* file winuser.c line 3474 addr 0x188 */
} /* 0x18a */
BOOL CloseDesktop (HDESK a /* 0x8 */)
{ /* 0x18a */
  /* file winuser.c line 3475 addr 0x18a */
  /* file winuser.c line 3475 addr 0x18d */
} /* 0x191 */
BOOL CloseWindow (HWND a /* 0x8 */)
{ /* 0x191 */
  /* file winuser.c line 3476 addr 0x191 */
  /* file winuser.c line 3476 addr 0x194 */
} /* 0x198 */
BOOL CloseWindowStation (HWINSTA a /* 0x8 */)
{ /* 0x198 */
  /* file winuser.c line 3477 addr 0x198 */
  /* file winuser.c line 3477 addr 0x19b */
} /* 0x19f */
int CopyAcceleratorTableA (HACCEL a /* 0x8 */, LPACCEL b /* 0xc */, int c /* 0x10 */)
{ /* 0x19f */
  /* file winuser.c line 3478 addr 0x19f */
  /* file winuser.c line 3478 addr 0x1a2 */
} /* 0x1a6 */
int CopyAcceleratorTableW (HACCEL a /* 0x8 */, LPACCEL b /* 0xc */, int c /* 0x10 */)
{ /* 0x1a6 */
  /* file winuser.c line 3479 addr 0x1a6 */
  /* file winuser.c line 3479 addr 0x1a9 */
} /* 0x1ad */
HICON CopyIcon (HICON a /* 0x8 */)
{ /* 0x1ad */
  /* file winuser.c line 3481 addr 0x1ad */
  /* file winuser.c line 3481 addr 0x1b0 */
} /* 0x1b4 */
HANDLE CopyImage (HANDLE a /* 0x8 */, UINT b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x1b4 */
  /* file winuser.c line 3482 addr 0x1b4 */
  /* file winuser.c line 3482 addr 0x1b7 */
} /* 0x1bb */
BOOL CopyRect (LPRECT a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x1bb */
  /* file winuser.c line 3483 addr 0x1bb */
  /* file winuser.c line 3483 addr 0x1be */
} /* 0x1c2 */
int CountClipboardFormats ()
{ /* 0x1c2 */
  /* file winuser.c line 3484 addr 0x1c2 */
  /* file winuser.c line 3484 addr 0x1c5 */
} /* 0x1c7 */
HACCEL CreateAcceleratorTableA (LPACCEL a /* 0x8 */, int b /* 0xc */)
{ /* 0x1c7 */
  /* file winuser.c line 3485 addr 0x1c7 */
  /* file winuser.c line 3485 addr 0x1ca */
} /* 0x1ce */
HACCEL CreateAcceleratorTableW (LPACCEL a /* 0x8 */, int b /* 0xc */)
{ /* 0x1ce */
  /* file winuser.c line 3486 addr 0x1ce */
  /* file winuser.c line 3486 addr 0x1d1 */
} /* 0x1d5 */
BOOL CreateCaret (HWND a /* 0x8 */, HBITMAP b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x1d5 */
  /* file winuser.c line 3487 addr 0x1d5 */
  /* file winuser.c line 3487 addr 0x1d8 */
} /* 0x1dc */
HCURSOR CreateCursor (HINSTANCE a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, PCVOID f /* 0x1c */, PCVOID g /* 0x20 */)
{ /* 0x1dc */
  /* file winuser.c line 3488 addr 0x1dc */
  /* file winuser.c line 3488 addr 0x1df */
} /* 0x1e3 */
HDESK CreateDesktopA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, LPDEVMODEA c /* 0x10 */, DWORD d /* 0x14 */, ACCESS_MASK e /* 0x18 */, LPSECURITY_ATTRIBUTES f /* 0x1c */)
{ /* 0x1e3 */
  /* file winuser.c line 3490 addr 0x1e3 */
  /* file winuser.c line 3490 addr 0x1e6 */
} /* 0x1ea */
HDESK CreateDesktopW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, LPDEVMODEW c /* 0x10 */, DWORD d /* 0x14 */, ACCESS_MASK e /* 0x18 */, LPSECURITY_ATTRIBUTES f /* 0x1c */)
{ /* 0x1ea */
  /* file winuser.c line 3491 addr 0x1ea */
  /* file winuser.c line 3491 addr 0x1ed */
} /* 0x1f1 */
HWND CreateDialogIndirectParamA (HINSTANCE a /* 0x8 */, LPCDLGTEMPLATE b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x1f1 */
  /* file winuser.c line 3497 addr 0x1f1 */
  /* file winuser.c line 3497 addr 0x1f4 */
} /* 0x1f8 */
HWND CreateDialogIndirectParamW (HINSTANCE a /* 0x8 */, LPCDLGTEMPLATE b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x1f8 */
  /* file winuser.c line 3498 addr 0x1f8 */
  /* file winuser.c line 3498 addr 0x1fb */
} /* 0x1ff */
HWND CreateDialogParamA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x1ff */
  /* file winuser.c line 3499 addr 0x1ff */
  /* file winuser.c line 3499 addr 0x202 */
} /* 0x206 */
HWND CreateDialogParamW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x206 */
  /* file winuser.c line 3500 addr 0x206 */
  /* file winuser.c line 3500 addr 0x209 */
} /* 0x20d */
HICON CreateIcon (HINSTANCE a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, BYTE const *f /* 0x1c */, BYTE const *g /* 0x20 */)
{ /* 0x20d */
  BYTE e /* 0xfffffffe */;
  BYTE d /* 0xffffffff */;
  /* file winuser.c line 3501 addr 0x20d */
  /* file winuser.c line 3501 addr 0x21f */
} /* 0x223 */
HICON CreateIconFromResource (PBYTE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x223 */
  /* file winuser.c line 3502 addr 0x223 */
  /* file winuser.c line 3502 addr 0x226 */
} /* 0x22a */
HICON CreateIconFromResourceEx (PBYTE a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, UINT g /* 0x20 */)
{ /* 0x22a */
  /* file winuser.c line 3503 addr 0x22a */
  /* file winuser.c line 3503 addr 0x22d */
} /* 0x231 */
HICON CreateIconIndirect (PICONINFO a /* 0x8 */)
{ /* 0x231 */
  /* file winuser.c line 3504 addr 0x231 */
  /* file winuser.c line 3504 addr 0x234 */
} /* 0x238 */
HWND CreateMDIWindowA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */, DWORD c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, HWND h /* 0x24 */, HINSTANCE i /* 0x28 */, LPARAM j /* 0x2c */)
{ /* 0x238 */
  /* file winuser.c line 3505 addr 0x238 */
  /* file winuser.c line 3505 addr 0x23b */
} /* 0x23f */
HWND CreateMDIWindowW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, DWORD c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, HWND h /* 0x24 */, HINSTANCE i /* 0x28 */, LPARAM j /* 0x2c */)
{ /* 0x23f */
  /* file winuser.c line 3506 addr 0x23f */
  /* file winuser.c line 3506 addr 0x242 */
} /* 0x246 */
HMENU CreateMenu ()
{ /* 0x246 */
  /* file winuser.c line 3507 addr 0x246 */
  /* file winuser.c line 3507 addr 0x249 */
} /* 0x24b */
HMENU CreatePopupMenu ()
{ /* 0x24b */
  /* file winuser.c line 3508 addr 0x24b */
  /* file winuser.c line 3508 addr 0x24e */
} /* 0x250 */
HWND CreateWindowExA (DWORD a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, DWORD d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, HWND i /* 0x28 */, HMENU j /* 0x2c */, HINSTANCE k /* 0x30 */, LPVOID l /* 0x34 */)
{ /* 0x250 */
  /* file winuser.c line 3511 addr 0x250 */
  /* file winuser.c line 3511 addr 0x253 */
} /* 0x257 */
HWND CreateWindowExW (DWORD a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, DWORD d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, HWND i /* 0x28 */, HMENU j /* 0x2c */, HINSTANCE k /* 0x30 */, LPVOID l /* 0x34 */)
{ /* 0x257 */
  /* file winuser.c line 3512 addr 0x257 */
  /* file winuser.c line 3512 addr 0x25a */
} /* 0x25e */
HWINSTA CreateWindowStationA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */)
{ /* 0x25e */
  /* file winuser.c line 3513 addr 0x25e */
  /* file winuser.c line 3513 addr 0x261 */
} /* 0x265 */
HWINSTA CreateWindowStationW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, LPSECURITY_ATTRIBUTES d /* 0x14 */)
{ /* 0x265 */
  /* file winuser.c line 3514 addr 0x265 */
  /* file winuser.c line 3514 addr 0x268 */
} /* 0x26c */
LRESULT DefDlgProcA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x26c */
  /* file winuser.c line 3515 addr 0x26c */
  /* file winuser.c line 3515 addr 0x26f */
} /* 0x273 */
LRESULT DefDlgProcW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x273 */
  /* file winuser.c line 3516 addr 0x273 */
  /* file winuser.c line 3516 addr 0x276 */
} /* 0x27a */
HDWP DeferWindowPos (HDWP a /* 0x8 */, HWND b /* 0xc */, HWND c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, UINT h /* 0x24 */)
{ /* 0x27a */
  /* file winuser.c line 3517 addr 0x27a */
  /* file winuser.c line 3517 addr 0x27d */
} /* 0x281 */
LRESULT DefFrameProcA (HWND a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x281 */
  /* file winuser.c line 3518 addr 0x281 */
  /* file winuser.c line 3518 addr 0x284 */
} /* 0x288 */
LRESULT DefFrameProcW (HWND a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x288 */
  /* file winuser.c line 3519 addr 0x288 */
  /* file winuser.c line 3519 addr 0x28b */
} /* 0x28f */
LRESULT DefMDIChildProcA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x28f */
  /* file winuser.c line 3521 addr 0x28f */
  /* file winuser.c line 3521 addr 0x292 */
} /* 0x296 */
LRESULT DefMDIChildProcW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x296 */
  /* file winuser.c line 3522 addr 0x296 */
  /* file winuser.c line 3522 addr 0x299 */
} /* 0x29d */
LRESULT DefWindowProcA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x29d */
  /* file winuser.c line 3526 addr 0x29d */
  /* file winuser.c line 3526 addr 0x2a0 */
} /* 0x2a4 */
LRESULT DefWindowProcW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x2a4 */
  /* file winuser.c line 3527 addr 0x2a4 */
  /* file winuser.c line 3527 addr 0x2a7 */
} /* 0x2ab */
BOOL DeleteMenu (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x2ab */
  /* file winuser.c line 3528 addr 0x2ab */
  /* file winuser.c line 3528 addr 0x2ae */
} /* 0x2b2 */
BOOL DeregisterShellHookWindow (HWND a /* 0x8 */)
{ /* 0x2b2 */
  /* file winuser.c line 3529 addr 0x2b2 */
  /* file winuser.c line 3529 addr 0x2b5 */
} /* 0x2b9 */
BOOL DestroyAcceleratorTable (HACCEL a /* 0x8 */)
{ /* 0x2b9 */
  /* file winuser.c line 3530 addr 0x2b9 */
  /* file winuser.c line 3530 addr 0x2bc */
} /* 0x2c0 */
BOOL DestroyCaret ()
{ /* 0x2c0 */
  /* file winuser.c line 3531 addr 0x2c0 */
  /* file winuser.c line 3531 addr 0x2c3 */
} /* 0x2c5 */
BOOL DestroyCursor (HCURSOR a /* 0x8 */)
{ /* 0x2c5 */
  /* file winuser.c line 3532 addr 0x2c5 */
  /* file winuser.c line 3532 addr 0x2c8 */
} /* 0x2cc */
BOOL DestroyIcon (HICON a /* 0x8 */)
{ /* 0x2cc */
  /* file winuser.c line 3533 addr 0x2cc */
  /* file winuser.c line 3533 addr 0x2cf */
} /* 0x2d3 */
BOOL DestroyMenu (HMENU a /* 0x8 */)
{ /* 0x2d3 */
  /* file winuser.c line 3534 addr 0x2d3 */
  /* file winuser.c line 3534 addr 0x2d6 */
} /* 0x2da */
BOOL DestroyWindow (HWND a /* 0x8 */)
{ /* 0x2da */
  /* file winuser.c line 3535 addr 0x2da */
  /* file winuser.c line 3535 addr 0x2dd */
} /* 0x2e1 */
int DialogBoxIndirectParamA (HINSTANCE a /* 0x8 */, LPCDLGTEMPLATE b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x2e1 */
  /* file winuser.c line 3540 addr 0x2e1 */
  /* file winuser.c line 3540 addr 0x2e4 */
} /* 0x2e8 */
int DialogBoxIndirectParamW (HINSTANCE a /* 0x8 */, LPCDLGTEMPLATE b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x2e8 */
  /* file winuser.c line 3541 addr 0x2e8 */
  /* file winuser.c line 3541 addr 0x2eb */
} /* 0x2ef */
int DialogBoxParamA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x2ef */
  /* file winuser.c line 3546 addr 0x2ef */
  /* file winuser.c line 3546 addr 0x2f2 */
} /* 0x2f6 */
int DialogBoxParamW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, HWND c /* 0x10 */, DLGPROC d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0x2f6 */
  /* file winuser.c line 3547 addr 0x2f6 */
  /* file winuser.c line 3547 addr 0x2f9 */
} /* 0x2fd */
LONG DispatchMessageA (MSG const *a /* 0x8 */)
{ /* 0x2fd */
  /* file winuser.c line 3549 addr 0x2fd */
  /* file winuser.c line 3549 addr 0x300 */
} /* 0x304 */
LONG DispatchMessageW (MSG const *a /* 0x8 */)
{ /* 0x304 */
  /* file winuser.c line 3550 addr 0x304 */
  /* file winuser.c line 3550 addr 0x307 */
} /* 0x30b */
int DlgDirListA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x30b */
  /* file winuser.c line 3551 addr 0x30b */
  /* file winuser.c line 3551 addr 0x30e */
} /* 0x312 */
int DlgDirListW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x312 */
  /* file winuser.c line 3552 addr 0x312 */
  /* file winuser.c line 3552 addr 0x315 */
} /* 0x319 */
int DlgDirListComboBoxA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x319 */
  /* file winuser.c line 3553 addr 0x319 */
  /* file winuser.c line 3553 addr 0x31c */
} /* 0x320 */
int DlgDirListComboBoxW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x320 */
  /* file winuser.c line 3554 addr 0x320 */
  /* file winuser.c line 3554 addr 0x323 */
} /* 0x327 */
BOOL DlgDirSelectComboBoxExA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x327 */
  /* file winuser.c line 3555 addr 0x327 */
  /* file winuser.c line 3555 addr 0x32a */
} /* 0x32e */
BOOL DlgDirSelectComboBoxExW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x32e */
  /* file winuser.c line 3556 addr 0x32e */
  /* file winuser.c line 3556 addr 0x331 */
} /* 0x335 */
BOOL DlgDirSelectExA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x335 */
  /* file winuser.c line 3557 addr 0x335 */
  /* file winuser.c line 3557 addr 0x338 */
} /* 0x33c */
BOOL DlgDirSelectExW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */)
{ /* 0x33c */
  /* file winuser.c line 3558 addr 0x33c */
  /* file winuser.c line 3558 addr 0x33f */
} /* 0x343 */
BOOL DragDetect (HWND a /* 0x8 */, POINT b /* 0xc */)
{ /* 0x343 */
  /* file winuser.c line 3559 addr 0x343 */
  /* file winuser.c line 3559 addr 0x346 */
} /* 0x34a */
DWORD DragObject (HWND a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, DWORD d /* 0x14 */, HCURSOR e /* 0x18 */)
{ /* 0x34a */
  /* file winuser.c line 3560 addr 0x34a */
  /* file winuser.c line 3560 addr 0x34d */
} /* 0x351 */
BOOL DrawAnimatedRects (HWND a /* 0x8 */, int b /* 0xc */, LPCRECT c /* 0x10 */, LPCRECT d /* 0x14 */)
{ /* 0x351 */
  /* file winuser.c line 3561 addr 0x351 */
  /* file winuser.c line 3561 addr 0x354 */
} /* 0x358 */
BOOL DrawCaption (HWND a /* 0x8 */, HDC b /* 0xc */, LPCRECT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x358 */
  /* file winuser.c line 3562 addr 0x358 */
  /* file winuser.c line 3562 addr 0x35b */
} /* 0x35f */
BOOL DrawEdge (HDC a /* 0x8 */, LPRECT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x35f */
  /* file winuser.c line 3563 addr 0x35f */
  /* file winuser.c line 3563 addr 0x362 */
} /* 0x366 */
BOOL DrawFocusRect (HDC a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x366 */
  /* file winuser.c line 3564 addr 0x366 */
  /* file winuser.c line 3564 addr 0x369 */
} /* 0x36d */
BOOL DrawFrameControl (HDC a /* 0x8 */, LPRECT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x36d */
  /* file winuser.c line 3565 addr 0x36d */
  /* file winuser.c line 3565 addr 0x370 */
} /* 0x374 */
BOOL DrawIcon (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, HICON d /* 0x14 */)
{ /* 0x374 */
  /* file winuser.c line 3566 addr 0x374 */
  /* file winuser.c line 3566 addr 0x377 */
} /* 0x37b */
BOOL DrawIconEx (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, HICON d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, UINT g /* 0x20 */, HBRUSH h /* 0x24 */, UINT i /* 0x28 */)
{ /* 0x37b */
  /* file winuser.c line 3567 addr 0x37b */
  /* file winuser.c line 3567 addr 0x37e */
} /* 0x382 */
BOOL DrawMenuBar (HWND a /* 0x8 */)
{ /* 0x382 */
  /* file winuser.c line 3568 addr 0x382 */
  /* file winuser.c line 3568 addr 0x385 */
} /* 0x389 */
BOOL DrawStateA (HDC a /* 0x8 */, HBRUSH b /* 0xc */, DRAWSTATEPROC c /* 0x10 */, LPARAM d /* 0x14 */, WPARAM e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */, UINT j /* 0x2c */)
{ /* 0x389 */
  /* file winuser.c line 3569 addr 0x389 */
  /* file winuser.c line 3569 addr 0x38c */
} /* 0x390 */
BOOL DrawStateW (HDC a /* 0x8 */, HBRUSH b /* 0xc */, DRAWSTATEPROC c /* 0x10 */, LPARAM d /* 0x14 */, WPARAM e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */, UINT j /* 0x2c */)
{ /* 0x390 */
  /* file winuser.c line 3570 addr 0x390 */
  /* file winuser.c line 3570 addr 0x393 */
} /* 0x397 */
int DrawTextA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, LPRECT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x397 */
  /* file winuser.c line 3571 addr 0x397 */
  /* file winuser.c line 3571 addr 0x39a */
} /* 0x39e */
int DrawTextW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, LPRECT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x39e */
  /* file winuser.c line 3572 addr 0x39e */
  /* file winuser.c line 3572 addr 0x3a1 */
} /* 0x3a5 */
int DrawTextExA (HDC a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */, LPRECT d /* 0x14 */, UINT e /* 0x18 */, LPDRAWTEXTPARAMS f /* 0x1c */)
{ /* 0x3a5 */
  /* file winuser.c line 3573 addr 0x3a5 */
  /* file winuser.c line 3573 addr 0x3a8 */
} /* 0x3ac */
int DrawTextExW (HDC a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */, LPRECT d /* 0x14 */, UINT e /* 0x18 */, LPDRAWTEXTPARAMS f /* 0x1c */)
{ /* 0x3ac */
  /* file winuser.c line 3574 addr 0x3ac */
  /* file winuser.c line 3574 addr 0x3af */
} /* 0x3b3 */
BOOL EmptyClipboard ()
{ /* 0x3b3 */
  /* file winuser.c line 3575 addr 0x3b3 */
  /* file winuser.c line 3575 addr 0x3b6 */
} /* 0x3b8 */
BOOL EnableMenuItem (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x3b8 */
  /* file winuser.c line 3576 addr 0x3b8 */
  /* file winuser.c line 3576 addr 0x3bb */
} /* 0x3bf */
BOOL EnableScrollBar (HWND a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x3bf */
  /* file winuser.c line 3577 addr 0x3bf */
  /* file winuser.c line 3577 addr 0x3c2 */
} /* 0x3c6 */
BOOL EnableWindow (HWND a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x3c6 */
  /* file winuser.c line 3578 addr 0x3c6 */
  /* file winuser.c line 3578 addr 0x3c9 */
} /* 0x3cd */
BOOL EndDeferWindowPos (HDWP a /* 0x8 */)
{ /* 0x3cd */
  /* file winuser.c line 3579 addr 0x3cd */
  /* file winuser.c line 3579 addr 0x3d0 */
} /* 0x3d4 */
BOOL EndDialog (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x3d4 */
  /* file winuser.c line 3580 addr 0x3d4 */
  /* file winuser.c line 3580 addr 0x3d7 */
} /* 0x3db */
BOOL EndMenu ()
{ /* 0x3db */
  /* file winuser.c line 3581 addr 0x3db */
  /* file winuser.c line 3581 addr 0x3de */
} /* 0x3e0 */
BOOL EndPaint (HWND a /* 0x8 */, PAINTSTRUCT const *b /* 0xc */)
{ /* 0x3e0 */
  /* file winuser.c line 3582 addr 0x3e0 */
  /* file winuser.c line 3582 addr 0x3e3 */
} /* 0x3e7 */
BOOL EnumChildWindows (HWND a /* 0x8 */, ENUMWINDOWSPROC b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x3e7 */
  /* file winuser.c line 3586 addr 0x3e7 */
  /* file winuser.c line 3586 addr 0x3ea */
} /* 0x3ee */
UINT EnumClipboardFormats (UINT a /* 0x8 */)
{ /* 0x3ee */
  /* file winuser.c line 3587 addr 0x3ee */
  /* file winuser.c line 3587 addr 0x3f1 */
} /* 0x3f5 */
BOOL EnumDesktopsA (HWINSTA a /* 0x8 */, DESKTOPENUMPROCA b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x3f5 */
  /* file winuser.c line 3588 addr 0x3f5 */
  /* file winuser.c line 3588 addr 0x3f8 */
} /* 0x3fc */
BOOL EnumDesktopsW (HWINSTA a /* 0x8 */, DESKTOPENUMPROCW b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x3fc */
  /* file winuser.c line 3589 addr 0x3fc */
  /* file winuser.c line 3589 addr 0x3ff */
} /* 0x403 */
BOOL EnumDesktopWindows (HDESK a /* 0x8 */, ENUMWINDOWSPROC b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x403 */
  /* file winuser.c line 3590 addr 0x403 */
  /* file winuser.c line 3590 addr 0x406 */
} /* 0x40a */
BOOL EnumDisplayMonitors (HDC a /* 0x8 */, LPCRECT b /* 0xc */, MONITORENUMPROC c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0x40a */
  /* file winuser.c line 3591 addr 0x40a */
  /* file winuser.c line 3591 addr 0x40d */
} /* 0x411 */
BOOL EnumDisplaySettingsA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, PDEVMODEA c /* 0x10 */)
{ /* 0x411 */
  /* file winuser.c line 3593 addr 0x411 */
  /* file winuser.c line 3593 addr 0x414 */
} /* 0x418 */
BOOL EnumDisplaySettingsW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, PDEVMODEW c /* 0x10 */)
{ /* 0x418 */
  /* file winuser.c line 3594 addr 0x418 */
  /* file winuser.c line 3594 addr 0x41b */
} /* 0x41f */
BOOL EnumDisplayDevicesA (LPCSTR a /* 0x8 */, DWORD b /* 0xc */, PDISPLAY_DEVICEA c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x41f */
  /* file winuser.c line 3599 addr 0x41f */
  /* file winuser.c line 3599 addr 0x422 */
} /* 0x426 */
BOOL EnumDisplayDevicesW (LPCWSTR a /* 0x8 */, DWORD b /* 0xc */, PDISPLAY_DEVICEW c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x426 */
  /* file winuser.c line 3600 addr 0x426 */
  /* file winuser.c line 3600 addr 0x429 */
} /* 0x42d */
int EnumPropsA (HWND a /* 0x8 */, PROPENUMPROCA b /* 0xc */)
{ /* 0x42d */
  /* file winuser.c line 3602 addr 0x42d */
  /* file winuser.c line 3602 addr 0x430 */
} /* 0x434 */
int EnumPropsW (HWND a /* 0x8 */, PROPENUMPROCW b /* 0xc */)
{ /* 0x434 */
  /* file winuser.c line 3603 addr 0x434 */
  /* file winuser.c line 3603 addr 0x437 */
} /* 0x43b */
int EnumPropsExA (HWND a /* 0x8 */, PROPENUMPROCEXA b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x43b */
  /* file winuser.c line 3604 addr 0x43b */
  /* file winuser.c line 3604 addr 0x43e */
} /* 0x442 */
int EnumPropsExW (HWND a /* 0x8 */, PROPENUMPROCEXW b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x442 */
  /* file winuser.c line 3605 addr 0x442 */
  /* file winuser.c line 3605 addr 0x445 */
} /* 0x449 */
BOOL EnumThreadWindows (DWORD a /* 0x8 */, WNDENUMPROC b /* 0xc */, LPARAM c /* 0x10 */)
{ /* 0x449 */
  /* file winuser.c line 3607 addr 0x449 */
  /* file winuser.c line 3607 addr 0x44c */
} /* 0x450 */
BOOL EnumWindows (WNDENUMPROC a /* 0x8 */, LPARAM b /* 0xc */)
{ /* 0x450 */
  /* file winuser.c line 3608 addr 0x450 */
  /* file winuser.c line 3608 addr 0x453 */
} /* 0x457 */
BOOL EnumWindowStationsA (WINSTAENUMPROCA a /* 0x8 */, LPARAM b /* 0xc */)
{ /* 0x457 */
  /* file winuser.c line 3609 addr 0x457 */
  /* file winuser.c line 3609 addr 0x45a */
} /* 0x45e */
BOOL EnumWindowStationsW (WINSTAENUMPROCW a /* 0x8 */, LPARAM b /* 0xc */)
{ /* 0x45e */
  /* file winuser.c line 3610 addr 0x45e */
  /* file winuser.c line 3610 addr 0x461 */
} /* 0x465 */
BOOL EqualRect (LPCRECT a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x465 */
  /* file winuser.c line 3611 addr 0x465 */
  /* file winuser.c line 3611 addr 0x468 */
} /* 0x46c */
BOOL ExitWindowsEx (UINT a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0x46c */
  /* file winuser.c line 3613 addr 0x46c */
  /* file winuser.c line 3613 addr 0x46f */
} /* 0x473 */
HWND FindWindowA (LPCSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x473 */
  /* file winuser.c line 3614 addr 0x473 */
  /* file winuser.c line 3614 addr 0x476 */
} /* 0x47a */
HWND FindWindowExA (HWND a /* 0x8 */, HWND b /* 0xc */, LPCSTR c /* 0x10 */, LPCSTR d /* 0x14 */)
{ /* 0x47a */
  /* file winuser.c line 3615 addr 0x47a */
  /* file winuser.c line 3615 addr 0x47d */
} /* 0x481 */
HWND FindWindowExW (HWND a /* 0x8 */, HWND b /* 0xc */, LPCWSTR c /* 0x10 */, LPCWSTR d /* 0x14 */)
{ /* 0x481 */
  /* file winuser.c line 3616 addr 0x481 */
  /* file winuser.c line 3616 addr 0x484 */
} /* 0x488 */
HWND FindWindowW (LPCWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x488 */
  /* file winuser.c line 3617 addr 0x488 */
  /* file winuser.c line 3617 addr 0x48b */
} /* 0x48f */
BOOL FlashWindow (HWND a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x48f */
  /* file winuser.c line 3618 addr 0x48f */
  /* file winuser.c line 3618 addr 0x492 */
} /* 0x496 */
int FrameRect (HDC a /* 0x8 */, LPCRECT b /* 0xc */, HBRUSH c /* 0x10 */)
{ /* 0x496 */
  /* file winuser.c line 3622 addr 0x496 */
  /* file winuser.c line 3622 addr 0x499 */
} /* 0x49d */
BOOL FrameRgn (HDC a /* 0x8 */, HRGN b /* 0xc */, HBRUSH c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0x49d */
  /* file winuser.c line 3623 addr 0x49d */
  /* file winuser.c line 3623 addr 0x4a0 */
} /* 0x4a4 */
HWND GetActiveWindow ()
{ /* 0x4a4 */
  /* file winuser.c line 3624 addr 0x4a4 */
  /* file winuser.c line 3624 addr 0x4a7 */
} /* 0x4a9 */
HWND GetAncestor (HWND a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x4a9 */
  /* file winuser.c line 3625 addr 0x4a9 */
  /* file winuser.c line 3625 addr 0x4ac */
} /* 0x4b0 */
SHORT GetAsyncKeyState (int a /* 0x8 */)
{ /* 0x4b0 */
  /* file winuser.c line 3626 addr 0x4b0 */
  /* file winuser.c line 3626 addr 0x4b3 */
} /* 0x4b7 */
HWND GetCapture ()
{ /* 0x4b7 */
  /* file winuser.c line 3627 addr 0x4b7 */
  /* file winuser.c line 3627 addr 0x4ba */
} /* 0x4bc */
UINT GetCaretBlinkTime ()
{ /* 0x4bc */
  /* file winuser.c line 3628 addr 0x4bc */
  /* file winuser.c line 3628 addr 0x4bf */
} /* 0x4c1 */
BOOL GetCaretPos (LPPOINT a /* 0x8 */)
{ /* 0x4c1 */
  /* file winuser.c line 3629 addr 0x4c1 */
  /* file winuser.c line 3629 addr 0x4c4 */
} /* 0x4c8 */
BOOL GetClassInfoA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, LPWNDCLASSA c /* 0x10 */)
{ /* 0x4c8 */
  /* file winuser.c line 3630 addr 0x4c8 */
  /* file winuser.c line 3630 addr 0x4cb */
} /* 0x4cf */
BOOL GetClassInfoExA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, LPWNDCLASSEXA c /* 0x10 */)
{ /* 0x4cf */
  /* file winuser.c line 3631 addr 0x4cf */
  /* file winuser.c line 3631 addr 0x4d2 */
} /* 0x4d6 */
BOOL GetClassInfoW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, LPWNDCLASSW c /* 0x10 */)
{ /* 0x4d6 */
  /* file winuser.c line 3632 addr 0x4d6 */
  /* file winuser.c line 3632 addr 0x4d9 */
} /* 0x4dd */
BOOL GetClassInfoExW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, LPWNDCLASSEXW c /* 0x10 */)
{ /* 0x4dd */
  /* file winuser.c line 3633 addr 0x4dd */
  /* file winuser.c line 3633 addr 0x4e0 */
} /* 0x4e4 */
DWORD GetClassLongA (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x4e4 */
  /* file winuser.c line 3634 addr 0x4e4 */
  /* file winuser.c line 3634 addr 0x4e7 */
} /* 0x4eb */
DWORD GetClassLongW (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x4eb */
  /* file winuser.c line 3635 addr 0x4eb */
  /* file winuser.c line 3635 addr 0x4ee */
} /* 0x4f2 */
int GetClassNameA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x4f2 */
  /* file winuser.c line 3643 addr 0x4f2 */
  /* file winuser.c line 3643 addr 0x4f5 */
} /* 0x4f9 */
int GetClassNameW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x4f9 */
  /* file winuser.c line 3644 addr 0x4f9 */
  /* file winuser.c line 3644 addr 0x4fc */
} /* 0x500 */
WORD GetClassWord (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x500 */
  /* file winuser.c line 3645 addr 0x500 */
  /* file winuser.c line 3645 addr 0x503 */
} /* 0x507 */
BOOL GetClientRect (HWND a /* 0x8 */, LPRECT b /* 0xc */)
{ /* 0x507 */
  /* file winuser.c line 3646 addr 0x507 */
  /* file winuser.c line 3646 addr 0x50a */
} /* 0x50e */
HANDLE GetClipboardData (UINT a /* 0x8 */)
{ /* 0x50e */
  /* file winuser.c line 3647 addr 0x50e */
  /* file winuser.c line 3647 addr 0x511 */
} /* 0x515 */
int GetClipboardFormatNameA (UINT a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x515 */
  /* file winuser.c line 3648 addr 0x515 */
  /* file winuser.c line 3648 addr 0x518 */
} /* 0x51c */
int GetClipboardFormatNameW (UINT a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x51c */
  /* file winuser.c line 3649 addr 0x51c */
  /* file winuser.c line 3649 addr 0x51f */
} /* 0x523 */
HWND GetClipboardOwner ()
{ /* 0x523 */
  /* file winuser.c line 3650 addr 0x523 */
  /* file winuser.c line 3650 addr 0x526 */
} /* 0x528 */
HWND GetClipboardViewer ()
{ /* 0x528 */
  /* file winuser.c line 3654 addr 0x528 */
  /* file winuser.c line 3654 addr 0x52b */
} /* 0x52d */
BOOL GetClipCursor (LPRECT a /* 0x8 */)
{ /* 0x52d */
  /* file winuser.c line 3655 addr 0x52d */
  /* file winuser.c line 3655 addr 0x530 */
} /* 0x534 */
BOOL GetCursorPos (LPPOINT a /* 0x8 */)
{ /* 0x534 */
  /* file winuser.c line 3656 addr 0x534 */
  /* file winuser.c line 3656 addr 0x537 */
} /* 0x53b */
HDC GetDC (HWND a /* 0x8 */)
{ /* 0x53b */
  /* file winuser.c line 3657 addr 0x53b */
  /* file winuser.c line 3657 addr 0x53e */
} /* 0x542 */
HDC GetDCEx (HWND a /* 0x8 */, HRGN b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0x542 */
  /* file winuser.c line 3658 addr 0x542 */
  /* file winuser.c line 3658 addr 0x545 */
} /* 0x549 */
HWND GetDesktopWindow ()
{ /* 0x549 */
  /* file winuser.c line 3659 addr 0x549 */
  /* file winuser.c line 3659 addr 0x54c */
} /* 0x54e */
long int GetDialogBaseUnits ()
{ /* 0x54e */
  /* file winuser.c line 3660 addr 0x54e */
  /* file winuser.c line 3660 addr 0x551 */
} /* 0x553 */
int GetDlgCtrlID (HWND a /* 0x8 */)
{ /* 0x553 */
  /* file winuser.c line 3661 addr 0x553 */
  /* file winuser.c line 3661 addr 0x556 */
} /* 0x55a */
HWND GetDlgItem (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x55a */
  /* file winuser.c line 3662 addr 0x55a */
  /* file winuser.c line 3662 addr 0x55d */
} /* 0x561 */
UINT GetDlgItemInt (HWND a /* 0x8 */, int b /* 0xc */, PBOOL c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0x561 */
  /* file winuser.c line 3663 addr 0x561 */
  /* file winuser.c line 3663 addr 0x564 */
} /* 0x568 */
UINT GetDlgItemTextA (HWND a /* 0x8 */, int b /* 0xc */, LPSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x568 */
  /* file winuser.c line 3664 addr 0x568 */
  /* file winuser.c line 3664 addr 0x56b */
} /* 0x56f */
UINT GetDlgItemTextW (HWND a /* 0x8 */, int b /* 0xc */, LPWSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x56f */
  /* file winuser.c line 3665 addr 0x56f */
  /* file winuser.c line 3665 addr 0x572 */
} /* 0x576 */
UINT GetDoubleClickTime ()
{ /* 0x576 */
  /* file winuser.c line 3666 addr 0x576 */
  /* file winuser.c line 3666 addr 0x579 */
} /* 0x57b */
HWND GetFocus ()
{ /* 0x57b */
  /* file winuser.c line 3667 addr 0x57b */
  /* file winuser.c line 3667 addr 0x57e */
} /* 0x580 */
HWND GetForegroundWindow ()
{ /* 0x580 */
  /* file winuser.c line 3668 addr 0x580 */
  /* file winuser.c line 3668 addr 0x583 */
} /* 0x585 */
BOOL GetIconInfo (HICON a /* 0x8 */, PICONINFO b /* 0xc */)
{ /* 0x585 */
  /* file winuser.c line 3672 addr 0x585 */
  /* file winuser.c line 3672 addr 0x588 */
} /* 0x58c */
BOOL GetInputState ()
{ /* 0x58c */
  /* file winuser.c line 3673 addr 0x58c */
  /* file winuser.c line 3673 addr 0x58f */
} /* 0x591 */
UINT GetKBCodePage ()
{ /* 0x591 */
  /* file winuser.c line 3674 addr 0x591 */
  /* file winuser.c line 3674 addr 0x594 */
} /* 0x596 */
HKL GetKeyboardLayout (DWORD a /* 0x8 */)
{ /* 0x596 */
  /* file winuser.c line 3675 addr 0x596 */
  /* file winuser.c line 3675 addr 0x599 */
} /* 0x59d */
UINT GetKeyboardLayoutList (int a /* 0x8 */, HKL *b /* 0xc */)
{ /* 0x59d */
  /* file winuser.c line 3676 addr 0x59d */
  /* file winuser.c line 3676 addr 0x5a0 */
} /* 0x5a4 */
BOOL GetKeyboardLayoutNameA (LPSTR a /* 0x8 */)
{ /* 0x5a4 */
  /* file winuser.c line 3677 addr 0x5a4 */
  /* file winuser.c line 3677 addr 0x5a7 */
} /* 0x5ab */
BOOL GetKeyboardLayoutNameW (LPWSTR a /* 0x8 */)
{ /* 0x5ab */
  /* file winuser.c line 3678 addr 0x5ab */
  /* file winuser.c line 3678 addr 0x5ae */
} /* 0x5b2 */
BOOL GetKeyboardState (PBYTE a /* 0x8 */)
{ /* 0x5b2 */
  /* file winuser.c line 3679 addr 0x5b2 */
  /* file winuser.c line 3679 addr 0x5b5 */
} /* 0x5b9 */
int GetKeyboardType (int a /* 0x8 */)
{ /* 0x5b9 */
  /* file winuser.c line 3680 addr 0x5b9 */
  /* file winuser.c line 3680 addr 0x5bc */
} /* 0x5c0 */
int GetKeyNameTextA (LONG a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x5c0 */
  /* file winuser.c line 3681 addr 0x5c0 */
  /* file winuser.c line 3681 addr 0x5c3 */
} /* 0x5c7 */
int GetKeyNameTextW (LONG a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x5c7 */
  /* file winuser.c line 3682 addr 0x5c7 */
  /* file winuser.c line 3682 addr 0x5ca */
} /* 0x5ce */
SHORT GetKeyState (int a /* 0x8 */)
{ /* 0x5ce */
  /* file winuser.c line 3683 addr 0x5ce */
  /* file winuser.c line 3683 addr 0x5d1 */
} /* 0x5d5 */
HWND GetLastActivePopup (HWND a /* 0x8 */)
{ /* 0x5d5 */
  /* file winuser.c line 3684 addr 0x5d5 */
  /* file winuser.c line 3684 addr 0x5d8 */
} /* 0x5dc */
HMENU GetMenu (HWND a /* 0x8 */)
{ /* 0x5dc */
  /* file winuser.c line 3685 addr 0x5dc */
  /* file winuser.c line 3685 addr 0x5df */
} /* 0x5e3 */
LONG GetMenuCheckMarkDimensions ()
{ /* 0x5e3 */
  /* file winuser.c line 3686 addr 0x5e3 */
  /* file winuser.c line 3686 addr 0x5e6 */
} /* 0x5e8 */
DWORD GetMenuContextHelpId (HMENU a /* 0x8 */)
{ /* 0x5e8 */
  /* file winuser.c line 3687 addr 0x5e8 */
  /* file winuser.c line 3687 addr 0x5eb */
} /* 0x5ef */
UINT GetMenuDefaultItem (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x5ef */
  /* file winuser.c line 3688 addr 0x5ef */
  /* file winuser.c line 3688 addr 0x5f2 */
} /* 0x5f6 */
int GetMenuItemCount (HMENU a /* 0x8 */)
{ /* 0x5f6 */
  /* file winuser.c line 3689 addr 0x5f6 */
  /* file winuser.c line 3689 addr 0x5f9 */
} /* 0x5fd */
UINT GetMenuItemID (HMENU a /* 0x8 */, int b /* 0xc */)
{ /* 0x5fd */
  /* file winuser.c line 3690 addr 0x5fd */
  /* file winuser.c line 3690 addr 0x600 */
} /* 0x604 */
BOOL GetMenuItemInfoA (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPMENUITEMINFOA d /* 0x14 */)
{ /* 0x604 */
  /* file winuser.c line 3691 addr 0x604 */
  /* file winuser.c line 3691 addr 0x607 */
} /* 0x60b */
BOOL GetMenuItemInfoW (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPMENUITEMINFOW d /* 0x14 */)
{ /* 0x60b */
  /* file winuser.c line 3692 addr 0x60b */
  /* file winuser.c line 3692 addr 0x60e */
} /* 0x612 */
BOOL GetMenuItemRect (HWND a /* 0x8 */, HMENU b /* 0xc */, UINT c /* 0x10 */, LPRECT d /* 0x14 */)
{ /* 0x612 */
  /* file winuser.c line 3693 addr 0x612 */
  /* file winuser.c line 3693 addr 0x615 */
} /* 0x619 */
UINT GetMenuState (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x619 */
  /* file winuser.c line 3694 addr 0x619 */
  /* file winuser.c line 3694 addr 0x61c */
} /* 0x620 */
int GetMenuStringA (HMENU a /* 0x8 */, UINT b /* 0xc */, LPSTR c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x620 */
  /* file winuser.c line 3695 addr 0x620 */
  /* file winuser.c line 3695 addr 0x623 */
} /* 0x627 */
int GetMenuStringW (HMENU a /* 0x8 */, UINT b /* 0xc */, LPWSTR c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x627 */
  /* file winuser.c line 3696 addr 0x627 */
  /* file winuser.c line 3696 addr 0x62a */
} /* 0x62e */
BOOL GetMessageA (LPMSG a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x62e */
  /* file winuser.c line 3697 addr 0x62e */
  /* file winuser.c line 3697 addr 0x631 */
} /* 0x635 */
BOOL GetMessageW (LPMSG a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x635 */
  /* file winuser.c line 3698 addr 0x635 */
  /* file winuser.c line 3698 addr 0x638 */
} /* 0x63c */
LONG GetMessageExtraInfo ()
{ /* 0x63c */
  /* file winuser.c line 3699 addr 0x63c */
  /* file winuser.c line 3699 addr 0x63f */
} /* 0x641 */
DWORD GetMessagePos ()
{ /* 0x641 */
  /* file winuser.c line 3700 addr 0x641 */
  /* file winuser.c line 3700 addr 0x644 */
} /* 0x646 */
LONG GetMessageTime ()
{ /* 0x646 */
  /* file winuser.c line 3701 addr 0x646 */
  /* file winuser.c line 3701 addr 0x649 */
} /* 0x64b */
HWND GetNextDlgGroupItem (HWND a /* 0x8 */, HWND b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x64b */
  /* file winuser.c line 3705 addr 0x64b */
  /* file winuser.c line 3705 addr 0x64e */
} /* 0x652 */
HWND GetNextDlgTabItem (HWND a /* 0x8 */, HWND b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x652 */
  /* file winuser.c line 3706 addr 0x652 */
  /* file winuser.c line 3706 addr 0x655 */
} /* 0x659 */
HWND GetOpenClipboardWindow ()
{ /* 0x659 */
  /* file winuser.c line 3708 addr 0x659 */
  /* file winuser.c line 3708 addr 0x65c */
} /* 0x65e */
HWND GetParent (HWND a /* 0x8 */)
{ /* 0x65e */
  /* file winuser.c line 3709 addr 0x65e */
  /* file winuser.c line 3709 addr 0x661 */
} /* 0x665 */
int GetPriorityClipboardFormat (UINT *a /* 0x8 */, int b /* 0xc */)
{ /* 0x665 */
  /* file winuser.c line 3710 addr 0x665 */
  /* file winuser.c line 3710 addr 0x668 */
} /* 0x66c */
HANDLE GetPropA (HWND a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x66c */
  /* file winuser.c line 3711 addr 0x66c */
  /* file winuser.c line 3711 addr 0x66f */
} /* 0x673 */
HANDLE GetPropW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x673 */
  /* file winuser.c line 3712 addr 0x673 */
  /* file winuser.c line 3712 addr 0x676 */
} /* 0x67a */
DWORD GetQueueStatus (UINT a /* 0x8 */)
{ /* 0x67a */
  /* file winuser.c line 3721 addr 0x67a */
  /* file winuser.c line 3721 addr 0x67d */
} /* 0x681 */
BOOL GetScrollInfo (HWND a /* 0x8 */, int b /* 0xc */, LPSCROLLINFO c /* 0x10 */)
{ /* 0x681 */
  /* file winuser.c line 3722 addr 0x681 */
  /* file winuser.c line 3722 addr 0x684 */
} /* 0x688 */
int GetScrollPos (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x688 */
  /* file winuser.c line 3723 addr 0x688 */
  /* file winuser.c line 3723 addr 0x68b */
} /* 0x68f */
BOOL GetScrollRange (HWND a /* 0x8 */, int b /* 0xc */, LPINT c /* 0x10 */, LPINT d /* 0x14 */)
{ /* 0x68f */
  /* file winuser.c line 3724 addr 0x68f */
  /* file winuser.c line 3724 addr 0x692 */
} /* 0x696 */
HMENU GetSubMenu (HMENU a /* 0x8 */, int b /* 0xc */)
{ /* 0x696 */
  /* file winuser.c line 3728 addr 0x696 */
  /* file winuser.c line 3728 addr 0x699 */
} /* 0x69d */
DWORD GetSysColor (int a /* 0x8 */)
{ /* 0x69d */
  /* file winuser.c line 3729 addr 0x69d */
  /* file winuser.c line 3729 addr 0x6a0 */
} /* 0x6a4 */
HBRUSH GetSysColorBrush (int a /* 0x8 */)
{ /* 0x6a4 */
  /* file winuser.c line 3730 addr 0x6a4 */
  /* file winuser.c line 3730 addr 0x6a7 */
} /* 0x6ab */
HMENU GetSystemMenu (HWND a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x6ab */
  /* file winuser.c line 3732 addr 0x6ab */
  /* file winuser.c line 3732 addr 0x6ae */
} /* 0x6b2 */
int GetSystemMetrics (int a /* 0x8 */)
{ /* 0x6b2 */
  /* file winuser.c line 3733 addr 0x6b2 */
  /* file winuser.c line 3733 addr 0x6b5 */
} /* 0x6b9 */
DWORD GetTabbedTextExtentA (HDC a /* 0x8 */, LPCSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPINT e /* 0x18 */)
{ /* 0x6b9 */
  /* file winuser.c line 3734 addr 0x6b9 */
  /* file winuser.c line 3734 addr 0x6bc */
} /* 0x6c0 */
DWORD GetTabbedTextExtentW (HDC a /* 0x8 */, LPCWSTR b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, LPINT e /* 0x18 */)
{ /* 0x6c0 */
  /* file winuser.c line 3735 addr 0x6c0 */
  /* file winuser.c line 3735 addr 0x6c3 */
} /* 0x6c7 */
LONG GetWindowLongA (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x6c7 */
  /* file winuser.c line 3736 addr 0x6c7 */
  /* file winuser.c line 3736 addr 0x6ca */
} /* 0x6ce */
LONG GetWindowLongW (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x6ce */
  /* file winuser.c line 3737 addr 0x6ce */
  /* file winuser.c line 3737 addr 0x6d1 */
} /* 0x6d5 */
HDESK GetThreadDesktop (DWORD a /* 0x8 */)
{ /* 0x6d5 */
  /* file winuser.c line 3745 addr 0x6d5 */
  /* file winuser.c line 3745 addr 0x6d8 */
} /* 0x6dc */
HWND GetTopWindow (HWND a /* 0x8 */)
{ /* 0x6dc */
  /* file winuser.c line 3746 addr 0x6dc */
  /* file winuser.c line 3746 addr 0x6df */
} /* 0x6e3 */
BOOL GetUpdateRect (HWND a /* 0x8 */, LPRECT b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x6e3 */
  /* file winuser.c line 3747 addr 0x6e3 */
  /* file winuser.c line 3747 addr 0x6e6 */
} /* 0x6ea */
int GetUpdateRgn (HWND a /* 0x8 */, HRGN b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x6ea */
  /* file winuser.c line 3748 addr 0x6ea */
  /* file winuser.c line 3748 addr 0x6ed */
} /* 0x6f1 */
BOOL GetUserObjectInformationA (HANDLE a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x6f1 */
  /* file winuser.c line 3749 addr 0x6f1 */
  /* file winuser.c line 3749 addr 0x6f4 */
} /* 0x6f8 */
BOOL GetUserObjectInformationW (HANDLE a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x6f8 */
  /* file winuser.c line 3750 addr 0x6f8 */
  /* file winuser.c line 3750 addr 0x6fb */
} /* 0x6ff */
BOOL GetUserObjectSecurity (HANDLE a /* 0x8 */, PSECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */, DWORD d /* 0x14 */, PDWORD e /* 0x18 */)
{ /* 0x6ff */
  /* file winuser.c line 3751 addr 0x6ff */
  /* file winuser.c line 3751 addr 0x702 */
} /* 0x706 */
HWND GetWindow (HWND a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x706 */
  /* file winuser.c line 3752 addr 0x706 */
  /* file winuser.c line 3752 addr 0x709 */
} /* 0x70d */
DWORD GetWindowContextHelpId (HWND a /* 0x8 */)
{ /* 0x70d */
  /* file winuser.c line 3753 addr 0x70d */
  /* file winuser.c line 3753 addr 0x710 */
} /* 0x714 */
HDC GetWindowDC (HWND a /* 0x8 */)
{ /* 0x714 */
  /* file winuser.c line 3754 addr 0x714 */
  /* file winuser.c line 3754 addr 0x717 */
} /* 0x71b */
BOOL GetWindowPlacement (HWND a /* 0x8 */, WINDOWPLACEMENT *b /* 0xc */)
{ /* 0x71b */
  /* file winuser.c line 3755 addr 0x71b */
  /* file winuser.c line 3755 addr 0x71e */
} /* 0x722 */
BOOL GetWindowRect (HWND a /* 0x8 */, LPRECT b /* 0xc */)
{ /* 0x722 */
  /* file winuser.c line 3756 addr 0x722 */
  /* file winuser.c line 3756 addr 0x725 */
} /* 0x729 */
int GetWindowRgn (HWND a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0x729 */
  /* file winuser.c line 3757 addr 0x729 */
  /* file winuser.c line 3757 addr 0x72c */
} /* 0x730 */
int GetWindowTextA (HWND a /* 0x8 */, LPSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x730 */
  /* file winuser.c line 3759 addr 0x730 */
  /* file winuser.c line 3759 addr 0x733 */
} /* 0x737 */
int GetWindowTextLengthA (HWND a /* 0x8 */)
{ /* 0x737 */
  /* file winuser.c line 3760 addr 0x737 */
  /* file winuser.c line 3760 addr 0x73a */
} /* 0x73e */
int GetWindowTextLengthW (HWND a /* 0x8 */)
{ /* 0x73e */
  /* file winuser.c line 3761 addr 0x73e */
  /* file winuser.c line 3761 addr 0x741 */
} /* 0x745 */
int GetWindowTextW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, int c /* 0x10 */)
{ /* 0x745 */
  /* file winuser.c line 3762 addr 0x745 */
  /* file winuser.c line 3762 addr 0x748 */
} /* 0x74c */
WORD GetWindowWord (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x74c */
  /* file winuser.c line 3763 addr 0x74c */
  /* file winuser.c line 3763 addr 0x74f */
} /* 0x753 */
BOOL GetAltTabInfoA (HWND a /* 0x8 */, int b /* 0xc */, PALTTABINFO c /* 0x10 */, LPSTR d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x753 */
  /* file winuser.c line 3764 addr 0x753 */
  /* file winuser.c line 3764 addr 0x756 */
} /* 0x75a */
BOOL GetAltTabInfoW (HWND a /* 0x8 */, int b /* 0xc */, PALTTABINFO c /* 0x10 */, LPWSTR d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x75a */
  /* file winuser.c line 3765 addr 0x75a */
  /* file winuser.c line 3765 addr 0x75d */
} /* 0x761 */
BOOL GetComboBoxInfo (HWND a /* 0x8 */, PCOMBOBOXINFO b /* 0xc */)
{ /* 0x761 */
  /* file winuser.c line 3766 addr 0x761 */
  /* file winuser.c line 3766 addr 0x764 */
} /* 0x768 */
BOOL GetCursorInfo (PCURSORINFO a /* 0x8 */)
{ /* 0x768 */
  /* file winuser.c line 3767 addr 0x768 */
  /* file winuser.c line 3767 addr 0x76b */
} /* 0x76f */
BOOL GetLastInputInfo (PLASTINPUTINFO a /* 0x8 */)
{ /* 0x76f */
  /* file winuser.c line 3771 addr 0x76f */
  /* file winuser.c line 3771 addr 0x772 */
} /* 0x776 */
DWORD GetListBoxInfo (HWND a /* 0x8 */)
{ /* 0x776 */
  /* file winuser.c line 3772 addr 0x776 */
  /* file winuser.c line 3772 addr 0x779 */
} /* 0x77d */
BOOL GetMenuBarInfo (HWND a /* 0x8 */, LONG b /* 0xc */, LONG c /* 0x10 */, PMENUBARINFO d /* 0x14 */)
{ /* 0x77d */
  /* file winuser.c line 3773 addr 0x77d */
  /* file winuser.c line 3773 addr 0x780 */
} /* 0x784 */
BOOL GetMenuInfo (HMENU a /* 0x8 */, LPMENUINFO b /* 0xc */)
{ /* 0x784 */
  /* file winuser.c line 3774 addr 0x784 */
  /* file winuser.c line 3774 addr 0x787 */
} /* 0x78b */
BOOL GetScrollBarInfo (HWND a /* 0x8 */, LONG b /* 0xc */, PSCROLLBARINFO c /* 0x10 */)
{ /* 0x78b */
  /* file winuser.c line 3778 addr 0x78b */
  /* file winuser.c line 3778 addr 0x78e */
} /* 0x792 */
BOOL GetWindowInfo (HWND a /* 0x8 */, PWINDOWINFO b /* 0xc */)
{ /* 0x792 */
  /* file winuser.c line 3782 addr 0x792 */
  /* file winuser.c line 3782 addr 0x795 */
} /* 0x799 */
BOOL GetMonitorInfoA (HMONITOR a /* 0x8 */, LPMONITORINFO b /* 0xc */)
{ /* 0x799 */
  /* file winuser.c line 3783 addr 0x799 */
  /* file winuser.c line 3783 addr 0x79c */
} /* 0x7a0 */
BOOL GetMonitorInfoW (HMONITOR a /* 0x8 */, LPMONITORINFO b /* 0xc */)
{ /* 0x7a0 */
  /* file winuser.c line 3784 addr 0x7a0 */
  /* file winuser.c line 3784 addr 0x7a3 */
} /* 0x7a7 */
UINT GetWindowModuleFileNameA (HWND a /* 0x8 */, LPSTR b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x7a7 */
  /* file winuser.c line 3785 addr 0x7a7 */
  /* file winuser.c line 3785 addr 0x7aa */
} /* 0x7ae */
UINT GetWindowModuleFileNameW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, UINT c /* 0x10 */)
{ /* 0x7ae */
  /* file winuser.c line 3786 addr 0x7ae */
  /* file winuser.c line 3786 addr 0x7b1 */
} /* 0x7b5 */
BOOL GrayStringA (HDC a /* 0x8 */, HBRUSH b /* 0xc */, GRAYSTRINGPROC c /* 0x10 */, LPARAM d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x7b5 */
  /* file winuser.c line 3787 addr 0x7b5 */
  /* file winuser.c line 3787 addr 0x7b8 */
} /* 0x7bc */
BOOL GrayStringW (HDC a /* 0x8 */, HBRUSH b /* 0xc */, GRAYSTRINGPROC c /* 0x10 */, LPARAM d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, int g /* 0x20 */, int h /* 0x24 */, int i /* 0x28 */)
{ /* 0x7bc */
  /* file winuser.c line 3788 addr 0x7bc */
  /* file winuser.c line 3788 addr 0x7bf */
} /* 0x7c3 */
BOOL HideCaret (HWND a /* 0x8 */)
{ /* 0x7c3 */
  /* file winuser.c line 3789 addr 0x7c3 */
  /* file winuser.c line 3789 addr 0x7c6 */
} /* 0x7ca */
BOOL HiliteMenuItem (HWND a /* 0x8 */, HMENU b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x7ca */
  /* file winuser.c line 3790 addr 0x7ca */
  /* file winuser.c line 3790 addr 0x7cd */
} /* 0x7d1 */
BOOL InflateRect (LPRECT a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0x7d1 */
  /* file winuser.c line 3791 addr 0x7d1 */
  /* file winuser.c line 3791 addr 0x7d4 */
} /* 0x7d8 */
BOOL InSendMessage ()
{ /* 0x7d8 */
  /* file winuser.c line 3792 addr 0x7d8 */
  /* file winuser.c line 3792 addr 0x7db */
} /* 0x7dd */
BOOL InsertMenuA (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, LPCSTR e /* 0x18 */)
{ /* 0x7dd */
  /* file winuser.c line 3796 addr 0x7dd */
  /* file winuser.c line 3796 addr 0x7e0 */
} /* 0x7e4 */
BOOL InsertMenuW (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, LPCWSTR e /* 0x18 */)
{ /* 0x7e4 */
  /* file winuser.c line 3797 addr 0x7e4 */
  /* file winuser.c line 3797 addr 0x7e7 */
} /* 0x7eb */
BOOL InsertMenuItemA (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPCMENUITEMINFOA d /* 0x14 */)
{ /* 0x7eb */
  /* file winuser.c line 3798 addr 0x7eb */
  /* file winuser.c line 3798 addr 0x7ee */
} /* 0x7f2 */
BOOL InsertMenuItemW (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPCMENUITEMINFOW d /* 0x14 */)
{ /* 0x7f2 */
  /* file winuser.c line 3799 addr 0x7f2 */
  /* file winuser.c line 3799 addr 0x7f5 */
} /* 0x7f9 */
INT InternalGetWindowText (HWND a /* 0x8 */, LPWSTR b /* 0xc */, INT c /* 0x10 */)
{ /* 0x7f9 */
  /* file winuser.c line 3800 addr 0x7f9 */
  /* file winuser.c line 3800 addr 0x7fc */
} /* 0x800 */
BOOL IntersectRect (LPRECT a /* 0x8 */, LPCRECT b /* 0xc */, LPCRECT c /* 0x10 */)
{ /* 0x800 */
  /* file winuser.c line 3801 addr 0x800 */
  /* file winuser.c line 3801 addr 0x803 */
} /* 0x807 */
BOOL InvalidateRect (HWND a /* 0x8 */, LPCRECT b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x807 */
  /* file winuser.c line 3802 addr 0x807 */
  /* file winuser.c line 3802 addr 0x80a */
} /* 0x80e */
BOOL InvalidateRgn (HWND a /* 0x8 */, HRGN b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0x80e */
  /* file winuser.c line 3803 addr 0x80e */
  /* file winuser.c line 3803 addr 0x811 */
} /* 0x815 */
BOOL InvertRect (HDC a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0x815 */
  /* file winuser.c line 3804 addr 0x815 */
  /* file winuser.c line 3804 addr 0x818 */
} /* 0x81c */
BOOL IsCharAlphaA (int ch /* 0x8 */)
{ /* 0x81c */
  CHAR ch /* 0xffffffff */;
  /* file winuser.c line 3805 addr 0x81c */
  /* file winuser.c line 3805 addr 0x828 */
} /* 0x82c */
BOOL IsCharAlphaNumericA (int a /* 0x8 */)
{ /* 0x82c */
  CHAR a /* 0xffffffff */;
  /* file winuser.c line 3806 addr 0x82c */
  /* file winuser.c line 3806 addr 0x838 */
} /* 0x83c */
BOOL IsCharAlphaNumericW (int a /* 0x8 */)
{ /* 0x83c */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 3807 addr 0x83c */
  /* file winuser.c line 3807 addr 0x849 */
} /* 0x84d */
BOOL IsCharAlphaW (int a /* 0x8 */)
{ /* 0x84d */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 3808 addr 0x84d */
  /* file winuser.c line 3808 addr 0x85a */
} /* 0x85e */
BOOL IsCharLowerA (int a /* 0x8 */)
{ /* 0x85e */
  CHAR a /* 0xffffffff */;
  /* file winuser.c line 3809 addr 0x85e */
  /* file winuser.c line 3809 addr 0x86a */
} /* 0x86e */
BOOL IsCharLowerW (int a /* 0x8 */)
{ /* 0x86e */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 3810 addr 0x86e */
  /* file winuser.c line 3810 addr 0x87b */
} /* 0x87f */
BOOL IsCharUpperA (int a /* 0x8 */)
{ /* 0x87f */
  CHAR a /* 0xffffffff */;
  /* file winuser.c line 3811 addr 0x87f */
  /* file winuser.c line 3811 addr 0x88b */
} /* 0x88f */
BOOL IsCharUpperW (int a /* 0x8 */)
{ /* 0x88f */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 3812 addr 0x88f */
  /* file winuser.c line 3812 addr 0x89c */
} /* 0x8a0 */
BOOL IsChild (HWND a /* 0x8 */, HWND b /* 0xc */)
{ /* 0x8a0 */
  /* file winuser.c line 3813 addr 0x8a0 */
  /* file winuser.c line 3813 addr 0x8a3 */
} /* 0x8a7 */
BOOL IsClipboardFormatAvailable (UINT a /* 0x8 */)
{ /* 0x8a7 */
  /* file winuser.c line 3814 addr 0x8a7 */
  /* file winuser.c line 3814 addr 0x8aa */
} /* 0x8ae */
BOOL IsDialogMessageA (HWND a /* 0x8 */, LPMSG b /* 0xc */)
{ /* 0x8ae */
  /* file winuser.c line 3815 addr 0x8ae */
  /* file winuser.c line 3815 addr 0x8b1 */
} /* 0x8b5 */
BOOL IsDialogMessageW (HWND a /* 0x8 */, LPMSG b /* 0xc */)
{ /* 0x8b5 */
  /* file winuser.c line 3816 addr 0x8b5 */
  /* file winuser.c line 3816 addr 0x8b8 */
} /* 0x8bc */
UINT IsDlgButtonChecked (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0x8bc */
  /* file winuser.c line 3817 addr 0x8bc */
  /* file winuser.c line 3817 addr 0x8bf */
} /* 0x8c3 */
BOOL IsIconic (HWND a /* 0x8 */)
{ /* 0x8c3 */
  /* file winuser.c line 3824 addr 0x8c3 */
  /* file winuser.c line 3824 addr 0x8c6 */
} /* 0x8ca */
BOOL IsMenu (HMENU a /* 0x8 */)
{ /* 0x8ca */
  /* file winuser.c line 3825 addr 0x8ca */
  /* file winuser.c line 3825 addr 0x8cd */
} /* 0x8d1 */
BOOL IsRectEmpty (LPCRECT a /* 0x8 */)
{ /* 0x8d1 */
  /* file winuser.c line 3826 addr 0x8d1 */
  /* file winuser.c line 3826 addr 0x8d4 */
} /* 0x8d8 */
BOOL IsWindow (HWND a /* 0x8 */)
{ /* 0x8d8 */
  /* file winuser.c line 3827 addr 0x8d8 */
  /* file winuser.c line 3827 addr 0x8db */
} /* 0x8df */
BOOL IsWindowEnabled (HWND a /* 0x8 */)
{ /* 0x8df */
  /* file winuser.c line 3828 addr 0x8df */
  /* file winuser.c line 3828 addr 0x8e2 */
} /* 0x8e6 */
BOOL IsWindowUnicode (HWND a /* 0x8 */)
{ /* 0x8e6 */
  /* file winuser.c line 3829 addr 0x8e6 */
  /* file winuser.c line 3829 addr 0x8e9 */
} /* 0x8ed */
BOOL IsWindowVisible (HWND a /* 0x8 */)
{ /* 0x8ed */
  /* file winuser.c line 3830 addr 0x8ed */
  /* file winuser.c line 3830 addr 0x8f0 */
} /* 0x8f4 */
BOOL IsZoomed (HWND a /* 0x8 */)
{ /* 0x8f4 */
  /* file winuser.c line 3834 addr 0x8f4 */
  /* file winuser.c line 3834 addr 0x8f7 */
} /* 0x8fb */
void keybd_event (int a /* 0x8 */, int b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0x8fb */
  BYTE b /* 0xfffffffe */;
  BYTE a /* 0xffffffff */;
  /* file winuser.c line 3835 addr 0x8fb */
  /* file winuser.c line 3835 addr 0x90d */
} /* 0x911 */
BOOL KillTimer (HWND a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x911 */
  /* file winuser.c line 3836 addr 0x911 */
  /* file winuser.c line 3836 addr 0x914 */
} /* 0x918 */
HACCEL LoadAcceleratorsA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x918 */
  /* file winuser.c line 3837 addr 0x918 */
  /* file winuser.c line 3837 addr 0x91b */
} /* 0x91f */
HACCEL LoadAcceleratorsW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x91f */
  /* file winuser.c line 3838 addr 0x91f */
  /* file winuser.c line 3838 addr 0x922 */
} /* 0x926 */
HBITMAP LoadBitmapA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x926 */
  /* file winuser.c line 3839 addr 0x926 */
  /* file winuser.c line 3839 addr 0x929 */
} /* 0x92d */
HBITMAP LoadBitmapW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x92d */
  /* file winuser.c line 3840 addr 0x92d */
  /* file winuser.c line 3840 addr 0x930 */
} /* 0x934 */
HCURSOR LoadCursorA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x934 */
  /* file winuser.c line 3841 addr 0x934 */
  /* file winuser.c line 3841 addr 0x937 */
} /* 0x93b */
HCURSOR LoadCursorFromFileA (LPCSTR a /* 0x8 */)
{ /* 0x93b */
  /* file winuser.c line 3842 addr 0x93b */
  /* file winuser.c line 3842 addr 0x93e */
} /* 0x942 */
HCURSOR LoadCursorFromFileW (LPCWSTR a /* 0x8 */)
{ /* 0x942 */
  /* file winuser.c line 3843 addr 0x942 */
  /* file winuser.c line 3843 addr 0x945 */
} /* 0x949 */
HCURSOR LoadCursorW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x949 */
  /* file winuser.c line 3844 addr 0x949 */
  /* file winuser.c line 3844 addr 0x94c */
} /* 0x950 */
HICON LoadIconA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x950 */
  /* file winuser.c line 3845 addr 0x950 */
  /* file winuser.c line 3845 addr 0x953 */
} /* 0x957 */
HICON LoadIconW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x957 */
  /* file winuser.c line 3846 addr 0x957 */
  /* file winuser.c line 3846 addr 0x95a */
} /* 0x95e */
HANDLE LoadImageA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */, UINT c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, UINT f /* 0x1c */)
{ /* 0x95e */
  /* file winuser.c line 3847 addr 0x95e */
  /* file winuser.c line 3847 addr 0x961 */
} /* 0x965 */
HANDLE LoadImageW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */, UINT c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, UINT f /* 0x1c */)
{ /* 0x965 */
  /* file winuser.c line 3848 addr 0x965 */
  /* file winuser.c line 3848 addr 0x968 */
} /* 0x96c */
HKL LoadKeyboardLayoutA (LPCSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x96c */
  /* file winuser.c line 3849 addr 0x96c */
  /* file winuser.c line 3849 addr 0x96f */
} /* 0x973 */
HKL LoadKeyboardLayoutW (LPCWSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x973 */
  /* file winuser.c line 3850 addr 0x973 */
  /* file winuser.c line 3850 addr 0x976 */
} /* 0x97a */
HMENU LoadMenuA (HINSTANCE a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0x97a */
  /* file winuser.c line 3851 addr 0x97a */
  /* file winuser.c line 3851 addr 0x97d */
} /* 0x981 */
HMENU LoadMenuIndirectA (MENUTEMPLATE const *a /* 0x8 */)
{ /* 0x981 */
  /* file winuser.c line 3852 addr 0x981 */
  /* file winuser.c line 3852 addr 0x984 */
} /* 0x988 */
HMENU LoadMenuIndirectW (MENUTEMPLATE const *a /* 0x8 */)
{ /* 0x988 */
  /* file winuser.c line 3853 addr 0x988 */
  /* file winuser.c line 3853 addr 0x98b */
} /* 0x98f */
HMENU LoadMenuW (HINSTANCE a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0x98f */
  /* file winuser.c line 3854 addr 0x98f */
  /* file winuser.c line 3854 addr 0x992 */
} /* 0x996 */
int LoadStringA (HINSTANCE a /* 0x8 */, UINT b /* 0xc */, LPSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x996 */
  /* file winuser.c line 3855 addr 0x996 */
  /* file winuser.c line 3855 addr 0x999 */
} /* 0x99d */
int LoadStringW (HINSTANCE a /* 0x8 */, UINT b /* 0xc */, LPWSTR c /* 0x10 */, int d /* 0x14 */)
{ /* 0x99d */
  /* file winuser.c line 3856 addr 0x99d */
  /* file winuser.c line 3856 addr 0x9a0 */
} /* 0x9a4 */
BOOL LockWindowUpdate (HWND a /* 0x8 */)
{ /* 0x9a4 */
  /* file winuser.c line 3857 addr 0x9a4 */
  /* file winuser.c line 3857 addr 0x9a7 */
} /* 0x9ab */
int LookupIconIdFromDirectory (PBYTE a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0x9ab */
  /* file winuser.c line 3861 addr 0x9ab */
  /* file winuser.c line 3861 addr 0x9ae */
} /* 0x9b2 */
int LookupIconIdFromDirectoryEx (PBYTE a /* 0x8 */, BOOL b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0x9b2 */
  /* file winuser.c line 3862 addr 0x9b2 */
  /* file winuser.c line 3862 addr 0x9b5 */
} /* 0x9b9 */
BOOL MapDialogRect (HWND a /* 0x8 */, LPRECT b /* 0xc */)
{ /* 0x9b9 */
  /* file winuser.c line 3863 addr 0x9b9 */
  /* file winuser.c line 3863 addr 0x9bc */
} /* 0x9c0 */
UINT MapVirtualKeyA (UINT a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x9c0 */
  /* file winuser.c line 3864 addr 0x9c0 */
  /* file winuser.c line 3864 addr 0x9c3 */
} /* 0x9c7 */
UINT MapVirtualKeyExA (UINT a /* 0x8 */, UINT b /* 0xc */, HKL c /* 0x10 */)
{ /* 0x9c7 */
  /* file winuser.c line 3865 addr 0x9c7 */
  /* file winuser.c line 3865 addr 0x9ca */
} /* 0x9ce */
UINT MapVirtualKeyExW (UINT a /* 0x8 */, UINT b /* 0xc */, HKL c /* 0x10 */)
{ /* 0x9ce */
  /* file winuser.c line 3866 addr 0x9ce */
  /* file winuser.c line 3866 addr 0x9d1 */
} /* 0x9d5 */
UINT MapVirtualKeyW (UINT a /* 0x8 */, UINT b /* 0xc */)
{ /* 0x9d5 */
  /* file winuser.c line 3867 addr 0x9d5 */
  /* file winuser.c line 3867 addr 0x9d8 */
} /* 0x9dc */
int MapWindowPoints (HWND a /* 0x8 */, HWND b /* 0xc */, LPPOINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x9dc */
  /* file winuser.c line 3868 addr 0x9dc */
  /* file winuser.c line 3868 addr 0x9df */
} /* 0x9e3 */
int MenuItemFromPoint (HWND a /* 0x8 */, HMENU b /* 0xc */, POINT c /* 0x10 */)
{ /* 0x9e3 */
  /* file winuser.c line 3869 addr 0x9e3 */
  /* file winuser.c line 3869 addr 0x9e6 */
} /* 0x9ea */
BOOL MessageBeep (UINT a /* 0x8 */)
{ /* 0x9ea */
  /* file winuser.c line 3870 addr 0x9ea */
  /* file winuser.c line 3870 addr 0x9ed */
} /* 0x9f1 */
int MessageBoxA (HWND a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x9f1 */
  /* file winuser.c line 3871 addr 0x9f1 */
  /* file winuser.c line 3871 addr 0x9f4 */
} /* 0x9f8 */
int MessageBoxW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0x9f8 */
  /* file winuser.c line 3872 addr 0x9f8 */
  /* file winuser.c line 3872 addr 0x9fb */
} /* 0x9ff */
int MessageBoxExA (HWND a /* 0x8 */, LPCSTR b /* 0xc */, LPCSTR c /* 0x10 */, UINT d /* 0x14 */, int e /* 0x18 */)
{ /* 0x9ff */
  WORD e /* 0xfffffffe */;
  /* file winuser.c line 3873 addr 0x9ff */
  /* file winuser.c line 3873 addr 0xa0c */
} /* 0xa10 */
int MessageBoxExW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */, LPCWSTR c /* 0x10 */, UINT d /* 0x14 */, int e /* 0x18 */)
{ /* 0xa10 */
  WORD e /* 0xfffffffe */;
  /* file winuser.c line 3874 addr 0xa10 */
  /* file winuser.c line 3874 addr 0xa1d */
} /* 0xa21 */
int MessageBoxIndirectA (MSGBOXPARAMSA const *a /* 0x8 */)
{ /* 0xa21 */
  /* file winuser.c line 3875 addr 0xa21 */
  /* file winuser.c line 3875 addr 0xa24 */
} /* 0xa28 */
int MessageBoxIndirectW (MSGBOXPARAMSW const *a /* 0x8 */)
{ /* 0xa28 */
  /* file winuser.c line 3876 addr 0xa28 */
  /* file winuser.c line 3876 addr 0xa2b */
} /* 0xa2f */
BOOL ModifyMenuA (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, LPCSTR e /* 0x18 */)
{ /* 0xa2f */
  /* file winuser.c line 3877 addr 0xa2f */
  /* file winuser.c line 3877 addr 0xa32 */
} /* 0xa36 */
BOOL ModifyMenuW (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, LPCWSTR e /* 0x18 */)
{ /* 0xa36 */
  /* file winuser.c line 3878 addr 0xa36 */
  /* file winuser.c line 3878 addr 0xa39 */
} /* 0xa3d */
void mouse_event (DWORD a /* 0x8 */, DWORD b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, ULONG_PTR e /* 0x18 */)
{ /* 0xa3d */
  /* file winuser.c line 3884 addr 0xa3d */
  /* file winuser.c line 3884 addr 0xa40 */
} /* 0xa44 */
BOOL MoveWindow (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, BOOL f /* 0x1c */)
{ /* 0xa44 */
  /* file winuser.c line 3885 addr 0xa44 */
  /* file winuser.c line 3885 addr 0xa47 */
} /* 0xa4b */
DWORD MsgWaitForMultipleObjects (DWORD a /* 0x8 */, HANDLE const *b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0xa4b */
  /* file winuser.c line 3886 addr 0xa4b */
  /* file winuser.c line 3886 addr 0xa4e */
} /* 0xa52 */
DWORD MsgWaitForMultipleObjectsEx (DWORD a /* 0x8 */, HANDLE const *b /* 0xc */, DWORD c /* 0x10 */, DWORD d /* 0x14 */, DWORD e /* 0x18 */)
{ /* 0xa52 */
  /* file winuser.c line 3887 addr 0xa52 */
  /* file winuser.c line 3887 addr 0xa55 */
} /* 0xa59 */
DWORD OemKeyScan (int a /* 0x8 */)
{ /* 0xa59 */
  WORD a /* 0xfffffffe */;
  /* file winuser.c line 3891 addr 0xa59 */
  /* file winuser.c line 3891 addr 0xa66 */
} /* 0xa6a */
BOOL OemToCharA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */)
{ /* 0xa6a */
  /* file winuser.c line 3892 addr 0xa6a */
  /* file winuser.c line 3892 addr 0xa6d */
} /* 0xa71 */
BOOL OemToCharBuffA (LPCSTR a /* 0x8 */, LPSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xa71 */
  /* file winuser.c line 3893 addr 0xa71 */
  /* file winuser.c line 3893 addr 0xa74 */
} /* 0xa78 */
BOOL OemToCharBuffW (LPCSTR a /* 0x8 */, LPWSTR b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xa78 */
  /* file winuser.c line 3894 addr 0xa78 */
  /* file winuser.c line 3894 addr 0xa7b */
} /* 0xa7f */
BOOL OemToCharW (LPCSTR a /* 0x8 */, LPWSTR b /* 0xc */)
{ /* 0xa7f */
  /* file winuser.c line 3895 addr 0xa7f */
  /* file winuser.c line 3895 addr 0xa82 */
} /* 0xa86 */
BOOL OffsetRect (LPRECT a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xa86 */
  /* file winuser.c line 3896 addr 0xa86 */
  /* file winuser.c line 3896 addr 0xa89 */
} /* 0xa8d */
BOOL OpenClipboard (HWND a /* 0x8 */)
{ /* 0xa8d */
  /* file winuser.c line 3897 addr 0xa8d */
  /* file winuser.c line 3897 addr 0xa90 */
} /* 0xa94 */
HDESK OpenDesktopA (LPSTR a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xa94 */
  /* file winuser.c line 3898 addr 0xa94 */
  /* file winuser.c line 3898 addr 0xa97 */
} /* 0xa9b */
HDESK OpenDesktopW (LPWSTR a /* 0x8 */, DWORD b /* 0xc */, BOOL c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xa9b */
  /* file winuser.c line 3899 addr 0xa9b */
  /* file winuser.c line 3899 addr 0xa9e */
} /* 0xaa2 */
BOOL OpenIcon (HWND a /* 0x8 */)
{ /* 0xaa2 */
  /* file winuser.c line 3900 addr 0xaa2 */
  /* file winuser.c line 3900 addr 0xaa5 */
} /* 0xaa9 */
HDESK OpenInputDesktop (DWORD a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xaa9 */
  /* file winuser.c line 3901 addr 0xaa9 */
  /* file winuser.c line 3901 addr 0xaac */
} /* 0xab0 */
HWINSTA OpenWindowStationA (LPSTR a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xab0 */
  /* file winuser.c line 3902 addr 0xab0 */
  /* file winuser.c line 3902 addr 0xab3 */
} /* 0xab7 */
HWINSTA OpenWindowStationW (LPWSTR a /* 0x8 */, BOOL b /* 0xc */, DWORD c /* 0x10 */)
{ /* 0xab7 */
  /* file winuser.c line 3903 addr 0xab7 */
  /* file winuser.c line 3903 addr 0xaba */
} /* 0xabe */
BOOL PaintDesktop (HDC a /* 0x8 */)
{ /* 0xabe */
  /* file winuser.c line 3904 addr 0xabe */
  /* file winuser.c line 3904 addr 0xac1 */
} /* 0xac5 */
BOOL PeekMessageA (LPMSG a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0xac5 */
  /* file winuser.c line 3905 addr 0xac5 */
  /* file winuser.c line 3905 addr 0xac8 */
} /* 0xacc */
BOOL PeekMessageW (LPMSG a /* 0x8 */, HWND b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0xacc */
  /* file winuser.c line 3906 addr 0xacc */
  /* file winuser.c line 3906 addr 0xacf */
} /* 0xad3 */
BOOL PostMessageA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xad3 */
  /* file winuser.c line 3909 addr 0xad3 */
  /* file winuser.c line 3909 addr 0xad6 */
} /* 0xada */
BOOL PostMessageW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xada */
  /* file winuser.c line 3910 addr 0xada */
  /* file winuser.c line 3910 addr 0xadd */
} /* 0xae1 */
void PostQuitMessage (int a /* 0x8 */)
{ /* 0xae1 */
  /* file winuser.c line 3911 addr 0xae1 */
  /* file winuser.c line 3911 addr 0xae4 */
} /* 0xae8 */
BOOL PostThreadMessageA (DWORD a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xae8 */
  /* file winuser.c line 3912 addr 0xae8 */
  /* file winuser.c line 3912 addr 0xaeb */
} /* 0xaef */
BOOL PostThreadMessageW (DWORD a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xaef */
  /* file winuser.c line 3913 addr 0xaef */
  /* file winuser.c line 3913 addr 0xaf2 */
} /* 0xaf6 */
BOOL PtInRect (LPCRECT a /* 0x8 */, POINT b /* 0xc */)
{ /* 0xaf6 */
  /* file winuser.c line 3917 addr 0xaf6 */
  /* file winuser.c line 3917 addr 0xaf9 */
} /* 0xafd */
HWND RealChildWindowFromPoint (HWND a /* 0x8 */, POINT b /* 0xc */)
{ /* 0xafd */
  /* file winuser.c line 3918 addr 0xafd */
  /* file winuser.c line 3918 addr 0xb00 */
} /* 0xb04 */
UINT RealGetWindowClassA (HWND a /* 0x8 */, LPSTR b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xb04 */
  /* file winuser.c line 3919 addr 0xb04 */
  /* file winuser.c line 3919 addr 0xb07 */
} /* 0xb0b */
UINT RealGetWindowClassW (HWND a /* 0x8 */, LPWSTR b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xb0b */
  /* file winuser.c line 3920 addr 0xb0b */
  /* file winuser.c line 3920 addr 0xb0e */
} /* 0xb12 */
BOOL RedrawWindow (HWND a /* 0x8 */, LPCRECT b /* 0xc */, HRGN c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0xb12 */
  /* file winuser.c line 3921 addr 0xb12 */
  /* file winuser.c line 3921 addr 0xb15 */
} /* 0xb19 */
ATOM RegisterClassA (WNDCLASSA const *a /* 0x8 */)
{ /* 0xb19 */
  /* file winuser.c line 3922 addr 0xb19 */
  /* file winuser.c line 3922 addr 0xb1c */
} /* 0xb20 */
ATOM RegisterClassW (WNDCLASSW const *a /* 0x8 */)
{ /* 0xb20 */
  /* file winuser.c line 3923 addr 0xb20 */
  /* file winuser.c line 3923 addr 0xb23 */
} /* 0xb27 */
ATOM RegisterClassExA (WNDCLASSEXA const *a /* 0x8 */)
{ /* 0xb27 */
  /* file winuser.c line 3924 addr 0xb27 */
  /* file winuser.c line 3924 addr 0xb2a */
} /* 0xb2e */
ATOM RegisterClassExW (WNDCLASSEXW const *a /* 0x8 */)
{ /* 0xb2e */
  /* file winuser.c line 3925 addr 0xb2e */
  /* file winuser.c line 3925 addr 0xb31 */
} /* 0xb35 */
UINT RegisterClipboardFormatA (LPCSTR a /* 0x8 */)
{ /* 0xb35 */
  /* file winuser.c line 3926 addr 0xb35 */
  /* file winuser.c line 3926 addr 0xb38 */
} /* 0xb3c */
UINT RegisterClipboardFormatW (LPCWSTR a /* 0x8 */)
{ /* 0xb3c */
  /* file winuser.c line 3927 addr 0xb3c */
  /* file winuser.c line 3927 addr 0xb3f */
} /* 0xb43 */
BOOL RegisterHotKey (HWND a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0xb43 */
  /* file winuser.c line 3935 addr 0xb43 */
  /* file winuser.c line 3935 addr 0xb46 */
} /* 0xb4a */
UINT RegisterWindowMessageA (LPCSTR a /* 0x8 */)
{ /* 0xb4a */
  /* file winuser.c line 3939 addr 0xb4a */
  /* file winuser.c line 3939 addr 0xb4d */
} /* 0xb51 */
UINT RegisterWindowMessageW (LPCWSTR a /* 0x8 */)
{ /* 0xb51 */
  /* file winuser.c line 3940 addr 0xb51 */
  /* file winuser.c line 3940 addr 0xb54 */
} /* 0xb58 */
BOOL ReleaseCapture ()
{ /* 0xb58 */
  /* file winuser.c line 3941 addr 0xb58 */
  /* file winuser.c line 3941 addr 0xb5b */
} /* 0xb5d */
int ReleaseDC (HWND a /* 0x8 */, HDC b /* 0xc */)
{ /* 0xb5d */
  /* file winuser.c line 3942 addr 0xb5d */
  /* file winuser.c line 3942 addr 0xb60 */
} /* 0xb64 */
BOOL RemoveMenu (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xb64 */
  /* file winuser.c line 3943 addr 0xb64 */
  /* file winuser.c line 3943 addr 0xb67 */
} /* 0xb6b */
HANDLE RemovePropA (HWND a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xb6b */
  /* file winuser.c line 3944 addr 0xb6b */
  /* file winuser.c line 3944 addr 0xb6e */
} /* 0xb72 */
HANDLE RemovePropW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xb72 */
  /* file winuser.c line 3945 addr 0xb72 */
  /* file winuser.c line 3945 addr 0xb75 */
} /* 0xb79 */
BOOL ReplyMessage (LRESULT a /* 0x8 */)
{ /* 0xb79 */
  /* file winuser.c line 3946 addr 0xb79 */
  /* file winuser.c line 3946 addr 0xb7c */
} /* 0xb80 */
BOOL ScreenToClient (HWND a /* 0x8 */, LPPOINT b /* 0xc */)
{ /* 0xb80 */
  /* file winuser.c line 3947 addr 0xb80 */
  /* file winuser.c line 3947 addr 0xb83 */
} /* 0xb87 */
BOOL ScrollDC (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCRECT d /* 0x14 */, LPCRECT e /* 0x18 */, HRGN f /* 0x1c */, LPRECT g /* 0x20 */)
{ /* 0xb87 */
  /* file winuser.c line 3948 addr 0xb87 */
  /* file winuser.c line 3948 addr 0xb8a */
} /* 0xb8e */
BOOL ScrollWindow (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCRECT d /* 0x14 */, LPCRECT e /* 0x18 */)
{ /* 0xb8e */
  /* file winuser.c line 3949 addr 0xb8e */
  /* file winuser.c line 3949 addr 0xb91 */
} /* 0xb95 */
int ScrollWindowEx (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCRECT d /* 0x14 */, LPCRECT e /* 0x18 */, HRGN f /* 0x1c */, LPRECT g /* 0x20 */, UINT h /* 0x24 */)
{ /* 0xb95 */
  /* file winuser.c line 3950 addr 0xb95 */
  /* file winuser.c line 3950 addr 0xb98 */
} /* 0xb9c */
LONG SendDlgItemMessageA (HWND a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0xb9c */
  /* file winuser.c line 3951 addr 0xb9c */
  /* file winuser.c line 3951 addr 0xb9f */
} /* 0xba3 */
LONG SendDlgItemMessageW (HWND a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, WPARAM d /* 0x14 */, LPARAM e /* 0x18 */)
{ /* 0xba3 */
  /* file winuser.c line 3952 addr 0xba3 */
  /* file winuser.c line 3952 addr 0xba6 */
} /* 0xbaa */
LRESULT SendMessageA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xbaa */
  /* file winuser.c line 3956 addr 0xbaa */
  /* file winuser.c line 3956 addr 0xbad */
} /* 0xbb1 */
BOOL SendMessageCallbackA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */, SENDASYNCPROC e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0xbb1 */
  /* file winuser.c line 3957 addr 0xbb1 */
  /* file winuser.c line 3957 addr 0xbb4 */
} /* 0xbb8 */
BOOL SendMessageCallbackW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */, SENDASYNCPROC e /* 0x18 */, DWORD f /* 0x1c */)
{ /* 0xbb8 */
  /* file winuser.c line 3958 addr 0xbb8 */
  /* file winuser.c line 3958 addr 0xbbb */
} /* 0xbbf */
LRESULT SendMessageTimeoutA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */, UINT e /* 0x18 */, UINT f /* 0x1c */, PDWORD g /* 0x20 */)
{ /* 0xbbf */
  /* file winuser.c line 3959 addr 0xbbf */
  /* file winuser.c line 3959 addr 0xbc2 */
} /* 0xbc6 */
LRESULT SendMessageTimeoutW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */, UINT e /* 0x18 */, UINT f /* 0x1c */, PDWORD g /* 0x20 */)
{ /* 0xbc6 */
  /* file winuser.c line 3960 addr 0xbc6 */
  /* file winuser.c line 3960 addr 0xbc9 */
} /* 0xbcd */
LRESULT SendMessageW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xbcd */
  /* file winuser.c line 3961 addr 0xbcd */
  /* file winuser.c line 3961 addr 0xbd0 */
} /* 0xbd4 */
BOOL SendNotifyMessageA (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xbd4 */
  /* file winuser.c line 3962 addr 0xbd4 */
  /* file winuser.c line 3962 addr 0xbd7 */
} /* 0xbdb */
BOOL SendNotifyMessageW (HWND a /* 0x8 */, UINT b /* 0xc */, WPARAM c /* 0x10 */, LPARAM d /* 0x14 */)
{ /* 0xbdb */
  /* file winuser.c line 3963 addr 0xbdb */
  /* file winuser.c line 3963 addr 0xbde */
} /* 0xbe2 */
HWND SetActiveWindow (HWND a /* 0x8 */)
{ /* 0xbe2 */
  /* file winuser.c line 3964 addr 0xbe2 */
  /* file winuser.c line 3964 addr 0xbe5 */
} /* 0xbe9 */
HWND SetCapture (HWND hWnd /* 0x8 */)
{ /* 0xbe9 */
  /* file winuser.c line 3965 addr 0xbe9 */
  /* file winuser.c line 3965 addr 0xbec */
} /* 0xbf0 */
BOOL SetCaretBlinkTime (UINT a /* 0x8 */)
{ /* 0xbf0 */
  /* file winuser.c line 3966 addr 0xbf0 */
  /* file winuser.c line 3966 addr 0xbf3 */
} /* 0xbf7 */
BOOL SetCaretPos (int a /* 0x8 */, int b /* 0xc */)
{ /* 0xbf7 */
  /* file winuser.c line 3967 addr 0xbf7 */
  /* file winuser.c line 3967 addr 0xbfa */
} /* 0xbfe */
DWORD SetClassLongA (HWND a /* 0x8 */, int b /* 0xc */, LONG c /* 0x10 */)
{ /* 0xbfe */
  /* file winuser.c line 3968 addr 0xbfe */
  /* file winuser.c line 3968 addr 0xc01 */
} /* 0xc05 */
DWORD SetClassLongW (HWND a /* 0x8 */, int b /* 0xc */, LONG c /* 0x10 */)
{ /* 0xc05 */
  /* file winuser.c line 3969 addr 0xc05 */
  /* file winuser.c line 3969 addr 0xc08 */
} /* 0xc0c */
WORD SetClassWord (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xc0c */
  WORD c /* 0xfffffffe */;
  /* file winuser.c line 3977 addr 0xc0c */
  /* file winuser.c line 3977 addr 0xc19 */
} /* 0xc1d */
HANDLE SetClipboardData (UINT a /* 0x8 */, HANDLE b /* 0xc */)
{ /* 0xc1d */
  /* file winuser.c line 3978 addr 0xc1d */
  /* file winuser.c line 3978 addr 0xc20 */
} /* 0xc24 */
HWND SetClipboardViewer (HWND a /* 0x8 */)
{ /* 0xc24 */
  /* file winuser.c line 3979 addr 0xc24 */
  /* file winuser.c line 3979 addr 0xc27 */
} /* 0xc2b */
HCURSOR SetCursor (HCURSOR a /* 0x8 */)
{ /* 0xc2b */
  /* file winuser.c line 3980 addr 0xc2b */
  /* file winuser.c line 3980 addr 0xc2e */
} /* 0xc32 */
BOOL SetCursorPos (int a /* 0x8 */, int b /* 0xc */)
{ /* 0xc32 */
  /* file winuser.c line 3981 addr 0xc32 */
  /* file winuser.c line 3981 addr 0xc35 */
} /* 0xc39 */
void SetDebugErrorLevel (DWORD a /* 0x8 */)
{ /* 0xc39 */
  /* file winuser.c line 3982 addr 0xc39 */
  /* file winuser.c line 3982 addr 0xc3c */
} /* 0xc40 */
BOOL SetDlgItemInt (HWND a /* 0x8 */, int b /* 0xc */, UINT c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xc40 */
  /* file winuser.c line 3983 addr 0xc40 */
  /* file winuser.c line 3983 addr 0xc43 */
} /* 0xc47 */
BOOL SetDlgItemTextA (HWND a /* 0x8 */, int b /* 0xc */, LPCSTR c /* 0x10 */)
{ /* 0xc47 */
  /* file winuser.c line 3984 addr 0xc47 */
  /* file winuser.c line 3984 addr 0xc4a */
} /* 0xc4e */
BOOL SetDlgItemTextW (HWND a /* 0x8 */, int b /* 0xc */, LPCWSTR c /* 0x10 */)
{ /* 0xc4e */
  /* file winuser.c line 3985 addr 0xc4e */
  /* file winuser.c line 3985 addr 0xc51 */
} /* 0xc55 */
BOOL SetDoubleClickTime (UINT a /* 0x8 */)
{ /* 0xc55 */
  /* file winuser.c line 3986 addr 0xc55 */
  /* file winuser.c line 3986 addr 0xc58 */
} /* 0xc5c */
HWND SetFocus (HWND a /* 0x8 */)
{ /* 0xc5c */
  /* file winuser.c line 3987 addr 0xc5c */
  /* file winuser.c line 3987 addr 0xc5f */
} /* 0xc63 */
BOOL SetForegroundWindow (HWND a /* 0x8 */)
{ /* 0xc63 */
  /* file winuser.c line 3988 addr 0xc63 */
  /* file winuser.c line 3988 addr 0xc66 */
} /* 0xc6a */
BOOL SetKeyboardState (PBYTE a /* 0x8 */)
{ /* 0xc6a */
  /* file winuser.c line 3989 addr 0xc6a */
  /* file winuser.c line 3989 addr 0xc6d */
} /* 0xc71 */
BOOL SetMenu (HWND a /* 0x8 */, HMENU b /* 0xc */)
{ /* 0xc71 */
  /* file winuser.c line 3990 addr 0xc71 */
  /* file winuser.c line 3990 addr 0xc74 */
} /* 0xc78 */
BOOL SetMenuContextHelpId (HMENU a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xc78 */
  /* file winuser.c line 3991 addr 0xc78 */
  /* file winuser.c line 3991 addr 0xc7b */
} /* 0xc7f */
BOOL SetMenuDefaultItem (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */)
{ /* 0xc7f */
  /* file winuser.c line 3992 addr 0xc7f */
  /* file winuser.c line 3992 addr 0xc82 */
} /* 0xc86 */
BOOL SetMenuInfo (HMENU a /* 0x8 */, LPCMENUINFO b /* 0xc */)
{ /* 0xc86 */
  /* file winuser.c line 3993 addr 0xc86 */
  /* file winuser.c line 3993 addr 0xc89 */
} /* 0xc8d */
BOOL SetMenuItemBitmaps (HMENU a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, HBITMAP d /* 0x14 */, HBITMAP e /* 0x18 */)
{ /* 0xc8d */
  /* file winuser.c line 3994 addr 0xc8d */
  /* file winuser.c line 3994 addr 0xc90 */
} /* 0xc94 */
BOOL SetMenuItemInfoA (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPCMENUITEMINFOA d /* 0x14 */)
{ /* 0xc94 */
  /* file winuser.c line 3995 addr 0xc94 */
  /* file winuser.c line 3995 addr 0xc97 */
} /* 0xc9b */
BOOL SetMenuItemInfoW (HMENU a /* 0x8 */, UINT b /* 0xc */, BOOL c /* 0x10 */, LPCMENUITEMINFOW d /* 0x14 */)
{ /* 0xc9b */
  /* file winuser.c line 3996 addr 0xc9b */
  /* file winuser.c line 3996 addr 0xc9e */
} /* 0xca2 */
LPARAM SetMessageExtraInfo (LPARAM a /* 0x8 */)
{ /* 0xca2 */
  /* file winuser.c line 3997 addr 0xca2 */
  /* file winuser.c line 3997 addr 0xca5 */
} /* 0xca9 */
BOOL SetMessageQueue (int a /* 0x8 */)
{ /* 0xca9 */
  /* file winuser.c line 3998 addr 0xca9 */
  /* file winuser.c line 3998 addr 0xcac */
} /* 0xcb0 */
HWND SetParent (HWND a /* 0x8 */, HWND b /* 0xc */)
{ /* 0xcb0 */
  /* file winuser.c line 3999 addr 0xcb0 */
  /* file winuser.c line 3999 addr 0xcb3 */
} /* 0xcb7 */
BOOL SetProcessWindowStation (HWINSTA a /* 0x8 */)
{ /* 0xcb7 */
  /* file winuser.c line 4003 addr 0xcb7 */
  /* file winuser.c line 4003 addr 0xcba */
} /* 0xcbe */
BOOL SetPropA (HWND a /* 0x8 */, LPCSTR b /* 0xc */, HANDLE c /* 0x10 */)
{ /* 0xcbe */
  /* file winuser.c line 4004 addr 0xcbe */
  /* file winuser.c line 4004 addr 0xcc1 */
} /* 0xcc5 */
BOOL SetPropW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */, HANDLE c /* 0x10 */)
{ /* 0xcc5 */
  /* file winuser.c line 4005 addr 0xcc5 */
  /* file winuser.c line 4005 addr 0xcc8 */
} /* 0xccc */
BOOL SetRect (LPRECT a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */)
{ /* 0xccc */
  /* file winuser.c line 4006 addr 0xccc */
  /* file winuser.c line 4006 addr 0xccf */
} /* 0xcd3 */
BOOL SetRectEmpty (LPRECT a /* 0x8 */)
{ /* 0xcd3 */
  /* file winuser.c line 4007 addr 0xcd3 */
  /* file winuser.c line 4007 addr 0xcd6 */
} /* 0xcda */
int SetScrollInfo (HWND a /* 0x8 */, int b /* 0xc */, LPCSCROLLINFO c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xcda */
  /* file winuser.c line 4008 addr 0xcda */
  /* file winuser.c line 4008 addr 0xcdd */
} /* 0xce1 */
int SetScrollPos (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, BOOL d /* 0x14 */)
{ /* 0xce1 */
  /* file winuser.c line 4009 addr 0xce1 */
  /* file winuser.c line 4009 addr 0xce4 */
} /* 0xce8 */
BOOL SetScrollRange (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, BOOL e /* 0x18 */)
{ /* 0xce8 */
  /* file winuser.c line 4010 addr 0xce8 */
  /* file winuser.c line 4010 addr 0xceb */
} /* 0xcef */
BOOL SetSysColors (int a /* 0x8 */, INT const *b /* 0xc */, COLORREF const *c /* 0x10 */)
{ /* 0xcef */
  /* file winuser.c line 4011 addr 0xcef */
  /* file winuser.c line 4011 addr 0xcf2 */
} /* 0xcf6 */
BOOL SetSystemCursor (HCURSOR a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xcf6 */
  /* file winuser.c line 4013 addr 0xcf6 */
  /* file winuser.c line 4013 addr 0xcf9 */
} /* 0xcfd */
BOOL SetThreadDesktop (HDESK a /* 0x8 */)
{ /* 0xcfd */
  /* file winuser.c line 4014 addr 0xcfd */
  /* file winuser.c line 4014 addr 0xd00 */
} /* 0xd04 */
UINT SetTimer (HWND a /* 0x8 */, UINT b /* 0xc */, UINT c /* 0x10 */, TIMERPROC d /* 0x14 */)
{ /* 0xd04 */
  /* file winuser.c line 4015 addr 0xd04 */
  /* file winuser.c line 4015 addr 0xd07 */
} /* 0xd0b */
BOOL SetUserObjectInformationA (HANDLE a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xd0b */
  /* file winuser.c line 4016 addr 0xd0b */
  /* file winuser.c line 4016 addr 0xd0e */
} /* 0xd12 */
BOOL SetUserObjectInformationW (HANDLE a /* 0x8 */, int b /* 0xc */, PVOID c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xd12 */
  /* file winuser.c line 4017 addr 0xd12 */
  /* file winuser.c line 4017 addr 0xd15 */
} /* 0xd19 */
BOOL SetUserObjectSecurity (HANDLE a /* 0x8 */, PSECURITY_INFORMATION b /* 0xc */, PSECURITY_DESCRIPTOR c /* 0x10 */)
{ /* 0xd19 */
  /* file winuser.c line 4018 addr 0xd19 */
  /* file winuser.c line 4018 addr 0xd1c */
} /* 0xd20 */
BOOL SetWindowContextHelpId (HWND a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xd20 */
  /* file winuser.c line 4022 addr 0xd20 */
  /* file winuser.c line 4022 addr 0xd23 */
} /* 0xd27 */
LONG SetWindowLongA (HWND a /* 0x8 */, int b /* 0xc */, LONG c /* 0x10 */)
{ /* 0xd27 */
  /* file winuser.c line 4023 addr 0xd27 */
  /* file winuser.c line 4023 addr 0xd2a */
} /* 0xd2e */
LONG SetWindowLongW (HWND a /* 0x8 */, int b /* 0xc */, LONG c /* 0x10 */)
{ /* 0xd2e */
  /* file winuser.c line 4024 addr 0xd2e */
  /* file winuser.c line 4024 addr 0xd31 */
} /* 0xd35 */
BOOL SetWindowPlacement (HWND hWnd /* 0x8 */, WINDOWPLACEMENT const *b /* 0xc */)
{ /* 0xd35 */
  /* file winuser.c line 4032 addr 0xd35 */
  /* file winuser.c line 4032 addr 0xd38 */
} /* 0xd3c */
BOOL SetWindowPos (HWND a /* 0x8 */, HWND b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, UINT g /* 0x20 */)
{ /* 0xd3c */
  /* file winuser.c line 4033 addr 0xd3c */
  /* file winuser.c line 4033 addr 0xd3f */
} /* 0xd43 */
int SetWindowRgn (HWND a /* 0x8 */, HRGN b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xd43 */
  /* file winuser.c line 4034 addr 0xd43 */
  /* file winuser.c line 4034 addr 0xd46 */
} /* 0xd4a */
HHOOK SetWindowsHookA (int a /* 0x8 */, HOOKPROC b /* 0xc */)
{ /* 0xd4a */
  /* file winuser.c line 4035 addr 0xd4a */
  /* file winuser.c line 4035 addr 0xd4d */
} /* 0xd51 */
HHOOK SetWindowsHookW (int a /* 0x8 */, HOOKPROC b /* 0xc */)
{ /* 0xd51 */
  /* file winuser.c line 4036 addr 0xd51 */
  /* file winuser.c line 4036 addr 0xd54 */
} /* 0xd58 */
HHOOK SetWindowsHookExA (int a /* 0x8 */, HOOKPROC b /* 0xc */, HINSTANCE c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xd58 */
  /* file winuser.c line 4037 addr 0xd58 */
  /* file winuser.c line 4037 addr 0xd5b */
} /* 0xd5f */
HHOOK SetWindowsHookExW (int a /* 0x8 */, HOOKPROC b /* 0xc */, HINSTANCE c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xd5f */
  /* file winuser.c line 4038 addr 0xd5f */
  /* file winuser.c line 4038 addr 0xd62 */
} /* 0xd66 */
BOOL SetWindowTextA (HWND a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xd66 */
  /* file winuser.c line 4039 addr 0xd66 */
  /* file winuser.c line 4039 addr 0xd69 */
} /* 0xd6d */
BOOL SetWindowTextW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xd6d */
  /* file winuser.c line 4040 addr 0xd6d */
  /* file winuser.c line 4040 addr 0xd70 */
} /* 0xd74 */
WORD SetWindowWord (HWND a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */)
{ /* 0xd74 */
  WORD c /* 0xfffffffe */;
  /* file winuser.c line 4041 addr 0xd74 */
  /* file winuser.c line 4041 addr 0xd81 */
} /* 0xd85 */
BOOL ShowCaret (HWND a /* 0x8 */)
{ /* 0xd85 */
  /* file winuser.c line 4042 addr 0xd85 */
  /* file winuser.c line 4042 addr 0xd88 */
} /* 0xd8c */
int ShowCursor (BOOL a /* 0x8 */)
{ /* 0xd8c */
  /* file winuser.c line 4043 addr 0xd8c */
  /* file winuser.c line 4043 addr 0xd8f */
} /* 0xd93 */
BOOL ShowOwnedPopups (HWND a /* 0x8 */, BOOL b /* 0xc */)
{ /* 0xd93 */
  /* file winuser.c line 4044 addr 0xd93 */
  /* file winuser.c line 4044 addr 0xd96 */
} /* 0xd9a */
BOOL ShowScrollBar (HWND a /* 0x8 */, int b /* 0xc */, BOOL c /* 0x10 */)
{ /* 0xd9a */
  /* file winuser.c line 4045 addr 0xd9a */
  /* file winuser.c line 4045 addr 0xd9d */
} /* 0xda1 */
BOOL ShowWindow (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0xda1 */
  /* file winuser.c line 4046 addr 0xda1 */
  /* file winuser.c line 4046 addr 0xda4 */
} /* 0xda8 */
BOOL ShowWindowAsync (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0xda8 */
  /* file winuser.c line 4047 addr 0xda8 */
  /* file winuser.c line 4047 addr 0xdab */
} /* 0xdaf */
BOOL SubtractRect (LPRECT a /* 0x8 */, LPCRECT b /* 0xc */, LPCRECT c /* 0x10 */)
{ /* 0xdaf */
  /* file winuser.c line 4048 addr 0xdaf */
  /* file winuser.c line 4048 addr 0xdb2 */
} /* 0xdb6 */
BOOL SwapMouseButton (BOOL a /* 0x8 */)
{ /* 0xdb6 */
  /* file winuser.c line 4049 addr 0xdb6 */
  /* file winuser.c line 4049 addr 0xdb9 */
} /* 0xdbd */
BOOL SwitchDesktop (HDESK a /* 0x8 */)
{ /* 0xdbd */
  /* file winuser.c line 4050 addr 0xdbd */
  /* file winuser.c line 4050 addr 0xdc0 */
} /* 0xdc4 */
BOOL SystemParametersInfoA (UINT a /* 0x8 */, UINT b /* 0xc */, PVOID c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0xdc4 */
  /* file winuser.c line 4054 addr 0xdc4 */
  /* file winuser.c line 4054 addr 0xdc7 */
} /* 0xdcb */
BOOL SystemParametersInfoW (UINT a /* 0x8 */, UINT b /* 0xc */, PVOID c /* 0x10 */, UINT d /* 0x14 */)
{ /* 0xdcb */
  /* file winuser.c line 4055 addr 0xdcb */
  /* file winuser.c line 4055 addr 0xdce */
} /* 0xdd2 */
LONG TabbedTextOutA (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCSTR d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, LPINT g /* 0x20 */, int h /* 0x24 */)
{ /* 0xdd2 */
  /* file winuser.c line 4056 addr 0xdd2 */
  /* file winuser.c line 4056 addr 0xdd5 */
} /* 0xdd9 */
LONG TabbedTextOutW (HDC a /* 0x8 */, int b /* 0xc */, int c /* 0x10 */, LPCWSTR d /* 0x14 */, int e /* 0x18 */, int f /* 0x1c */, LPINT g /* 0x20 */, int h /* 0x24 */)
{ /* 0xdd9 */
  /* file winuser.c line 4057 addr 0xdd9 */
  /* file winuser.c line 4057 addr 0xddc */
} /* 0xde0 */
WORD TileWindows (HWND a /* 0x8 */, UINT b /* 0xc */, LPCRECT c /* 0x10 */, UINT d /* 0x14 */, HWND const *e /* 0x18 */)
{ /* 0xde0 */
  /* file winuser.c line 4058 addr 0xde0 */
  /* file winuser.c line 4058 addr 0xde3 */
} /* 0xde7 */
int ToAscii (UINT a /* 0x8 */, UINT b /* 0xc */, PBYTE c /* 0x10 */, LPWORD d /* 0x14 */, UINT e /* 0x18 */)
{ /* 0xde7 */
  /* file winuser.c line 4059 addr 0xde7 */
  /* file winuser.c line 4059 addr 0xdea */
} /* 0xdee */
int ToAsciiEx (UINT a /* 0x8 */, UINT b /* 0xc */, PBYTE c /* 0x10 */, LPWORD d /* 0x14 */, UINT e /* 0x18 */, HKL f /* 0x1c */)
{ /* 0xdee */
  /* file winuser.c line 4060 addr 0xdee */
  /* file winuser.c line 4060 addr 0xdf1 */
} /* 0xdf5 */
int ToUnicode (UINT a /* 0x8 */, UINT b /* 0xc */, PBYTE c /* 0x10 */, LPWSTR d /* 0x14 */, int e /* 0x18 */, UINT f /* 0x1c */)
{ /* 0xdf5 */
  /* file winuser.c line 4061 addr 0xdf5 */
  /* file winuser.c line 4061 addr 0xdf8 */
} /* 0xdfc */
int ToUnicodeEx (UINT a /* 0x8 */, UINT b /* 0xc */, PBYTE c /* 0x10 */, LPWSTR d /* 0x14 */, int e /* 0x18 */, UINT f /* 0x1c */, HKL g /* 0x20 */)
{ /* 0xdfc */
  /* file winuser.c line 4062 addr 0xdfc */
  /* file winuser.c line 4062 addr 0xdff */
} /* 0xe03 */
BOOL TrackMouseEvent (LPTRACKMOUSEEVENT a /* 0x8 */)
{ /* 0xe03 */
  /* file winuser.c line 4063 addr 0xe03 */
  /* file winuser.c line 4063 addr 0xe06 */
} /* 0xe0a */
BOOL TrackPopupMenu (HMENU a /* 0x8 */, UINT b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, int e /* 0x18 */, HWND f /* 0x1c */, LPCRECT g /* 0x20 */)
{ /* 0xe0a */
  /* file winuser.c line 4064 addr 0xe0a */
  /* file winuser.c line 4064 addr 0xe0d */
} /* 0xe11 */
BOOL TrackPopupMenuEx (HMENU a /* 0x8 */, UINT b /* 0xc */, int c /* 0x10 */, int d /* 0x14 */, HWND e /* 0x18 */, LPTPMPARAMS f /* 0x1c */)
{ /* 0xe11 */
  /* file winuser.c line 4065 addr 0xe11 */
  /* file winuser.c line 4065 addr 0xe14 */
} /* 0xe18 */
int TranslateAcceleratorA (HWND a /* 0x8 */, HACCEL b /* 0xc */, LPMSG c /* 0x10 */)
{ /* 0xe18 */
  /* file winuser.c line 4066 addr 0xe18 */
  /* file winuser.c line 4066 addr 0xe1b */
} /* 0xe1f */
int TranslateAcceleratorW (HWND a /* 0x8 */, HACCEL b /* 0xc */, LPMSG c /* 0x10 */)
{ /* 0xe1f */
  /* file winuser.c line 4067 addr 0xe1f */
  /* file winuser.c line 4067 addr 0xe22 */
} /* 0xe26 */
BOOL TranslateMDISysAccel (HWND a /* 0x8 */, LPMSG b /* 0xc */)
{ /* 0xe26 */
  /* file winuser.c line 4068 addr 0xe26 */
  /* file winuser.c line 4068 addr 0xe29 */
} /* 0xe2d */
BOOL TranslateMessage (MSG const *a /* 0x8 */)
{ /* 0xe2d */
  /* file winuser.c line 4069 addr 0xe2d */
  /* file winuser.c line 4069 addr 0xe30 */
} /* 0xe34 */
BOOL UnhookWindowsHook (int a /* 0x8 */, HOOKPROC b /* 0xc */)
{ /* 0xe34 */
  /* file winuser.c line 4070 addr 0xe34 */
  /* file winuser.c line 4070 addr 0xe37 */
} /* 0xe3b */
BOOL UnhookWindowsHookEx (HHOOK a /* 0x8 */)
{ /* 0xe3b */
  /* file winuser.c line 4071 addr 0xe3b */
  /* file winuser.c line 4071 addr 0xe3e */
} /* 0xe42 */
BOOL UnionRect (LPRECT a /* 0x8 */, LPCRECT b /* 0xc */, LPCRECT c /* 0x10 */)
{ /* 0xe42 */
  /* file winuser.c line 4075 addr 0xe42 */
  /* file winuser.c line 4075 addr 0xe45 */
} /* 0xe49 */
BOOL UnloadKeyboardLayout (HKL a /* 0x8 */)
{ /* 0xe49 */
  /* file winuser.c line 4076 addr 0xe49 */
  /* file winuser.c line 4076 addr 0xe4c */
} /* 0xe50 */
BOOL UnregisterClassA (LPCSTR a /* 0x8 */, HINSTANCE b /* 0xc */)
{ /* 0xe50 */
  /* file winuser.c line 4077 addr 0xe50 */
  /* file winuser.c line 4077 addr 0xe53 */
} /* 0xe57 */
BOOL UnregisterClassW (LPCWSTR a /* 0x8 */, HINSTANCE b /* 0xc */)
{ /* 0xe57 */
  /* file winuser.c line 4078 addr 0xe57 */
  /* file winuser.c line 4078 addr 0xe5a */
} /* 0xe5e */
BOOL UnregisterHotKey (HWND a /* 0x8 */, int b /* 0xc */)
{ /* 0xe5e */
  /* file winuser.c line 4085 addr 0xe5e */
  /* file winuser.c line 4085 addr 0xe61 */
} /* 0xe65 */
BOOL UpdateWindow (HWND a /* 0x8 */)
{ /* 0xe65 */
  /* file winuser.c line 4086 addr 0xe65 */
  /* file winuser.c line 4086 addr 0xe68 */
} /* 0xe6c */
BOOL ValidateRect (HWND a /* 0x8 */, LPCRECT b /* 0xc */)
{ /* 0xe6c */
  /* file winuser.c line 4090 addr 0xe6c */
  /* file winuser.c line 4090 addr 0xe6f */
} /* 0xe73 */
BOOL ValidateRgn (HWND a /* 0x8 */, HRGN b /* 0xc */)
{ /* 0xe73 */
  /* file winuser.c line 4091 addr 0xe73 */
  /* file winuser.c line 4091 addr 0xe76 */
} /* 0xe7a */
SHORT VkKeyScanA (int a /* 0x8 */)
{ /* 0xe7a */
  CHAR a /* 0xffffffff */;
  /* file winuser.c line 4092 addr 0xe7a */
  /* file winuser.c line 4092 addr 0xe86 */
} /* 0xe8a */
SHORT VkKeyScanExA (int a /* 0x8 */, HKL b /* 0xc */)
{ /* 0xe8a */
  CHAR a /* 0xffffffff */;
  /* file winuser.c line 4093 addr 0xe8a */
  /* file winuser.c line 4093 addr 0xe96 */
} /* 0xe9a */
SHORT VkKeyScanExW (int a /* 0x8 */, HKL b /* 0xc */)
{ /* 0xe9a */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 4094 addr 0xe9a */
  /* file winuser.c line 4094 addr 0xea7 */
} /* 0xeab */
SHORT VkKeyScanW (int a /* 0x8 */)
{ /* 0xeab */
  WCHAR a /* 0xfffffffe */;
  /* file winuser.c line 4095 addr 0xeab */
  /* file winuser.c line 4095 addr 0xeb8 */
} /* 0xebc */
DWORD WaitForInputIdle (HANDLE a /* 0x8 */, DWORD b /* 0xc */)
{ /* 0xebc */
  /* file winuser.c line 4096 addr 0xebc */
  /* file winuser.c line 4096 addr 0xebf */
} /* 0xec3 */
BOOL WaitMessage ()
{ /* 0xec3 */
  /* file winuser.c line 4097 addr 0xec3 */
  /* file winuser.c line 4097 addr 0xec6 */
} /* 0xec8 */
HWND WindowFromDC (HDC hDC /* 0x8 */)
{ /* 0xec8 */
  /* file winuser.c line 4098 addr 0xec8 */
  /* file winuser.c line 4098 addr 0xecb */
} /* 0xecf */
HWND WindowFromPoint (POINT a /* 0x8 */)
{ /* 0xecf */
  /* file winuser.c line 4099 addr 0xecf */
  /* file winuser.c line 4099 addr 0xed2 */
} /* 0xed6 */
UINT WinExec (LPCSTR a /* 0x8 */, UINT b /* 0xc */)
{ /* 0xed6 */
  /* file winuser.c line 4100 addr 0xed6 */
  /* file winuser.c line 4100 addr 0xed9 */
} /* 0xedd */
BOOL WinHelpA (HWND a /* 0x8 */, LPCSTR b /* 0xc */, UINT c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xedd */
  /* file winuser.c line 4101 addr 0xedd */
  /* file winuser.c line 4101 addr 0xee0 */
} /* 0xee4 */
BOOL WinHelpW (HWND a /* 0x8 */, LPCWSTR b /* 0xc */, UINT c /* 0x10 */, DWORD d /* 0x14 */)
{ /* 0xee4 */
  /* file winuser.c line 4102 addr 0xee4 */
  /* file winuser.c line 4102 addr 0xee7 */
} /* 0xeeb */
int wsprintfA (LPSTR a /* 0x8 */, LPCSTR b /* 0xc */)
{ /* 0xeeb */
  /* file winuser.c line 4103 addr 0xeeb */
  /* file winuser.c line 4103 addr 0xeee */
} /* 0xef0 */
int wsprintfW (LPWSTR a /* 0x8 */, LPCWSTR b /* 0xc */)
{ /* 0xef0 */
  /* file winuser.c line 4104 addr 0xef0 */
  /* file winuser.c line 4104 addr 0xef3 */
} /* 0xef5 */
int wvsprintfA (LPSTR a /* 0x8 */, LPCSTR b /* 0xc */, va_list arglist /* 0x10 */)
{ /* 0xef5 */
  /* file winuser.c line 4105 addr 0xef5 */
  /* file winuser.c line 4105 addr 0xef8 */
} /* 0xefc */
int wvsprintfW (LPWSTR a /* 0x8 */, LPCWSTR b /* 0xc */, va_list arglist /* 0x10 */)
{ /* 0xefc */
  /* file winuser.c line 4106 addr 0xefc */
  /* file winuser.c line 4106 addr 0xeff */
} /* 0xf03 */
typedef WNDCLASSA WNDCLASS;
typedef WNDCLASSA *LPWNDCLASS;
typedef WNDCLASSA *PWNDCLASS;
typedef WNDCLASSEXA WNDCLASSEX;
typedef WNDCLASSEXA *LPWNDCLASSEX;
typedef WNDCLASSEXA *PWNDCLASSEX;
typedef MENUITEMINFOA MENUITEMINFO;
typedef MENUITEMINFOA *LPMENUITEMINFO;
typedef LPCMENUITEMINFOA LPCMENUITEMINFO;
typedef MSGBOXPARAMSA MSGBOXPARAMS;
typedef MSGBOXPARAMSA *PMSGBOXPARAMS;
typedef MSGBOXPARAMSA *LPMSGBOXPARAMS;
typedef HIGHCONTRASTA HIGHCONTRAST;
typedef HIGHCONTRASTA *LPHIGHCONTRAST;
typedef SERIALKEYSA SERIALKEYS;
typedef SERIALKEYSA *LPSERIALKEYS;
typedef SOUNDSENTRYA SOUNDSENTRY;
typedef SOUNDSENTRYA *LPSOUNDSENTRY;
typedef CREATESTRUCTA CREATESTRUCT;
typedef CREATESTRUCTA *LPCREATESTRUCT;
typedef CBT_CREATEWNDA CBT_CREATEWND;
typedef CBT_CREATEWNDA *LPCBT_CREATEWND;
typedef MDICREATESTRUCTA MDICREATESTRUCT;
typedef MDICREATESTRUCTA *LPMDICREATESTRUCT;
typedef MULTIKEYHELPA MULTIKEYHELP;
typedef MULTIKEYHELPA *PMULTIKEYHELP;
typedef MULTIKEYHELPA *LPMULTIKEYHELP;
typedef MONITORINFOEXA MONITORINFOEX;
typedef MONITORINFOEXA *LPMONITORINFOEX;
typedef ICONMETRICSA ICONMETRICS;
typedef ICONMETRICSA *LPICONMETRICS;
typedef NONCLIENTMETRICSA NONCLIENTMETRICS;
typedef NONCLIENTMETRICSA *LPNONCLIENTMETRICS;
