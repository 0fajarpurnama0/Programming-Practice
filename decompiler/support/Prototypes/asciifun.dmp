
ASCIIFUN.O:     file format elf32-big

/export/tmp/caprino/grec/suppw/asciifun.c:
typedef int32 int;
typedef int8 char;
typedef int32 long int;
typedef uint32 unsigned int;
typedef uint32 long unsigned int;
typedef int64 long long int;
typedef uint64 long long unsigned int;
typedef int16 short int;
typedef uint16 short unsigned int;
typedef int8 signed char;
typedef uint8 unsigned char;
typedef float float;
typedef double double;
typedef float128 long double;
typedef struct %anon1 { /* size 8 */
  int real; /* bitsize 32, bitpos 0 */
  int imag; /* bitsize 32, bitpos 32 */
} complex int;
typedef complex float complex float;
typedef complex double complex double;
typedef complex float128 complex long double;
typedef void void;
#pragma cconv __stdcall
int GetBinaryTypeA (char *lpApplicationName /* 0x44 */, unsigned int *lpBinaryType /* 0x48 */)
{ /* 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 51 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 51 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 59 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 59 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 65 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 65 addr 0x4 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 71 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 71 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 83 addr 0x0 */
} /* 0x14 */
unsigned int GetShortPathNameA (char *lpszLongPath /* 0x44 */, char *lpszShortPath /* 0x48 */, unsigned int cchBuffer /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
char *GetEnvironmentStringsA ()
{ /* 0x0 */
} /* 0xc */
int FreeEnvironmentStringsA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int FormatMessageA (unsigned int dwFlags /* 0x44 */, void *lpSource /* 0x48 */, unsigned int dwMessageId /* 0x4c */, unsigned int dwLanguageId /* 0x50 */, char *lpBuffer /* 0x54 */, unsigned int nSize /* 0x58 */, void **Arguments /* 0x5c */)
{ /* 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 83 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 92 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 92 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 99 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 99 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 106 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 106 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 114 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 114 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 121 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 121 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 128 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 128 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 134 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 134 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 142 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 142 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 150 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 150 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 159 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 159 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 167 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 167 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 176 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 176 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 184 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 184 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 195 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 195 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 203 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 203 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 210 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 210 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 216 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 216 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 224 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 224 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 232 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 232 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 238 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 238 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 245 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 245 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 251 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 251 addr 0x4 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 259 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 259 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 266 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 266 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 274 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 274 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 280 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 280 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 288 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 288 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 297 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 297 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 305 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 305 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 314 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 314 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 324 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 324 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 331 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 331 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 342 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 342 addr 0x20 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 349 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 349 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 355 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 355 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 361 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 361 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 369 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 369 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 375 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 375 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 381 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 381 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 389 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 389 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 397 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 397 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 407 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 407 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 415 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 415 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 423 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 423 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 430 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 430 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 439 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 439 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 450 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 450 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 459 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 459 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 468 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 468 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 476 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 476 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 482 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 482 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 489 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 489 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 496 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 496 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 505 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 505 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 512 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 512 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 518 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 518 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 525 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 525 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 535 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 535 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 544 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 544 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 551 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 551 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 559 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 559 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 565 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 565 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 574 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 574 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 582 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 582 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 590 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 590 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 602 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 602 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 609 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 609 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 615 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 615 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 622 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 622 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 628 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 628 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 639 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 639 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 647 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 647 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 654 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 654 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 662 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 662 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 675 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 675 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 687 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 687 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 699 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 699 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 706 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 706 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 713 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 713 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 726 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 726 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 733 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 733 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 740 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 740 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 747 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 747 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 754 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 754 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 761 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 761 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 773 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 773 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 787 addr 0x0 */
} /* 0x24 */
void *CreateMailslotA (char *lpName /* 0x44 */, unsigned int nMaxMessageSize /* 0x48 */, unsigned int lReadTimeout /* 0x4c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int lstrcmpA (char *lpString1 /* 0x44 */, char *lpString2 /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int lstrcmpiA (char *lpString1 /* 0x44 */, char *lpString2 /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
char *lstrcpynA (char *lpString1 /* 0x44 */, char *lpString2 /* 0x48 */, int iMaxLength /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
char *lstrcpyA (char *lpString1 /* 0x44 */, char *lpString2 /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
char *lstrcatA (char *lpString1 /* 0x44 */, char *lpString2 /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int lstrlenA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CreateMutexA (struct _SECURITY_ATTRIBUTES /* id 2 */ *lpMutexAttributes /* 0x44 */, int bInitialOwner /* 0x48 */, char *lpName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *OpenMutexA (unsigned int dwDesiredAccess /* 0x44 */, int bInheritHandle /* 0x48 */, char *lpName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateEventA (struct _SECURITY_ATTRIBUTES /* id 2 */ *lpEventAttributes /* 0x44 */, int bManualReset /* 0x48 */, int bInitialState /* 0x4c */, char *lpName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *OpenEventA (unsigned int dwDesiredAccess /* 0x44 */, int bInheritHandle /* 0x48 */, char *lpName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateSemaphoreA (struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSemaphoreAttributes /* 0x44 */, long int lInitialCount /* 0x48 */, long int lMaximumCount /* 0x4c */, char *lpName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *OpenSemaphoreA (unsigned int dwDesiredAccess /* 0x44 */, int bInheritHandle /* 0x48 */, char *lpName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateFileMappingA (void *hFile /* 0x44 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpFileMappingAttributes /* 0x48 */, unsigned int flProtect /* 0x4c */, unsigned int dwMaximumSizeHigh /* 0x50 */, unsigned int dwMaximumSizeLow /* 0x54 */, char *lpName /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
void *OpenFileMappingA (unsigned int dwDesiredAccess /* 0x44 */, int bInheritHandle /* 0x48 */, char *lpName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetLogicalDriveStringsA (unsigned int nBufferLength /* 0x44 */, char *lpBuffer /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadLibraryA (char *lpLibFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *LoadLibraryExA (char *lpLibFileName /* 0x44 */, void *hFile /* 0x48 */, unsigned int dwFlags /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetModuleFileNameA (void *hModule /* 0x44 */, char *lpFilename /* 0x48 */, unsigned int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *GetModuleHandleA (char *lpModuleName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void FatalAppExitA (unsigned int uAction /* 0x44 */, char *lpMessageText /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
char *GetCommandLineA ()
{ /* 0x0 */
} /* 0xc */
unsigned int GetEnvironmentVariableA (char *lpName /* 0x44 */, char *lpBuffer /* 0x48 */, unsigned int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int SetEnvironmentVariableA (char *lpName /* 0x44 */, char *lpValue /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int ExpandEnvironmentStringsA (char *lpSrc /* 0x44 */, char *lpDst /* 0x48 */, unsigned int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void OutputDebugStringA (char *lpOutputString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *FindResourceA (void *hModule /* 0x44 */, char *lpName /* 0x48 */, char *lpType /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *FindResourceExA (void *hModule /* 0x44 */, char *lpType /* 0x48 */, char *lpName /* 0x4c */, short unsigned int wLanguage /* 0xffffffee */)
{ /* 0x0 */
} /* 0x20 */
int EnumResourceTypesA (void *hModule /* 0x44 */, int (*lpEnumFunc) (/* unknown */) /* 0x48 */, long int lParam /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int EnumResourceNamesA (void *hModule /* 0x44 */, char *lpType /* 0x48 */, int (*lpEnumFunc) (/* unknown */) /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int EnumResourceLanguagesA (void *hModule /* 0x44 */, char *lpType /* 0x48 */, char *lpName /* 0x4c */, int (*lpEnumFunc) (/* unknown */) /* 0x50 */, long int lParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
void *BeginUpdateResourceA (char *pFileName /* 0x44 */, int bDeleteExistingResources /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int UpdateResourceA (void *hUpdate /* 0x44 */, char *lpType /* 0x48 */, char *lpName /* 0x4c */, short unsigned int wLanguage /* 0xffffffee */, void *lpData /* 0x54 */, unsigned int cbData /* 0x58 */)
{ /* 0x0 */
} /* 0x28 */
int EndUpdateResourceA (void *hUpdate /* 0x44 */, int fDiscard /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
short unsigned int GlobalAddAtomA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
short unsigned int GlobalFindAtomA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GlobalGetAtomNameA (short unsigned int nAtom /* 0xffffffee */, char *lpBuffer /* 0x48 */, int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x1c */
short unsigned int AddAtomA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
short unsigned int FindAtomA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetAtomNameA (short unsigned int nAtom /* 0xffffffee */, char *lpBuffer /* 0x48 */, int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x1c */
unsigned int GetProfileIntA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, int nDefault /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetProfileStringA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, char *lpDefault /* 0x4c */, char *lpReturnedString /* 0x50 */, unsigned int nSize /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int WriteProfileStringA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, char *lpString /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetProfileSectionA (char *lpAppName /* 0x44 */, char *lpReturnedString /* 0x48 */, unsigned int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int WriteProfileSectionA (char *lpAppName /* 0x44 */, char *lpString /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int GetPrivateProfileIntA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, int nDefault /* 0x4c */, char *lpFileName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int GetPrivateProfileStringA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, char *lpDefault /* 0x4c */, char *lpReturnedString /* 0x50 */, unsigned int nSize /* 0x54 */, char *lpFileName /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int WritePrivateProfileStringA (char *lpAppName /* 0x44 */, char *lpKeyName /* 0x48 */, char *lpString /* 0x4c */, char *lpFileName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int GetPrivateProfileSectionA (char *lpAppName /* 0x44 */, char *lpReturnedString /* 0x48 */, unsigned int nSize /* 0x4c */, char *lpFileName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int WritePrivateProfileSectionA (char *lpAppName /* 0x44 */, char *lpString /* 0x48 */, char *lpFileName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetDriveTypeA (char *lpRootPathName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetSystemDirectoryA (char *lpBuffer /* 0x44 */, unsigned int uSize /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int GetTempPathA (unsigned int nBufferLength /* 0x44 */, char *lpBuffer /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int GetTempFileNameA (char *lpPathName /* 0x44 */, char *lpPrefixString /* 0x48 */, unsigned int uUnique /* 0x4c */, char *lpTempFileName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int GetWindowsDirectoryA (char *lpBuffer /* 0x44 */, unsigned int uSize /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int SetCurrentDirectoryA (char *lpPathName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetCurrentDirectoryA (unsigned int nBufferLength /* 0x44 */, char *lpBuffer /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetDiskFreeSpaceA (char *lpRootPathName /* 0x44 */, unsigned int *lpSectorsPerCluster /* 0x48 */, unsigned int *lpBytesPerSector /* 0x4c */, unsigned int *lpNumberOfFreeClusters /* 0x50 */, unsigned int *lpTotalNumberOfClusters /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int GetDiskFreeSpaceExA (char *lpDirectoryName /* 0x44 */, struct _ULARGE_INTEGER /* id 3 */ *lpFreeBytesAvailableToCaller /* 0x48 */, struct _ULARGE_INTEGER /* id 3 */ *lpTotalNumberOfBytes /* 0x4c */, struct _ULARGE_INTEGER /* id 3 */ *lpTotalNumberOfFreeBytes /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int CreateDirectoryA (char *lpPathName /* 0x44 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int CreateDirectoryExA (char *lpTemplateDirectory /* 0x44 */, char *lpNewDirectory /* 0x48 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int RemoveDirectoryA (char *lpPathName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetFullPathNameA (char *lpFileName /* 0x44 */, unsigned int nBufferLength /* 0x48 */, char *lpBuffer /* 0x4c */, char **lpFilePart /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int DefineDosDeviceA (unsigned int dwFlags /* 0x44 */, char *lpDeviceName /* 0x48 */, char *lpTargetPath /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int QueryDosDeviceA (char *lpDeviceName /* 0x44 */, char *lpTargetPath /* 0x48 */, unsigned int ucchMax /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateFileA (char *lpFileName /* 0x44 */, unsigned int dwDesiredAccess /* 0x48 */, unsigned int dwShareMode /* 0x4c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x50 */, unsigned int dwCreationDisposition /* 0x54 */, unsigned int dwFlagsAndAttributes /* 0x58 */, void *hTemplateFile /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int SetFileAttributesA (char *lpFileName /* 0x44 */, unsigned int dwFileAttributes /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int GetFileAttributesA (char *lpFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetCompressedFileSizeA (char *lpFileName /* 0x44 */, unsigned int *lpFileSizeHigh /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int DeleteFileA (char *lpFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int SearchPathA (char *lpPath /* 0x44 */, char *lpFileName /* 0x48 */, char *lpExtension /* 0x4c */, unsigned int nBufferLength /* 0x50 */, char *lpBuffer /* 0x54 */, char **lpFilePart /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int CopyFileA (char *lpExistingFileName /* 0x44 */, char *lpNewFileName /* 0x48 */, int bFailIfExists /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int MoveFileA (char *lpExistingFileName /* 0x44 */, char *lpNewFileName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int MoveFileExA (char *lpExistingFileName /* 0x44 */, char *lpNewFileName /* 0x48 */, unsigned int dwFlags /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateNamedPipeA (char *lpName /* 0x44 */, unsigned int dwOpenMode /* 0x48 */, unsigned int dwPipeMode /* 0x4c */, unsigned int nMaxInstances /* 0x50 */, unsigned int nOutBufferSize /* 0x54 */, unsigned int nInBufferSize /* 0x58 */, unsigned int nDefaultTimeOut /* 0x5c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
int GetNamedPipeHandleStateA (void *hNamedPipe /* 0x44 */, unsigned int *lpState /* 0x48 */, unsigned int *lpCurInstances /* 0x4c */, unsigned int *lpMaxCollectionCount /* 0x50 */, unsigned int *lpCollectDataTimeout /* 0x54 */, char *lpUserName /* 0x58 */, unsigned int nMaxUserNameSize /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int CallNamedPipeA (char *lpNamedPipeName /* 0x44 */, void *lpInBuffer /* 0x48 */, unsigned int nInBufferSize /* 0x4c */, void *lpOutBuffer /* 0x50 */, unsigned int nOutBufferSize /* 0x54 */, unsigned int *lpBytesRead /* 0x58 */, unsigned int nTimeOut /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int WaitNamedPipeA (char *lpNamedPipeName /* 0x44 */, unsigned int nTimeOut /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int SetVolumeLabelA (char *lpRootPathName /* 0x44 */, char *lpVolumeName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetVolumeInformationA (char *lpRootPathName /* 0x44 */, char *lpVolumeNameBuffer /* 0x48 */, unsigned int nVolumeNameSize /* 0x4c */, unsigned int *lpVolumeSerialNumber /* 0x50 */, unsigned int *lpMaximumComponentLength /* 0x54 */, unsigned int *lpFileSystemFlags /* 0x58 */, char *lpFileSystemNameBuffer /* 0x5c */, unsigned int nFileSystemNameSize /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
int ClearEventLogA (void *hEventLog /* 0x44 */, char *lpBackupFileName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int BackupEventLogA (void *hEventLog /* 0x44 */, char *lpBackupFileName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *OpenEventLogA (char *lpUNCServerName /* 0x44 */, char *lpSourceName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *RegisterEventSourceA (char *lpUNCServerName /* 0x44 */, char *lpSourceName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *OpenBackupEventLogA (char *lpUNCServerName /* 0x44 */, char *lpFileName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int ReadEventLogA (void *hEventLog /* 0x44 */, unsigned int dwReadFlags /* 0x48 */, unsigned int dwRecordOffset /* 0x4c */, void *lpBuffer /* 0x50 */, unsigned int nNumberOfBytesToRead /* 0x54 */, unsigned int *pnBytesRead /* 0x58 */, unsigned int *pnMinNumberOfBytesNeeded /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int ReportEventA (void *hEventLog /* 0x44 */, short unsigned int wType /* 0xffffffee */, short unsigned int wCategory /* 0xffffffec */, unsigned int dwEventID /* 0x50 */, struct _SID /* id 4 */ *lpUserSid /* 0x54 */, short unsigned int wNumStrings /* 0xffffffea */, unsigned int dwDataSize /* 0x5c */, char **lpStrings /* 0x60 */, void *lpRawData /* 0x64 */)
{ /* 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 787 addr 0x28 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 803 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 803 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 820 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 820 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 831 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 831 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 839 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 839 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 849 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 849 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 857 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 857 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 867 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 867 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 875 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 875 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 882 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 882 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 894 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 894 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 906 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 906 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 914 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 914 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 923 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 923 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 933 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 933 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 940 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 940 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 948 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 948 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 956 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 956 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 964 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 964 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 972 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 972 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 979 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 979 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 985 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 985 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 992 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 992 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 999 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 999 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1003 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1003 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1009 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1009 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1014 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1014 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1024 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1024 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1032 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1032 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1039 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1039 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1047 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1047 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1054 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1054 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1060 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1060 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1069 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1069 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1077 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1077 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1082 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1082 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1090 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1090 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1095 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1095 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1104 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1104 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1112 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1112 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1123 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1123 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1131 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1131 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1141 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1141 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1149 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1149 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1157 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1157 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1165 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1165 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1174 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1174 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1179 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1179 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1185 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1185 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1192 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1192 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1196 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1196 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1200 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1200 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1216 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1216 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1225 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1225 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1234 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1234 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1243 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1243 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1252 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1252 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1259 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1259 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1267 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1267 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1276 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1276 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1284 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1284 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1290 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1290 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1295 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1295 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1302 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1302 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1308 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1308 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1314 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1314 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1321 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1321 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1328 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1328 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1333 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1333 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1339 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1339 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1344 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1344 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1350 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1350 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1355 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1355 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1361 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1361 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1366 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1366 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1371 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1371 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1376 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1376 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1381 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1381 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1389 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1389 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1394 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1394 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1399 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1399 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1405 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1405 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1412 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1412 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1418 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1418 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1423 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1423 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1430 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1430 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1437 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1437 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1443 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1443 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1448 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1448 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1457 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1457 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1466 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1466 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1476 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1476 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1485 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1485 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1495 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1495 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1504 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1504 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1513 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1513 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1522 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1522 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1531 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1531 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1536 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1536 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1549 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1549 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1555 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1555 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1567 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1567 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1576 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1576 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1583 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1583 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1589 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1589 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1595 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1595 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1602 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1602 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1608 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1608 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1614 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1614 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1621 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1621 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1626 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1626 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1634 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1634 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1643 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1643 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1647 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1647 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1653 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1653 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1660 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1660 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1666 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1666 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1673 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1673 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1679 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1679 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1683 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1683 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1690 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1690 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1698 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1698 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1704 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1704 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1710 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1710 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1715 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1715 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1721 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1721 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1731 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1731 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1739 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1739 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1745 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1745 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1754 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1754 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1762 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1762 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1771 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1771 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1779 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1779 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1788 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1788 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1796 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1796 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1811 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1811 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1820 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1820 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1826 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1826 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1833 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1833 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1841 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1841 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1845 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1845 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1849 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1849 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1853 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1853 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1857 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1857 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1861 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1861 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1865 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1865 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1870 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1870 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1875 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1875 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1880 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1880 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1884 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1884 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1888 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1888 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1892 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1892 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1896 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1896 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1900 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1900 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1904 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1904 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1908 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1908 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1912 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1912 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1916 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1916 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1925 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1925 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1934 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1934 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1946 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1946 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1951 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1951 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1955 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1955 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1959 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1959 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1963 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1963 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1967 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1967 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1971 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1971 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1975 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1975 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1979 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1979 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1983 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1983 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1987 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1987 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1991 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1991 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1996 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 1996 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2000 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2000 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2004 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2004 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2008 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2008 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2012 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2012 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2017 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2017 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2021 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2021 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2025 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2025 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2029 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2029 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2033 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2033 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2037 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2037 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2041 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2041 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2045 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2045 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2049 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2049 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2053 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2053 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2057 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2057 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2061 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2061 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2065 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2065 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2069 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2069 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2073 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2073 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2077 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2077 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2081 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2081 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2085 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2085 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2100 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2100 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2106 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2106 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2113 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2113 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2120 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2120 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2126 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2126 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2147 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2147 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2160 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2160 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2167 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2167 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2176 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2176 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2184 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2184 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2193 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2193 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2206 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2206 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2214 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2214 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2222 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2222 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2236 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2236 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2243 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2243 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2250 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2250 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2259 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2259 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2272 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2272 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2285 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2285 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2293 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2293 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2301 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2301 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2311 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2311 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2328 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2328 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2337 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2337 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2347 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2347 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2358 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2358 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2367 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2367 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2375 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2375 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2383 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2383 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2393 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2393 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2404 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2404 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2411 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2411 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2421 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2421 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2427 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2427 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2437 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2437 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2447 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2447 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2455 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2455 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2462 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2462 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2472 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2472 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2482 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2482 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2492 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2492 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2502 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2502 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2510 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2510 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2517 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2517 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2524 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2524 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2533 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2533 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2542 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2542 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2552 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2552 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2558 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2558 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2564 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2564 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2573 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2573 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2582 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2582 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2591 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2591 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2601 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2601 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2611 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2611 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2621 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2621 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2631 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2631 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2641 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2641 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2651 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2651 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2658 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2658 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2664 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2664 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2674 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2674 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2684 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2684 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2691 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2691 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2699 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2699 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2708 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2708 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2714 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2714 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2721 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2721 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2728 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2728 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2740 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2740 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2747 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2747 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2752 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2752 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2757 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2757 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2766 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2766 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2774 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2774 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2782 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2782 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2789 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2789 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2796 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2796 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2802 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2802 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2811 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2811 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2817 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2817 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2833 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2833 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2851 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2851 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2862 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2862 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2875 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2875 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2884 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2884 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2893 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2893 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2901 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2901 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2909 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2909 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2918 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2918 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2927 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2927 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2934 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2934 addr 0xc */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2940 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2940 addr 0x8 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2948 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2948 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2953 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2953 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2957 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2957 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2963 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2963 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2966 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2966 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2969 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2969 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2972 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2972 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2975 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2975 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2979 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2979 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2986 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2986 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2989 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2989 addr 0x14 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2992 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2992 addr 0x18 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2998 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 2998 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3003 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3003 addr 0x1c */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3005 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3005 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3016 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3016 addr 0x10 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3027 addr 0x0 */
  /* file /export/tmp/caprino/grec/suppw/asciifun.c line 3027 addr 0x1c */
} /* 0x30 */
int AccessCheckAndAuditAlarmA (char *SubsystemName /* 0x44 */, void *HandleId /* 0x48 */, char *ObjectTypeName /* 0x4c */, char *ObjectName /* 0x50 */, struct _SECURITY_DESCRIPTOR /* id 5 */ *SecurityDescriptor /* 0x54 */, unsigned int DesiredAccess /* 0x58 */, struct _GENERIC_MAPPING /* id 6 */ *GenericMapping /* 0x5c */, int ObjectCreation /* 0x60 */, unsigned int *GrantedAccess /* 0x64 */, int *AccessStatus /* 0x68 */, int *pfGenerateOnClose /* 0x6c */)
{ /* 0x0 */
} /* 0x24 */
int ObjectOpenAuditAlarmA (char *SubsystemName /* 0x44 */, void *HandleId /* 0x48 */, char *ObjectTypeName /* 0x4c */, char *ObjectName /* 0x50 */, struct _SECURITY_DESCRIPTOR /* id 5 */ *pSecurityDescriptor /* 0x54 */, void *ClientToken /* 0x58 */, unsigned int DesiredAccess /* 0x5c */, unsigned int GrantedAccess /* 0x60 */, struct _PRIVILEGE_SET /* id 7 */ *Privileges /* 0x64 */, int ObjectCreation /* 0x68 */, int AccessGranted /* 0x6c */, int *GenerateOnClose /* 0x70 */)
{ /* 0x0 */
} /* 0x24 */
int ObjectPrivilegeAuditAlarmA (char *SubsystemName /* 0x44 */, void *HandleId /* 0x48 */, void *ClientToken /* 0x4c */, unsigned int DesiredAccess /* 0x50 */, struct _PRIVILEGE_SET /* id 7 */ *Privileges /* 0x54 */, int AccessGranted /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int ObjectCloseAuditAlarmA (char *SubsystemName /* 0x44 */, void *HandleId /* 0x48 */, int GenerateOnClose /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int PrivilegedServiceAuditAlarmA (char *SubsystemName /* 0x44 */, char *ServiceName /* 0x48 */, void *ClientToken /* 0x4c */, struct _PRIVILEGE_SET /* id 7 */ *Privileges /* 0x50 */, int AccessGranted /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int SetFileSecurityA (char *lpFileName /* 0x44 */, unsigned int SecurityInformation /* 0x48 */, struct _SECURITY_DESCRIPTOR /* id 5 */ *pSecurityDescriptor /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetFileSecurityA (char *lpFileName /* 0x44 */, unsigned int RequestedInformation /* 0x48 */, struct _SECURITY_DESCRIPTOR /* id 5 */ *pSecurityDescriptor /* 0x4c */, unsigned int nLength /* 0x50 */, unsigned int *lpnLengthNeeded /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
void *FindFirstChangeNotificationA (char *lpPathName /* 0x44 */, int bWatchSubtree /* 0x48 */, unsigned int dwNotifyFilter /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int IsBadStringPtrA (char *lpsz /* 0x44 */, unsigned int ucchMax /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int LookupAccountSidA (char *lpSystemName /* 0x44 */, struct _SID /* id 4 */ *Sid /* 0x48 */, char *Name /* 0x4c */, unsigned int *cbName /* 0x50 */, char *ReferencedDomainName /* 0x54 */, unsigned int *cbReferencedDomainName /* 0x58 */, enum _SID_NAME_USE *peUse /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int LookupAccountNameA (char *lpSystemName /* 0x44 */, char *lpAccountName /* 0x48 */, struct _SID /* id 4 */ *Sid /* 0x4c */, unsigned int *cbSid /* 0x50 */, char *ReferencedDomainName /* 0x54 */, unsigned int *cbReferencedDomainName /* 0x58 */, enum _SID_NAME_USE *peUse /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int LookupPrivilegeValueA (char *lpSystemName /* 0x44 */, char *lpName /* 0x48 */, struct _LARGE_INTEGER /* id 8 */ *lpLuid /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int LookupPrivilegeNameA (char *lpSystemName /* 0x44 */, struct _LARGE_INTEGER /* id 8 */ *lpLuid /* 0x48 */, char *lpName /* 0x4c */, unsigned int *cbName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int LookupPrivilegeDisplayNameA (char *lpSystemName /* 0x44 */, char *lpName /* 0x48 */, char *lpDisplayName /* 0x4c */, unsigned int *cbDisplayName /* 0x50 */, unsigned int *lpLanguageId /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int BuildCommDCBA (char *lpDef /* 0x44 */, struct _DCB /* id 9 */ *lpDCB /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int BuildCommDCBAndTimeoutsA (char *lpDef /* 0x44 */, struct _DCB /* id 9 */ *lpDCB /* 0x48 */, struct _COMMTIMEOUTS /* id 10 */ *lpCommTimeouts /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int CommConfigDialogA (char *lpszName /* 0x44 */, void *hWnd /* 0x48 */, struct _COMM_CONFIG /* id 11 */ *lpCC /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetDefaultCommConfigA (char *lpszName /* 0x44 */, struct _COMM_CONFIG /* id 11 */ *lpCC /* 0x48 */, unsigned int *lpdwSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int SetDefaultCommConfigA (char *lpszName /* 0x44 */, struct _COMM_CONFIG /* id 11 */ *lpCC /* 0x48 */, unsigned int dwSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetComputerNameA (char *lpBuffer /* 0x44 */, unsigned int *nSize /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int SetComputerNameA (char *lpComputerName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetUserNameA (char *lpBuffer /* 0x44 */, unsigned int *nSize /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int wvsprintfA (char *dst /* 0x44 */, char *fmt /* 0x48 */, void *arglist /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int wsprintfA (char *dst /* 0x44 */, char *fmt /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadKeyboardLayoutA (char *pwszKLID /* 0x44 */, unsigned int Flags /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetKeyboardLayoutNameA (char *pwszKLID /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CreateDesktopA (char *lpszDesktop /* 0x44 */, char *lpszDevice /* 0x48 */, struct _devicemode /* id 12 */ *pDevmode /* 0x4c */, unsigned int dwFlags /* 0x50 */, unsigned int dwDesiredAccess /* 0x54 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpsa /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
void *OpenDesktopA (char *lpszDesktop /* 0x44 */, unsigned int dwFlags /* 0x48 */, int fInherit /* 0x4c */, unsigned int dwDesiredAccess /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int EnumDesktopsA (void *hwinsta /* 0x44 */, int (*lpEnumFunc) (/* unknown */) /* 0x48 */, long int lParam /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateWindowStationA (char *lpwinsta /* 0x44 */, unsigned int dwReserved /* 0x48 */, unsigned int dwDesiredAccess /* 0x4c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpsa /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *OpenWindowStationA (char *lpszWinSta /* 0x44 */, int fInherit /* 0x48 */, unsigned int dwDesiredAccess /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int EnumWindowStationsA (int (*lpEnumFunc) (/* unknown */) /* 0x44 */, long int lParam /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetUserObjectInformationA (void *hObj /* 0x44 */, int nIndex /* 0x48 */, void *pvInfo /* 0x4c */, unsigned int nLength /* 0x50 */, unsigned int *lpnLengthNeeded /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int SetUserObjectInformationA (void *hObj /* 0x44 */, int nIndex /* 0x48 */, void *pvInfo /* 0x4c */, unsigned int nLength /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int RegisterWindowMessageA (char *lpString /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetMessageA (struct tagMSG /* id 13 */ *lpMsg /* 0x44 */, void *hWnd /* 0x48 */, unsigned int wMsgFilterMin /* 0x4c */, unsigned int wMsgFilterMax /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int DispatchMessageA (struct tagMSG /* id 13 */ *lpMsg /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int PeekMessageA (struct tagMSG /* id 13 */ *lpMsg /* 0x44 */, void *hWnd /* 0x48 */, unsigned int wMsgFilterMin /* 0x4c */, unsigned int wMsgFilterMax /* 0x50 */, unsigned int wRemoveMsg /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int SendMessageA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int SendMessageTimeoutA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */, unsigned int fuFlags /* 0x54 */, unsigned int uTimeout /* 0x58 */, unsigned int *lpdwResult /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
int SendNotifyMessageA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int SendMessageCallbackA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */, void (*lpResultCallBack) (/* unknown */) /* 0x54 */, unsigned int dwData /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int PostMessageA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int PostThreadMessageA (unsigned int idThread /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int DefWindowProcA (void *hWnd /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int CallWindowProcA (long int (*lpPrevWndFunc) (/* unknown */) /* 0x44 */, void *hWnd /* 0x48 */, unsigned int Msg /* 0x4c */, unsigned int wParam /* 0x50 */, long int lParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
short unsigned int RegisterClassA (struct _WNDCLASSA /* id 14 */ *lpWndClass /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int UnregisterClassA (char *lpClassName /* 0x44 */, void *hInstance /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetClassInfoA (void *hInstance /* 0x44 */, char *lpClassName /* 0x48 */, struct _WNDCLASSA /* id 14 */ *lpWndClass /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
short unsigned int RegisterClassExA (struct _WNDCLASSEXA /* id 15 */ *wndClassEx /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetClassInfoExA (void *hInstance /* 0x44 */, char *str /* 0x48 */, struct _WNDCLASSEXA /* id 15 */ *wndClassEx /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateWindowExA (unsigned int dwExStyle /* 0x44 */, char *lpClassName /* 0x48 */, char *lpWindowName /* 0x4c */, unsigned int dwStyle /* 0x50 */, int X /* 0x54 */, int Y /* 0x58 */, int nWidth /* 0x5c */, int nHeight /* 0x60 */, void *hWndParent /* 0x64 */, void *hMenu /* 0x68 */, void *hInstance /* 0x6c */, void *lpParam /* 0x70 */)
{ /* 0x0 */
} /* 0x24 */
void *CreateDialogParamA (void *hInstance /* 0x44 */, char *lpTemplateName /* 0x48 */, void *hWndParent /* 0x4c */, int (*lpDialogFunc) (/* unknown */) /* 0x50 */, long int dwInitParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
void *CreateDialogIndirectParamA (void *hInstance /* 0x44 */, struct tagDLGTEMPLATE /* id 16 */ *lpTemplate /* 0x48 */, void *hWndParent /* 0x4c */, int (*lpDialogFunc) (/* unknown */) /* 0x50 */, long int dwInitParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int DialogBoxParamA (void *hInstance /* 0x44 */, char *lpTemplateName /* 0x48 */, void *hWndParent /* 0x4c */, int (*lpDialogFunc) (/* unknown */) /* 0x50 */, long int dwInitParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int DialogBoxIndirectParamA (void *hInstance /* 0x44 */, struct tagDLGTEMPLATE /* id 16 */ *hDialogTemplate /* 0x48 */, void *hWndParent /* 0x4c */, int (*lpDialogFunc) (/* unknown */) /* 0x50 */, long int dwInitParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int SetDlgItemTextA (void *hDlg /* 0x44 */, int nIDDlgItem /* 0x48 */, char *lpString /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetDlgItemTextA (void *hDlg /* 0x44 */, int nIDDlgItem /* 0x48 */, char *lpString /* 0x4c */, int nMaxCount /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int SendDlgItemMessageA (void *hDlg /* 0x44 */, int nIDDlgItem /* 0x48 */, unsigned int Msg /* 0x4c */, unsigned int wParam /* 0x50 */, long int lParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int DefDlgProcA (void *hDlg /* 0x44 */, unsigned int Msg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int CallMsgFilterA (struct tagMSG /* id 13 */ *lpMsg /* 0x44 */, int nCode /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int RegisterClipboardFormatA (char *lpszFormat /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetClipboardFormatNameA (unsigned int format /* 0x44 */, char *lpszFormatName /* 0x48 */, int cchMaxCount /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int CharToOemA (char *lpszSrc /* 0x44 */, char *lpszDst /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int OemToCharA (char *lpszSrc /* 0x44 */, char *lpszDst /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int CharToOemBuffA (char *lpszSrc /* 0x44 */, char *lpszDst /* 0x48 */, unsigned int cchDstLength /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int OemToCharBuffA (char *lpszSrc /* 0x44 */, char *lpszDst /* 0x48 */, unsigned int cchDstLength /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
char *CharUpperA (char *lpsz /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int CharUpperBuffA (char *lpsz /* 0x44 */, unsigned int cchLength /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
char *CharLowerA (char *lpsz /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int CharLowerBuffA (char *lpsz /* 0x44 */, unsigned int cchLength /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
char *CharNextA (char *lpsz /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
char *CharPrevA (char *lpszStart /* 0x44 */, char *lpszCurrent /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int IsCharAlphaA (char ch /* 0xffffffef */)
{ /* 0x0 */
} /* 0x14 */
int IsCharAlphaNumericA (char ch /* 0xffffffef */)
{ /* 0x0 */
} /* 0x14 */
int IsCharUpperA (char ch /* 0xffffffef */)
{ /* 0x0 */
} /* 0x14 */
int IsCharLowerA (char ch /* 0xffffffef */)
{ /* 0x0 */
} /* 0x14 */
int GetKeyNameTextA (long int lParam /* 0x44 */, char *lpString /* 0x48 */, int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
short int VkKeyScanA (char ch /* 0xffffffef */)
{ /* 0x0 */
} /* 0x14 */
short int VkKeyScanExA (char ch /* 0xffffffef */, void *dwhkl /* 0x48 */)
{ /* 0x0 */
} /* 0x18 */
unsigned int MapVirtualKeyA (unsigned int uCode /* 0x44 */, unsigned int uMapType /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int MapVirtualKeyExA (unsigned int uCode /* 0x44 */, unsigned int uMapType /* 0x48 */, void *dwhkl /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *LoadAcceleratorsA (void *hInstance /* 0x44 */, char *lpTableName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *CreateAcceleratorTableA (struct tagACCEL /* id 17 */ *accel /* 0x44 */, int v /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int CopyAcceleratorTableA (void *hAccelSrc /* 0x44 */, struct tagACCEL /* id 17 */ *lpAccelDst /* 0x48 */, int cAccelEntries /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int TranslateAcceleratorA (void *hWnd /* 0x44 */, void *hAccTable /* 0x48 */, struct tagMSG /* id 13 */ *lpMsg /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *LoadMenuA (void *hInstance /* 0x44 */, char *lpMenuName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadMenuIndirectA (void *lpMenuTemplate /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int ChangeMenuA (void *hMenu /* 0x44 */, unsigned int cmd /* 0x48 */, char *lpszNewItem /* 0x4c */, unsigned int cmdInsert /* 0x50 */, unsigned int flags /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int GetMenuStringA (void *hMenu /* 0x44 */, unsigned int uIDItem /* 0x48 */, char *lpString /* 0x4c */, int nMaxCount /* 0x50 */, unsigned int uFlag /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int InsertMenuA (void *hMenu /* 0x44 */, unsigned int uPosition /* 0x48 */, unsigned int uFlags /* 0x4c */, unsigned int uIDNewItem /* 0x50 */, char *lpNewItem /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int AppendMenuA (void *hMenu /* 0x44 */, unsigned int uFlags /* 0x48 */, unsigned int uIDNewItem /* 0x4c */, char *lpNewItem /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int ModifyMenuA (void *hMnu /* 0x44 */, unsigned int uPosition /* 0x48 */, unsigned int uFlags /* 0x4c */, unsigned int uIDNewItem /* 0x50 */, char *lpNewItem /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int InsertMenuItemA (void *hMenu /* 0x44 */, unsigned int v1 /* 0x48 */, int b1 /* 0x4c */, struct tagMENUITEMINFO /* id 18 */ *lpcMenuItemInfo /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetMenuItemInfoA (void *hMenu /* 0x44 */, unsigned int v1 /* 0x48 */, int b1 /* 0x4c */, struct tagMENUITEMINFO /* id 18 */ *lpcMenuItemInfo /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int SetMenuItemInfoA (void *hMenu /* 0x44 */, unsigned int v1 /* 0x48 */, int b1 /* 0x4c */, struct tagMENUITEMINFO /* id 18 */ *lpcMenuItemInfo /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int DrawTextA (void *hDC /* 0x44 */, char *lpString /* 0x48 */, int nCount /* 0x4c */, struct _RECT /* id 19 */ *lpRect /* 0x50 */, unsigned int uFormat /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int DrawTextExA (void *hDC /* 0x44 */, char *str /* 0x48 */, int v1 /* 0x4c */, struct _RECT /* id 19 */ *pRect /* 0x50 */, unsigned int v2 /* 0x54 */, (struct %anon20 { /* size 20 */
  unsigned int cbSize; /* bitsize 32, bitpos 0 */
  int iTabLength; /* bitsize 32, bitpos 32 */
  int iLeftMargin; /* bitsize 32, bitpos 64 */
  int iRightMargin; /* bitsize 32, bitpos 96 */
  unsigned int uiLengthDrawn; /* bitsize 32, bitpos 128 */
}) *lpDrawTextParams /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int GrayStringA (void *hDC /* 0x44 */, void *hBrush /* 0x48 */, int (*lpOutputFunc) (/* unknown */) /* 0x4c */, long int lpData /* 0x50 */, int nCount /* 0x54 */, int X /* 0x58 */, int Y /* 0x5c */, int nWidth /* 0x60 */, int nHeight /* 0x64 */)
{ /* 0x0 */
} /* 0x24 */
int DrawStateA (void *hDC /* 0x44 */, void *hBrush /* 0x48 */, int (*drawStateProc) (/* unknown */) /* 0x4c */, long int lParam /* 0x50 */, unsigned int wParam /* 0x54 */, int v1 /* 0x58 */, int v2 /* 0x5c */, int v3 /* 0x60 */, int v4 /* 0x64 */, unsigned int v5 /* 0x68 */)
{ /* 0x0 */
} /* 0x24 */
long int TabbedTextOutA (void *hDC /* 0x44 */, int X /* 0x48 */, int Y /* 0x4c */, char *lpString /* 0x50 */, int nCount /* 0x54 */, int nTabPositions /* 0x58 */, int *lpnTabStopPositions /* 0x5c */, int nTabOrigin /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
unsigned int GetTabbedTextExtentA (void *hDC /* 0x44 */, char *lpString /* 0x48 */, int nCount /* 0x4c */, int nTabPositions /* 0x50 */, int *lpnTabStopPositions /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int SetPropA (void *hWnd /* 0x44 */, char *lpString /* 0x48 */, void *hData /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *GetPropA (void *hWnd /* 0x44 */, char *lpString /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *RemovePropA (void *hWnd /* 0x44 */, char *lpString /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int EnumPropsExA (void *hWnd /* 0x44 */, int (*lpEnumFunc) (/* unknown */) /* 0x48 */, long int lParam /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int EnumPropsA (void *hWnd /* 0x44 */, int (*lpEnumFunc) (/* unknown */) /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int SetWindowTextA (void *hWnd /* 0x44 */, char *lpString /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetWindowTextA (void *hWnd /* 0x44 */, char *lpString /* 0x48 */, int nMaxCount /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetWindowTextLengthA (void *hWnd /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int MessageBoxA (void *hWnd /* 0x44 */, char *lpText /* 0x48 */, char *lpCaption /* 0x4c */, unsigned int uType /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int MessageBoxExA (void *hWnd /* 0x44 */, char *lpText /* 0x48 */, char *lpCaption /* 0x4c */, unsigned int uType /* 0x50 */, short unsigned int wLanguageId /* 0xffffffee */)
{ /* 0x0 */
} /* 0x24 */
int MessageBoxIndirectA ((struct %anon21 { /* size 40 */
  unsigned int cbSize; /* bitsize 32, bitpos 0 */
  void *hwndOwner; /* bitsize 32, bitpos 32 */
  void *hInstance; /* bitsize 32, bitpos 64 */
  char *lpszText; /* bitsize 32, bitpos 96 */
  char *lpszCaption; /* bitsize 32, bitpos 128 */
  unsigned int dwStyle; /* bitsize 32, bitpos 160 */
  char *lpszIcon; /* bitsize 32, bitpos 192 */
  unsigned int dwContextHelpId; /* bitsize 32, bitpos 224 */
  void (*lpfnMsgBoxCallback) (/* unknown */); /* bitsize 32, bitpos 256 */
  unsigned int dwLanguageId; /* bitsize 32, bitpos 288 */
}) *lpMsgBoxParams /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
long int GetWindowLongA (void *hWnd /* 0x44 */, int nIndex /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
long int SetWindowLongA (void *hWnd /* 0x44 */, int nIndex /* 0x48 */, long int dwNewLong /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetClassLongA (void *hWnd /* 0x44 */, int nIndex /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int SetClassLongA (void *hWnd /* 0x44 */, int nIndex /* 0x48 */, long int dwNewLong /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *FindWindowA (char *lpClassName /* 0x44 */, char *lpWindowName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *FindWindowExA (void *hWnd /* 0x44 */, void *hWind1 /* 0x48 */, char *lpcStr /* 0x4c */, char *lpcStr1 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetClassNameA (void *hWnd /* 0x44 */, char *lpClassName /* 0x48 */, int nMaxCount /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *SetWindowsHookExA (int idHook /* 0x44 */, long int (*lpfn) (/* unknown */) /* 0x48 */, void *hmod /* 0x4c */, unsigned int dwThreadId /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *LoadBitmapA (void *hInstance /* 0x44 */, char *lpBitmapName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadCursorA (void *hInstance /* 0x44 */, char *lpCursorName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadCursorFromFileA (char *lpFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *LoadIconA (void *hInstance /* 0x44 */, char *lpIconName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *LoadImageA (void *hInstance /* 0x44 */, char *str /* 0x48 */, unsigned int v1 /* 0x4c */, int v2 /* 0x50 */, int v3 /* 0x54 */, unsigned int v4 /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int LoadStringA (void *hInstance /* 0x44 */, unsigned int uID /* 0x48 */, char *lpBuffer /* 0x4c */, int nBufferMax /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int IsDialogMessageA (void *hDlg /* 0x44 */, struct tagMSG /* id 13 */ *lpMsg /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int DlgDirListA (void *hDlg /* 0x44 */, char *lpPathSpec /* 0x48 */, int nIDListBox /* 0x4c */, int nIDStaticPath /* 0x50 */, unsigned int uFileType /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int DlgDirSelectExA (void *hDlg /* 0x44 */, char *lpString /* 0x48 */, int nCount /* 0x4c */, int nIDListBox /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int DlgDirListComboBoxA (void *hDlg /* 0x44 */, char *lpPathSpec /* 0x48 */, int nIDComboBox /* 0x4c */, int nIDStaticPath /* 0x50 */, unsigned int uFiletype /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int DlgDirSelectComboBoxExA (void *hDlg /* 0x44 */, char *lpString /* 0x48 */, int nCount /* 0x4c */, int nIDComboBox /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int DefFrameProcA (void *hWnd /* 0x44 */, void *hWndMDIClient /* 0x48 */, unsigned int uMsg /* 0x4c */, unsigned int wParam /* 0x50 */, long int lParam /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int DefMDIChildProcA (void *hWnd /* 0x44 */, unsigned int uMsg /* 0x48 */, unsigned int wParam /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *CreateMDIWindowA (char *lpClassName /* 0x44 */, char *lpWindowName /* 0x48 */, unsigned int dwStyle /* 0x4c */, int X /* 0x50 */, int Y /* 0x54 */, int nWidth /* 0x58 */, int nHeight /* 0x5c */, void *hWndParent /* 0x60 */, void *hInstance /* 0x64 */, long int lParam /* 0x68 */)
{ /* 0x0 */
} /* 0x24 */
int WinHelpA (void *hWndMain /* 0x44 */, char *lpszHelp /* 0x48 */, unsigned int uCommand /* 0x4c */, unsigned int dwData /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int ChangeDisplaySettingsA (struct _devicemode /* id 12 */ *lpDevMode /* 0x44 */, unsigned int dwFlags /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int EnumDisplaySettingsA (char *lpszDeviceName /* 0x44 */, unsigned int iModeNum /* 0x48 */, struct _devicemode /* id 12 */ *lpDevMode /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int SystemParametersInfoA (unsigned int uiAction /* 0x44 */, unsigned int uiParam /* 0x48 */, void *pvParam /* 0x4c */, unsigned int fWinIni /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int AddFontResourceA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CopyMetaFileA (void *hMetaFile /* 0x44 */, char *str /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *CreateFontIndirectA (struct tagLOGFONTA /* id 22 */ *logFont /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CreateICA (char *str1 /* 0x44 */, char *str2 /* 0x48 */, char *str3 /* 0x4c */, struct _devicemode /* id 12 */ *devMode /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *CreateMetaFileA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int CreateScalableFontResourceA (unsigned int v /* 0x44 */, char *str1 /* 0x48 */, char *str2 /* 0x4c */, char *str3 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int DeviceCapabilitiesA (char *str1 /* 0x44 */, char *str2 /* 0x48 */, short unsigned int w /* 0xffffffee */, char *str3 /* 0x50 */, struct _devicemode /* id 12 */ *devMode /* 0x54 */)
{ /* 0x0 */
} /* 0x24 */
int EnumFontFamiliesExA (void *hDC /* 0x44 */, struct tagLOGFONTA /* id 22 */ *logFont /* 0x48 */, int (*fontEnumProc) (/* unknown */) /* 0x4c */, long int lParam /* 0x50 */, unsigned int dWord /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int EnumFontFamiliesA (void *hDC /* 0x44 */, char *str /* 0x48 */, int (*fontEnumproc) (/* unknown */) /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int EnumFontsA (void *hDC /* 0x44 */, char *str /* 0x48 */, int (*enumFontProc) (/* unknown */) /* 0x4c */, long int lParam /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetCharWidthA (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, int *pInt /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetCharWidth32A (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, int *pInt /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetCharWidthFloatA (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, float *pFloat /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetCharABCWidthsA (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, struct _ABC /* id 23 */ *pAbc /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetCharABCWidthsFloatA (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, struct _ABCFLOAT /* id 24 */ *pAbcFloat /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int GetGlyphOutlineA (void *hDC /* 0x44 */, unsigned int v1 /* 0x48 */, unsigned int v2 /* 0x4c */, struct _GLYPHMETRICS /* id 25 */ *pGlyph /* 0x50 */, unsigned int dWord /* 0x54 */, void *ptr /* 0x58 */, struct _MAT2 /* id 26 */ *pMat2 /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
void *GetMetaFileA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetOutlineTextMetricsA (void *hDC /* 0x44 */, unsigned int v /* 0x48 */, struct _OUTLINETEXTMETRIC /* id 27 */ *metric /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetTextExtentPointA (void *hDC /* 0x44 */, char *str /* 0x48 */, int v /* 0x4c */, struct tagSIZE /* id 28 */ *pSize /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetTextExtentPoint32A (void *hDC /* 0x44 */, char *str /* 0x48 */, int v /* 0x4c */, struct tagSIZE /* id 28 */ *pSize /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetTextExtentExPointA (void *hDC /* 0x44 */, char *str /* 0x48 */, int v1 /* 0x4c */, int v2 /* 0x50 */, int *p1 /* 0x54 */, int *p2 /* 0x58 */, struct tagSIZE /* id 28 */ *psize /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
unsigned int GetCharacterPlacementA (void *hDC /* 0x44 */, char *s /* 0x48 */, int v1 /* 0x4c */, int v2 /* 0x50 */, struct tagGCP_RESULTS /* id 29 */ *gcpResults /* 0x54 */, unsigned int d /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
void *ResetDCA (void *hDC /* 0x44 */, struct _devicemode /* id 12 */ *devMode /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int RemoveFontResourceA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CopyEnhMetaFileA (void *hMetaFile /* 0x44 */, char *str /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
void *CreateEnhMetaFileA (void *hDC /* 0x44 */, char *str /* 0x48 */, struct _RECT /* id 19 */ *Rect /* 0x4c */, char *str1 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *GetEnhMetaFileA (char *str /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int GetEnhMetaFileDescriptionA (void *hMetaFile /* 0x44 */, unsigned int v /* 0x48 */, char *str /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetTextMetricsA (void *hDC /* 0x44 */, struct tagTEXTMETRIC /* id 30 */ *pTextMetric /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int StartDocA (void *hDC /* 0x44 */, (struct %anon31 { /* size 20 */
  int cbSize; /* bitsize 32, bitpos 0 */
  char *lpszDocName; /* bitsize 32, bitpos 32 */
  char *lpszOutput; /* bitsize 32, bitpos 64 */
  char *lpszDatatype; /* bitsize 32, bitpos 96 */
  unsigned int fwType; /* bitsize 32, bitpos 128 */
}) *docInfo /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetObjectA (void *hGdiObj /* 0x44 */, int v /* 0x48 */, void *ptr /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int TextOutA (void *hDC /* 0x44 */, int v1 /* 0x48 */, int v2 /* 0x4c */, char *str /* 0x50 */, int v3 /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int ExtTextOutA (void *hDC /* 0x44 */, int v1 /* 0x48 */, int v2 /* 0x4c */, unsigned int v3 /* 0x50 */, struct _RECT /* id 19 */ *pRect /* 0x54 */, char *str /* 0x58 */, unsigned int v4 /* 0x5c */, int *pInt /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
int PolyTextOutA (void *hDC /* 0x44 */, struct _POLYTEXT /* id 32 */ *pPolyText /* 0x48 */, int v /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetTextFaceA (void *hDC /* 0x44 */, int v /* 0x48 */, char *str /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int GetKerningPairsA (void *hDC /* 0x44 */, unsigned int dWord /* 0x48 */, struct tagKERNINGPAIR /* id 33 */ *pKerningPair /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *CreateColorSpaceA (struct tagLOGCOLORSPACE /* id 34 */ *pLogColorSpace /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetLogColorSpaceA (void *hColorSpace /* 0x44 */, struct tagLOGCOLORSPACE /* id 34 */ *pLogColorSpace /* 0x48 */, unsigned int dWord /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetICMProfileA (void *hDC /* 0x44 */, unsigned int dWord /* 0x48 */, char *str /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int SetICMProfileA (void *hDC /* 0x44 */, char *str /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int UpdateICMRegKeyA (unsigned int d1 /* 0x44 */, unsigned int d2 /* 0x48 */, char *str /* 0x4c */, unsigned int v /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int EnumICMProfilesA (void *hDC /* 0x44 */, int (*icEnumProc) (/* unknown */) /* 0x48 */, long int lParam /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int PropertySheetA (struct _PROPSHEETHEADER /* id 35 */ *lppsph /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *ImageList_LoadImageA (void *hi /* 0x44 */, char *lpbmp /* 0x48 */, int cx /* 0x4c */, int cGrow /* 0x50 */, long unsigned int crMask /* 0x54 */, unsigned int uType /* 0x58 */, unsigned int uFlags /* 0x5c */)
{ /* 0x0 */
} /* 0x24 */
void *CreateStatusWindowA (long int style /* 0x44 */, char *lpszText /* 0x48 */, void *hwndParent /* 0x4c */, unsigned int wID /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void DrawStatusTextA (void *hDC /* 0x44 */, struct _RECT /* id 19 */ *lprc /* 0x48 */, char *pszText /* 0x4c */, unsigned int uFlags /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetOpenFileNameA (struct tagOFNA /* id 36 */ *lpOpenFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int GetSaveFileNameA (struct tagOFNA /* id 36 */ *lpOpenFileName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
short int GetFileTitleA (char *str /* 0x44 */, char *s1 /* 0x48 */, short unsigned int v /* 0xffffffee */)
{ /* 0x0 */
} /* 0x1c */
int ChooseColorA ((struct %anon37 { /* size 36 */
  unsigned int lStructSize; /* bitsize 32, bitpos 0 */
  void *hwndOwner; /* bitsize 32, bitpos 32 */
  void *hInstance; /* bitsize 32, bitpos 64 */
  long unsigned int rgbResult; /* bitsize 32, bitpos 96 */
  long unsigned int *lpCustColors; /* bitsize 32, bitpos 128 */
  unsigned int Flags; /* bitsize 32, bitpos 160 */
  long int lCustData; /* bitsize 32, bitpos 192 */
  unsigned int (*lpfnHook) (/* unknown */); /* bitsize 32, bitpos 224 */
  char *lpTemplateName; /* bitsize 32, bitpos 256 */
}) *chooseColor /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *FindTextA ((struct %anon38 { /* size 40 */
  unsigned int lStructSize; /* bitsize 32, bitpos 0 */
  void *hwndOwner; /* bitsize 32, bitpos 32 */
  void *hInstance; /* bitsize 32, bitpos 64 */
  unsigned int Flags; /* bitsize 32, bitpos 96 */
  char *lpstrFindWhat; /* bitsize 32, bitpos 128 */
  char *lpstrReplaceWith; /* bitsize 32, bitpos 160 */
  short unsigned int wFindWhatLen; /* bitsize 16, bitpos 192 */
  short unsigned int wReplaceWithLen; /* bitsize 16, bitpos 208 */
  long int lCustData; /* bitsize 32, bitpos 224 */
  unsigned int (*lpfnHook) (/* unknown */); /* bitsize 32, bitpos 256 */
  char *lpTemplateName; /* bitsize 32, bitpos 288 */
}) *findReplace /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *ReplaceTextA (struct %anon38 *findReplace /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int ChooseFontA ((struct %anon39 { /* size 60 */
  unsigned int lStructSize; /* bitsize 32, bitpos 0 */
  void *hwndOwner; /* bitsize 32, bitpos 32 */
  void *hDC; /* bitsize 32, bitpos 64 */
  struct tagLOGFONTA /* id 22 */ *lpLogFont; /* bitsize 32, bitpos 96 */
  int iPointSize; /* bitsize 32, bitpos 128 */
  unsigned int Flags; /* bitsize 32, bitpos 160 */
  unsigned int rgbColors; /* bitsize 32, bitpos 192 */
  long int lCustData; /* bitsize 32, bitpos 224 */
  unsigned int (*lpfnHook) (/* unknown */); /* bitsize 32, bitpos 256 */
  char *lpTemplateName; /* bitsize 32, bitpos 288 */
  void *hInstance; /* bitsize 32, bitpos 320 */
  char *lpszStyle; /* bitsize 32, bitpos 352 */
  short unsigned int nFontType; /* bitsize 16, bitpos 384 */
  short unsigned int ___MISSING_ALIGNMENT__; /* bitsize 16, bitpos 400 */
  int nSizeMin; /* bitsize 32, bitpos 416 */
  int nSizeMax; /* bitsize 32, bitpos 448 */
}) *chooseFont /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int PrintDlgA (struct tagPD /* id 40 */ *printDlg /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int PageSetupDlgA (struct tagPSD /* id 41 */ *pageSetupDlg /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int CreateProcessA (char *lpApplicationName /* 0x44 */, char *lpCommandLine /* 0x48 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpProcessAttributes /* 0x4c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpThreadAttributes /* 0x50 */, int bInheritHandles /* 0x54 */, unsigned int dwCreationFlags /* 0x58 */, void *lpEnvironment /* 0x5c */, char *lpCurrentDirectory /* 0x60 */, struct tagSTARTUPINFOA /* id 42 */ *lpStartupInfo /* 0x64 */, struct _PROCESS_INFORMATION /* id 43 */ *lpProcessInformation /* 0x68 */)
{ /* 0x0 */
} /* 0x24 */
void GetStartupInfoA (struct tagSTARTUPINFOA /* id 42 */ *lpStartupInfo /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *FindFirstFileA (char *lpFileName /* 0x44 */, struct _WIN32_FIND_DATAA /* id 44 */ *lpFindFileData /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int FindNextFileA (void *hFindFile /* 0x44 */, struct _WIN32_FIND_DATAA /* id 44 */ *lpFindFileData /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetVersionExA (struct _OSVERSIONINFO /* id 45 */ *lpVersionInformation /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
void *CreateDCA (char *s1 /* 0x44 */, char *s2 /* 0x48 */, char *s3 /* 0x4c */, struct _devicemode /* id 12 */ *devMode /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int VerInstallFileA (unsigned int uFlags /* 0x44 */, char *szSrcFileName /* 0x48 */, char *szDestFileName /* 0x4c */, char *szSrcDir /* 0x50 */, char *szDestDir /* 0x54 */, char *szCurDir /* 0x58 */, char *szTmpFile /* 0x5c */, unsigned int *lpuTmpFileLen /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
unsigned int GetFileVersionInfoSizeA (char *lptstrFilename /* 0x44 */, unsigned int *lpdwHandle /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int GetFileVersionInfoA (char *lptstrFilename /* 0x44 */, unsigned int dwHandle /* 0x48 */, unsigned int dwLen /* 0x4c */, void *lpData /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int VerLanguageNameA (unsigned int wLang /* 0x44 */, char *szLang /* 0x48 */, unsigned int nSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int VerQueryValueA (void *pBlock /* 0x44 */, char *lpSubBlock /* 0x48 */, void **lplpBuffer /* 0x4c */, unsigned int *puLen /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int VerFindFileA (unsigned int uFlags /* 0x44 */, char *szFileName /* 0x48 */, char *szWinDir /* 0x4c */, char *szAppDir /* 0x50 */, char *szCurDir /* 0x54 */, unsigned int *lpuCurDirLen /* 0x58 */, char *szDestDir /* 0x5c */, unsigned int *lpuDestDirLen /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
long int RegConnectRegistryA (char *lpMachineName /* 0x44 */, void *hKey /* 0x48 */, void **phkResult /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegCreateKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, void **phkResult /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegCreateKeyExA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, unsigned int Reserved /* 0x4c */, char *lpClass /* 0x50 */, unsigned int dwOptions /* 0x54 */, unsigned int samDesired /* 0x58 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x5c */, void **phkResult /* 0x60 */, unsigned int *lpdwDisposition /* 0x64 */)
{ /* 0x0 */
} /* 0x24 */
long int RegDeleteKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
long int RegDeleteValueA (void *hKey /* 0x44 */, char *lpValueName /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
long int RegEnumKeyA (void *hKey /* 0x44 */, unsigned int dwIndex /* 0x48 */, char *lpName /* 0x4c */, unsigned int cbName /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int RegEnumKeyExA (void *hKey /* 0x44 */, unsigned int dwIndex /* 0x48 */, char *lpName /* 0x4c */, unsigned int *lpcbName /* 0x50 */, unsigned int *lpReserved /* 0x54 */, char *lpClass /* 0x58 */, unsigned int *lpcbClass /* 0x5c */, struct _FILETIME /* id 46 */ *lpftLastWriteTime /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
long int RegEnumValueA (void *hKey /* 0x44 */, unsigned int dwIndex /* 0x48 */, char *lpValueName /* 0x4c */, unsigned int *lpcbValueName /* 0x50 */, unsigned int *lpReserved /* 0x54 */, unsigned int *lpType /* 0x58 */, unsigned char *lpData /* 0x5c */, unsigned int *lpcbData /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
long int RegLoadKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, char *lpFile /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegOpenKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, void **phkResult /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegOpenKeyExA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, unsigned int ulOptions /* 0x4c */, unsigned int samDesired /* 0x50 */, void **phkResult /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int RegQueryInfoKeyA (void *hKey /* 0x44 */, char *lpClass /* 0x48 */, unsigned int *lpcbClass /* 0x4c */, unsigned int *lpReserved /* 0x50 */, unsigned int *lpcSubKeys /* 0x54 */, unsigned int *lpcbMaxSubKeyLen /* 0x58 */, unsigned int *lpcbMaxClassLen /* 0x5c */, unsigned int *lpcValues /* 0x60 */, unsigned int *lpcbMaxValueNameLen /* 0x64 */, unsigned int *lpcbMaxValueLen /* 0x68 */, unsigned int *lpcbSecurityDescriptor /* 0x6c */, struct _FILETIME /* id 46 */ *lpftLastWriteTime /* 0x70 */)
{ /* 0x0 */
} /* 0x24 */
long int RegQueryValueA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, char *lpValue /* 0x4c */, long int *lpcbValue /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int RegQueryMultipleValuesA (void *hKey /* 0x44 */, struct value_ent /* id 47 */ *val_list /* 0x48 */, unsigned int num_vals /* 0x4c */, char *lpValueBuf /* 0x50 */, unsigned int *ldwTotsize /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int RegQueryValueExA (void *hKey /* 0x44 */, char *lpValueName /* 0x48 */, unsigned int *lpReserved /* 0x4c */, unsigned int *lpType /* 0x50 */, unsigned char *lpData /* 0x54 */, unsigned int *lpcbData /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
long int RegReplaceKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, char *lpNewFile /* 0x4c */, char *lpOldFile /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
long int RegRestoreKeyA (void *hKey /* 0x44 */, char *lpFile /* 0x48 */, unsigned int dwFlags /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegSaveKeyA (void *hKey /* 0x44 */, char *lpFile /* 0x48 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *lpSecurityAttributes /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int RegSetValueA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */, unsigned int dwType /* 0x4c */, char *lpData /* 0x50 */, unsigned int cbData /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
long int RegSetValueExA (void *hKey /* 0x44 */, char *lpValueName /* 0x48 */, unsigned int Reserved /* 0x4c */, unsigned int dwType /* 0x50 */, unsigned char *lpData /* 0x54 */, unsigned int cbData /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
long int RegUnLoadKeyA (void *hKey /* 0x44 */, char *lpSubKey /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int InitiateSystemShutdownA (char *lpMachineName /* 0x44 */, char *lpMessage /* 0x48 */, unsigned int dwTimeout /* 0x4c */, int bForceAppsClosed /* 0x50 */, int bRebootAfterShutdown /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int AbortSystemShutdownA (char *lpMachineName /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int CompareStringA (unsigned int Locale /* 0x44 */, unsigned int dwCmpFlags /* 0x48 */, char *lpString1 /* 0x4c */, int cchCount1 /* 0x50 */, char *lpString2 /* 0x54 */, int cchCount2 /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int LCMapStringA (unsigned int Locale /* 0x44 */, unsigned int dwMapFlags /* 0x48 */, char *lpSrcStr /* 0x4c */, int cchSrc /* 0x50 */, char *lpDestStr /* 0x54 */, int cchDest /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int GetLocaleInfoA (unsigned int Locale /* 0x44 */, unsigned int LCType /* 0x48 */, char *lpLCData /* 0x4c */, int cchData /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int SetLocaleInfoA (unsigned int Locale /* 0x44 */, unsigned int LCType /* 0x48 */, char *lpLCData /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetTimeFormatA (unsigned int Locale /* 0x44 */, unsigned int dwFlags /* 0x48 */, struct _SYSTEMTIME /* id 48 */ *lpTime /* 0x4c */, char *lpFormat /* 0x50 */, char *lpTimeStr /* 0x54 */, int cchTime /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int GetDateFormatA (unsigned int Locale /* 0x44 */, unsigned int dwFlags /* 0x48 */, struct _SYSTEMTIME /* id 48 */ *lpDate /* 0x4c */, char *lpFormat /* 0x50 */, char *lpDateStr /* 0x54 */, int cchDate /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int GetNumberFormatA (unsigned int Locale /* 0x44 */, unsigned int dwFlags /* 0x48 */, char *lpValue /* 0x4c */, struct _numberfmt /* id 49 */ *lpFormat /* 0x50 */, char *lpNumberStr /* 0x54 */, int cchNumber /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int GetCurrencyFormatA (unsigned int Locale /* 0x44 */, unsigned int dwFlags /* 0x48 */, char *lpValue /* 0x4c */, struct _currencyfmt /* id 50 */ *lpFormat /* 0x50 */, char *lpCurrencyStr /* 0x54 */, int cchCurrency /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int EnumCalendarInfoA (int (*lpCalInfoEnumProc) (/* unknown */) /* 0x44 */, unsigned int Locale /* 0x48 */, long unsigned int Calendar /* 0x4c */, long unsigned int CalType /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int EnumTimeFormatsA (int (*lpTimeFmtEnumProc) (/* unknown */) /* 0x44 */, unsigned int Locale /* 0x48 */, unsigned int dwFlags /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int EnumDateFormatsA (int (*lpDateFmtEnumProc) (/* unknown */) /* 0x44 */, unsigned int Locale /* 0x48 */, unsigned int dwFlags /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int GetStringTypeExA (unsigned int Locale /* 0x44 */, unsigned int dwInfoType /* 0x48 */, char *lpSrcStr /* 0x4c */, int cchSrc /* 0x50 */, short unsigned int *lpCharType /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int GetStringTypeA (unsigned int Locale /* 0x44 */, unsigned int dwInfoType /* 0x48 */, char *lpSrcStr /* 0x4c */, int cchSrc /* 0x50 */, short unsigned int *lpCharType /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int FoldStringA (unsigned int dwMapFlags /* 0x44 */, char *lpSrcStr /* 0x48 */, int cchSrc /* 0x4c */, char *lpDestStr /* 0x50 */, int cchDest /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int EnumSystemLocalesA (int (*lpLocaleEnumProc) (/* unknown */) /* 0x44 */, unsigned int dwFlags /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int EnumSystemCodePagesA (int (*lpCodePageEnumProc) (/* unknown */) /* 0x44 */, unsigned int dwFlags /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int PeekConsoleInputA (void *hConsoleInput /* 0x44 */, struct _INPUT_RECORD /* id 51 */ *lpBuffer /* 0x48 */, unsigned int nLength /* 0x4c */, unsigned int *lpNumberOfEventsRead /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int ReadConsoleInputA (void *hConsoleInput /* 0x44 */, struct _INPUT_RECORD /* id 51 */ *lpBuffer /* 0x48 */, unsigned int nLength /* 0x4c */, unsigned int *lpNumberOfEventsRead /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int WriteConsoleInputA (void *hConsoleInput /* 0x44 */, struct _INPUT_RECORD /* id 51 */ *lpBuffer /* 0x48 */, unsigned int nLength /* 0x4c */, unsigned int *lpNumberOfEventsWritten /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int ReadConsoleOutputA (void *hConsoleOutput /* 0x44 */, struct _CHAR_INFO /* id 52 */ *lpBuffer /* 0x48 */, register struct _COORD /* id 53 */ &dwBufferSize /* 0x8 */, register struct _COORD /* id 53 */ &dwBufferCoord /* 0x9 */, struct _SMALL_RECT /* id 54 */ *lpReadRegion /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int WriteConsoleOutputA (void *hConsoleOutput /* 0x44 */, struct _CHAR_INFO /* id 52 */ *lpBuffer /* 0x48 */, register struct _COORD /* id 53 */ &dwBufferSize /* 0x8 */, register struct _COORD /* id 53 */ &dwBufferCoord /* 0x9 */, struct _SMALL_RECT /* id 54 */ *lpWriteRegion /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int ReadConsoleOutputCharacterA (void *hConsoleOutput /* 0x44 */, char *lpCharacter /* 0x48 */, unsigned int nLength /* 0x4c */, register struct _COORD /* id 53 */ &dwReadCoord /* 0x8 */, unsigned int *lpNumberOfCharsRead /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int WriteConsoleOutputCharacterA (void *hConsoleOutput /* 0x44 */, char *lpCharacter /* 0x48 */, unsigned int nLength /* 0x4c */, register struct _COORD /* id 53 */ &dwWriteCoord /* 0x8 */, unsigned int *lpNumberOfCharsWritten /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int FillConsoleOutputCharacterA (void *hConsoleOutput /* 0x44 */, char cCharacter /* 0xffffffef */, unsigned int nLength /* 0x4c */, register struct _COORD /* id 53 */ &dwWriteCoord /* 0x9 */, unsigned int *lpNumberOfCharsWritten /* 0x54 */)
{ /* 0x0 */
} /* 0x24 */
int ScrollConsoleScreenBufferA (void *hConsoleOutput /* 0x44 */, struct _SMALL_RECT /* id 54 */ *lpScrollRectangle /* 0x48 */, struct _SMALL_RECT /* id 54 */ *lpClipRectangle /* 0x4c */, register struct _COORD /* id 53 */ &dwDestinationOrigin /* 0x8 */, struct _CHAR_INFO /* id 52 */ *lpFill /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
unsigned int GetConsoleTitleA (char *lpConsoleTitle /* 0x44 */, unsigned int nSize /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int SetConsoleTitleA (char *lpConsoleTitle /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int ReadConsoleA (void *hConsoleInput /* 0x44 */, void *lpBuffer /* 0x48 */, unsigned int nNumberOfCharsToRead /* 0x4c */, unsigned int *lpNumberOfCharsRead /* 0x50 */, void *lpReserved /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int WriteConsoleA (void *hConsoleOutput /* 0x44 */, void *lpBuffer /* 0x48 */, unsigned int nNumberOfCharsToWrite /* 0x4c */, unsigned int *lpNumberOfCharsWritten /* 0x50 */, void *lpReserved /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
unsigned int WNetAddConnectionA (char *lpRemoteName /* 0x44 */, char *lpPassword /* 0x48 */, char *lpLocalName /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetAddConnection2A (struct _NETRESOURCE /* id 55 */ *lpNetResource /* 0x44 */, char *lpPassword /* 0x48 */, char *lpUserName /* 0x4c */, unsigned int dwFlags /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int WNetAddConnection3A (void *hwndOwner /* 0x44 */, struct _NETRESOURCE /* id 55 */ *lpNetResource /* 0x48 */, char *lpPassword /* 0x4c */, char *lpUserName /* 0x50 */, unsigned int dwFlags /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
unsigned int WNetCancelConnectionA (char *lpName /* 0x44 */, int fForce /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int WNetCancelConnection2A (char *lpName /* 0x44 */, unsigned int dwFlags /* 0x48 */, int fForce /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetGetConnectionA (char *lpLocalName /* 0x44 */, char *lpRemoteName /* 0x48 */, unsigned int *lpnLength /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetUseConnectionA (void *hwndOwner /* 0x44 */, struct _NETRESOURCE /* id 55 */ *lpNetResource /* 0x48 */, char *lpUserID /* 0x4c */, char *lpPassword /* 0x50 */, unsigned int dwFlags /* 0x54 */, char *lpAccessName /* 0x58 */, unsigned int *lpBufferSize /* 0x5c */, unsigned int *lpResult /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
unsigned int WNetSetConnectionA (char *lpName /* 0x44 */, unsigned int dwProperties /* 0x48 */, void *pvValues /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetConnectionDialog1A (struct _CONNECTDLGSTRUCT /* id 56 */ *lpConnDlgStruct /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int WNetDisconnectDialog1A (struct _DISCDLGSTRUCT /* id 57 */ *lpConnDlgStruct /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
unsigned int WNetOpenEnumA (unsigned int dwScope /* 0x44 */, unsigned int dwType /* 0x48 */, unsigned int dwUsage /* 0x4c */, struct _NETRESOURCE /* id 55 */ *lpNetResource /* 0x50 */, void **lphEnum /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
unsigned int WNetEnumResourceA (void *hEnum /* 0x44 */, unsigned int *lpcCount /* 0x48 */, void *lpBuffer /* 0x4c */, unsigned int *lpBufferSize /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int WNetGetUniversalNameA (char *lpLocalPath /* 0x44 */, unsigned int dwInfoLevel /* 0x48 */, void *lpBuffer /* 0x4c */, unsigned int *lpBufferSize /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int WNetGetUserA (char *lpName /* 0x44 */, char *lpUserName /* 0x48 */, unsigned int *lpnLength /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetGetProviderNameA (unsigned int dwNetType /* 0x44 */, char *lpProviderName /* 0x48 */, unsigned int *lpBufferSize /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int WNetGetNetworkInformationA (char *lpProvider /* 0x44 */, struct _NETINFOSTRUCT /* id 58 */ *lpNetInfoStruct /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
unsigned int WNetGetLastErrorA (unsigned int *lpError /* 0x44 */, char *lpErrorBuf /* 0x48 */, unsigned int nErrorBufSize /* 0x4c */, char *lpNameBuf /* 0x50 */, unsigned int nNameBufSize /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
unsigned int MultinetGetConnectionPerformanceA (struct _NETRESOURCE /* id 55 */ *lpNetResource /* 0x44 */, struct _NETCONNECTINFOSTRUCT /* id 59 */ *lpNetConnectInfoStruct /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int ChangeServiceConfigA (void *hService /* 0x44 */, unsigned int dwServiceType /* 0x48 */, unsigned int dwStartType /* 0x4c */, unsigned int dwErrorControl /* 0x50 */, char *lpBinaryPathName /* 0x54 */, char *lpLoadOrderGroup /* 0x58 */, unsigned int *lpdwTagId /* 0x5c */, char *lpDependencies /* 0x60 */, char *lpServiceStartName /* 0x64 */, char *lpPassword /* 0x68 */, char *lpDisplayName /* 0x6c */)
{ /* 0x0 */
} /* 0x24 */
void *CreateServiceA (void *hSCManager /* 0x44 */, char *lpServiceName /* 0x48 */, char *lpDisplayName /* 0x4c */, unsigned int dwDesiredAccess /* 0x50 */, unsigned int dwServiceType /* 0x54 */, unsigned int dwStartType /* 0x58 */, unsigned int dwErrorControl /* 0x5c */, char *lpBinaryPathName /* 0x60 */, char *lpLoadOrderGroup /* 0x64 */, unsigned int *lpdwTagId /* 0x68 */, char *lpDependencies /* 0x6c */, char *lpServiceStartName /* 0x70 */, char *lpPassword /* 0x74 */)
{ /* 0x0 */
} /* 0x24 */
int EnumDependentServicesA (void *hService /* 0x44 */, unsigned int dwServiceState /* 0x48 */, struct _ENUM_SERVICE_STATUS /* id 60 */ *lpServices /* 0x4c */, unsigned int cbBufSize /* 0x50 */, unsigned int *pcbBytesNeeded /* 0x54 */, unsigned int *lpServicesReturned /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int EnumServicesStatusA (void *hSCManager /* 0x44 */, unsigned int dwServiceType /* 0x48 */, unsigned int dwServiceState /* 0x4c */, struct _ENUM_SERVICE_STATUS /* id 60 */ *lpServices /* 0x50 */, unsigned int cbBufSize /* 0x54 */, unsigned int *pcbBytesNeeded /* 0x58 */, unsigned int *lpServicesReturned /* 0x5c */, unsigned int *lpResumeHandle /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
int GetServiceKeyNameA (void *hSCManager /* 0x44 */, char *lpDisplayName /* 0x48 */, char *lpServiceName /* 0x4c */, unsigned int *lpcchBuffer /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int GetServiceDisplayNameA (void *hSCManager /* 0x44 */, char *lpServiceName /* 0x48 */, char *lpDisplayName /* 0x4c */, unsigned int *lpcchBuffer /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *OpenSCManagerA (char *lpMachineName /* 0x44 */, char *lpDatabaseName /* 0x48 */, unsigned int dwDesiredAccess /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *OpenServiceA (void *hSCManager /* 0x44 */, char *lpServiceName /* 0x48 */, unsigned int dwDesiredAccess /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int QueryServiceConfigA (void *hService /* 0x44 */, struct _QUERY_SERVICE_CONFIG /* id 61 */ *lpServiceConfig /* 0x48 */, unsigned int cbBufSize /* 0x4c */, unsigned int *pcbBytesNeeded /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int QueryServiceLockStatusA (void *hSCManager /* 0x44 */, struct _QUERY_SERVICE_LOCK_STATUS /* id 62 */ *lpLockStatus /* 0x48 */, unsigned int cbBufSize /* 0x4c */, unsigned int *pcbBytesNeeded /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int RegisterServiceCtrlHandlerA (char *lpServiceName /* 0x44 */, int (*lpHandlerProc) (/* unknown */) /* 0x48 */)
{ /* 0x0 */
} /* 0x14 */
int StartServiceCtrlDispatcherA (struct _SERVICE_TABLE_ENTRY /* id 63 */ *lpServiceStartTable /* 0x44 */)
{ /* 0x0 */
} /* 0x10 */
int StartServiceA (void *hService /* 0x44 */, unsigned int dwNumServiceArgs /* 0x48 */, char **lpServiceArgVectors /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int wglUseFontBitmapsA (void *hDC /* 0x44 */, unsigned int d1 /* 0x48 */, unsigned int d2 /* 0x4c */, unsigned int d3 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
int wglUseFontOutlinesA (void *hDC /* 0x44 */, unsigned int d1 /* 0x48 */, unsigned int d2 /* 0x4c */, unsigned int d3 /* 0x50 */, float f1 /* 0x54 */, float f2 /* 0x58 */, int v1 /* 0x5c */, struct _GLYPHMETRICSFLOAT /* id 64 */ *gliphMetricsFloat /* 0x60 */)
{ /* 0x0 */
} /* 0x24 */
unsigned int DragQueryFileA (void *hDrop /* 0x44 */, unsigned int v1 /* 0x48 */, char *str /* 0x4c */, unsigned int v2 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *ExtractAssociatedIconA (void *hInst /* 0x44 */, char *s1 /* 0x48 */, short unsigned int *v1 /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *ExtractIconA (void *hInst /* 0x44 */, char *s1 /* 0x48 */, unsigned int v1 /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
void *FindExecutableA (char *s1 /* 0x44 */, char *s2 /* 0x48 */, char *s3 /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int ShellAboutA (void *hWnd /* 0x44 */, char *s1 /* 0x48 */, char *s2 /* 0x4c */, void *hIcon /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
void *ShellExecuteA (void *hWnd /* 0x44 */, char *s1 /* 0x48 */, char *s2 /* 0x4c */, char *s3 /* 0x50 */, char *s4 /* 0x54 */, int v1 /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
void *DdeCreateStringHandleA (unsigned int d1 /* 0x44 */, char *s1 /* 0x48 */, int v1 /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
unsigned int DdeInitializeA (unsigned int *d1 /* 0x44 */, void (*callB) (/* unknown */) /* 0x48 */, unsigned int d2 /* 0x4c */, unsigned int d3 /* 0x50 */)
{ /* 0x0 */
} /* 0x1c */
unsigned int DdeQueryStringA (unsigned int d1 /* 0x44 */, void *hSz /* 0x48 */, char *p1 /* 0x4c */, unsigned int d2 /* 0x50 */, int v1 /* 0x54 */)
{ /* 0x0 */
} /* 0x20 */
int LogonUserA (char *s1 /* 0x44 */, char *s2 /* 0x48 */, char *s3 /* 0x4c */, unsigned int d1 /* 0x50 */, unsigned int d2 /* 0x54 */, void **handle /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
int CreateProcessAsUserA (void *handle /* 0x44 */, char *s1 /* 0x48 */, char *s2 /* 0x4c */, struct _SECURITY_ATTRIBUTES /* id 2 */ *securityAttributes1 /* 0x50 */, struct _SECURITY_ATTRIBUTES /* id 2 */ *securityAttributes2 /* 0x54 */, int b1 /* 0x58 */, unsigned int d1 /* 0x5c */, void *ptr /* 0x60 */, char *s3 /* 0x64 */, struct tagSTARTUPINFOA /* id 42 */ *startupInfo /* 0x68 */, struct _PROCESS_INFORMATION /* id 43 */ *procInfo /* 0x6c */)
{ /* 0x0 */
} /* 0x24 */
int PlaySoundA (char *pszSound /* 0x44 */, void *hmod /* 0x48 */, unsigned int fdwSound /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
int OpenPrinterA (char *pPrinterName /* 0x44 */, void **phPrinter /* 0x48 */, struct _PRINTER_DEFAULTS /* id 65 */ *pDefault /* 0x4c */)
{ /* 0x0 */
} /* 0x18 */
long int DocumentPropertiesA (void *hWnd /* 0x44 */, void *hPrinter /* 0x48 */, char *pDeviceName /* 0x4c */, struct _devicemode /* id 12 */ *pDevModeOutput /* 0x50 */, struct _devicemode /* id 12 */ *pDevModeInput /* 0x54 */, unsigned int fMode /* 0x58 */)
{ /* 0x0 */
} /* 0x24 */
struct _PSP { /* id 0 */
};
struct _TREEITEM { /* id 0 */
};
 /usr/include/stdarg.h:
typedef void *va_list;
 /usr/include/sys/va_list.h:
typedef void *__va_list;
 Defines.h:
 Base.h:
typedef short unsigned int ATOM;
typedef int WINBOOL;
typedef WINBOOL BOOL;
typedef unsigned char BOOLEAN;
typedef unsigned char BYTE;
typedef long unsigned int CALTYPE;
typedef long unsigned int CALID;
typedef char CCHAR;
typedef long unsigned int COLORREF;
typedef short unsigned int WCHAR;
typedef char CHAR;
typedef short int SHORT;
typedef long int LONG;
typedef unsigned int DWORD;
typedef double DWORDLONG;
typedef double *PDWORDLONG;
typedef float FLOAT;
typedef void *HANDLE;
typedef HANDLE HACCEL;
typedef HANDLE HBITMAP;
typedef HANDLE HBRUSH;
typedef HANDLE HCOLORSPACE;
typedef HANDLE HCONV;
typedef HANDLE HCONVLIST;
typedef HANDLE HCURSOR;
typedef HANDLE HDBC;
typedef HANDLE HDC;
typedef HANDLE HDDEDATA;
typedef HANDLE HDESK;
typedef HANDLE HDROP;
typedef HANDLE HDWP;
typedef HANDLE HENHMETAFILE;
typedef HANDLE HENV;
typedef int HFILE;
typedef HANDLE HFONT;
typedef HANDLE HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef HANDLE HGLRC;
typedef HANDLE HHOOK;
typedef HANDLE HICON;
typedef HANDLE HIMAGELIST;
typedef HANDLE HINSTANCE;
typedef HANDLE HKEY;
typedef HANDLE *PHKEY;
typedef HANDLE HKL;
typedef HANDLE HLOCAL;
typedef HANDLE HMENU;
typedef HANDLE HMETAFILE;
typedef HANDLE HMODULE;
typedef HANDLE HPALETTE;
typedef HANDLE HPEN;
typedef HANDLE HRASCONN;
typedef long int HRESULT;
typedef HANDLE HRGN;
typedef HANDLE HRSRC;
typedef HANDLE HSTMT;
typedef HANDLE HSZ;
typedef HANDLE HWINSTA;
typedef HANDLE HWND;
typedef int INT;
typedef short unsigned int LANGID;
typedef DWORD LCID;
typedef DWORD LCTYPE;
typedef double LONGLONG;
typedef double *PLONGLONG;
typedef short unsigned int *LP;
typedef long int LPARAM;
typedef WINBOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef CHAR *LPCCH;
typedef CHAR *LPCH;
typedef COLORREF *LPCOLORREF;
typedef char *LPCSTR;
typedef char *LPCTSTR;
typedef WCHAR *LPCWCH;
typedef WCHAR *LPCWSTR;
typedef DWORD *LPDWORD;
typedef HANDLE *LPHANDLE;
typedef int *LPINT;
typedef long int *LPLONG;
typedef char *LPSTR;
typedef char *LPTCH;
typedef char *LPTSTR;
typedef long int LRESULT;
typedef void *LPVOID;
typedef void *LPCVOID;
typedef WCHAR *LPWCH;
typedef short unsigned int *LPWORD;
typedef WCHAR *LPWSTR;
typedef short unsigned int *NWPSTR;
typedef WINBOOL *PWINBOOL;
typedef BYTE *PBOOLEAN;
typedef BYTE *PBYTE;
typedef CHAR *PCCH;
typedef CHAR *PCH;
typedef CHAR *PCHAR;
typedef char *PCSTR;
typedef WCHAR *PCWCH;
typedef WCHAR *PCWSTR;
typedef DWORD *PDWORD;
typedef float *PFLOAT;
typedef HANDLE *PHANDLE;
typedef int *PINT;
typedef long int *PLONG;
typedef short int *PSHORT;
typedef char *PSTR;
typedef char *PSZ;
typedef unsigned char *PTBYTE;
typedef char *PTCH;
typedef char *PTCHAR;
typedef char *PTSTR;
typedef unsigned char *PUCHAR;
typedef unsigned int *PUINT;
typedef long unsigned int *PULONG;
typedef short unsigned int *PUSHORT;
typedef void *PVOID;
typedef WCHAR *PWCH;
typedef WCHAR *PWCHAR;
typedef short unsigned int *PWORD;
typedef short int RETCODE;
typedef HANDLE SC_HANDLE;
typedef LPVOID SC_LOCK;
typedef SC_HANDLE *LPSC_HANDLE;
typedef DWORD SERVICE_STATUS_HANDLE;
typedef unsigned char TBYTE;
typedef char TCHAR;
typedef BYTE BCHAR;
typedef unsigned char UCHAR;
typedef unsigned int UINT;
typedef long unsigned int ULONG;
typedef short unsigned int USHORT;
typedef short unsigned int WORD;
typedef unsigned int WPARAM;
enum _ACL_INFORMATION_CLASS { AclRevisionInformation = 1, AclSizeInformation };
typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;
enum _MEDIA_TYPE { Unknown, F5_1Pt2_512, F3_1Pt44_512, F3_2Pt88_512, F3_20Pt8_512, F3_720_512, F5_360_512, F5_320_512, F5_320_1024, F5_180_512, F5_160_512, RemovableMedia, FixedMedia };
typedef enum _MEDIA_TYPE MEDIA_TYPE;
enum _RASCONNSTATE { RASCS_OpenPort, RASCS_PortOpened, RASCS_ConnectDevice, RASCS_DeviceConnected, RASCS_AllDevicesConnected, RASCS_Authenticate, RASCS_AuthNotify, RASCS_AuthRetry, RASCS_AuthCallback, RASCS_AuthChangePassword, RASCS_AuthProject, RASCS_AuthLinkSpeed, RASCS_AuthAck, RASCS_ReAuthenticate, RASCS_Authenticated, RASCS_PrepareForCallback, RASCS_WaitForModemReset, RASCS_WaitForCallback, RASCS_Projected, RASCS_StartAuthentication, RASCS_CallbackComplete, RASCS_LogonNetwork, RASCS_Interactive = 4096, RASCS_RetryAuthentication, RASCS_CallbackSetByCaller, RASCS_PasswordExpired, RASCS_Connected = 8192, RASCS_Disconnected };
typedef enum _RASCONNSTATE RASCONNSTATE;
enum _RASPROJECTION { RASP_Amb = 65536, RASP_PppNbf = 32831, RASP_PppIpx = 32811, RASP_PppIp = 32801 };
typedef enum _RASPROJECTION RASPROJECTION;
enum _SECURITY_IMPERSONATION_LEVEL { SecurityAnonymous, SecurityIdentification, SecurityImpersonation, SecurityDelegation };
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
enum _SID_NAME_USE { SidTypeUser = 1, SidTypeGroup, SidTypeDomain, SidTypeAlias, SidTypeWellKnownGroup, SidTypeDeletedAccount, SidTypeInvalid, SidTypeUnknown };
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
enum _TOKEN_INFORMATION_CLASS { TokenUser = 1, TokenGroups, TokenPrivileges, TokenOwner, TokenPrimaryGroup, TokenDefaultDacl, TokenSource, TokenType, TokenImpersonationLevel, TokenStatistics };
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
enum tagTOKEN_TYPE { TokenPrimary = 1, TokenImpersonation };
typedef enum tagTOKEN_TYPE TOKEN_TYPE;
typedef int (*BFFCALLBACK) (/* unknown */);
typedef UINT (*LPCCHOOKPROC) (/* unknown */);
typedef UINT (*LPCFHOOKPROC) (/* unknown */);
typedef DWORD (*PTHREAD_START_ROUTINE) (/* unknown */);
typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;
typedef DWORD (*EDITSTREAMCALLBACK) (/* unknown */);
typedef UINT (*LPFRHOOKPROC) (/* unknown */);
typedef UINT (*LPOFNHOOKPROC) (/* unknown */);
typedef UINT (*LPPRINTHOOKPROC) (/* unknown */);
typedef UINT (*LPSETUPHOOKPROC) (/* unknown */);
typedef WINBOOL (*DLGPROC) (/* unknown */);
typedef int (*PFNPROPSHEETCALLBACK) (/* unknown */);
typedef void (*LPSERVICE_MAIN_FUNCTION) (/* unknown */);
typedef int (*PFNTVCOMPARE) (/* unknown */);
typedef LRESULT (*WNDPROC) (/* unknown */);
typedef int (*FARPROC) (/* unknown */);
typedef FARPROC PROC;
typedef WINBOOL (*ENUMRESTYPEPROC) (/* unknown */);
typedef WINBOOL (*ENUMRESNAMEPROC) (/* unknown */);
typedef WINBOOL (*ENUMRESLANGPROC) (/* unknown */);
typedef FARPROC DESKTOPENUMPROC;
typedef WINBOOL (*ENUMWINDOWSPROC) (/* unknown */);
typedef WINBOOL (*ENUMWINDOWSTATIONPROC) (/* unknown */);
typedef void (*SENDASYNCPROC) (/* unknown */);
typedef void (*TIMERPROC) (/* unknown */);
typedef FARPROC GRAYSTRINGPROC;
typedef WINBOOL (*DRAWSTATEPROC) (/* unknown */);
typedef WINBOOL (*PROPENUMPROCEX) (/* unknown */);
typedef WINBOOL (*PROPENUMPROC) (/* unknown */);
typedef LRESULT (*HOOKPROC) (/* unknown */);
typedef void (*ENUMOBJECTSPROC) (/* unknown */);
typedef void (*LINEDDAPROC) (/* unknown */);
typedef WINBOOL (*ABORTPROC) (/* unknown */);
typedef UINT (*LPPAGEPAINTHOOK) (/* unknown */);
typedef UINT (*LPPAGESETUPHOOK) (/* unknown */);
typedef int (*ICMENUMPROC) (/* unknown */);
typedef LONG (*EDITWORDBREAKPROCEX) (/* unknown */);
typedef int (*PFNLVCOMPARE) (/* unknown */);
typedef WINBOOL (*LOCALE_ENUMPROC) (/* unknown */);
typedef WINBOOL (*CODEPAGE_ENUMPROC) (/* unknown */);
typedef WINBOOL (*DATEFMT_ENUMPROC) (/* unknown */);
typedef WINBOOL (*TIMEFMT_ENUMPROC) (/* unknown */);
typedef WINBOOL (*CALINFO_ENUMPROC) (/* unknown */);
typedef WINBOOL (*PHANDLER_ROUTINE) (/* unknown */);
typedef WINBOOL (*LPHANDLER_FUNCTION) (/* unknown */);
typedef UINT (*PFNGETPROFILEPATH) (/* unknown */);
typedef UINT (*PFNRECONCILEPROFILE) (/* unknown */);
typedef WINBOOL (*PFNPROCESSPOLICIES) (/* unknown */);
typedef void (*CALLB) (/* unknown */);
typedef CALLB PFNCALLBACK;
typedef WINBOOL SECURITY_CONTEXT_TRACKING_MODE;
typedef FARPROC WNDENUMPROC;
typedef FARPROC ENHMFENUMPROC;
typedef DWORD CCSTYLE;
typedef DWORD *PCCSTYLE;
typedef DWORD *LPCCSTYLE;
typedef DWORD CCSTYLEFLAGA;
typedef DWORD *PCCSTYLEFLAGA;
typedef DWORD *LPCCSTYLEFLAGA;
 wstructs.h:
struct _ABC { /* size 12 id 23 */
  int abcA; /* bitsize 32, bitpos 0 */
  UINT abcB; /* bitsize 32, bitpos 32 */
  int abcC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABC /* id 23 */ ABC;
typedef struct _ABC /* id 23 */ *LPABC;
struct _ABCFLOAT { /* size 12 id 24 */
  FLOAT abcfA; /* bitsize 32, bitpos 0 */
  FLOAT abcfB; /* bitsize 32, bitpos 32 */
  FLOAT abcfC; /* bitsize 32, bitpos 64 */
};
typedef struct _ABCFLOAT /* id 24 */ ABCFLOAT;
typedef struct _ABCFLOAT /* id 24 */ *LPABCFLOAT;
struct tagACCEL { /* size 6 id 17 */
  BYTE fVirt; /* bitsize 8, bitpos 0 */
  WORD key; /* bitsize 16, bitpos 16 */
  WORD cmd; /* bitsize 16, bitpos 32 */
};
typedef struct tagACCEL /* id 17 */ ACCEL;
typedef struct tagACCEL /* id 17 */ *LPACCEL;
struct _ACE_HEADER { /* size 4 id 66 */
  BYTE AceType; /* bitsize 8, bitpos 0 */
  BYTE AceFlags; /* bitsize 8, bitpos 8 */
  WORD AceSize; /* bitsize 16, bitpos 16 */
};
typedef struct _ACE_HEADER /* id 66 */ ACE_HEADER;
typedef DWORD ACCESS_MASK;
typedef ACCESS_MASK REGSAM;
struct _ACCESS_ALLOWED_ACE { /* size 12 id 67 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_ALLOWED_ACE /* id 67 */ ACCESS_ALLOWED_ACE;
struct _ACCESS_DENIED_ACE { /* size 12 id 68 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _ACCESS_DENIED_ACE /* id 68 */ ACCESS_DENIED_ACE;
struct tagACCESSTIMEOUT { /* size 12 id 69 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iTimeOutMSec; /* bitsize 32, bitpos 64 */
};
typedef struct tagACCESSTIMEOUT /* id 69 */ ACCESSTIMEOUT;
struct _ACL { /* size 8 id 70 */
  BYTE AclRevision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  WORD AclSize; /* bitsize 16, bitpos 16 */
  WORD AceCount; /* bitsize 16, bitpos 32 */
  WORD Sbz2; /* bitsize 16, bitpos 48 */
};
typedef struct _ACL /* id 70 */ ACL;
typedef struct _ACL /* id 70 */ *PACL;
struct _ACL_REVISION_INFORMATION { /* size 4 id 71 */
  DWORD AclRevision; /* bitsize 32, bitpos 0 */
};
typedef struct _ACL_REVISION_INFORMATION /* id 71 */ ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION { /* size 12 id 72 */
  DWORD AceCount; /* bitsize 32, bitpos 0 */
  DWORD AclBytesInUse; /* bitsize 32, bitpos 32 */
  DWORD AclBytesFree; /* bitsize 32, bitpos 64 */
};
typedef struct _ACL_SIZE_INFORMATION /* id 72 */ ACL_SIZE_INFORMATION;
struct _ACTION_HEADER { /* size 8 id 73 */
  ULONG transport_id; /* bitsize 32, bitpos 0 */
  USHORT action_code; /* bitsize 16, bitpos 32 */
  USHORT reserved; /* bitsize 16, bitpos 48 */
};
typedef struct _ACTION_HEADER /* id 73 */ ACTION_HEADER;
struct _ADAPTER_STATUS { /* size 60 id 74 */
  UCHAR adapter_address[6]; /* bitsize 48, bitpos 0 */
  UCHAR rev_major; /* bitsize 8, bitpos 48 */
  UCHAR reserved0; /* bitsize 8, bitpos 56 */
  UCHAR adapter_type; /* bitsize 8, bitpos 64 */
  UCHAR rev_minor; /* bitsize 8, bitpos 72 */
  WORD duration; /* bitsize 16, bitpos 80 */
  WORD frmr_recv; /* bitsize 16, bitpos 96 */
  WORD frmr_xmit; /* bitsize 16, bitpos 112 */
  WORD iframe_recv_err; /* bitsize 16, bitpos 128 */
  WORD xmit_aborts; /* bitsize 16, bitpos 144 */
  DWORD xmit_success; /* bitsize 32, bitpos 160 */
  DWORD recv_success; /* bitsize 32, bitpos 192 */
  WORD iframe_xmit_err; /* bitsize 16, bitpos 224 */
  WORD recv_buff_unavail; /* bitsize 16, bitpos 240 */
  WORD t1_timeouts; /* bitsize 16, bitpos 256 */
  WORD ti_timeouts; /* bitsize 16, bitpos 272 */
  DWORD reserved1; /* bitsize 32, bitpos 288 */
  WORD free_ncbs; /* bitsize 16, bitpos 320 */
  WORD max_cfg_ncbs; /* bitsize 16, bitpos 336 */
  WORD max_ncbs; /* bitsize 16, bitpos 352 */
  WORD xmit_buf_unavail; /* bitsize 16, bitpos 368 */
  WORD max_dgram_size; /* bitsize 16, bitpos 384 */
  WORD pending_sess; /* bitsize 16, bitpos 400 */
  WORD max_cfg_sess; /* bitsize 16, bitpos 416 */
  WORD max_sess; /* bitsize 16, bitpos 432 */
  WORD max_sess_pkt_size; /* bitsize 16, bitpos 448 */
  WORD name_count; /* bitsize 16, bitpos 464 */
};
typedef struct _ADAPTER_STATUS /* id 74 */ ADAPTER_STATUS;
struct _ADDJOB_INFO_1 { /* size 8 id 75 */
  LPTSTR Path; /* bitsize 32, bitpos 0 */
  DWORD JobId; /* bitsize 32, bitpos 32 */
};
typedef struct _ADDJOB_INFO_1 /* id 75 */ ADDJOB_INFO_1;
struct tagANIMATIONINFO { /* size 8 id 76 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iMinAnimate; /* bitsize 32, bitpos 32 */
};
typedef struct tagANIMATIONINFO /* id 76 */ ANIMATIONINFO;
typedef struct tagANIMATIONINFO /* id 76 */ *LPANIMATIONINFO;
struct _RECT { /* size 16 id 19 */
  LONG left; /* bitsize 32, bitpos 0 */
  LONG top; /* bitsize 32, bitpos 32 */
  LONG right; /* bitsize 32, bitpos 64 */
  LONG bottom; /* bitsize 32, bitpos 96 */
};
typedef struct _RECT /* id 19 */ RECT;
typedef struct _RECT /* id 19 */ *LPRECT;
typedef struct _RECT /* id 19 */ *PRECT;
struct _RECTL { /* size 16 id 77 */
  LONG left; /* bitsize 32, bitpos 0 */
  LONG top; /* bitsize 32, bitpos 32 */
  LONG right; /* bitsize 32, bitpos 64 */
  LONG bottom; /* bitsize 32, bitpos 96 */
};
typedef struct _RECTL /* id 77 */ RECTL;
struct _AppBarData { /* size 36 id 78 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  HWND hWnd; /* bitsize 32, bitpos 32 */
  UINT uCallbackMessage; /* bitsize 32, bitpos 64 */
  UINT uEdge; /* bitsize 32, bitpos 96 */
  RECT rc; /* bitsize 128, bitpos 128 */
  LPARAM lParam; /* bitsize 32, bitpos 256 */
};
typedef struct _AppBarData /* id 78 */ APPBARDATA;
typedef struct _AppBarData /* id 78 */ *PAPPBARDATA;
struct tagBITMAP { /* size 24 id 79 */
  LONG bmType; /* bitsize 32, bitpos 0 */
  LONG bmWidth; /* bitsize 32, bitpos 32 */
  LONG bmHeight; /* bitsize 32, bitpos 64 */
  LONG bmWidthBytes; /* bitsize 32, bitpos 96 */
  WORD bmPlanes; /* bitsize 16, bitpos 128 */
  WORD bmBitsPixel; /* bitsize 16, bitpos 144 */
  LPVOID bmBits; /* bitsize 32, bitpos 160 */
};
typedef struct tagBITMAP /* id 79 */ BITMAP;
typedef struct tagBITMAP /* id 79 */ *PBITMAP;
typedef struct tagBITMAP /* id 79 */ *NPBITMAP;
typedef struct tagBITMAP /* id 79 */ *LPBITMAP;
struct tagBITMAPCOREHEADER { /* size 12 id 80 */
  DWORD bcSize; /* bitsize 32, bitpos 0 */
  WORD bcWidth; /* bitsize 16, bitpos 32 */
  WORD bcHeight; /* bitsize 16, bitpos 48 */
  WORD bcPlanes; /* bitsize 16, bitpos 64 */
  WORD bcBitCount; /* bitsize 16, bitpos 80 */
};
typedef struct tagBITMAPCOREHEADER /* id 80 */ BITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 80 */ *PBITMAPCOREHEADER;
typedef struct tagBITMAPCOREHEADER /* id 80 */ *LPBITMAPCOREHEADER;
struct tagRGBTRIPLE { /* size 3 id 81 */
  BYTE rgbtBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbtGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbtRed; /* bitsize 8, bitpos 16 */
};
typedef struct tagRGBTRIPLE /* id 81 */ RGBTRIPLE;
typedef struct tagRGBTRIPLE /* id 81 */ *PRGBTRIPLE;
typedef struct tagRGBTRIPLE /* id 81 */ *LPRGBTRIPLE;
struct tagBITMAPCOREINFO { /* size 15 id 82 */
  BITMAPCOREHEADER bmciHeader; /* bitsize 96, bitpos 0 */
  RGBTRIPLE bmciColors[1]; /* bitsize 24, bitpos 96 */
};
typedef struct tagBITMAPCOREINFO /* id 82 */ BITMAPCOREINFO;
typedef struct tagBITMAPCOREINFO /* id 82 */ *PBITMAPCOREINFO;
typedef struct tagBITMAPCOREINFO /* id 82 */ *LPBITMAPCOREINFO;
struct tagBITMAPFILEHEADER { /* size 14 id 83 */
  WORD bfType; /* bitsize 16, bitpos 0 */
  DWORD bfSize; /* bitsize 32, bitpos 16 */
  WORD bfReserved1; /* bitsize 16, bitpos 48 */
  WORD bfReserved2; /* bitsize 16, bitpos 64 */
  DWORD bfOffBits; /* bitsize 32, bitpos 80 */
};
typedef struct tagBITMAPFILEHEADER /* id 83 */ BITMAPFILEHEADER;
struct tagBITMAPINFOHEADER { /* size 40 id 84 */
  DWORD biSize; /* bitsize 32, bitpos 0 */
  LONG biWidth; /* bitsize 32, bitpos 32 */
  LONG biHeight; /* bitsize 32, bitpos 64 */
  WORD biPlanes; /* bitsize 16, bitpos 96 */
  WORD biBitCount; /* bitsize 16, bitpos 112 */
  DWORD biCompression; /* bitsize 32, bitpos 128 */
  DWORD biSizeImage; /* bitsize 32, bitpos 160 */
  LONG biXPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG biYPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD biClrUsed; /* bitsize 32, bitpos 256 */
  DWORD biClrImportant; /* bitsize 32, bitpos 288 */
};
typedef struct tagBITMAPINFOHEADER /* id 84 */ BITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 84 */ *LPBITMAPINFOHEADER;
typedef struct tagBITMAPINFOHEADER /* id 84 */ *PBITMAPINFOHEADER;
struct tagRGBQUAD { /* size 4 id 85 */
  BYTE rgbBlue; /* bitsize 8, bitpos 0 */
  BYTE rgbGreen; /* bitsize 8, bitpos 8 */
  BYTE rgbRed; /* bitsize 8, bitpos 16 */
  BYTE rgbReserved; /* bitsize 8, bitpos 24 */
};
typedef struct tagRGBQUAD /* id 85 */ RGBQUAD;
typedef struct tagRGBQUAD /* id 85 */ *PRGBQUAD;
typedef struct tagRGBQUAD /* id 85 */ *LPRGBQUAD;
struct tagBITMAPINFO { /* size 44 id 86 */
  BITMAPINFOHEADER bmiHeader; /* bitsize 320, bitpos 0 */
  RGBQUAD bmiColors[1]; /* bitsize 32, bitpos 320 */
};
typedef struct tagBITMAPINFO /* id 86 */ BITMAPINFO;
typedef struct tagBITMAPINFO /* id 86 */ *LPBITMAPINFO;
typedef struct tagBITMAPINFO /* id 86 */ *PBITMAPINFO;
struct tagBITMAPINFOMASK { /* size 52 id 87 */
  BITMAPINFOHEADER bmiHeader; /* bitsize 320, bitpos 0 */
  DWORD dwMask[3]; /* bitsize 96, bitpos 320 */
};
typedef struct tagBITMAPINFOMASK /* id 87 */ BITMAPINFOMASK;
typedef struct tagBITMAPINFOMASK /* id 87 */ LPBITMAPINFOMASK;
typedef struct tagBITMAPINFOMASK /* id 87 */ *PBITMAPINFOMASK;
typedef long int FXPT2DOT30;
typedef long int *LPFXPT2DOT30;
struct tagCIEXYZ { /* size 12 id 88 */
  FXPT2DOT30 ciexyzX; /* bitsize 32, bitpos 0 */
  FXPT2DOT30 ciexyzY; /* bitsize 32, bitpos 32 */
  FXPT2DOT30 ciexyzZ; /* bitsize 32, bitpos 64 */
};
typedef struct tagCIEXYZ /* id 88 */ CIEXYZ;
typedef struct tagCIEXYZ /* id 88 */ *LPCIEXYZ;
struct tagCIEXYZTRIPLE { /* size 36 id 89 */
  CIEXYZ ciexyzRed; /* bitsize 96, bitpos 0 */
  CIEXYZ ciexyzGreen; /* bitsize 96, bitpos 96 */
  CIEXYZ ciexyzBlue; /* bitsize 96, bitpos 192 */
};
typedef struct tagCIEXYZTRIPLE /* id 89 */ CIEXYZTRIPLE;
typedef struct tagCIEXYZTRIPLE /* id 89 */ *LPCIEXYZTRIPLE;
typedef struct %anon90 { /* size 108 */
  DWORD bV4Size; /* bitsize 32, bitpos 0 */
  LONG bV4Width; /* bitsize 32, bitpos 32 */
  LONG bV4Height; /* bitsize 32, bitpos 64 */
  WORD bV4Planes; /* bitsize 16, bitpos 96 */
  WORD bV4BitCount; /* bitsize 16, bitpos 112 */
  DWORD bV4V4Compression; /* bitsize 32, bitpos 128 */
  DWORD bV4SizeImage; /* bitsize 32, bitpos 160 */
  LONG bV4XPelsPerMeter; /* bitsize 32, bitpos 192 */
  LONG bV4YPelsPerMeter; /* bitsize 32, bitpos 224 */
  DWORD bV4ClrUsed; /* bitsize 32, bitpos 256 */
  DWORD bV4ClrImportant; /* bitsize 32, bitpos 288 */
  DWORD bV4RedMask; /* bitsize 32, bitpos 320 */
  DWORD bV4GreenMask; /* bitsize 32, bitpos 352 */
  DWORD bV4BlueMask; /* bitsize 32, bitpos 384 */
  DWORD bV4AlphaMask; /* bitsize 32, bitpos 416 */
  DWORD bV4CSType; /* bitsize 32, bitpos 448 */
  CIEXYZTRIPLE bV4Endpoints; /* bitsize 288, bitpos 480 */
  DWORD bV4GammaRed; /* bitsize 32, bitpos 768 */
  DWORD bV4GammaGreen; /* bitsize 32, bitpos 800 */
  DWORD bV4GammaBlue; /* bitsize 32, bitpos 832 */
} BITMAPV4HEADER;
typedef struct %anon90 *LPBITMAPV4HEADER;
typedef struct %anon90 *PBITMAPV4HEADER;
struct _BLOB { /* size 8 id 91 */
  ULONG cbSize; /* bitsize 32, bitpos 0 */
  BYTE *pBlobData; /* bitsize 32, bitpos 32 */
};
typedef struct _BLOB /* id 91 */ BLOB;
struct _SHITEMID { /* size 4 id 92 */
  USHORT cb; /* bitsize 16, bitpos 0 */
  BYTE abID[1]; /* bitsize 8, bitpos 16 */
};
typedef struct _SHITEMID /* id 92 */ SHITEMID;
typedef struct _SHITEMID /* id 92 */ *LPSHITEMID;
typedef SHITEMID *LPCSHITEMID;
struct _ITEMIDLIST { /* size 4 id 93 */
  SHITEMID mkid; /* bitsize 32, bitpos 0 */
};
typedef struct _ITEMIDLIST /* id 93 */ ITEMIDLIST;
typedef struct _ITEMIDLIST /* id 93 */ *LPITEMIDLIST;
typedef ITEMIDLIST *LPCITEMIDLIST;
struct _browseinfo { /* size 32 id 94 */
  HWND hwndOwner; /* bitsize 32, bitpos 0 */
  LPCITEMIDLIST pidlRoot; /* bitsize 32, bitpos 32 */
  LPSTR pszDisplayName; /* bitsize 32, bitpos 64 */
  LPCSTR lpszTitle; /* bitsize 32, bitpos 96 */
  UINT ulFlags; /* bitsize 32, bitpos 128 */
  BFFCALLBACK lpfn; /* bitsize 32, bitpos 160 */
  LPARAM lParam; /* bitsize 32, bitpos 192 */
  int iImage; /* bitsize 32, bitpos 224 */
};
typedef struct _browseinfo /* id 94 */ BROWSEINFO;
typedef struct _browseinfo /* id 94 */ *PBROWSEINFO;
typedef struct _browseinfo /* id 94 */ *LPBROWSEINFO;
struct _FILETIME { /* size 8 id 46 */
  DWORD dwLowDateTime; /* bitsize 32, bitpos 0 */
  DWORD dwHighDateTime; /* bitsize 32, bitpos 32 */
};
typedef struct _FILETIME /* id 46 */ FILETIME;
typedef struct _FILETIME /* id 46 */ *LPFILETIME;
typedef struct _FILETIME /* id 46 */ *PFILETIME;
struct _BY_HANDLE_FILE_INFORMATION { /* size 52 id 95 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD dwVolumeSerialNumber; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 256 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 288 */
  DWORD nNumberOfLinks; /* bitsize 32, bitpos 320 */
  DWORD nFileIndexHigh; /* bitsize 32, bitpos 352 */
  DWORD nFileIndexLow; /* bitsize 32, bitpos 384 */
};
typedef struct _BY_HANDLE_FILE_INFORMATION /* id 95 */ BY_HANDLE_FILE_INFORMATION;
typedef struct _BY_HANDLE_FILE_INFORMATION /* id 95 */ *LPBY_HANDLE_FILE_INFORMATION;
struct _FIXED { /* size 4 id 96 */
  WORD fract; /* bitsize 16, bitpos 0 */
  short int value; /* bitsize 16, bitpos 16 */
};
typedef struct _FIXED /* id 96 */ FIXED;
struct tagPOINT { /* size 8 id 97 */
  LONG x; /* bitsize 32, bitpos 0 */
  LONG y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINT /* id 97 */ POINT;
typedef struct tagPOINT /* id 97 */ *LPPOINT;
typedef struct tagPOINT /* id 97 */ *PPOINT;
struct tagPOINTFX { /* size 8 id 98 */
  FIXED x; /* bitsize 32, bitpos 0 */
  FIXED y; /* bitsize 32, bitpos 32 */
};
typedef struct tagPOINTFX /* id 98 */ POINTFX;
struct _POINTL { /* size 8 id 99 */
  LONG x; /* bitsize 32, bitpos 0 */
  LONG y; /* bitsize 32, bitpos 32 */
};
typedef struct _POINTL /* id 99 */ POINTL;
struct tagPOINTS { /* size 4 id 100 */
  SHORT x; /* bitsize 16, bitpos 0 */
  SHORT y; /* bitsize 16, bitpos 16 */
};
typedef struct tagPOINTS /* id 100 */ POINTS;
struct _tagCANDIDATEFORM { /* size 32 id 101 */
  DWORD dwIndex; /* bitsize 32, bitpos 0 */
  DWORD dwStyle; /* bitsize 32, bitpos 32 */
  POINT ptCurrentPos; /* bitsize 64, bitpos 64 */
  RECT rcArea; /* bitsize 128, bitpos 128 */
};
typedef struct _tagCANDIDATEFORM /* id 101 */ CANDIDATEFORM;
typedef struct _tagCANDIDATEFORM /* id 101 */ *LPCANDIDATEFORM;
struct _tagCANDIDATELIST { /* size 28 id 102 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwStyle; /* bitsize 32, bitpos 32 */
  DWORD dwCount; /* bitsize 32, bitpos 64 */
  DWORD dwSelection; /* bitsize 32, bitpos 96 */
  DWORD dwPageStart; /* bitsize 32, bitpos 128 */
  DWORD dwPageSize; /* bitsize 32, bitpos 160 */
  DWORD dwOffset[1]; /* bitsize 32, bitpos 192 */
};
typedef struct _tagCANDIDATELIST /* id 102 */ CANDIDATELIST;
typedef struct _tagCANDIDATELIST /* id 102 */ *LPCANDIDATELIST;
struct tagCREATESTRUCT { /* size 48 id 103 */
  LPVOID lpCreateParams; /* bitsize 32, bitpos 0 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 32 */
  HMENU hMenu; /* bitsize 32, bitpos 64 */
  HWND hwndParent; /* bitsize 32, bitpos 96 */
  int cy; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int y; /* bitsize 32, bitpos 192 */
  int x; /* bitsize 32, bitpos 224 */
  LONG style; /* bitsize 32, bitpos 256 */
  LPCTSTR lpszName; /* bitsize 32, bitpos 288 */
  LPCTSTR lpszClass; /* bitsize 32, bitpos 320 */
  DWORD dwExStyle; /* bitsize 32, bitpos 352 */
};
typedef struct tagCREATESTRUCT /* id 103 */ CREATESTRUCT;
typedef struct tagCREATESTRUCT /* id 103 */ *LPCREATESTRUCT;
struct tagCBT_CREATEWND { /* size 8 id 104 */
  LPCREATESTRUCT lpcs; /* bitsize 32, bitpos 0 */
  HWND hwndInsertAfter; /* bitsize 32, bitpos 32 */
};
typedef struct tagCBT_CREATEWND /* id 104 */ CBT_CREATEWND;
struct tagCBTACTIVATESTRUCT { /* size 8 id 105 */
  WINBOOL fMouse; /* bitsize 32, bitpos 0 */
  HWND hWndActive; /* bitsize 32, bitpos 32 */
};
typedef struct tagCBTACTIVATESTRUCT /* id 105 */ CBTACTIVATESTRUCT;
struct _CHAR_INFO { /* size 4 id 52 */
  union %anon106 { /* size 2 */
    WCHAR UnicodeChar; /* bitsize 16, bitpos 0 */
    CHAR AsciiChar; /* bitsize 8, bitpos 0 */
  } Char; /* bitsize 16, bitpos 0 */
  WORD Attributes; /* bitsize 16, bitpos 16 */
};
typedef struct _CHAR_INFO /* id 52 */ CHAR_INFO;
typedef struct _CHAR_INFO /* id 52 */ *PCHAR_INFO;
struct _charformat { /* size 60 id 107 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwMask; /* bitsize 32, bitpos 32 */
  DWORD dwEffects; /* bitsize 32, bitpos 64 */
  LONG yHeight; /* bitsize 32, bitpos 96 */
  LONG yOffset; /* bitsize 32, bitpos 128 */
  COLORREF crTextColor; /* bitsize 32, bitpos 160 */
  BYTE bCharSet; /* bitsize 8, bitpos 192 */
  BYTE bPitchAndFamily; /* bitsize 8, bitpos 200 */
  TCHAR szFaceName[32]; /* bitsize 256, bitpos 208 */
};
typedef struct _charformat /* id 107 */ CHARFORMAT;
struct _charrange { /* size 8 id 108 */
  LONG cpMin; /* bitsize 32, bitpos 0 */
  LONG cpMax; /* bitsize 32, bitpos 32 */
};
typedef struct _charrange /* id 108 */ CHARRANGE;
struct tagCHARSET { /* size 16 id 109 */
  DWORD aflBlock[3]; /* bitsize 96, bitpos 0 */
  DWORD flLang; /* bitsize 32, bitpos 96 */
};
typedef struct tagCHARSET /* id 109 */ CHARSET;
struct tagFONTSIGNATURE { /* size 24 id 110 */
  DWORD fsUsb[4]; /* bitsize 128, bitpos 0 */
  DWORD fsCsb[2]; /* bitsize 64, bitpos 128 */
};
typedef struct tagFONTSIGNATURE /* id 110 */ FONTSIGNATURE;
typedef struct tagFONTSIGNATURE /* id 110 */ *LPFONTSIGNATURE;
typedef struct %anon111 { /* size 32 */
  UINT ciCharset; /* bitsize 32, bitpos 0 */
  UINT ciACP; /* bitsize 32, bitpos 32 */
  FONTSIGNATURE fs; /* bitsize 192, bitpos 64 */
} CHARSETINFO;
typedef struct %anon111 *LPCHARSETINFO;
typedef struct %anon37 CHOOSECOLOR;
typedef struct %anon37 *LPCHOOSECOLOR;
struct tagLOGFONTA { /* size 60 id 22 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  CHAR lfFaceName[32]; /* bitsize 256, bitpos 224 */
};
typedef struct tagLOGFONTA /* id 22 */ LOGFONTA;
typedef struct tagLOGFONTA /* id 22 */ *LPLOGFONTA;
typedef struct tagLOGFONTA /* id 22 */ *PLOGFONTA;
struct tagLOGFONTW { /* size 92 id 112 */
  LONG lfHeight; /* bitsize 32, bitpos 0 */
  LONG lfWidth; /* bitsize 32, bitpos 32 */
  LONG lfEscapement; /* bitsize 32, bitpos 64 */
  LONG lfOrientation; /* bitsize 32, bitpos 96 */
  LONG lfWeight; /* bitsize 32, bitpos 128 */
  BYTE lfItalic; /* bitsize 8, bitpos 160 */
  BYTE lfUnderline; /* bitsize 8, bitpos 168 */
  BYTE lfStrikeOut; /* bitsize 8, bitpos 176 */
  BYTE lfCharSet; /* bitsize 8, bitpos 184 */
  BYTE lfOutPrecision; /* bitsize 8, bitpos 192 */
  BYTE lfClipPrecision; /* bitsize 8, bitpos 200 */
  BYTE lfQuality; /* bitsize 8, bitpos 208 */
  BYTE lfPitchAndFamily; /* bitsize 8, bitpos 216 */
  WCHAR lfFaceName[32]; /* bitsize 512, bitpos 224 */
};
typedef struct tagLOGFONTW /* id 112 */ LOGFONTW;
typedef struct tagLOGFONTW /* id 112 */ *LPLOGFONTW;
typedef struct tagLOGFONTW /* id 112 */ *PLOGFONTW;
typedef LOGFONTA LOGFONT;
typedef LOGFONT *PLOGFONT;
typedef LOGFONT *NPLOGFONT;
typedef LOGFONT *LPLOGFONT;
typedef struct %anon39 CHOOSEFONT;
typedef struct %anon39 *LPCHOOSEFONT;
struct _IDA { /* size 8 id 113 */
  UINT cidl; /* bitsize 32, bitpos 0 */
  UINT aoffset[1]; /* bitsize 32, bitpos 32 */
};
typedef struct _IDA /* id 113 */ CIDA;
typedef struct _IDA /* id 113 */ *LPIDA;
struct tagCLIENTCREATESTRUCT { /* size 8 id 114 */
  HANDLE hWindowMenu; /* bitsize 32, bitpos 0 */
  UINT idFirstChild; /* bitsize 32, bitpos 32 */
};
typedef struct tagCLIENTCREATESTRUCT /* id 114 */ CLIENTCREATESTRUCT;
typedef CLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;
struct _CMInvokeCommandInfo { /* size 36 id 115 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD fMask; /* bitsize 32, bitpos 32 */
  HWND hwnd; /* bitsize 32, bitpos 64 */
  LPCSTR lpVerb; /* bitsize 32, bitpos 96 */
  LPCSTR lpParameters; /* bitsize 32, bitpos 128 */
  LPCSTR lpDirectory; /* bitsize 32, bitpos 160 */
  int nShow; /* bitsize 32, bitpos 192 */
  DWORD dwHotKey; /* bitsize 32, bitpos 224 */
  HANDLE hIcon; /* bitsize 32, bitpos 256 */
};
typedef struct _CMInvokeCommandInfo /* id 115 */ CMINVOKECOMMANDINFO;
typedef struct _CMInvokeCommandInfo /* id 115 */ *LPCMINVOKECOMMANDINFO;
struct tagCOLORADJUSTMENT { /* size 24 id 116 */
  WORD caSize; /* bitsize 16, bitpos 0 */
  WORD caFlags; /* bitsize 16, bitpos 16 */
  WORD caIlluminantIndex; /* bitsize 16, bitpos 32 */
  WORD caRedGamma; /* bitsize 16, bitpos 48 */
  WORD caGreenGamma; /* bitsize 16, bitpos 64 */
  WORD caBlueGamma; /* bitsize 16, bitpos 80 */
  WORD caReferenceBlack; /* bitsize 16, bitpos 96 */
  WORD caReferenceWhite; /* bitsize 16, bitpos 112 */
  SHORT caContrast; /* bitsize 16, bitpos 128 */
  SHORT caBrightness; /* bitsize 16, bitpos 144 */
  SHORT caColorfulness; /* bitsize 16, bitpos 160 */
  SHORT caRedGreenTint; /* bitsize 16, bitpos 176 */
};
typedef struct tagCOLORADJUSTMENT /* id 116 */ COLORADJUSTMENT;
typedef struct tagCOLORADJUSTMENT /* id 116 */ *LPCOLORADJUSTMENT;
struct _COLORMAP { /* size 8 id 117 */
  COLORREF from; /* bitsize 32, bitpos 0 */
  COLORREF to; /* bitsize 32, bitpos 32 */
};
typedef struct _COLORMAP /* id 117 */ COLORMAP;
typedef struct _COLORMAP /* id 117 */ *LPCOLORMAP;
struct _DCB { /* size 28 id 9 */
  DWORD DCBlength; /* bitsize 32, bitpos 0 */
  DWORD BaudRate; /* bitsize 32, bitpos 32 */
  DWORD fBinary; /* bitsize 1, bitpos 64 */
  DWORD fParity; /* bitsize 1, bitpos 65 */
  DWORD fOutxCtsFlow; /* bitsize 1, bitpos 66 */
  DWORD fOutxDsrFlow; /* bitsize 1, bitpos 67 */
  DWORD fDtrControl; /* bitsize 2, bitpos 68 */
  DWORD fDsrSensitivity; /* bitsize 1, bitpos 70 */
  DWORD fTXContinueOnXoff; /* bitsize 1, bitpos 71 */
  DWORD fOutX; /* bitsize 1, bitpos 72 */
  DWORD fInX; /* bitsize 1, bitpos 73 */
  DWORD fErrorChar; /* bitsize 1, bitpos 74 */
  DWORD fNull; /* bitsize 1, bitpos 75 */
  DWORD fRtsControl; /* bitsize 2, bitpos 76 */
  DWORD fAbortOnError; /* bitsize 1, bitpos 78 */
  DWORD fDummy2; /* bitsize 17, bitpos 79 */
  WORD wReserved; /* bitsize 16, bitpos 96 */
  WORD XonLim; /* bitsize 16, bitpos 112 */
  WORD XoffLim; /* bitsize 16, bitpos 128 */
  BYTE ByteSize; /* bitsize 8, bitpos 144 */
  BYTE Parity; /* bitsize 8, bitpos 152 */
  BYTE StopBits; /* bitsize 8, bitpos 160 */
  char XonChar; /* bitsize 8, bitpos 168 */
  char XoffChar; /* bitsize 8, bitpos 176 */
  char ErrorChar; /* bitsize 8, bitpos 184 */
  char EofChar; /* bitsize 8, bitpos 192 */
  char EvtChar; /* bitsize 8, bitpos 200 */
  WORD wReserved1; /* bitsize 16, bitpos 208 */
};
typedef struct _DCB /* id 9 */ DCB;
typedef struct _DCB /* id 9 */ *LPDCB;
struct _COMM_CONFIG { /* size 52 id 11 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  WORD wVersion; /* bitsize 16, bitpos 32 */
  WORD wReserved; /* bitsize 16, bitpos 48 */
  DCB dcb; /* bitsize 224, bitpos 64 */
  DWORD dwProviderSubType; /* bitsize 32, bitpos 288 */
  DWORD dwProviderOffset; /* bitsize 32, bitpos 320 */
  DWORD dwProviderSize; /* bitsize 32, bitpos 352 */
  WCHAR wcProviderData[1]; /* bitsize 16, bitpos 384 */
};
typedef struct _COMM_CONFIG /* id 11 */ COMMCONFIG;
typedef struct _COMM_CONFIG /* id 11 */ *LPCOMMCONFIG;
struct _COMMPROP { /* size 64 id 118 */
  WORD wPacketLength; /* bitsize 16, bitpos 0 */
  WORD wPacketVersion; /* bitsize 16, bitpos 16 */
  DWORD dwServiceMask; /* bitsize 32, bitpos 32 */
  DWORD dwReserved1; /* bitsize 32, bitpos 64 */
  DWORD dwMaxTxQueue; /* bitsize 32, bitpos 96 */
  DWORD dwMaxRxQueue; /* bitsize 32, bitpos 128 */
  DWORD dwMaxBaud; /* bitsize 32, bitpos 160 */
  DWORD dwProvSubType; /* bitsize 32, bitpos 192 */
  DWORD dwProvCapabilities; /* bitsize 32, bitpos 224 */
  DWORD dwSettableParams; /* bitsize 32, bitpos 256 */
  DWORD dwSettableBaud; /* bitsize 32, bitpos 288 */
  WORD wSettableData; /* bitsize 16, bitpos 320 */
  WORD wSettableStopParity; /* bitsize 16, bitpos 336 */
  DWORD dwCurrentTxQueue; /* bitsize 32, bitpos 352 */
  DWORD dwCurrentRxQueue; /* bitsize 32, bitpos 384 */
  DWORD dwProvSpec1; /* bitsize 32, bitpos 416 */
  DWORD dwProvSpec2; /* bitsize 32, bitpos 448 */
  WCHAR wcProvChar[1]; /* bitsize 16, bitpos 480 */
};
typedef struct _COMMPROP /* id 118 */ COMMPROP;
typedef struct _COMMPROP /* id 118 */ *LPCOMMPROP;
struct _COMMTIMEOUTS { /* size 20 id 10 */
  DWORD ReadIntervalTimeout; /* bitsize 32, bitpos 0 */
  DWORD ReadTotalTimeoutMultiplier; /* bitsize 32, bitpos 32 */
  DWORD ReadTotalTimeoutConstant; /* bitsize 32, bitpos 64 */
  DWORD WriteTotalTimeoutMultiplier; /* bitsize 32, bitpos 96 */
  DWORD WriteTotalTimeoutConstant; /* bitsize 32, bitpos 128 */
};
typedef struct _COMMTIMEOUTS /* id 10 */ COMMTIMEOUTS;
typedef struct _COMMTIMEOUTS /* id 10 */ *LPCOMMTIMEOUTS;
struct tagCOMPAREITEMSTRUCT { /* size 28 id 119 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  HWND hwndItem; /* bitsize 32, bitpos 64 */
  UINT itemID1; /* bitsize 32, bitpos 96 */
  DWORD itemData1; /* bitsize 32, bitpos 128 */
  UINT itemID2; /* bitsize 32, bitpos 160 */
  DWORD itemData2; /* bitsize 32, bitpos 192 */
};
typedef struct tagCOMPAREITEMSTRUCT /* id 119 */ COMPAREITEMSTRUCT;
typedef struct %anon120 { /* size 12 */
  COLORREF crText; /* bitsize 32, bitpos 0 */
  COLORREF crBackground; /* bitsize 32, bitpos 32 */
  DWORD dwEffects; /* bitsize 32, bitpos 64 */
} COMPCOLOR;
struct _tagCOMPOSITIONFORM { /* size 28 id 121 */
  DWORD dwStyle; /* bitsize 32, bitpos 0 */
  POINT ptCurrentPos; /* bitsize 64, bitpos 32 */
  RECT rcArea; /* bitsize 128, bitpos 96 */
};
typedef struct _tagCOMPOSITIONFORM /* id 121 */ COMPOSITIONFORM;
typedef struct _tagCOMPOSITIONFORM /* id 121 */ *LPCOMPOSITIONFORM;
struct _COMSTAT { /* size 12 id 122 */
  DWORD fCtsHold; /* bitsize 1, bitpos 0 */
  DWORD fDsrHold; /* bitsize 1, bitpos 1 */
  DWORD fRlsdHold; /* bitsize 1, bitpos 2 */
  DWORD fXoffHold; /* bitsize 1, bitpos 3 */
  DWORD fXoffSent; /* bitsize 1, bitpos 4 */
  DWORD fEof; /* bitsize 1, bitpos 5 */
  DWORD fTxim; /* bitsize 1, bitpos 6 */
  DWORD fReserved; /* bitsize 25, bitpos 7 */
  DWORD cbInQue; /* bitsize 32, bitpos 32 */
  DWORD cbOutQue; /* bitsize 32, bitpos 64 */
};
typedef struct _COMSTAT /* id 122 */ COMSTAT;
typedef struct _COMSTAT /* id 122 */ *LPCOMSTAT;
struct _CONSOLE_CURSOR_INFO { /* size 8 id 123 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  WINBOOL bVisible; /* bitsize 32, bitpos 32 */
};
typedef struct _CONSOLE_CURSOR_INFO /* id 123 */ CONSOLE_CURSOR_INFO;
typedef struct _CONSOLE_CURSOR_INFO /* id 123 */ *PCONSOLE_CURSOR_INFO;
struct _COORD { /* size 4 id 53 */
  SHORT X; /* bitsize 16, bitpos 0 */
  SHORT Y; /* bitsize 16, bitpos 16 */
};
typedef struct _COORD /* id 53 */ COORD;
struct _SMALL_RECT { /* size 8 id 54 */
  SHORT Left; /* bitsize 16, bitpos 0 */
  SHORT Top; /* bitsize 16, bitpos 16 */
  SHORT Right; /* bitsize 16, bitpos 32 */
  SHORT Bottom; /* bitsize 16, bitpos 48 */
};
typedef struct _SMALL_RECT /* id 54 */ SMALL_RECT;
typedef struct _SMALL_RECT /* id 54 */ *PSMALL_RECT;
struct _CONSOLE_SCREEN_BUFFER_INFO { /* size 22 id 124 */
  COORD dwSize; /* bitsize 32, bitpos 0 */
  COORD dwCursorPosition; /* bitsize 32, bitpos 32 */
  WORD wAttributes; /* bitsize 16, bitpos 64 */
  SMALL_RECT srWindow; /* bitsize 64, bitpos 80 */
  COORD dwMaximumWindowSize; /* bitsize 32, bitpos 144 */
};
typedef struct _CONSOLE_SCREEN_BUFFER_INFO /* id 124 */ CONSOLE_SCREEN_BUFFER_INFO;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO /* id 124 */ *PCONSOLE_SCREEN_BUFFER_INFO;
typedef struct %anon125 { /* size 464 */
  double Fpr0; /* bitsize 64, bitpos 0 */
  double Fpr1; /* bitsize 64, bitpos 64 */
  double Fpr2; /* bitsize 64, bitpos 128 */
  double Fpr3; /* bitsize 64, bitpos 192 */
  double Fpr4; /* bitsize 64, bitpos 256 */
  double Fpr5; /* bitsize 64, bitpos 320 */
  double Fpr6; /* bitsize 64, bitpos 384 */
  double Fpr7; /* bitsize 64, bitpos 448 */
  double Fpr8; /* bitsize 64, bitpos 512 */
  double Fpr9; /* bitsize 64, bitpos 576 */
  double Fpr10; /* bitsize 64, bitpos 640 */
  double Fpr11; /* bitsize 64, bitpos 704 */
  double Fpr12; /* bitsize 64, bitpos 768 */
  double Fpr13; /* bitsize 64, bitpos 832 */
  double Fpr14; /* bitsize 64, bitpos 896 */
  double Fpr15; /* bitsize 64, bitpos 960 */
  double Fpr16; /* bitsize 64, bitpos 1024 */
  double Fpr17; /* bitsize 64, bitpos 1088 */
  double Fpr18; /* bitsize 64, bitpos 1152 */
  double Fpr19; /* bitsize 64, bitpos 1216 */
  double Fpr20; /* bitsize 64, bitpos 1280 */
  double Fpr21; /* bitsize 64, bitpos 1344 */
  double Fpr22; /* bitsize 64, bitpos 1408 */
  double Fpr23; /* bitsize 64, bitpos 1472 */
  double Fpr24; /* bitsize 64, bitpos 1536 */
  double Fpr25; /* bitsize 64, bitpos 1600 */
  double Fpr26; /* bitsize 64, bitpos 1664 */
  double Fpr27; /* bitsize 64, bitpos 1728 */
  double Fpr28; /* bitsize 64, bitpos 1792 */
  double Fpr29; /* bitsize 64, bitpos 1856 */
  double Fpr30; /* bitsize 64, bitpos 1920 */
  double Fpr31; /* bitsize 64, bitpos 1984 */
  double Fpscr; /* bitsize 64, bitpos 2048 */
  DWORD Gpr0; /* bitsize 32, bitpos 2112 */
  DWORD Gpr1; /* bitsize 32, bitpos 2144 */
  DWORD Gpr2; /* bitsize 32, bitpos 2176 */
  DWORD Gpr3; /* bitsize 32, bitpos 2208 */
  DWORD Gpr4; /* bitsize 32, bitpos 2240 */
  DWORD Gpr5; /* bitsize 32, bitpos 2272 */
  DWORD Gpr6; /* bitsize 32, bitpos 2304 */
  DWORD Gpr7; /* bitsize 32, bitpos 2336 */
  DWORD Gpr8; /* bitsize 32, bitpos 2368 */
  DWORD Gpr9; /* bitsize 32, bitpos 2400 */
  DWORD Gpr10; /* bitsize 32, bitpos 2432 */
  DWORD Gpr11; /* bitsize 32, bitpos 2464 */
  DWORD Gpr12; /* bitsize 32, bitpos 2496 */
  DWORD Gpr13; /* bitsize 32, bitpos 2528 */
  DWORD Gpr14; /* bitsize 32, bitpos 2560 */
  DWORD Gpr15; /* bitsize 32, bitpos 2592 */
  DWORD Gpr16; /* bitsize 32, bitpos 2624 */
  DWORD Gpr17; /* bitsize 32, bitpos 2656 */
  DWORD Gpr18; /* bitsize 32, bitpos 2688 */
  DWORD Gpr19; /* bitsize 32, bitpos 2720 */
  DWORD Gpr20; /* bitsize 32, bitpos 2752 */
  DWORD Gpr21; /* bitsize 32, bitpos 2784 */
  DWORD Gpr22; /* bitsize 32, bitpos 2816 */
  DWORD Gpr23; /* bitsize 32, bitpos 2848 */
  DWORD Gpr24; /* bitsize 32, bitpos 2880 */
  DWORD Gpr25; /* bitsize 32, bitpos 2912 */
  DWORD Gpr26; /* bitsize 32, bitpos 2944 */
  DWORD Gpr27; /* bitsize 32, bitpos 2976 */
  DWORD Gpr28; /* bitsize 32, bitpos 3008 */
  DWORD Gpr29; /* bitsize 32, bitpos 3040 */
  DWORD Gpr30; /* bitsize 32, bitpos 3072 */
  DWORD Gpr31; /* bitsize 32, bitpos 3104 */
  DWORD Cr; /* bitsize 32, bitpos 3136 */
  DWORD Xer; /* bitsize 32, bitpos 3168 */
  DWORD Msr; /* bitsize 32, bitpos 3200 */
  DWORD Iar; /* bitsize 32, bitpos 3232 */
  DWORD Lr; /* bitsize 32, bitpos 3264 */
  DWORD Ctr; /* bitsize 32, bitpos 3296 */
  DWORD ContextFlags; /* bitsize 32, bitpos 3328 */
  DWORD Fill[3]; /* bitsize 96, bitpos 3360 */
  DWORD Dr0; /* bitsize 32, bitpos 3456 */
  DWORD Dr1; /* bitsize 32, bitpos 3488 */
  DWORD Dr2; /* bitsize 32, bitpos 3520 */
  DWORD Dr3; /* bitsize 32, bitpos 3552 */
  DWORD Dr4; /* bitsize 32, bitpos 3584 */
  DWORD Dr5; /* bitsize 32, bitpos 3616 */
  DWORD Dr6; /* bitsize 32, bitpos 3648 */
  DWORD Dr7; /* bitsize 32, bitpos 3680 */
} CONTEXT;
typedef struct %anon125 *PCONTEXT;
typedef struct %anon125 *LPCONTEXT;
struct _LIST_ENTRY { /* size 8 id 126 */
  struct _LIST_ENTRY /* id 126 */ *Flink; /* bitsize 32, bitpos 0 */
  struct _LIST_ENTRY /* id 126 */ *Blink; /* bitsize 32, bitpos 32 */
};
typedef struct _LIST_ENTRY /* id 126 */ LIST_ENTRY;
typedef struct _LIST_ENTRY /* id 126 */ *PLIST_ENTRY;
struct _CRITICAL_SECTION_DEBUG { /* size 48 id 127 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD CreatorBackTraceIndex; /* bitsize 16, bitpos 16 */
  struct _CRITICAL_SECTION /* id 128 */ *CriticalSection; /* bitsize 32, bitpos 32 */
  LIST_ENTRY ProcessLocksList; /* bitsize 64, bitpos 64 */
  DWORD EntryCount; /* bitsize 32, bitpos 128 */
  DWORD ContentionCount; /* bitsize 32, bitpos 160 */
  DWORD Depth; /* bitsize 32, bitpos 192 */
  PVOID OwnerBackTrace[5]; /* bitsize 160, bitpos 224 */
};
typedef struct _CRITICAL_SECTION_DEBUG /* id 127 */ CRITICAL_SECTION_DEBUG;
typedef struct _CRITICAL_SECTION_DEBUG /* id 127 */ *PCRITICAL_SECTION_DEBUG;
struct _CRITICAL_SECTION { /* size 24 id 128 */
  PCRITICAL_SECTION_DEBUG DebugInfo; /* bitsize 32, bitpos 0 */
  LONG LockCount; /* bitsize 32, bitpos 32 */
  LONG RecursionCount; /* bitsize 32, bitpos 64 */
  HANDLE OwningThread; /* bitsize 32, bitpos 96 */
  HANDLE LockSemaphore; /* bitsize 32, bitpos 128 */
  DWORD Reserved; /* bitsize 32, bitpos 160 */
};
typedef struct _CRITICAL_SECTION /* id 128 */ CRITICAL_SECTION;
typedef struct _CRITICAL_SECTION /* id 128 */ *PCRITICAL_SECTION;
typedef struct _CRITICAL_SECTION /* id 128 */ *LPCRITICAL_SECTION;
struct _SECURITY_QUALITY_OF_SERVICE { /* size 16 id 129 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 32 */
  WINBOOL ContextTrackingMode; /* bitsize 32, bitpos 64 */
  BOOLEAN EffectiveOnly; /* bitsize 8, bitpos 96 */
};
typedef struct _SECURITY_QUALITY_OF_SERVICE /* id 129 */ SECURITY_QUALITY_OF_SERVICE;
struct tagCONVCONTEXT { /* size 40 id 130 */
  UINT cb; /* bitsize 32, bitpos 0 */
  UINT wFlags; /* bitsize 32, bitpos 32 */
  UINT wCountryID; /* bitsize 32, bitpos 64 */
  int iCodePage; /* bitsize 32, bitpos 96 */
  DWORD dwLangID; /* bitsize 32, bitpos 128 */
  DWORD dwSecurity; /* bitsize 32, bitpos 160 */
  SECURITY_QUALITY_OF_SERVICE qos; /* bitsize 128, bitpos 192 */
};
typedef struct tagCONVCONTEXT /* id 130 */ CONVCONTEXT;
typedef CONVCONTEXT *PCONVCONTEXT;
struct tagCONVINFO { /* size 100 id 131 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  DWORD hUser; /* bitsize 32, bitpos 32 */
  HCONV hConvPartner; /* bitsize 32, bitpos 64 */
  HSZ hszSvcPartner; /* bitsize 32, bitpos 96 */
  HSZ hszServiceReq; /* bitsize 32, bitpos 128 */
  HSZ hszTopic; /* bitsize 32, bitpos 160 */
  HSZ hszItem; /* bitsize 32, bitpos 192 */
  UINT wFmt; /* bitsize 32, bitpos 224 */
  UINT wType; /* bitsize 32, bitpos 256 */
  UINT wStatus; /* bitsize 32, bitpos 288 */
  UINT wConvst; /* bitsize 32, bitpos 320 */
  UINT wLastError; /* bitsize 32, bitpos 352 */
  HCONVLIST hConvList; /* bitsize 32, bitpos 384 */
  CONVCONTEXT ConvCtxt; /* bitsize 320, bitpos 416 */
  HWND hwnd; /* bitsize 32, bitpos 736 */
  HWND hwndPartner; /* bitsize 32, bitpos 768 */
};
typedef struct tagCONVINFO /* id 131 */ CONVINFO;
struct tagCOPYDATASTRUCT { /* size 12 id 132 */
  DWORD dwData; /* bitsize 32, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 32 */
  PVOID lpData; /* bitsize 32, bitpos 64 */
};
typedef struct tagCOPYDATASTRUCT /* id 132 */ COPYDATASTRUCT;
struct _cpinfo { /* size 20 id 133 */
  UINT MaxCharSize; /* bitsize 32, bitpos 0 */
  BYTE DefaultChar[2]; /* bitsize 16, bitpos 32 */
  BYTE LeadByte[12]; /* bitsize 96, bitpos 48 */
};
typedef struct _cpinfo /* id 133 */ CPINFO;
typedef struct _cpinfo /* id 133 */ *LPCPINFO;
struct tagCPLINFO { /* size 16 id 134 */
  int idIcon; /* bitsize 32, bitpos 0 */
  int idName; /* bitsize 32, bitpos 32 */
  int idInfo; /* bitsize 32, bitpos 64 */
  LONG lData; /* bitsize 32, bitpos 96 */
};
typedef struct tagCPLINFO /* id 134 */ CPLINFO;
struct _CREATE_PROCESS_DEBUG_INFO { /* size 40 id 135 */
  HANDLE hFile; /* bitsize 32, bitpos 0 */
  HANDLE hProcess; /* bitsize 32, bitpos 32 */
  HANDLE hThread; /* bitsize 32, bitpos 64 */
  LPVOID lpBaseOfImage; /* bitsize 32, bitpos 96 */
  DWORD dwDebugInfoFileOffset; /* bitsize 32, bitpos 128 */
  DWORD nDebugInfoSize; /* bitsize 32, bitpos 160 */
  LPVOID lpThreadLocalBase; /* bitsize 32, bitpos 192 */
  LPTHREAD_START_ROUTINE lpStartAddress; /* bitsize 32, bitpos 224 */
  LPVOID lpImageName; /* bitsize 32, bitpos 256 */
  WORD fUnicode; /* bitsize 16, bitpos 288 */
};
typedef struct _CREATE_PROCESS_DEBUG_INFO /* id 135 */ CREATE_PROCESS_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO { /* size 12 id 136 */
  HANDLE hThread; /* bitsize 32, bitpos 0 */
  LPVOID lpThreadLocalBase; /* bitsize 32, bitpos 32 */
  LPTHREAD_START_ROUTINE lpStartAddress; /* bitsize 32, bitpos 64 */
};
typedef struct _CREATE_THREAD_DEBUG_INFO /* id 136 */ CREATE_THREAD_DEBUG_INFO;
struct _currencyfmt { /* size 32 id 50 */
  UINT NumDigits; /* bitsize 32, bitpos 0 */
  UINT LeadingZero; /* bitsize 32, bitpos 32 */
  UINT Grouping; /* bitsize 32, bitpos 64 */
  LPTSTR lpDecimalSep; /* bitsize 32, bitpos 96 */
  LPTSTR lpThousandSep; /* bitsize 32, bitpos 128 */
  UINT NegativeOrder; /* bitsize 32, bitpos 160 */
  UINT PositiveOrder; /* bitsize 32, bitpos 192 */
  LPTSTR lpCurrencySymbol; /* bitsize 32, bitpos 224 */
};
typedef struct _currencyfmt /* id 50 */ CURRENCYFMT;
struct tagCURSORSHAPE { /* size 24 id 137 */
  int xHotSpot; /* bitsize 32, bitpos 0 */
  int yHotSpot; /* bitsize 32, bitpos 32 */
  int cx; /* bitsize 32, bitpos 64 */
  int cy; /* bitsize 32, bitpos 96 */
  int cbWidth; /* bitsize 32, bitpos 128 */
  BYTE Planes; /* bitsize 8, bitpos 160 */
  BYTE BitsPixel; /* bitsize 8, bitpos 168 */
};
typedef struct tagCURSORSHAPE /* id 137 */ CURSORSHAPE;
typedef struct tagCURSORSHAPE /* id 137 */ *LPCURSORSHAPE;
struct tagCWPRETSTRUCT { /* size 20 id 138 */
  LRESULT lResult; /* bitsize 32, bitpos 0 */
  LPARAM lParam; /* bitsize 32, bitpos 32 */
  WPARAM wParam; /* bitsize 32, bitpos 64 */
  DWORD message; /* bitsize 32, bitpos 96 */
  HWND hwnd; /* bitsize 32, bitpos 128 */
};
typedef struct tagCWPRETSTRUCT /* id 138 */ CWPRETSTRUCT;
struct tagCWPSTRUCT { /* size 16 id 139 */
  LPARAM lParam; /* bitsize 32, bitpos 0 */
  WPARAM wParam; /* bitsize 32, bitpos 32 */
  UINT message; /* bitsize 32, bitpos 64 */
  HWND hwnd; /* bitsize 32, bitpos 96 */
};
typedef struct tagCWPSTRUCT /* id 139 */ CWPSTRUCT;
struct _DATATYPES_INFO_1 { /* size 4 id 140 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
};
typedef struct _DATATYPES_INFO_1 /* id 140 */ DATATYPES_INFO_1;
typedef struct %anon141 { /* size 2 */
  short unsigned int bAppReturnCode; /* bitsize 8, bitpos 0 */
  short unsigned int reserved; /* bitsize 6, bitpos 8 */
  short unsigned int fBusy; /* bitsize 1, bitpos 14 */
  short unsigned int fAck; /* bitsize 1, bitpos 15 */
} DDEACK;
typedef struct %anon142 { /* size 4 */
  short unsigned int reserved; /* bitsize 14, bitpos 0 */
  short unsigned int fDeferUpd; /* bitsize 1, bitpos 14 */
  short unsigned int fAckReq; /* bitsize 1, bitpos 15 */
  short int cfFormat; /* bitsize 16, bitpos 16 */
} DDEADVISE;
typedef struct %anon143 { /* size 6 */
  short unsigned int unused; /* bitsize 12, bitpos 0 */
  short unsigned int fResponse; /* bitsize 1, bitpos 12 */
  short unsigned int fRelease; /* bitsize 1, bitpos 13 */
  short unsigned int reserved; /* bitsize 1, bitpos 14 */
  short unsigned int fAckReq; /* bitsize 1, bitpos 15 */
  short int cfFormat; /* bitsize 16, bitpos 16 */
  BYTE Value[1]; /* bitsize 8, bitpos 32 */
} DDEDATA;
typedef struct %anon144 { /* size 4 */
  short unsigned int unused; /* bitsize 13, bitpos 0 */
  short unsigned int fRelease; /* bitsize 1, bitpos 13 */
  short unsigned int fDeferUpd; /* bitsize 1, bitpos 14 */
  short unsigned int fAckReq; /* bitsize 1, bitpos 15 */
  short int cfFormat; /* bitsize 16, bitpos 16 */
} DDELN;
struct tagDDEML_MSG_HOOK_DATA { /* size 44 id 145 */
  UINT uiLo; /* bitsize 32, bitpos 0 */
  UINT uiHi; /* bitsize 32, bitpos 32 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  DWORD Data[8]; /* bitsize 256, bitpos 96 */
};
typedef struct tagDDEML_MSG_HOOK_DATA /* id 145 */ DDEML_MSG_HOOK_DATA;
typedef struct %anon146 { /* size 6 */
  short unsigned int unused; /* bitsize 13, bitpos 0 */
  short unsigned int fRelease; /* bitsize 1, bitpos 13 */
  short unsigned int fReserved; /* bitsize 2, bitpos 14 */
  short int cfFormat; /* bitsize 16, bitpos 16 */
  BYTE Value[1]; /* bitsize 8, bitpos 32 */
} DDEPOKE;
typedef struct %anon147 { /* size 6 */
  short unsigned int unused; /* bitsize 12, bitpos 0 */
  short unsigned int fAck; /* bitsize 1, bitpos 12 */
  short unsigned int fRelease; /* bitsize 1, bitpos 13 */
  short unsigned int fReserved; /* bitsize 1, bitpos 14 */
  short unsigned int fAckReq; /* bitsize 1, bitpos 15 */
  short int cfFormat; /* bitsize 16, bitpos 16 */
  BYTE rgb[1]; /* bitsize 8, bitpos 32 */
} DDEUP;
struct _EXCEPTION_RECORD { /* size 80 id 148 */
  DWORD ExceptionCode; /* bitsize 32, bitpos 0 */
  DWORD ExceptionFlags; /* bitsize 32, bitpos 32 */
  struct _EXCEPTION_RECORD /* id 148 */ *ExceptionRecord; /* bitsize 32, bitpos 64 */
  PVOID ExceptionAddress; /* bitsize 32, bitpos 96 */
  DWORD NumberParameters; /* bitsize 32, bitpos 128 */
  DWORD ExceptionInformation[15]; /* bitsize 480, bitpos 160 */
};
typedef struct _EXCEPTION_RECORD /* id 148 */ EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 148 */ *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD /* id 148 */ *LPEXCEPTION_RECORD;
struct _EXCEPTION_DEBUG_INFO { /* size 84 id 149 */
  EXCEPTION_RECORD ExceptionRecord; /* bitsize 640, bitpos 0 */
  DWORD dwFirstChance; /* bitsize 32, bitpos 640 */
};
typedef struct _EXCEPTION_DEBUG_INFO /* id 149 */ EXCEPTION_DEBUG_INFO;
struct _EXIT_PROCESS_DEBUG_INFO { /* size 4 id 150 */
  DWORD dwExitCode; /* bitsize 32, bitpos 0 */
};
typedef struct _EXIT_PROCESS_DEBUG_INFO /* id 150 */ EXIT_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO { /* size 4 id 151 */
  DWORD dwExitCode; /* bitsize 32, bitpos 0 */
};
typedef struct _EXIT_THREAD_DEBUG_INFO /* id 151 */ EXIT_THREAD_DEBUG_INFO;
struct _LOAD_DLL_DEBUG_INFO { /* size 24 id 152 */
  HANDLE hFile; /* bitsize 32, bitpos 0 */
  LPVOID lpBaseOfDll; /* bitsize 32, bitpos 32 */
  DWORD dwDebugInfoFileOffset; /* bitsize 32, bitpos 64 */
  DWORD nDebugInfoSize; /* bitsize 32, bitpos 96 */
  LPVOID lpImageName; /* bitsize 32, bitpos 128 */
  WORD fUnicode; /* bitsize 16, bitpos 160 */
};
typedef struct _LOAD_DLL_DEBUG_INFO /* id 152 */ LOAD_DLL_DEBUG_INFO;
struct _UNLOAD_DLL_DEBUG_INFO { /* size 4 id 153 */
  LPVOID lpBaseOfDll; /* bitsize 32, bitpos 0 */
};
typedef struct _UNLOAD_DLL_DEBUG_INFO /* id 153 */ UNLOAD_DLL_DEBUG_INFO;
struct _OUTPUT_DEBUG_STRING_INFO { /* size 8 id 154 */
  LPSTR lpDebugStringData; /* bitsize 32, bitpos 0 */
  WORD fUnicode; /* bitsize 16, bitpos 32 */
  WORD nDebugStringLength; /* bitsize 16, bitpos 48 */
};
typedef struct _OUTPUT_DEBUG_STRING_INFO /* id 154 */ OUTPUT_DEBUG_STRING_INFO;
struct _RIP_INFO { /* size 8 id 155 */
  DWORD dwError; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
};
typedef struct _RIP_INFO /* id 155 */ RIP_INFO;
struct _DEBUG_EVENT { /* size 96 id 156 */
  DWORD dwDebugEventCode; /* bitsize 32, bitpos 0 */
  DWORD dwProcessId; /* bitsize 32, bitpos 32 */
  DWORD dwThreadId; /* bitsize 32, bitpos 64 */
  union %anon157 { /* size 84 */
    EXCEPTION_DEBUG_INFO Exception; /* bitsize 672, bitpos 0 */
    CREATE_THREAD_DEBUG_INFO CreateThread; /* bitsize 96, bitpos 0 */
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo; /* bitsize 320, bitpos 0 */
    EXIT_THREAD_DEBUG_INFO ExitThread; /* bitsize 32, bitpos 0 */
    EXIT_PROCESS_DEBUG_INFO ExitProcess; /* bitsize 32, bitpos 0 */
    LOAD_DLL_DEBUG_INFO LoadDll; /* bitsize 192, bitpos 0 */
    UNLOAD_DLL_DEBUG_INFO UnloadDll; /* bitsize 32, bitpos 0 */
    OUTPUT_DEBUG_STRING_INFO DebugString; /* bitsize 64, bitpos 0 */
    RIP_INFO RipInfo; /* bitsize 64, bitpos 0 */
  } u; /* bitsize 672, bitpos 96 */
};
typedef struct _DEBUG_EVENT /* id 156 */ DEBUG_EVENT;
typedef struct _DEBUG_EVENT /* id 156 */ *LPDEBUG_EVENT;
struct tagDEBUGHOOKINFO { /* size 20 id 158 */
  DWORD idThread; /* bitsize 32, bitpos 0 */
  DWORD idThreadInstaller; /* bitsize 32, bitpos 32 */
  LPARAM lParam; /* bitsize 32, bitpos 64 */
  WPARAM wParam; /* bitsize 32, bitpos 96 */
  int code; /* bitsize 32, bitpos 128 */
};
typedef struct tagDEBUGHOOKINFO /* id 158 */ DEBUGHOOKINFO;
struct tagDELETEITEMSTRUCT { /* size 20 id 159 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  HWND hwndItem; /* bitsize 32, bitpos 96 */
  UINT itemData; /* bitsize 32, bitpos 128 */
};
typedef struct tagDELETEITEMSTRUCT /* id 159 */ DELETEITEMSTRUCT;
struct _DEV_BROADCAST_HDR { /* size 12 id 160 */
  ULONG dbch_size; /* bitsize 32, bitpos 0 */
  ULONG dbch_devicetype; /* bitsize 32, bitpos 32 */
  ULONG dbch_reserved; /* bitsize 32, bitpos 64 */
};
typedef struct _DEV_BROADCAST_HDR /* id 160 */ DEV_BROADCAST_HDR;
typedef DEV_BROADCAST_HDR *PDEV_BROADCAST_HDR;
struct _DEV_BROADCAST_OEM { /* size 20 id 161 */
  ULONG dbco_size; /* bitsize 32, bitpos 0 */
  ULONG dbco_devicetype; /* bitsize 32, bitpos 32 */
  ULONG dbco_reserved; /* bitsize 32, bitpos 64 */
  ULONG dbco_identifier; /* bitsize 32, bitpos 96 */
  ULONG dbco_suppfunc; /* bitsize 32, bitpos 128 */
};
typedef struct _DEV_BROADCAST_OEM /* id 161 */ DEV_BROADCAST_OEM;
typedef DEV_BROADCAST_OEM *PDEV_BROADCAST_OEM;
struct _DEV_BROADCAST_PORT { /* size 16 id 162 */
  ULONG dbcp_size; /* bitsize 32, bitpos 0 */
  ULONG dbcp_devicetype; /* bitsize 32, bitpos 32 */
  ULONG dbcp_reserved; /* bitsize 32, bitpos 64 */
  char dbcp_name[1]; /* bitsize 8, bitpos 96 */
};
typedef struct _DEV_BROADCAST_PORT /* id 162 */ DEV_BROADCAST_PORT;
typedef DEV_BROADCAST_PORT *PDEV_BROADCAST_PORT;
struct _DEV_BROADCAST_USERDEFINED { /* size 16 id 163 */
  struct _DEV_BROADCAST_HDR /* id 160 */ dbud_dbh; /* bitsize 96, bitpos 0 */
  char dbud_szName[1]; /* bitsize 8, bitpos 96 */
  BYTE dbud_rgbUserDefined[1]; /* bitsize 8, bitpos 104 */
};
struct _DEV_BROADCAST_VOLUME { /* size 20 id 164 */
  ULONG dbcv_size; /* bitsize 32, bitpos 0 */
  ULONG dbcv_devicetype; /* bitsize 32, bitpos 32 */
  ULONG dbcv_reserved; /* bitsize 32, bitpos 64 */
  ULONG dbcv_unitmask; /* bitsize 32, bitpos 96 */
  USHORT dbcv_flags; /* bitsize 16, bitpos 128 */
};
typedef struct _DEV_BROADCAST_VOLUME /* id 164 */ DEV_BROADCAST_VOLUME;
typedef DEV_BROADCAST_VOLUME *PDEV_BROADCAST_VOLUME;
struct _devicemode { /* size 148 id 12 */
  BCHAR dmDeviceName[32]; /* bitsize 256, bitpos 0 */
  WORD dmSpecVersion; /* bitsize 16, bitpos 256 */
  WORD dmDriverVersion; /* bitsize 16, bitpos 272 */
  WORD dmSize; /* bitsize 16, bitpos 288 */
  WORD dmDriverExtra; /* bitsize 16, bitpos 304 */
  DWORD dmFields; /* bitsize 32, bitpos 320 */
  short int dmOrientation; /* bitsize 16, bitpos 352 */
  short int dmPaperSize; /* bitsize 16, bitpos 368 */
  short int dmPaperLength; /* bitsize 16, bitpos 384 */
  short int dmPaperWidth; /* bitsize 16, bitpos 400 */
  short int dmScale; /* bitsize 16, bitpos 416 */
  short int dmCopies; /* bitsize 16, bitpos 432 */
  short int dmDefaultSource; /* bitsize 16, bitpos 448 */
  short int dmPrintQuality; /* bitsize 16, bitpos 464 */
  short int dmColor; /* bitsize 16, bitpos 480 */
  short int dmDuplex; /* bitsize 16, bitpos 496 */
  short int dmYResolution; /* bitsize 16, bitpos 512 */
  short int dmTTOption; /* bitsize 16, bitpos 528 */
  short int dmCollate; /* bitsize 16, bitpos 544 */
  BCHAR dmFormName[32]; /* bitsize 256, bitpos 560 */
  WORD dmLogPixels; /* bitsize 16, bitpos 816 */
  DWORD dmBitsPerPel; /* bitsize 32, bitpos 832 */
  DWORD dmPelsWidth; /* bitsize 32, bitpos 864 */
  DWORD dmPelsHeight; /* bitsize 32, bitpos 896 */
  DWORD dmDisplayFlags; /* bitsize 32, bitpos 928 */
  DWORD dmDisplayFrequency; /* bitsize 32, bitpos 960 */
  DWORD dmICMMethod; /* bitsize 32, bitpos 992 */
  DWORD dmICMIntent; /* bitsize 32, bitpos 1024 */
  DWORD dmMediaType; /* bitsize 32, bitpos 1056 */
  DWORD dmDitherType; /* bitsize 32, bitpos 1088 */
  DWORD dmICCManufacturer; /* bitsize 32, bitpos 1120 */
  DWORD dmICCModel; /* bitsize 32, bitpos 1152 */
};
typedef struct _devicemode /* id 12 */ DEVMODE;
typedef struct _devicemode /* id 12 */ *PDEVMODE;
typedef struct _devicemode /* id 12 */ *NPDEVMODE;
typedef struct _devicemode /* id 12 */ *LPDEVMODE;
typedef DEVMODE DEVMODEA;
typedef PDEVMODE PDEVMODEA;
typedef NPDEVMODE NPDEVMODEA;
typedef LPDEVMODE LPDEVMODEA;
struct tagDEVNAMES { /* size 8 id 165 */
  WORD wDriverOffset; /* bitsize 16, bitpos 0 */
  WORD wDeviceOffset; /* bitsize 16, bitpos 16 */
  WORD wOutputOffset; /* bitsize 16, bitpos 32 */
  WORD wDefault; /* bitsize 16, bitpos 48 */
};
typedef struct tagDEVNAMES /* id 165 */ DEVNAMES;
typedef struct tagDEVNAMES /* id 165 */ *LPDEVNAMES;
struct tagDIBSECTION { /* size 84 id 166 */
  BITMAP dsBm; /* bitsize 192, bitpos 0 */
  BITMAPINFOHEADER dsBmih; /* bitsize 320, bitpos 192 */
  DWORD dsBitfields[3]; /* bitsize 96, bitpos 512 */
  HANDLE dshSection; /* bitsize 32, bitpos 608 */
  DWORD dsOffset; /* bitsize 32, bitpos 640 */
};
typedef struct tagDIBSECTION /* id 166 */ DIBSECTION;
struct _LARGE_INTEGER { /* size 8 id 8 */
  DWORD LowPart; /* bitsize 32, bitpos 0 */
  LONG HighPart; /* bitsize 32, bitpos 32 */
};
typedef struct _LARGE_INTEGER /* id 8 */ LARGE_INTEGER;
typedef struct _LARGE_INTEGER /* id 8 */ *PLARGE_INTEGER;
struct _DISK_GEOMETRY { /* size 24 id 167 */
  LARGE_INTEGER Cylinders; /* bitsize 64, bitpos 0 */
  MEDIA_TYPE MediaType; /* bitsize 32, bitpos 64 */
  DWORD TracksPerCylinder; /* bitsize 32, bitpos 96 */
  DWORD SectorsPerTrack; /* bitsize 32, bitpos 128 */
  DWORD BytesPerSector; /* bitsize 32, bitpos 160 */
};
typedef struct _DISK_GEOMETRY /* id 167 */ DISK_GEOMETRY;
struct _DISK_PERFORMANCE { /* size 44 id 168 */
  LARGE_INTEGER BytesRead; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER BytesWritten; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ReadTime; /* bitsize 64, bitpos 128 */
  LARGE_INTEGER WriteTime; /* bitsize 64, bitpos 192 */
  DWORD ReadCount; /* bitsize 32, bitpos 256 */
  DWORD WriteCount; /* bitsize 32, bitpos 288 */
  DWORD QueueDepth; /* bitsize 32, bitpos 320 */
};
typedef struct _DISK_PERFORMANCE /* id 168 */ DISK_PERFORMANCE;
struct tagDLGITEMTEMPLATE { /* size 18 id 169 */
  DWORD style; /* bitsize 32, bitpos 0 */
  DWORD dwExtendedStyle; /* bitsize 32, bitpos 32 */
  short int x; /* bitsize 16, bitpos 64 */
  short int y; /* bitsize 16, bitpos 80 */
  short int cx; /* bitsize 16, bitpos 96 */
  short int cy; /* bitsize 16, bitpos 112 */
  WORD id; /* bitsize 16, bitpos 128 */
};
typedef struct tagDLGITEMTEMPLATE /* id 169 */ DLGITEMTEMPLATE;
typedef struct tagDLGITEMTEMPLATE /* id 169 */ *LPDLGITEMTEMPLATE;
typedef struct tagDLGITEMTEMPLATE /* id 169 */ *PDLGITEMTEMPLATE;
struct tagDLGTEMPLATE { /* size 18 id 16 */
  DWORD style; /* bitsize 32, bitpos 0 */
  DWORD dwExtendedStyle; /* bitsize 32, bitpos 32 */
  WORD cdit; /* bitsize 16, bitpos 64 */
  short int x; /* bitsize 16, bitpos 80 */
  short int y; /* bitsize 16, bitpos 96 */
  short int cx; /* bitsize 16, bitpos 112 */
  short int cy; /* bitsize 16, bitpos 128 */
};
typedef struct tagDLGTEMPLATE /* id 16 */ DLGTEMPLATE;
typedef struct tagDLGTEMPLATE /* id 16 */ *LPDLGTEMPLATE;
typedef struct tagDLGTEMPLATE /* id 16 */ *LPCDLGTEMPLATE;
struct _DOC_INFO_1 { /* size 12 id 170 */
  LPTSTR pDocName; /* bitsize 32, bitpos 0 */
  LPTSTR pOutputFile; /* bitsize 32, bitpos 32 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 64 */
};
typedef struct _DOC_INFO_1 /* id 170 */ DOC_INFO_1;
struct _DOC_INFO_2 { /* size 20 id 171 */
  LPTSTR pDocName; /* bitsize 32, bitpos 0 */
  LPTSTR pOutputFile; /* bitsize 32, bitpos 32 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 64 */
  DWORD dwMode; /* bitsize 32, bitpos 96 */
  DWORD JobId; /* bitsize 32, bitpos 128 */
};
typedef struct _DOC_INFO_2 /* id 171 */ DOC_INFO_2;
typedef struct %anon31 DOCINFO;
typedef struct %anon31 *LPDOCINFO;
typedef struct %anon172 { /* size 16 */
  UINT uNotification; /* bitsize 32, bitpos 0 */
  HWND hWnd; /* bitsize 32, bitpos 32 */
  POINT ptCursor; /* bitsize 64, bitpos 64 */
} DRAGLISTINFO;
typedef struct %anon172 *LPDRAGLISTINFO;
struct tagDRAWITEMSTRUCT { /* size 48 id 173 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  UINT itemAction; /* bitsize 32, bitpos 96 */
  UINT itemState; /* bitsize 32, bitpos 128 */
  HWND hwndItem; /* bitsize 32, bitpos 160 */
  HDC hDC; /* bitsize 32, bitpos 192 */
  RECT rcItem; /* bitsize 128, bitpos 224 */
  DWORD itemData; /* bitsize 32, bitpos 352 */
};
typedef struct tagDRAWITEMSTRUCT /* id 173 */ DRAWITEMSTRUCT;
typedef struct tagDRAWITEMSTRUCT /* id 173 */ *LPDRAWITEMSTRUCT;
typedef struct tagDRAWITEMSTRUCT /* id 173 */ *PDRAWITEMSTRUCT;
typedef struct %anon20 DRAWTEXTPARAMS;
typedef struct %anon20 *LPDRAWTEXTPARAMS;
struct _PARTITION_INFORMATION { /* size 28 id 174 */
  BYTE PartitionType; /* bitsize 8, bitpos 0 */
  BOOLEAN BootIndicator; /* bitsize 8, bitpos 8 */
  BOOLEAN RecognizedPartition; /* bitsize 8, bitpos 16 */
  BOOLEAN RewritePartition; /* bitsize 8, bitpos 24 */
  LARGE_INTEGER StartingOffset; /* bitsize 64, bitpos 32 */
  LARGE_INTEGER PartitionLength; /* bitsize 64, bitpos 96 */
  LARGE_INTEGER HiddenSectors; /* bitsize 64, bitpos 160 */
};
typedef struct _PARTITION_INFORMATION /* id 174 */ PARTITION_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION { /* size 36 id 175 */
  DWORD PartitionCount; /* bitsize 32, bitpos 0 */
  DWORD Signature; /* bitsize 32, bitpos 32 */
  PARTITION_INFORMATION PartitionEntry[1]; /* bitsize 224, bitpos 64 */
};
typedef struct _DRIVE_LAYOUT_INFORMATION /* id 175 */ DRIVE_LAYOUT_INFORMATION;
struct _DRIVER_INFO_1 { /* size 4 id 176 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
};
typedef struct _DRIVER_INFO_1 /* id 176 */ DRIVER_INFO_1;
struct _DRIVER_INFO_2 { /* size 24 id 177 */
  DWORD cVersion; /* bitsize 32, bitpos 0 */
  LPTSTR pName; /* bitsize 32, bitpos 32 */
  LPTSTR pEnvironment; /* bitsize 32, bitpos 64 */
  LPTSTR pDriverPath; /* bitsize 32, bitpos 96 */
  LPTSTR pDataFile; /* bitsize 32, bitpos 128 */
  LPTSTR pConfigFile; /* bitsize 32, bitpos 160 */
};
typedef struct _DRIVER_INFO_2 /* id 177 */ DRIVER_INFO_2;
struct _DRIVER_INFO_3 { /* size 40 id 178 */
  DWORD cVersion; /* bitsize 32, bitpos 0 */
  LPTSTR pName; /* bitsize 32, bitpos 32 */
  LPTSTR pEnvironment; /* bitsize 32, bitpos 64 */
  LPTSTR pDriverPath; /* bitsize 32, bitpos 96 */
  LPTSTR pDataFile; /* bitsize 32, bitpos 128 */
  LPTSTR pConfigFile; /* bitsize 32, bitpos 160 */
  LPTSTR pHelpFile; /* bitsize 32, bitpos 192 */
  LPTSTR pDependentFiles; /* bitsize 32, bitpos 224 */
  LPTSTR pMonitorName; /* bitsize 32, bitpos 256 */
  LPTSTR pDefaultDataType; /* bitsize 32, bitpos 288 */
};
typedef struct _DRIVER_INFO_3 /* id 178 */ DRIVER_INFO_3;
struct _editstream { /* size 12 id 179 */
  DWORD dwCookie; /* bitsize 32, bitpos 0 */
  DWORD dwError; /* bitsize 32, bitpos 32 */
  EDITSTREAMCALLBACK pfnCallback; /* bitsize 32, bitpos 64 */
};
typedef struct _editstream /* id 179 */ EDITSTREAM;
struct tagEMR { /* size 8 id 180 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
};
typedef struct tagEMR /* id 180 */ EMR;
typedef struct tagEMR /* id 180 */ *PEMR;
struct tagEMRANGLEARC { /* size 28 id 181 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlCenter; /* bitsize 64, bitpos 64 */
  DWORD nRadius; /* bitsize 32, bitpos 128 */
  FLOAT eStartAngle; /* bitsize 32, bitpos 160 */
  FLOAT eSweepAngle; /* bitsize 32, bitpos 192 */
};
typedef struct tagEMRANGLEARC /* id 181 */ EMRANGLEARC;
typedef struct tagEMRANGLEARC /* id 181 */ *PEMRANGLEARC;
struct tagEMRARC { /* size 40 id 182 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  POINTL ptlStart; /* bitsize 64, bitpos 192 */
  POINTL ptlEnd; /* bitsize 64, bitpos 256 */
};
typedef struct tagEMRARC /* id 182 */ EMRARC;
typedef struct tagEMRARC /* id 182 */ *PEMRARC;
typedef struct tagEMRARC /* id 182 */ EMRARCTO;
typedef struct tagEMRARC /* id 182 */ *PEMRARCTO;
typedef struct tagEMRARC /* id 182 */ EMRCHORD;
typedef struct tagEMRARC /* id 182 */ *PEMRCHORD;
typedef struct tagEMRARC /* id 182 */ EMRPIE;
typedef struct tagEMRARC /* id 182 */ *PEMRPIE;
struct _XFORM { /* size 24 id 183 */
  FLOAT eM11; /* bitsize 32, bitpos 0 */
  FLOAT eM12; /* bitsize 32, bitpos 32 */
  FLOAT eM21; /* bitsize 32, bitpos 64 */
  FLOAT eM22; /* bitsize 32, bitpos 96 */
  FLOAT eDx; /* bitsize 32, bitpos 128 */
  FLOAT eDy; /* bitsize 32, bitpos 160 */
};
typedef struct _XFORM /* id 183 */ XFORM;
typedef struct _XFORM /* id 183 */ *PXFORM;
typedef struct _XFORM /* id 183 */ *LPXFORM;
struct tagEMRBITBLT { /* size 96 id 184 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 704 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 736 */
};
typedef struct tagEMRBITBLT /* id 184 */ EMRBITBLT;
typedef struct tagEMRBITBLT /* id 184 */ *PEMRBITBLT;
struct tagLOGBRUSH { /* size 12 id 185 */
  UINT lbStyle; /* bitsize 32, bitpos 0 */
  COLORREF lbColor; /* bitsize 32, bitpos 32 */
  LONG lbHatch; /* bitsize 32, bitpos 64 */
};
typedef struct tagLOGBRUSH /* id 185 */ LOGBRUSH;
struct tagEMRCREATEBRUSHINDIRECT { /* size 24 id 186 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  LOGBRUSH lb; /* bitsize 96, bitpos 96 */
};
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 186 */ EMRCREATEBRUSHINDIRECT;
typedef struct tagEMRCREATEBRUSHINDIRECT /* id 186 */ *PEMRCREATEBRUSHINDIRECT;
typedef LONG LCSCSTYPE;
typedef LONG LCSGAMUTMATCH;
struct tagLOGCOLORSPACE { /* size 328 id 34 */
  DWORD lcsSignature; /* bitsize 32, bitpos 0 */
  DWORD lcsVersion; /* bitsize 32, bitpos 32 */
  DWORD lcsSize; /* bitsize 32, bitpos 64 */
  LCSCSTYPE lcsCSType; /* bitsize 32, bitpos 96 */
  LCSGAMUTMATCH lcsIntent; /* bitsize 32, bitpos 128 */
  CIEXYZTRIPLE lcsEndpoints; /* bitsize 288, bitpos 160 */
  DWORD lcsGammaRed; /* bitsize 32, bitpos 448 */
  DWORD lcsGammaGreen; /* bitsize 32, bitpos 480 */
  DWORD lcsGammaBlue; /* bitsize 32, bitpos 512 */
  TCHAR lcsFilename[260]; /* bitsize 2080, bitpos 544 */
};
typedef struct tagLOGCOLORSPACE /* id 34 */ LOGCOLORSPACE;
typedef struct tagLOGCOLORSPACE /* id 34 */ *LPLOGCOLORSPACE;
struct tagEMRCREATECOLORSPACE { /* size 340 id 187 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
  LOGCOLORSPACE lcs; /* bitsize 2624, bitpos 96 */
};
typedef struct tagEMRCREATECOLORSPACE /* id 187 */ EMRCREATECOLORSPACE;
typedef struct tagEMRCREATECOLORSPACE /* id 187 */ *PEMRCREATECOLORSPACE;
struct tagEMRCREATEDIBPATTERNBRUSHPT { /* size 32 id 188 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 188 */ EMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT /* id 188 */ *PEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH { /* size 32 id 189 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihBrush; /* bitsize 32, bitpos 64 */
  DWORD iUsage; /* bitsize 32, bitpos 96 */
  DWORD offBmi; /* bitsize 32, bitpos 128 */
  DWORD cbBmi; /* bitsize 32, bitpos 160 */
  DWORD offBits; /* bitsize 32, bitpos 192 */
  DWORD cbBits; /* bitsize 32, bitpos 224 */
};
typedef struct tagEMRCREATEMONOBRUSH /* id 189 */ EMRCREATEMONOBRUSH;
typedef struct tagEMRCREATEMONOBRUSH /* id 189 */ *PEMRCREATEMONOBRUSH;
struct tagPALETTEENTRY { /* size 4 id 190 */
  BYTE peRed; /* bitsize 8, bitpos 0 */
  BYTE peGreen; /* bitsize 8, bitpos 8 */
  BYTE peBlue; /* bitsize 8, bitpos 16 */
  BYTE peFlags; /* bitsize 8, bitpos 24 */
};
typedef struct tagPALETTEENTRY /* id 190 */ PALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 190 */ *LPPALETTEENTRY;
typedef struct tagPALETTEENTRY /* id 190 */ *PPALETTEENTRY;
struct tagLOGPALETTE { /* size 8 id 191 */
  WORD palVersion; /* bitsize 16, bitpos 0 */
  WORD palNumEntries; /* bitsize 16, bitpos 16 */
  PALETTEENTRY palPalEntry[1]; /* bitsize 32, bitpos 32 */
};
typedef struct tagLOGPALETTE /* id 191 */ LOGPALETTE;
typedef struct tagLOGPALETTE /* id 191 */ *LPLOGPALETTE;
typedef struct tagLOGPALETTE /* id 191 */ *PLOGPALETTE;
struct tagEMRCREATEPALETTE { /* size 20 id 192 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  LOGPALETTE lgpl; /* bitsize 64, bitpos 96 */
};
typedef struct tagEMRCREATEPALETTE /* id 192 */ EMRCREATEPALETTE;
typedef struct tagEMRCREATEPALETTE /* id 192 */ *PEMRCREATEPALETTE;
struct tagLOGPEN { /* size 16 id 193 */
  UINT lopnStyle; /* bitsize 32, bitpos 0 */
  POINT lopnWidth; /* bitsize 64, bitpos 32 */
  COLORREF lopnColor; /* bitsize 32, bitpos 96 */
};
typedef struct tagLOGPEN /* id 193 */ LOGPEN;
struct tagEMRCREATEPEN { /* size 28 id 194 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  LOGPEN lopn; /* bitsize 128, bitpos 96 */
};
typedef struct tagEMRCREATEPEN /* id 194 */ EMRCREATEPEN;
typedef struct tagEMRCREATEPEN /* id 194 */ *PEMRCREATEPEN;
struct tagEMRELLIPSE { /* size 24 id 195 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRELLIPSE /* id 195 */ EMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 195 */ *PEMRELLIPSE;
typedef struct tagEMRELLIPSE /* id 195 */ EMRRECTANGLE;
typedef struct tagEMRELLIPSE /* id 195 */ *PEMRRECTANGLE;
struct tagEMREOF { /* size 20 id 196 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD nPalEntries; /* bitsize 32, bitpos 64 */
  DWORD offPalEntries; /* bitsize 32, bitpos 96 */
  DWORD nSizeLast; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMREOF /* id 196 */ EMREOF;
typedef struct tagEMREOF /* id 196 */ *PEMREOF;
struct tagEMREXCLUDECLIPRECT { /* size 24 id 197 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclClip; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMREXCLUDECLIPRECT /* id 197 */ EMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 197 */ *PEMREXCLUDECLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 197 */ EMRINTERSECTCLIPRECT;
typedef struct tagEMREXCLUDECLIPRECT /* id 197 */ *PEMRINTERSECTCLIPRECT;
struct tagPANOSE { /* size 10 id 198 */
  BYTE bFamilyType; /* bitsize 8, bitpos 0 */
  BYTE bSerifStyle; /* bitsize 8, bitpos 8 */
  BYTE bWeight; /* bitsize 8, bitpos 16 */
  BYTE bProportion; /* bitsize 8, bitpos 24 */
  BYTE bContrast; /* bitsize 8, bitpos 32 */
  BYTE bStrokeVariation; /* bitsize 8, bitpos 40 */
  BYTE bArmStyle; /* bitsize 8, bitpos 48 */
  BYTE bLetterform; /* bitsize 8, bitpos 56 */
  BYTE bMidline; /* bitsize 8, bitpos 64 */
  BYTE bXHeight; /* bitsize 8, bitpos 72 */
};
typedef struct tagPANOSE /* id 198 */ PANOSE;
struct tagEXTLOGFONT { /* size 192 id 199 */
  LOGFONT elfLogFont; /* bitsize 480, bitpos 0 */
  BCHAR elfFullName[64]; /* bitsize 512, bitpos 480 */
  BCHAR elfStyle[32]; /* bitsize 256, bitpos 992 */
  DWORD elfVersion; /* bitsize 32, bitpos 1248 */
  DWORD elfStyleSize; /* bitsize 32, bitpos 1280 */
  DWORD elfMatch; /* bitsize 32, bitpos 1312 */
  DWORD elfReserved; /* bitsize 32, bitpos 1344 */
  BYTE elfVendorId[4]; /* bitsize 32, bitpos 1376 */
  DWORD elfCulture; /* bitsize 32, bitpos 1408 */
  PANOSE elfPanose; /* bitsize 80, bitpos 1440 */
};
typedef struct tagEXTLOGFONT /* id 199 */ EXTLOGFONT;
struct tagEMREXTCREATEFONTINDIRECTW { /* size 204 id 200 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihFont; /* bitsize 32, bitpos 64 */
  EXTLOGFONT elfw; /* bitsize 1536, bitpos 96 */
};
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 200 */ EMREXTCREATEFONTINDIRECTW;
typedef struct tagEMREXTCREATEFONTINDIRECTW /* id 200 */ *PEMREXTCREATEFONTINDIRECTW;
struct tagEXTLOGPEN { /* size 28 id 201 */
  UINT elpPenStyle; /* bitsize 32, bitpos 0 */
  UINT elpWidth; /* bitsize 32, bitpos 32 */
  UINT elpBrushStyle; /* bitsize 32, bitpos 64 */
  COLORREF elpColor; /* bitsize 32, bitpos 96 */
  LONG elpHatch; /* bitsize 32, bitpos 128 */
  DWORD elpNumEntries; /* bitsize 32, bitpos 160 */
  DWORD elpStyleEntry[1]; /* bitsize 32, bitpos 192 */
};
typedef struct tagEXTLOGPEN /* id 201 */ EXTLOGPEN;
struct tagEMREXTCREATEPEN { /* size 56 id 202 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPen; /* bitsize 32, bitpos 64 */
  DWORD offBmi; /* bitsize 32, bitpos 96 */
  DWORD cbBmi; /* bitsize 32, bitpos 128 */
  DWORD offBits; /* bitsize 32, bitpos 160 */
  DWORD cbBits; /* bitsize 32, bitpos 192 */
  EXTLOGPEN elp; /* bitsize 224, bitpos 224 */
};
typedef struct tagEMREXTCREATEPEN /* id 202 */ EMREXTCREATEPEN;
typedef struct tagEMREXTCREATEPEN /* id 202 */ *PEMREXTCREATEPEN;
struct tagEMREXTFLOODFILL { /* size 24 id 203 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlStart; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
  DWORD iMode; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMREXTFLOODFILL /* id 203 */ EMREXTFLOODFILL;
typedef struct tagEMREXTFLOODFILL /* id 203 */ *PEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN { /* size 20 id 204 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbRgnData; /* bitsize 32, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 96 */
  BYTE RgnData[1]; /* bitsize 8, bitpos 128 */
};
typedef struct tagEMREXTSELECTCLIPRGN /* id 204 */ EMREXTSELECTCLIPRGN;
typedef struct tagEMREXTSELECTCLIPRGN /* id 204 */ *PEMREXTSELECTCLIPRGN;
struct tagEMRTEXT { /* size 40 id 205 */
  POINTL ptlReference; /* bitsize 64, bitpos 0 */
  DWORD nChars; /* bitsize 32, bitpos 64 */
  DWORD offString; /* bitsize 32, bitpos 96 */
  DWORD fOptions; /* bitsize 32, bitpos 128 */
  RECTL rcl; /* bitsize 128, bitpos 160 */
  DWORD offDx; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRTEXT /* id 205 */ EMRTEXT;
typedef struct tagEMRTEXT /* id 205 */ *PEMRTEXT;
struct tagEMREXTTEXTOUTA { /* size 76 id 206 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  EMRTEXT emrtext; /* bitsize 320, bitpos 288 */
};
typedef struct tagEMREXTTEXTOUTA /* id 206 */ EMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 206 */ *PEMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA /* id 206 */ EMREXTTEXTOUTW;
typedef struct tagEMREXTTEXTOUTA /* id 206 */ *PEMREXTTEXTOUTW;
struct tagEMRFILLPATH { /* size 24 id 207 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
};
typedef struct tagEMRFILLPATH /* id 207 */ EMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 207 */ *PEMRFILLPATH;
typedef struct tagEMRFILLPATH /* id 207 */ EMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 207 */ *PEMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH /* id 207 */ EMRSTROKEPATH;
typedef struct tagEMRFILLPATH /* id 207 */ *PEMRSTROKEPATH;
struct tagEMRFILLRGN { /* size 36 id 208 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  BYTE RgnData[1]; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRFILLRGN /* id 208 */ EMRFILLRGN;
typedef struct tagEMRFILLRGN /* id 208 */ *PEMRFILLRGN;
struct tagEMRFORMAT { /* size 16 id 209 */
  DWORD dSignature; /* bitsize 32, bitpos 0 */
  DWORD nVersion; /* bitsize 32, bitpos 32 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  DWORD offData; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRFORMAT /* id 209 */ EMRFORMAT;
struct tagSIZE { /* size 8 id 28 */
  LONG cx; /* bitsize 32, bitpos 0 */
  LONG cy; /* bitsize 32, bitpos 32 */
};
typedef struct tagSIZE /* id 28 */ SIZE;
typedef struct tagSIZE /* id 28 */ *PSIZE;
typedef struct tagSIZE /* id 28 */ *LPSIZE;
typedef struct tagSIZE /* id 28 */ SIZEL;
typedef struct tagSIZE /* id 28 */ *PSIZEL;
typedef struct tagSIZE /* id 28 */ *LPSIZEL;
struct tagEMRFRAMERGN { /* size 44 id 210 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  DWORD ihBrush; /* bitsize 32, bitpos 224 */
  SIZEL szlStroke; /* bitsize 64, bitpos 256 */
  BYTE RgnData[1]; /* bitsize 8, bitpos 320 */
};
typedef struct tagEMRFRAMERGN /* id 210 */ EMRFRAMERGN;
typedef struct tagEMRFRAMERGN /* id 210 */ *PEMRFRAMERGN;
struct tagEMRGDICOMMENT { /* size 16 id 211 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 64 */
  BYTE Data[1]; /* bitsize 8, bitpos 96 */
};
typedef struct tagEMRGDICOMMENT /* id 211 */ EMRGDICOMMENT;
typedef struct tagEMRGDICOMMENT /* id 211 */ *PEMRGDICOMMENT;
struct tagEMRINVERTRGN { /* size 32 id 212 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cbRgnData; /* bitsize 32, bitpos 192 */
  BYTE RgnData[1]; /* bitsize 8, bitpos 224 */
};
typedef struct tagEMRINVERTRGN /* id 212 */ EMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 212 */ *PEMRINVERTRGN;
typedef struct tagEMRINVERTRGN /* id 212 */ EMRPAINTRGN;
typedef struct tagEMRINVERTRGN /* id 212 */ *PEMRPAINTRGN;
struct tagEMRLINETO { /* size 16 id 213 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptl; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRLINETO /* id 213 */ EMRLINETO;
typedef struct tagEMRLINETO /* id 213 */ *PEMRLINETO;
typedef struct tagEMRLINETO /* id 213 */ EMRMOVETOEX;
typedef struct tagEMRLINETO /* id 213 */ *PEMRMOVETOEX;
struct tagEMRMASKBLT { /* size 128 id 214 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG xMask; /* bitsize 32, bitpos 800 */
  LONG yMask; /* bitsize 32, bitpos 832 */
  DWORD iUsageMask; /* bitsize 32, bitpos 864 */
  DWORD offBmiMask; /* bitsize 32, bitpos 896 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 928 */
  DWORD offBitsMask; /* bitsize 32, bitpos 960 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 992 */
};
typedef struct tagEMRMASKBLT /* id 214 */ EMRMASKBLT;
typedef struct tagEMRMASKBLT /* id 214 */ *PEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM { /* size 36 id 215 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
  DWORD iMode; /* bitsize 32, bitpos 256 */
};
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 215 */ EMRMODIFYWORLDTRANSFORM;
typedef struct tagEMRMODIFYWORLDTRANSFORM /* id 215 */ *PEMRMODIFYWORLDTRANSFORM;
struct tagEMROFFSETCLIPRGN { /* size 16 id 216 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOffset; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMROFFSETCLIPRGN /* id 216 */ EMROFFSETCLIPRGN;
typedef struct tagEMROFFSETCLIPRGN /* id 216 */ *PEMROFFSETCLIPRGN;
struct tagEMRPLGBLT { /* size 140 id 217 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  POINTL aptlDest[3]; /* bitsize 192, bitpos 192 */
  LONG xSrc; /* bitsize 32, bitpos 384 */
  LONG ySrc; /* bitsize 32, bitpos 416 */
  LONG cxSrc; /* bitsize 32, bitpos 448 */
  LONG cySrc; /* bitsize 32, bitpos 480 */
  XFORM xformSrc; /* bitsize 192, bitpos 512 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 704 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 736 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 768 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 800 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 832 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 864 */
  LONG xMask; /* bitsize 32, bitpos 896 */
  LONG yMask; /* bitsize 32, bitpos 928 */
  DWORD iUsageMask; /* bitsize 32, bitpos 960 */
  DWORD offBmiMask; /* bitsize 32, bitpos 992 */
  DWORD cbBmiMask; /* bitsize 32, bitpos 1024 */
  DWORD offBitsMask; /* bitsize 32, bitpos 1056 */
  DWORD cbBitsMask; /* bitsize 32, bitpos 1088 */
};
typedef struct tagEMRPLGBLT /* id 217 */ EMRPLGBLT;
typedef struct tagEMRPLGBLT /* id 217 */ *PEMRPLGBLT;
struct tagEMRPOLYDRAW { /* size 40 id 218 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]; /* bitsize 64, bitpos 224 */
  BYTE abTypes[1]; /* bitsize 8, bitpos 288 */
};
typedef struct tagEMRPOLYDRAW /* id 218 */ EMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW /* id 218 */ *PEMRPOLYDRAW;
struct tagEMRPOLYDRAW16 { /* size 36 id 219 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTS apts[1]; /* bitsize 32, bitpos 224 */
  BYTE abTypes[1]; /* bitsize 8, bitpos 256 */
};
typedef struct tagEMRPOLYDRAW16 /* id 219 */ EMRPOLYDRAW16;
typedef struct tagEMRPOLYDRAW16 /* id 219 */ *PEMRPOLYDRAW16;
struct tagEMRPOLYLINE { /* size 36 id 220 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cptl; /* bitsize 32, bitpos 192 */
  POINTL aptl[1]; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE /* id 220 */ EMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 220 */ *PEMRPOLYLINE;
typedef struct tagEMRPOLYLINE /* id 220 */ EMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 220 */ *PEMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE /* id 220 */ EMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 220 */ *PEMRPOLYGON;
typedef struct tagEMRPOLYLINE /* id 220 */ EMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 220 */ *PEMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE /* id 220 */ EMRPOLYLINETO;
typedef struct tagEMRPOLYLINE /* id 220 */ *PEMRPOLYLINETO;
struct tagEMRPOLYLINE16 { /* size 36 id 221 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD cpts; /* bitsize 32, bitpos 192 */
  POINTL apts[1]; /* bitsize 64, bitpos 224 */
};
typedef struct tagEMRPOLYLINE16 /* id 221 */ EMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ *PEMRPOLYLINE16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ EMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ *PEMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ EMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ *PEMRPOLYGON16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ EMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ *PEMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ EMRPOLYLINETO16;
typedef struct tagEMRPOLYLINE16 /* id 221 */ *PEMRPOLYLINETO16;
struct tagEMRPOLYPOLYLINE { /* size 44 id 222 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cptl; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]; /* bitsize 32, bitpos 256 */
  POINTL aptl[1]; /* bitsize 64, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE /* id 222 */ EMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 222 */ *PEMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE /* id 222 */ EMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE /* id 222 */ *PEMRPOLYPOLYGON;
struct tagEMRPOLYPOLYLINE16 { /* size 40 id 223 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD nPolys; /* bitsize 32, bitpos 192 */
  DWORD cpts; /* bitsize 32, bitpos 224 */
  DWORD aPolyCounts[1]; /* bitsize 32, bitpos 256 */
  POINTS apts[1]; /* bitsize 32, bitpos 288 */
};
typedef struct tagEMRPOLYPOLYLINE16 /* id 223 */ EMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 223 */ *PEMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 223 */ EMRPOLYPOLYGON16;
typedef struct tagEMRPOLYPOLYLINE16 /* id 223 */ *PEMRPOLYPOLYGON16;
struct tagEMRPOLYTEXTOUTA { /* size 80 id 224 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  DWORD iGraphicsMode; /* bitsize 32, bitpos 192 */
  FLOAT exScale; /* bitsize 32, bitpos 224 */
  FLOAT eyScale; /* bitsize 32, bitpos 256 */
  LONG cStrings; /* bitsize 32, bitpos 288 */
  EMRTEXT aemrtext[1]; /* bitsize 320, bitpos 320 */
};
typedef struct tagEMRPOLYTEXTOUTA /* id 224 */ EMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 224 */ *PEMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA /* id 224 */ EMRPOLYTEXTOUTW;
typedef struct tagEMRPOLYTEXTOUTA /* id 224 */ *PEMRPOLYTEXTOUTW;
struct tagEMRRESIZEPALETTE { /* size 16 id 225 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD cEntries; /* bitsize 32, bitpos 96 */
};
typedef struct tagEMRRESIZEPALETTE /* id 225 */ EMRRESIZEPALETTE;
typedef struct tagEMRRESIZEPALETTE /* id 225 */ *PEMRRESIZEPALETTE;
struct tagEMRRESTOREDC { /* size 12 id 226 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG iRelative; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRRESTOREDC /* id 226 */ EMRRESTOREDC;
typedef struct tagEMRRESTOREDC /* id 226 */ *PEMRRESTOREDC;
struct tagEMRROUNDRECT { /* size 32 id 227 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBox; /* bitsize 128, bitpos 64 */
  SIZEL szlCorner; /* bitsize 64, bitpos 192 */
};
typedef struct tagEMRROUNDRECT /* id 227 */ EMRROUNDRECT;
typedef struct tagEMRROUNDRECT /* id 227 */ *PEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX { /* size 24 id 228 */
  EMR emr; /* bitsize 64, bitpos 0 */
  LONG xNum; /* bitsize 32, bitpos 64 */
  LONG xDenom; /* bitsize 32, bitpos 96 */
  LONG yNum; /* bitsize 32, bitpos 128 */
  LONG yDenom; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 228 */ EMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 228 */ *PEMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 228 */ EMRSCALEWINDOWEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX /* id 228 */ *PEMRSCALEWINDOWEXTEX;
struct tagEMRSELECTCOLORSPACE { /* size 12 id 229 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihCS; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCOLORSPACE /* id 229 */ EMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 229 */ *PEMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 229 */ EMRDELETECOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE /* id 229 */ *PEMRDELETECOLORSPACE;
struct tagEMRSELECTOBJECT { /* size 12 id 230 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihObject; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTOBJECT /* id 230 */ EMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 230 */ *PEMRSELECTOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 230 */ EMRDELETEOBJECT;
typedef struct tagEMRSELECTOBJECT /* id 230 */ *PEMRDELETEOBJECT;
struct tagEMRSELECTPALETTE { /* size 12 id 231 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTPALETTE /* id 231 */ EMRSELECTPALETTE;
typedef struct tagEMRSELECTPALETTE /* id 231 */ *PEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION { /* size 12 id 232 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iArcDirection; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETARCDIRECTION /* id 232 */ EMRSETARCDIRECTION;
typedef struct tagEMRSETARCDIRECTION /* id 232 */ *PEMRSETARCDIRECTION;
struct tagEMRSETTEXTCOLOR { /* size 12 id 233 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORREF crColor; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETTEXTCOLOR /* id 233 */ EMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 233 */ *PEMRSETBKCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 233 */ EMRSETTEXTCOLOR;
typedef struct tagEMRSETTEXTCOLOR /* id 233 */ *PEMRSETTEXTCOLOR;
struct tagEMRSETCOLORADJUSTMENT { /* size 32 id 234 */
  EMR emr; /* bitsize 64, bitpos 0 */
  COLORADJUSTMENT ColorAdjustment; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETCOLORADJUSTMENT /* id 234 */ EMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETCOLORADJUSTMENT /* id 234 */ *PEMRSETCOLORADJUSTMENT;
struct tagEMRSETDIBITSTODEVICE { /* size 76 id 235 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD iStartScan; /* bitsize 32, bitpos 544 */
  DWORD cScans; /* bitsize 32, bitpos 576 */
};
typedef struct tagEMRSETDIBITSTODEVICE /* id 235 */ EMRSETDIBITSTODEVICE;
typedef struct tagEMRSETDIBITSTODEVICE /* id 235 */ *PEMRSETDIBITSTODEVICE;
struct tagEMRSETMAPPERFLAGS { /* size 12 id 236 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMAPPERFLAGS /* id 236 */ EMRSETMAPPERFLAGS;
typedef struct tagEMRSETMAPPERFLAGS /* id 236 */ *PEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT { /* size 12 id 237 */
  EMR emr; /* bitsize 64, bitpos 0 */
  FLOAT eMiterLimit; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSETMITERLIMIT /* id 237 */ EMRSETMITERLIMIT;
typedef struct tagEMRSETMITERLIMIT /* id 237 */ *PEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES { /* size 24 id 238 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD ihPal; /* bitsize 32, bitpos 64 */
  DWORD iStart; /* bitsize 32, bitpos 96 */
  DWORD cEntries; /* bitsize 32, bitpos 128 */
  PALETTEENTRY aPalEntries[1]; /* bitsize 32, bitpos 160 */
};
typedef struct tagEMRSETPALETTEENTRIES /* id 238 */ EMRSETPALETTEENTRIES;
typedef struct tagEMRSETPALETTEENTRIES /* id 238 */ *PEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV { /* size 20 id 239 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlPixel; /* bitsize 64, bitpos 64 */
  COLORREF crColor; /* bitsize 32, bitpos 128 */
};
typedef struct tagEMRSETPIXELV /* id 239 */ EMRSETPIXELV;
typedef struct tagEMRSETPIXELV /* id 239 */ *PEMRSETPIXELV;
struct tagEMRSETVIEWPORTEXTEX { /* size 16 id 240 */
  EMR emr; /* bitsize 64, bitpos 0 */
  SIZEL szlExtent; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTEXTEX /* id 240 */ EMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 240 */ *PEMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 240 */ EMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTEXTEX /* id 240 */ *PEMRSETWINDOWEXTEX;
struct tagEMRSETVIEWPORTORGEX { /* size 16 id 241 */
  EMR emr; /* bitsize 64, bitpos 0 */
  POINTL ptlOrigin; /* bitsize 64, bitpos 64 */
};
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ EMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ *PEMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ EMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ *PEMRSETWINDOWORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ EMRSETBRUSHORGEX;
typedef struct tagEMRSETVIEWPORTORGEX /* id 241 */ *PEMRSETBRUSHORGEX;
struct tagEMRSETWORLDTRANSFORM { /* size 32 id 242 */
  EMR emr; /* bitsize 64, bitpos 0 */
  XFORM xform; /* bitsize 192, bitpos 64 */
};
typedef struct tagEMRSETWORLDTRANSFORM /* id 242 */ EMRSETWORLDTRANSFORM;
typedef struct tagEMRSETWORLDTRANSFORM /* id 242 */ *PEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT { /* size 108 id 243 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG cxDest; /* bitsize 32, bitpos 256 */
  LONG cyDest; /* bitsize 32, bitpos 288 */
  DWORD dwRop; /* bitsize 32, bitpos 320 */
  LONG xSrc; /* bitsize 32, bitpos 352 */
  LONG ySrc; /* bitsize 32, bitpos 384 */
  XFORM xformSrc; /* bitsize 192, bitpos 416 */
  COLORREF crBkColorSrc; /* bitsize 32, bitpos 608 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 640 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 672 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 704 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 736 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 768 */
  LONG cxSrc; /* bitsize 32, bitpos 800 */
  LONG cySrc; /* bitsize 32, bitpos 832 */
};
typedef struct tagEMRSTRETCHBLT /* id 243 */ EMRSTRETCHBLT;
typedef struct tagEMRSTRETCHBLT /* id 243 */ *PEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS { /* size 80 id 244 */
  EMR emr; /* bitsize 64, bitpos 0 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  LONG xDest; /* bitsize 32, bitpos 192 */
  LONG yDest; /* bitsize 32, bitpos 224 */
  LONG xSrc; /* bitsize 32, bitpos 256 */
  LONG ySrc; /* bitsize 32, bitpos 288 */
  LONG cxSrc; /* bitsize 32, bitpos 320 */
  LONG cySrc; /* bitsize 32, bitpos 352 */
  DWORD offBmiSrc; /* bitsize 32, bitpos 384 */
  DWORD cbBmiSrc; /* bitsize 32, bitpos 416 */
  DWORD offBitsSrc; /* bitsize 32, bitpos 448 */
  DWORD cbBitsSrc; /* bitsize 32, bitpos 480 */
  DWORD iUsageSrc; /* bitsize 32, bitpos 512 */
  DWORD dwRop; /* bitsize 32, bitpos 544 */
  LONG cxDest; /* bitsize 32, bitpos 576 */
  LONG cyDest; /* bitsize 32, bitpos 608 */
};
typedef struct tagEMRSTRETCHDIBITS /* id 244 */ EMRSTRETCHDIBITS;
typedef struct tagEMRSTRETCHDIBITS /* id 244 */ *PEMRSTRETCHDIBITS;
struct tagABORTPATH { /* size 8 id 245 */
  EMR emr; /* bitsize 64, bitpos 0 */
};
typedef struct tagABORTPATH /* id 245 */ EMRABORTPATH;
typedef struct tagABORTPATH /* id 245 */ *PEMRABORTPATH;
typedef struct tagABORTPATH /* id 245 */ EMRBEGINPATH;
typedef struct tagABORTPATH /* id 245 */ *PEMRBEGINPATH;
typedef struct tagABORTPATH /* id 245 */ EMRENDPATH;
typedef struct tagABORTPATH /* id 245 */ *PEMRENDPATH;
typedef struct tagABORTPATH /* id 245 */ EMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 245 */ *PEMRCLOSEFIGURE;
typedef struct tagABORTPATH /* id 245 */ EMRFLATTENPATH;
typedef struct tagABORTPATH /* id 245 */ *PEMRFLATTENPATH;
typedef struct tagABORTPATH /* id 245 */ EMRWIDENPATH;
typedef struct tagABORTPATH /* id 245 */ *PEMRWIDENPATH;
typedef struct tagABORTPATH /* id 245 */ EMRSETMETARGN;
typedef struct tagABORTPATH /* id 245 */ *PEMRSETMETARGN;
typedef struct tagABORTPATH /* id 245 */ EMRSAVEDC;
typedef struct tagABORTPATH /* id 245 */ *PEMRSAVEDC;
typedef struct tagABORTPATH /* id 245 */ EMRREALIZEPALETTE;
typedef struct tagABORTPATH /* id 245 */ *PEMRREALIZEPALETTE;
struct tagEMRSELECTCLIPPATH { /* size 12 id 246 */
  EMR emr; /* bitsize 64, bitpos 0 */
  DWORD iMode; /* bitsize 32, bitpos 64 */
};
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSELECTCLIPPATH;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETBKMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETMAPMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRSETTEXTALIGN;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ EMRENABLEICM;
typedef struct tagEMRSELECTCLIPPATH /* id 246 */ *PEMRENABLEICM;
struct tagNMHDR { /* size 12 id 247 */
  HWND hwndFrom; /* bitsize 32, bitpos 0 */
  UINT idFrom; /* bitsize 32, bitpos 32 */
  UINT code; /* bitsize 32, bitpos 64 */
};
typedef struct tagNMHDR /* id 247 */ NMHDR;
typedef struct tagNMHDR /* id 247 */ *PNMHDR;
typedef struct tagNMHDR /* id 247 */ *LPNMHDR;
struct _encorrecttext { /* size 24 id 248 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  CHARRANGE chrg; /* bitsize 64, bitpos 96 */
  WORD seltyp; /* bitsize 16, bitpos 160 */
};
typedef struct _encorrecttext /* id 248 */ ENCORRECTTEXT;
struct _endropfiles { /* size 24 id 249 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  HANDLE hDrop; /* bitsize 32, bitpos 96 */
  LONG cp; /* bitsize 32, bitpos 128 */
  WINBOOL fProtected; /* bitsize 32, bitpos 160 */
};
typedef struct _endropfiles /* id 249 */ ENDROPFILES;
typedef struct %anon250 { /* size 20 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  LONG cObjectCount; /* bitsize 32, bitpos 96 */
  LONG cch; /* bitsize 32, bitpos 128 */
} ENSAVECLIPBOARD;
typedef struct %anon251 { /* size 24 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  LONG iob; /* bitsize 32, bitpos 96 */
  LONG lOper; /* bitsize 32, bitpos 128 */
  HRESULT hr; /* bitsize 32, bitpos 160 */
} ENOLEOPFAILED;
struct tagENHMETAHEADER { /* size 88 id 252 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  RECTL rclBounds; /* bitsize 128, bitpos 64 */
  RECTL rclFrame; /* bitsize 128, bitpos 192 */
  DWORD dSignature; /* bitsize 32, bitpos 320 */
  DWORD nVersion; /* bitsize 32, bitpos 352 */
  DWORD nBytes; /* bitsize 32, bitpos 384 */
  DWORD nRecords; /* bitsize 32, bitpos 416 */
  WORD nHandles; /* bitsize 16, bitpos 448 */
  WORD sReserved; /* bitsize 16, bitpos 464 */
  DWORD nDescription; /* bitsize 32, bitpos 480 */
  DWORD offDescription; /* bitsize 32, bitpos 512 */
  DWORD nPalEntries; /* bitsize 32, bitpos 544 */
  SIZEL szlDevice; /* bitsize 64, bitpos 576 */
  SIZEL szlMillimeters; /* bitsize 64, bitpos 640 */
};
typedef struct tagENHMETAHEADER /* id 252 */ ENHMETAHEADER;
typedef struct tagENHMETAHEADER /* id 252 */ *LPENHMETAHEADER;
struct tagENHMETARECORD { /* size 12 id 253 */
  DWORD iType; /* bitsize 32, bitpos 0 */
  DWORD nSize; /* bitsize 32, bitpos 32 */
  DWORD dParm[1]; /* bitsize 32, bitpos 64 */
};
typedef struct tagENHMETARECORD /* id 253 */ ENHMETARECORD;
typedef struct tagENHMETARECORD /* id 253 */ *PENHMETARECORD;
typedef struct tagENHMETARECORD /* id 253 */ *LPENHMETARECORD;
struct _enprotected { /* size 32 id 254 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  UINT msg; /* bitsize 32, bitpos 96 */
  WPARAM wParam; /* bitsize 32, bitpos 128 */
  LPARAM lParam; /* bitsize 32, bitpos 160 */
  CHARRANGE chrg; /* bitsize 64, bitpos 192 */
};
typedef struct _enprotected /* id 254 */ ENPROTECTED;
struct _SERVICE_STATUS { /* size 28 id 255 */
  DWORD dwServiceType; /* bitsize 32, bitpos 0 */
  DWORD dwCurrentState; /* bitsize 32, bitpos 32 */
  DWORD dwControlsAccepted; /* bitsize 32, bitpos 64 */
  DWORD dwWin32ExitCode; /* bitsize 32, bitpos 96 */
  DWORD dwServiceSpecificExitCode; /* bitsize 32, bitpos 128 */
  DWORD dwCheckPoint; /* bitsize 32, bitpos 160 */
  DWORD dwWaitHint; /* bitsize 32, bitpos 192 */
};
typedef struct _SERVICE_STATUS /* id 255 */ SERVICE_STATUS;
typedef struct _SERVICE_STATUS /* id 255 */ *LPSERVICE_STATUS;
struct _ENUM_SERVICE_STATUS { /* size 36 id 60 */
  LPTSTR lpServiceName; /* bitsize 32, bitpos 0 */
  LPTSTR lpDisplayName; /* bitsize 32, bitpos 32 */
  SERVICE_STATUS ServiceStatus; /* bitsize 224, bitpos 64 */
};
typedef struct _ENUM_SERVICE_STATUS /* id 60 */ ENUM_SERVICE_STATUS;
typedef struct _ENUM_SERVICE_STATUS /* id 60 */ *LPENUM_SERVICE_STATUS;
struct tagENUMLOGFONT { /* size 156 id 256 */
  LOGFONT elfLogFont; /* bitsize 480, bitpos 0 */
  BCHAR elfFullName[64]; /* bitsize 512, bitpos 480 */
  BCHAR elfStyle[32]; /* bitsize 256, bitpos 992 */
};
typedef struct tagENUMLOGFONT /* id 256 */ ENUMLOGFONT;
struct tagENUMLOGFONTEX { /* size 188 id 257 */
  LOGFONT elfLogFont; /* bitsize 480, bitpos 0 */
  BCHAR elfFullName[64]; /* bitsize 512, bitpos 480 */
  BCHAR elfStyle[32]; /* bitsize 256, bitpos 992 */
  BCHAR elfScript[32]; /* bitsize 256, bitpos 1248 */
};
typedef struct tagENUMLOGFONTEX /* id 257 */ ENUMLOGFONTEX;
struct _EVENTLOGRECORD { /* size 56 id 258 */
  DWORD Length; /* bitsize 32, bitpos 0 */
  DWORD Reserved; /* bitsize 32, bitpos 32 */
  DWORD RecordNumber; /* bitsize 32, bitpos 64 */
  DWORD TimeGenerated; /* bitsize 32, bitpos 96 */
  DWORD TimeWritten; /* bitsize 32, bitpos 128 */
  DWORD EventID; /* bitsize 32, bitpos 160 */
  WORD EventType; /* bitsize 16, bitpos 192 */
  WORD NumStrings; /* bitsize 16, bitpos 208 */
  WORD EventCategory; /* bitsize 16, bitpos 224 */
  WORD ReservedFlags; /* bitsize 16, bitpos 240 */
  DWORD ClosingRecordNumber; /* bitsize 32, bitpos 256 */
  DWORD StringOffset; /* bitsize 32, bitpos 288 */
  DWORD UserSidLength; /* bitsize 32, bitpos 320 */
  DWORD UserSidOffset; /* bitsize 32, bitpos 352 */
  DWORD DataLength; /* bitsize 32, bitpos 384 */
  DWORD DataOffset; /* bitsize 32, bitpos 416 */
};
typedef struct _EVENTLOGRECORD /* id 258 */ EVENTLOGRECORD;
struct tagEVENTMSG { /* size 20 id 259 */
  UINT message; /* bitsize 32, bitpos 0 */
  UINT paramL; /* bitsize 32, bitpos 32 */
  UINT paramH; /* bitsize 32, bitpos 64 */
  DWORD time; /* bitsize 32, bitpos 96 */
  HWND hwnd; /* bitsize 32, bitpos 128 */
};
typedef struct tagEVENTMSG /* id 259 */ EVENTMSG;
struct _EXCEPTION_POINTERS { /* size 8 id 260 */
  PEXCEPTION_RECORD ExceptionRecord; /* bitsize 32, bitpos 0 */
  PCONTEXT ContextRecord; /* bitsize 32, bitpos 32 */
};
typedef struct _EXCEPTION_POINTERS /* id 260 */ EXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 260 */ *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_POINTERS /* id 260 */ *LPEXCEPTION_POINTERS;
struct _EXT_BUTTON { /* size 6 id 261 */
  WORD idCommand; /* bitsize 16, bitpos 0 */
  WORD idsHelp; /* bitsize 16, bitpos 16 */
  WORD fsStyle; /* bitsize 16, bitpos 32 */
};
typedef struct _EXT_BUTTON /* id 261 */ EXT_BUTTON;
typedef struct _EXT_BUTTON /* id 261 */ *LPEXT_BUTTON;
struct tagFILTERKEYS { /* size 24 id 262 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iWaitMSec; /* bitsize 32, bitpos 64 */
  DWORD iDelayMSec; /* bitsize 32, bitpos 96 */
  DWORD iRepeatMSec; /* bitsize 32, bitpos 128 */
  DWORD iBounceMSec; /* bitsize 32, bitpos 160 */
};
typedef struct tagFILTERKEYS /* id 262 */ FILTERKEYS;
struct _FIND_NAME_BUFFER { /* size 33 id 263 */
  UCHAR length; /* bitsize 8, bitpos 0 */
  UCHAR access_control; /* bitsize 8, bitpos 8 */
  UCHAR frame_control; /* bitsize 8, bitpos 16 */
  UCHAR destination_addr[6]; /* bitsize 48, bitpos 24 */
  UCHAR source_addr[6]; /* bitsize 48, bitpos 72 */
  UCHAR routing_info[18]; /* bitsize 144, bitpos 120 */
};
typedef struct _FIND_NAME_BUFFER /* id 263 */ FIND_NAME_BUFFER;
struct _FIND_NAME_HEADER { /* size 4 id 264 */
  WORD node_count; /* bitsize 16, bitpos 0 */
  UCHAR reserved; /* bitsize 8, bitpos 16 */
  UCHAR unique_group; /* bitsize 8, bitpos 24 */
};
typedef struct _FIND_NAME_HEADER /* id 264 */ FIND_NAME_HEADER;
typedef struct %anon38 FINDREPLACE;
typedef struct %anon38 *LPFINDREPLACE;
struct _findtext { /* size 12 id 265 */
  CHARRANGE chrg; /* bitsize 64, bitpos 0 */
  LPSTR lpstrText; /* bitsize 32, bitpos 64 */
};
typedef struct _findtext /* id 265 */ FINDTEXT;
struct _findtextex { /* size 20 id 266 */
  CHARRANGE chrg; /* bitsize 64, bitpos 0 */
  LPSTR lpstrText; /* bitsize 32, bitpos 64 */
  CHARRANGE chrgText; /* bitsize 64, bitpos 96 */
};
typedef struct _findtextex /* id 266 */ FINDTEXTEX;
struct _FMS_GETDRIVEINFO { /* size 412 id 267 */
  DWORD dwTotalSpace; /* bitsize 32, bitpos 0 */
  DWORD dwFreeSpace; /* bitsize 32, bitpos 32 */
  TCHAR szPath[260]; /* bitsize 2080, bitpos 64 */
  TCHAR szVolume[14]; /* bitsize 112, bitpos 2144 */
  TCHAR szShare[128]; /* bitsize 1024, bitpos 2256 */
};
typedef struct _FMS_GETDRIVEINFO /* id 267 */ FMS_GETDRIVEINFO;
struct _FMS_GETFILESEL { /* size 276 id 268 */
  FILETIME ftTime; /* bitsize 64, bitpos 0 */
  DWORD dwSize; /* bitsize 32, bitpos 64 */
  BYTE bAttr; /* bitsize 8, bitpos 96 */
  TCHAR szName[260]; /* bitsize 2080, bitpos 104 */
};
typedef struct _FMS_GETFILESEL /* id 268 */ FMS_GETFILESEL;
struct _FMS_LOAD { /* size 52 id 269 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  TCHAR szMenuName[40]; /* bitsize 320, bitpos 32 */
  HMENU hMenu; /* bitsize 32, bitpos 352 */
  UINT wMenuDelta; /* bitsize 32, bitpos 384 */
};
typedef struct _FMS_LOAD /* id 269 */ FMS_LOAD;
struct _FMS_TOOLBARLOAD { /* size 20 id 270 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  LPEXT_BUTTON lpButtons; /* bitsize 32, bitpos 32 */
  WORD cButtons; /* bitsize 16, bitpos 64 */
  WORD cBitmaps; /* bitsize 16, bitpos 80 */
  WORD idBitmap; /* bitsize 16, bitpos 96 */
  HBITMAP hBitmap; /* bitsize 32, bitpos 128 */
};
typedef struct _FMS_TOOLBARLOAD /* id 270 */ FMS_TOOLBARLOAD;
struct _FOCUS_EVENT_RECORD { /* size 4 id 271 */
  WINBOOL bSetFocus; /* bitsize 32, bitpos 0 */
};
typedef struct _FOCUS_EVENT_RECORD /* id 271 */ FOCUS_EVENT_RECORD;
struct _FORM_INFO_1 { /* size 32 id 272 */
  DWORD Flags; /* bitsize 32, bitpos 0 */
  LPTSTR pName; /* bitsize 32, bitpos 32 */
  SIZEL Size; /* bitsize 64, bitpos 64 */
  RECTL ImageableArea; /* bitsize 128, bitpos 128 */
};
typedef struct _FORM_INFO_1 /* id 272 */ FORM_INFO_1;
struct _FORMAT_PARAMETERS { /* size 20 id 273 */
  MEDIA_TYPE MediaType; /* bitsize 32, bitpos 0 */
  DWORD StartCylinderNumber; /* bitsize 32, bitpos 32 */
  DWORD EndCylinderNumber; /* bitsize 32, bitpos 64 */
  DWORD StartHeadNumber; /* bitsize 32, bitpos 96 */
  DWORD EndHeadNumber; /* bitsize 32, bitpos 128 */
};
typedef struct _FORMAT_PARAMETERS /* id 273 */ FORMAT_PARAMETERS;
struct _formatrange { /* size 48 id 274 */
  HDC hdc; /* bitsize 32, bitpos 0 */
  HDC hdcTarget; /* bitsize 32, bitpos 32 */
  RECT rc; /* bitsize 128, bitpos 64 */
  RECT rcPage; /* bitsize 128, bitpos 192 */
  CHARRANGE chrg; /* bitsize 64, bitpos 320 */
};
typedef struct _formatrange /* id 274 */ FORMATRANGE;
struct tagGCP_RESULTS { /* size 36 id 29 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  LPTSTR lpOutString; /* bitsize 32, bitpos 32 */
  UINT *lpOrder; /* bitsize 32, bitpos 64 */
  INT *lpDx; /* bitsize 32, bitpos 96 */
  INT *lpCaretPos; /* bitsize 32, bitpos 128 */
  LPTSTR lpClass; /* bitsize 32, bitpos 160 */
  UINT *lpGlyphs; /* bitsize 32, bitpos 192 */
  UINT nGlyphs; /* bitsize 32, bitpos 224 */
  UINT nMaxFit; /* bitsize 32, bitpos 256 */
};
typedef struct tagGCP_RESULTS /* id 29 */ GCP_RESULTS;
typedef struct tagGCP_RESULTS /* id 29 */ *LPGCP_RESULTS;
struct _GENERIC_MAPPING { /* size 16 id 6 */
  ACCESS_MASK GenericRead; /* bitsize 32, bitpos 0 */
  ACCESS_MASK GenericWrite; /* bitsize 32, bitpos 32 */
  ACCESS_MASK GenericExecute; /* bitsize 32, bitpos 64 */
  ACCESS_MASK GenericAll; /* bitsize 32, bitpos 96 */
};
typedef struct _GENERIC_MAPPING /* id 6 */ GENERIC_MAPPING;
typedef struct _GENERIC_MAPPING /* id 6 */ *PGENERIC_MAPPING;
struct _GLYPHMETRICS { /* size 20 id 25 */
  UINT gmBlackBoxX; /* bitsize 32, bitpos 0 */
  UINT gmBlackBoxY; /* bitsize 32, bitpos 32 */
  POINT gmptGlyphOrigin; /* bitsize 64, bitpos 64 */
  short int gmCellIncX; /* bitsize 16, bitpos 128 */
  short int gmCellIncY; /* bitsize 16, bitpos 144 */
};
typedef struct _GLYPHMETRICS /* id 25 */ GLYPHMETRICS;
typedef struct _GLYPHMETRICS /* id 25 */ *LPGLYPHMETRICS;
struct tagHANDLETABLE { /* size 4 id 275 */
  HGDIOBJ objectHandle[1]; /* bitsize 32, bitpos 0 */
};
typedef struct tagHANDLETABLE /* id 275 */ HANDLETABLE;
typedef struct tagHANDLETABLE /* id 275 */ *LPHANDLETABLE;
struct _HD_HITTESTINFO { /* size 16 id 276 */
  POINT pt; /* bitsize 64, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 64 */
  int iItem; /* bitsize 32, bitpos 96 */
};
typedef struct _HD_HITTESTINFO /* id 276 */ HD_HITTESTINFO;
struct _HD_ITEM { /* size 28 id 277 */
  UINT mask; /* bitsize 32, bitpos 0 */
  int cxy; /* bitsize 32, bitpos 32 */
  LPTSTR pszText; /* bitsize 32, bitpos 64 */
  HBITMAP hbm; /* bitsize 32, bitpos 96 */
  int cchTextMax; /* bitsize 32, bitpos 128 */
  int fmt; /* bitsize 32, bitpos 160 */
  LPARAM lParam; /* bitsize 32, bitpos 192 */
};
typedef struct _HD_ITEM /* id 277 */ HD_ITEM;
struct _WINDOWPOS { /* size 28 id 278 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  HWND hwndInsertAfter; /* bitsize 32, bitpos 32 */
  int x; /* bitsize 32, bitpos 64 */
  int y; /* bitsize 32, bitpos 96 */
  int cx; /* bitsize 32, bitpos 128 */
  int cy; /* bitsize 32, bitpos 160 */
  UINT flags; /* bitsize 32, bitpos 192 */
};
typedef struct _WINDOWPOS /* id 278 */ WINDOWPOS;
typedef struct _WINDOWPOS /* id 278 */ *PWINDOWPOS;
typedef struct _WINDOWPOS /* id 278 */ *LPWINDOWPOS;
struct _HD_LAYOUT { /* size 8 id 279 */
  RECT *prc; /* bitsize 32, bitpos 0 */
  WINDOWPOS *pwpos; /* bitsize 32, bitpos 32 */
};
typedef struct _HD_LAYOUT /* id 279 */ HD_LAYOUT;
struct _HD_NOTIFY { /* size 24 id 280 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  int iItem; /* bitsize 32, bitpos 96 */
  int iButton; /* bitsize 32, bitpos 128 */
  HD_ITEM *pitem; /* bitsize 32, bitpos 160 */
};
typedef struct _HD_NOTIFY /* id 280 */ HD_NOTIFY;
struct tagHELPINFO { /* size 28 id 281 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iContextType; /* bitsize 32, bitpos 32 */
  int iCtrlId; /* bitsize 32, bitpos 64 */
  HANDLE hItemHandle; /* bitsize 32, bitpos 96 */
  DWORD dwContextId; /* bitsize 32, bitpos 128 */
  POINT MousePos; /* bitsize 64, bitpos 160 */
};
typedef struct tagHELPINFO /* id 281 */ HELPINFO;
typedef struct tagHELPINFO /* id 281 */ *LPHELPINFO;
typedef struct %anon282 { /* size 28 */
  int wStructSize; /* bitsize 32, bitpos 0 */
  int x; /* bitsize 32, bitpos 32 */
  int y; /* bitsize 32, bitpos 64 */
  int dx; /* bitsize 32, bitpos 96 */
  int dy; /* bitsize 32, bitpos 128 */
  int wMax; /* bitsize 32, bitpos 160 */
  TCHAR rgchMember[2]; /* bitsize 16, bitpos 192 */
} HELPWININFO;
struct tagHIGHCONTRAST { /* size 12 id 283 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPTSTR lpszDefaultScheme; /* bitsize 32, bitpos 64 */
};
typedef struct tagHIGHCONTRAST /* id 283 */ HIGHCONTRAST;
typedef struct tagHIGHCONTRAST /* id 283 */ *LPHIGHCONTRAST;
struct tagHSZPAIR { /* size 8 id 284 */
  HSZ hszSvc; /* bitsize 32, bitpos 0 */
  HSZ hszTopic; /* bitsize 32, bitpos 32 */
};
typedef struct tagHSZPAIR /* id 284 */ HSZPAIR;
struct _ICONINFO { /* size 20 id 285 */
  WINBOOL fIcon; /* bitsize 32, bitpos 0 */
  DWORD xHotspot; /* bitsize 32, bitpos 32 */
  DWORD yHotspot; /* bitsize 32, bitpos 64 */
  HBITMAP hbmMask; /* bitsize 32, bitpos 96 */
  HBITMAP hbmColor; /* bitsize 32, bitpos 128 */
};
typedef struct _ICONINFO /* id 285 */ ICONINFO;
typedef struct _ICONINFO /* id 285 */ *PICONINFO;
struct tagICONMETRICS { /* size 76 id 286 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iHorzSpacing; /* bitsize 32, bitpos 32 */
  int iVertSpacing; /* bitsize 32, bitpos 64 */
  int iTitleWrap; /* bitsize 32, bitpos 96 */
  LOGFONT lfFont; /* bitsize 480, bitpos 128 */
};
typedef struct tagICONMETRICS /* id 286 */ ICONMETRICS;
typedef struct tagICONMETRICS /* id 286 */ *LPICONMETRICS;
struct _IMAGEINFO { /* size 32 id 287 */
  HBITMAP hbmImage; /* bitsize 32, bitpos 0 */
  HBITMAP hbmMask; /* bitsize 32, bitpos 32 */
  int Unused1; /* bitsize 32, bitpos 64 */
  int Unused2; /* bitsize 32, bitpos 96 */
  RECT rcImage; /* bitsize 128, bitpos 128 */
};
typedef struct _IMAGEINFO /* id 287 */ IMAGEINFO;
struct _KEY_EVENT_RECORD { /* size 16 id 288 */
  WINBOOL bKeyDown; /* bitsize 32, bitpos 0 */
  WORD wRepeatCount; /* bitsize 16, bitpos 32 */
  WORD wVirtualKeyCode; /* bitsize 16, bitpos 48 */
  WORD wVirtualScanCode; /* bitsize 16, bitpos 64 */
  union %anon106 { /* size 2 */
    WCHAR UnicodeChar; /* bitsize 16, bitpos 0 */
    CHAR AsciiChar; /* bitsize 8, bitpos 0 */
  } uChar; /* bitsize 16, bitpos 80 */
  DWORD dwControlKeyState; /* bitsize 32, bitpos 96 */
};
typedef struct _KEY_EVENT_RECORD /* id 288 */ KEY_EVENT_RECORD;
struct _MOUSE_EVENT_RECORD { /* size 16 id 289 */
  COORD dwMousePosition; /* bitsize 32, bitpos 0 */
  DWORD dwButtonState; /* bitsize 32, bitpos 32 */
  DWORD dwControlKeyState; /* bitsize 32, bitpos 64 */
  DWORD dwEventFlags; /* bitsize 32, bitpos 96 */
};
typedef struct _MOUSE_EVENT_RECORD /* id 289 */ MOUSE_EVENT_RECORD;
struct _WINDOW_BUFFER_SIZE_RECORD { /* size 4 id 290 */
  COORD dwSize; /* bitsize 32, bitpos 0 */
};
typedef struct _WINDOW_BUFFER_SIZE_RECORD /* id 290 */ WINDOW_BUFFER_SIZE_RECORD;
struct _MENU_EVENT_RECORD { /* size 4 id 291 */
  UINT dwCommandId; /* bitsize 32, bitpos 0 */
};
typedef struct _MENU_EVENT_RECORD /* id 291 */ MENU_EVENT_RECORD;
typedef struct _MENU_EVENT_RECORD /* id 291 */ *PMENU_EVENT_RECORD;
struct _INPUT_RECORD { /* size 20 id 51 */
  WORD EventType; /* bitsize 16, bitpos 0 */
  union %anon292 { /* size 16 */
    KEY_EVENT_RECORD KeyEvent; /* bitsize 128, bitpos 0 */
    MOUSE_EVENT_RECORD MouseEvent; /* bitsize 128, bitpos 0 */
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent; /* bitsize 32, bitpos 0 */
    MENU_EVENT_RECORD MenuEvent; /* bitsize 32, bitpos 0 */
    FOCUS_EVENT_RECORD FocusEvent; /* bitsize 32, bitpos 0 */
  } Event; /* bitsize 128, bitpos 32 */
};
typedef struct _INPUT_RECORD /* id 51 */ INPUT_RECORD;
typedef struct _INPUT_RECORD /* id 51 */ *PINPUT_RECORD;
struct _SYSTEMTIME { /* size 16 id 48 */
  WORD wYear; /* bitsize 16, bitpos 0 */
  WORD wMonth; /* bitsize 16, bitpos 16 */
  WORD wDayOfWeek; /* bitsize 16, bitpos 32 */
  WORD wDay; /* bitsize 16, bitpos 48 */
  WORD wHour; /* bitsize 16, bitpos 64 */
  WORD wMinute; /* bitsize 16, bitpos 80 */
  WORD wSecond; /* bitsize 16, bitpos 96 */
  WORD wMilliseconds; /* bitsize 16, bitpos 112 */
};
typedef struct _SYSTEMTIME /* id 48 */ SYSTEMTIME;
typedef struct _SYSTEMTIME /* id 48 */ *LPSYSTEMTIME;
struct _JOB_INFO_1 { /* size 64 id 293 */
  DWORD JobId; /* bitsize 32, bitpos 0 */
  LPTSTR pPrinterName; /* bitsize 32, bitpos 32 */
  LPTSTR pMachineName; /* bitsize 32, bitpos 64 */
  LPTSTR pUserName; /* bitsize 32, bitpos 96 */
  LPTSTR pDocument; /* bitsize 32, bitpos 128 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 160 */
  LPTSTR pStatus; /* bitsize 32, bitpos 192 */
  DWORD Status; /* bitsize 32, bitpos 224 */
  DWORD Priority; /* bitsize 32, bitpos 256 */
  DWORD Position; /* bitsize 32, bitpos 288 */
  DWORD TotalPages; /* bitsize 32, bitpos 320 */
  DWORD PagesPrinted; /* bitsize 32, bitpos 352 */
  SYSTEMTIME Submitted; /* bitsize 128, bitpos 384 */
};
typedef struct _JOB_INFO_1 /* id 293 */ JOB_INFO_1;
struct _SID_IDENTIFIER_AUTHORITY { /* size 6 id 294 */
  BYTE Value[6]; /* bitsize 48, bitpos 0 */
};
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 294 */ SID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 294 */ *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SID_IDENTIFIER_AUTHORITY /* id 294 */ *LPSID_IDENTIFIER_AUTHORITY;
struct _SID { /* size 12 id 4 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE SubAuthorityCount; /* bitsize 8, bitpos 8 */
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority; /* bitsize 48, bitpos 16 */
  DWORD SubAuthority[1]; /* bitsize 32, bitpos 64 */
};
typedef struct _SID /* id 4 */ SID;
typedef struct _SID /* id 4 */ *PSID;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
struct _SECURITY_DESCRIPTOR { /* size 20 id 5 */
  BYTE Revision; /* bitsize 8, bitpos 0 */
  BYTE Sbz1; /* bitsize 8, bitpos 8 */
  SECURITY_DESCRIPTOR_CONTROL Control; /* bitsize 16, bitpos 16 */
  PSID Owner; /* bitsize 32, bitpos 32 */
  PSID Group; /* bitsize 32, bitpos 64 */
  PACL Sacl; /* bitsize 32, bitpos 96 */
  PACL Dacl; /* bitsize 32, bitpos 128 */
};
typedef struct _SECURITY_DESCRIPTOR /* id 5 */ SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR /* id 5 */ *PSECURITY_DESCRIPTOR;
struct _JOB_INFO_2 { /* size 104 id 295 */
  DWORD JobId; /* bitsize 32, bitpos 0 */
  LPTSTR pPrinterName; /* bitsize 32, bitpos 32 */
  LPTSTR pMachineName; /* bitsize 32, bitpos 64 */
  LPTSTR pUserName; /* bitsize 32, bitpos 96 */
  LPTSTR pDocument; /* bitsize 32, bitpos 128 */
  LPTSTR pNotifyName; /* bitsize 32, bitpos 160 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 192 */
  LPTSTR pPrintProcessor; /* bitsize 32, bitpos 224 */
  LPTSTR pParameters; /* bitsize 32, bitpos 256 */
  LPTSTR pDriverName; /* bitsize 32, bitpos 288 */
  LPDEVMODE pDevMode; /* bitsize 32, bitpos 320 */
  LPTSTR pStatus; /* bitsize 32, bitpos 352 */
  PSECURITY_DESCRIPTOR pSecurityDescriptor; /* bitsize 32, bitpos 384 */
  DWORD Status; /* bitsize 32, bitpos 416 */
  DWORD Priority; /* bitsize 32, bitpos 448 */
  DWORD Position; /* bitsize 32, bitpos 480 */
  DWORD StartTime; /* bitsize 32, bitpos 512 */
  DWORD UntilTime; /* bitsize 32, bitpos 544 */
  DWORD TotalPages; /* bitsize 32, bitpos 576 */
  DWORD Size; /* bitsize 32, bitpos 608 */
  SYSTEMTIME Submitted; /* bitsize 128, bitpos 640 */
  DWORD Time; /* bitsize 32, bitpos 768 */
  DWORD PagesPrinted; /* bitsize 32, bitpos 800 */
};
typedef struct _JOB_INFO_2 /* id 295 */ JOB_INFO_2;
struct tagKERNINGPAIR { /* size 8 id 33 */
  WORD wFirst; /* bitsize 16, bitpos 0 */
  WORD wSecond; /* bitsize 16, bitpos 16 */
  int iKernAmount; /* bitsize 32, bitpos 32 */
};
typedef struct tagKERNINGPAIR /* id 33 */ KERNINGPAIR;
typedef struct tagKERNINGPAIR /* id 33 */ *LPKERNINGPAIR;
struct _LANA_ENUM { /* size 255 id 296 */
  UCHAR length; /* bitsize 8, bitpos 0 */
  UCHAR lana[254]; /* bitsize 2032, bitpos 8 */
};
typedef struct _LANA_ENUM /* id 296 */ LANA_ENUM;
struct _LDT_ENTRY { /* size 8 id 297 */
  WORD LimitLow; /* bitsize 16, bitpos 0 */
  WORD BaseLow; /* bitsize 16, bitpos 16 */
  union %anon298 { /* size 4 */
    struct %anon299 { /* size 4 */
      BYTE BaseMid; /* bitsize 8, bitpos 0 */
      BYTE Flags1; /* bitsize 8, bitpos 8 */
      BYTE Flags2; /* bitsize 8, bitpos 16 */
      BYTE BaseHi; /* bitsize 8, bitpos 24 */
    } Bytes; /* bitsize 32, bitpos 0 */
    struct %anon300 { /* size 4 */
      DWORD BaseMid; /* bitsize 8, bitpos 0 */
      DWORD Type; /* bitsize 5, bitpos 8 */
      DWORD Dpl; /* bitsize 2, bitpos 13 */
      DWORD Pres; /* bitsize 1, bitpos 15 */
      DWORD LimitHi; /* bitsize 4, bitpos 16 */
      DWORD Sys; /* bitsize 1, bitpos 20 */
      DWORD Reserved_0; /* bitsize 1, bitpos 21 */
      DWORD Default_Big; /* bitsize 1, bitpos 22 */
      DWORD Granularity; /* bitsize 1, bitpos 23 */
      DWORD BaseHi; /* bitsize 8, bitpos 24 */
    } Bits; /* bitsize 32, bitpos 0 */
  } HighWord; /* bitsize 32, bitpos 32 */
};
typedef struct _LDT_ENTRY /* id 297 */ LDT_ENTRY;
typedef struct _LDT_ENTRY /* id 297 */ *PLDT_ENTRY;
typedef struct _LDT_ENTRY /* id 297 */ *LPLDT_ENTRY;
struct tagLOCALESIGNATURE { /* size 32 id 301 */
  DWORD lsUsb[4]; /* bitsize 128, bitpos 0 */
  DWORD lsCsbDefault[2]; /* bitsize 64, bitpos 128 */
  DWORD lsCsbSupported[2]; /* bitsize 64, bitpos 192 */
};
typedef struct tagLOCALESIGNATURE /* id 301 */ LOCALESIGNATURE;
struct _LOCALGROUP_MEMBERS_INFO_0 { /* size 4 id 302 */
  PSID lgrmi0_sid; /* bitsize 32, bitpos 0 */
};
typedef struct _LOCALGROUP_MEMBERS_INFO_0 /* id 302 */ LOCALGROUP_MEMBERS_INFO_0;
struct _LOCALGROUP_MEMBERS_INFO_3 { /* size 4 id 303 */
  LPWSTR lgrmi3_domainandname; /* bitsize 32, bitpos 0 */
};
typedef struct _LOCALGROUP_MEMBERS_INFO_3 /* id 303 */ LOCALGROUP_MEMBERS_INFO_3;
typedef long int FXPT16DOT16;
typedef long int *LPFXPT16DOT16;
typedef LARGE_INTEGER LUID;
typedef LARGE_INTEGER *PLUID;
struct _LUID_AND_ATTRIBUTES { /* size 12 id 304 */
  LUID Luid; /* bitsize 64, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
};
typedef struct _LUID_AND_ATTRIBUTES /* id 304 */ LUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
struct _LV_COLUMN { /* size 24 id 305 */
  UINT mask; /* bitsize 32, bitpos 0 */
  int fmt; /* bitsize 32, bitpos 32 */
  int cx; /* bitsize 32, bitpos 64 */
  LPTSTR pszText; /* bitsize 32, bitpos 96 */
  int cchTextMax; /* bitsize 32, bitpos 128 */
  int iSubItem; /* bitsize 32, bitpos 160 */
};
typedef struct _LV_COLUMN /* id 305 */ LV_COLUMN;
struct _LV_ITEM { /* size 36 id 306 */
  UINT mask; /* bitsize 32, bitpos 0 */
  int iItem; /* bitsize 32, bitpos 32 */
  int iSubItem; /* bitsize 32, bitpos 64 */
  UINT state; /* bitsize 32, bitpos 96 */
  UINT stateMask; /* bitsize 32, bitpos 128 */
  LPTSTR pszText; /* bitsize 32, bitpos 160 */
  int cchTextMax; /* bitsize 32, bitpos 192 */
  int iImage; /* bitsize 32, bitpos 224 */
  LPARAM lParam; /* bitsize 32, bitpos 256 */
};
typedef struct _LV_ITEM /* id 306 */ LV_ITEM;
struct tagLV_DISPINFO { /* size 48 id 307 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  LV_ITEM item; /* bitsize 288, bitpos 96 */
};
typedef struct tagLV_DISPINFO /* id 307 */ LV_DISPINFO;
struct _LV_FINDINFO { /* size 24 id 308 */
  UINT flags; /* bitsize 32, bitpos 0 */
  LPCTSTR psz; /* bitsize 32, bitpos 32 */
  LPARAM lParam; /* bitsize 32, bitpos 64 */
  POINT pt; /* bitsize 64, bitpos 96 */
  UINT vkDirection; /* bitsize 32, bitpos 160 */
};
typedef struct _LV_FINDINFO /* id 308 */ LV_FINDINFO;
struct _LV_HITTESTINFO { /* size 16 id 309 */
  POINT pt; /* bitsize 64, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 64 */
  int iItem; /* bitsize 32, bitpos 96 */
};
typedef struct _LV_HITTESTINFO /* id 309 */ LV_HITTESTINFO;
struct tagLV_KEYDOWN { /* size 20 id 310 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  WORD wVKey; /* bitsize 16, bitpos 96 */
  UINT flags; /* bitsize 32, bitpos 128 */
};
typedef struct tagLV_KEYDOWN /* id 310 */ LV_KEYDOWN;
struct _MAT2 { /* size 16 id 26 */
  FIXED eM11; /* bitsize 32, bitpos 0 */
  FIXED eM12; /* bitsize 32, bitpos 32 */
  FIXED eM21; /* bitsize 32, bitpos 64 */
  FIXED eM22; /* bitsize 32, bitpos 96 */
};
typedef struct _MAT2 /* id 26 */ MAT2;
struct tagMDICREATESTRUCT { /* size 36 id 311 */
  LPCTSTR szClass; /* bitsize 32, bitpos 0 */
  LPCTSTR szTitle; /* bitsize 32, bitpos 32 */
  HANDLE hOwner; /* bitsize 32, bitpos 64 */
  int x; /* bitsize 32, bitpos 96 */
  int y; /* bitsize 32, bitpos 128 */
  int cx; /* bitsize 32, bitpos 160 */
  int cy; /* bitsize 32, bitpos 192 */
  DWORD style; /* bitsize 32, bitpos 224 */
  LPARAM lParam; /* bitsize 32, bitpos 256 */
};
typedef struct tagMDICREATESTRUCT /* id 311 */ MDICREATESTRUCT;
typedef MDICREATESTRUCT *LPMDICREATESTRUCT;
struct tagMEASUREITEMSTRUCT { /* size 24 id 312 */
  UINT CtlType; /* bitsize 32, bitpos 0 */
  UINT CtlID; /* bitsize 32, bitpos 32 */
  UINT itemID; /* bitsize 32, bitpos 64 */
  UINT itemWidth; /* bitsize 32, bitpos 96 */
  UINT itemHeight; /* bitsize 32, bitpos 128 */
  DWORD itemData; /* bitsize 32, bitpos 160 */
};
typedef struct tagMEASUREITEMSTRUCT /* id 312 */ MEASUREITEMSTRUCT;
typedef struct tagMEASUREITEMSTRUCT /* id 312 */ *LPMEASUREITEMSTRUCT;
struct _MEMORY_BASIC_INFORMATION { /* size 28 id 313 */
  PVOID BaseAddress; /* bitsize 32, bitpos 0 */
  PVOID AllocationBase; /* bitsize 32, bitpos 32 */
  DWORD AllocationProtect; /* bitsize 32, bitpos 64 */
  DWORD RegionSize; /* bitsize 32, bitpos 96 */
  DWORD State; /* bitsize 32, bitpos 128 */
  DWORD Protect; /* bitsize 32, bitpos 160 */
  DWORD Type; /* bitsize 32, bitpos 192 */
};
typedef struct _MEMORY_BASIC_INFORMATION /* id 313 */ MEMORY_BASIC_INFORMATION;
typedef MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;
struct _MEMORYSTATUS { /* size 32 id 314 */
  DWORD dwLength; /* bitsize 32, bitpos 0 */
  DWORD dwMemoryLoad; /* bitsize 32, bitpos 32 */
  DWORD dwTotalPhys; /* bitsize 32, bitpos 64 */
  DWORD dwAvailPhys; /* bitsize 32, bitpos 96 */
  DWORD dwTotalPageFile; /* bitsize 32, bitpos 128 */
  DWORD dwAvailPageFile; /* bitsize 32, bitpos 160 */
  DWORD dwTotalVirtual; /* bitsize 32, bitpos 192 */
  DWORD dwAvailVirtual; /* bitsize 32, bitpos 224 */
};
typedef struct _MEMORYSTATUS /* id 314 */ MEMORYSTATUS;
typedef struct _MEMORYSTATUS /* id 314 */ *LPMEMORYSTATUS;
typedef struct %anon315 { /* size 8 */
  WORD wVersion; /* bitsize 16, bitpos 0 */
  WORD wOffset; /* bitsize 16, bitpos 16 */
  DWORD dwHelpId; /* bitsize 32, bitpos 32 */
} MENUEX_TEMPLATE_HEADER;
typedef struct %anon316 { /* size 20 */
  DWORD dwType; /* bitsize 32, bitpos 0 */
  DWORD dwState; /* bitsize 32, bitpos 32 */
  UINT uId; /* bitsize 32, bitpos 64 */
  BYTE bResInfo; /* bitsize 8, bitpos 96 */
  WCHAR szText[1]; /* bitsize 16, bitpos 112 */
  DWORD dwHelpId; /* bitsize 32, bitpos 128 */
} MENUEX_TEMPLATE_ITEM;
struct tagMENUITEMINFO { /* size 44 id 18 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT fMask; /* bitsize 32, bitpos 32 */
  UINT fType; /* bitsize 32, bitpos 64 */
  UINT fState; /* bitsize 32, bitpos 96 */
  UINT wID; /* bitsize 32, bitpos 128 */
  HMENU hSubMenu; /* bitsize 32, bitpos 160 */
  HBITMAP hbmpChecked; /* bitsize 32, bitpos 192 */
  HBITMAP hbmpUnchecked; /* bitsize 32, bitpos 224 */
  DWORD dwItemData; /* bitsize 32, bitpos 256 */
  LPTSTR dwTypeData; /* bitsize 32, bitpos 288 */
  UINT cch; /* bitsize 32, bitpos 320 */
};
typedef struct tagMENUITEMINFO /* id 18 */ MENUITEMINFO;
typedef struct tagMENUITEMINFO /* id 18 */ *LPMENUITEMINFO;
typedef MENUITEMINFO *LPCMENUITEMINFO;
typedef struct %anon317 { /* size 6 */
  WORD mtOption; /* bitsize 16, bitpos 0 */
  WORD mtID; /* bitsize 16, bitpos 16 */
  WCHAR mtString[1]; /* bitsize 16, bitpos 32 */
} MENUITEMTEMPLATE;
typedef struct %anon318 { /* size 4 */
  WORD versionNumber; /* bitsize 16, bitpos 0 */
  WORD offset; /* bitsize 16, bitpos 16 */
} MENUITEMTEMPLATEHEADER;
typedef void MENUTEMPLATE;
typedef void *LPMENUTEMPLATE;
struct tagMETAFILEPICT { /* size 16 id 319 */
  LONG mm; /* bitsize 32, bitpos 0 */
  LONG xExt; /* bitsize 32, bitpos 32 */
  LONG yExt; /* bitsize 32, bitpos 64 */
  HMETAFILE hMF; /* bitsize 32, bitpos 96 */
};
typedef struct tagMETAFILEPICT /* id 319 */ METAFILEPICT;
typedef struct tagMETAFILEPICT /* id 319 */ *PMETAFILEPICT;
typedef struct tagMETAFILEPICT /* id 319 */ *LPMETAFILEPICT;
struct tagMETAHEADER { /* size 18 id 320 */
  WORD mtType; /* bitsize 16, bitpos 0 */
  WORD mtHeaderSize; /* bitsize 16, bitpos 16 */
  WORD mtVersion; /* bitsize 16, bitpos 32 */
  DWORD mtSize; /* bitsize 32, bitpos 48 */
  WORD mtNoObjects; /* bitsize 16, bitpos 80 */
  DWORD mtMaxRecord; /* bitsize 32, bitpos 96 */
  WORD mtNoParameters; /* bitsize 16, bitpos 128 */
};
typedef struct tagMETAHEADER /* id 320 */ METAHEADER;
struct tagMETARECORD { /* size 8 id 321 */
  DWORD rdSize; /* bitsize 32, bitpos 0 */
  WORD rdFunction; /* bitsize 16, bitpos 32 */
  WORD rdParm[1]; /* bitsize 16, bitpos 48 */
};
typedef struct tagMETARECORD /* id 321 */ METARECORD;
typedef struct tagMETARECORD /* id 321 */ *LPMETARECORD;
struct tagMINIMIZEDMETRICS { /* size 20 id 322 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iWidth; /* bitsize 32, bitpos 32 */
  int iHorzGap; /* bitsize 32, bitpos 64 */
  int iVertGap; /* bitsize 32, bitpos 96 */
  int iArrange; /* bitsize 32, bitpos 128 */
};
typedef struct tagMINIMIZEDMETRICS /* id 322 */ MINIMIZEDMETRICS;
typedef struct tagMINIMIZEDMETRICS /* id 322 */ *LPMINIMIZEDMETRICS;
struct tagMINMAXINFO { /* size 40 id 323 */
  POINT ptReserved; /* bitsize 64, bitpos 0 */
  POINT ptMaxSize; /* bitsize 64, bitpos 64 */
  POINT ptMaxPosition; /* bitsize 64, bitpos 128 */
  POINT ptMinTrackSize; /* bitsize 64, bitpos 192 */
  POINT ptMaxTrackSize; /* bitsize 64, bitpos 256 */
};
typedef struct tagMINMAXINFO /* id 323 */ MINMAXINFO;
typedef struct tagMINMAXINFO /* id 323 */ *LPMINMAXINFO;
struct modemdevcaps_tag { /* size 80 id 324 */
  DWORD dwActualSize; /* bitsize 32, bitpos 0 */
  DWORD dwRequiredSize; /* bitsize 32, bitpos 32 */
  DWORD dwDevSpecificOffset; /* bitsize 32, bitpos 64 */
  DWORD dwDevSpecificSize; /* bitsize 32, bitpos 96 */
  DWORD dwModemProviderVersion; /* bitsize 32, bitpos 128 */
  DWORD dwModemManufacturerOffset; /* bitsize 32, bitpos 160 */
  DWORD dwModemManufacturerSize; /* bitsize 32, bitpos 192 */
  DWORD dwModemModelOffset; /* bitsize 32, bitpos 224 */
  DWORD dwModemModelSize; /* bitsize 32, bitpos 256 */
  DWORD dwModemVersionOffset; /* bitsize 32, bitpos 288 */
  DWORD dwModemVersionSize; /* bitsize 32, bitpos 320 */
  DWORD dwDialOptions; /* bitsize 32, bitpos 352 */
  DWORD dwCallSetupFailTimer; /* bitsize 32, bitpos 384 */
  DWORD dwInactivityTimeout; /* bitsize 32, bitpos 416 */
  DWORD dwSpeakerVolume; /* bitsize 32, bitpos 448 */
  DWORD dwSpeakerMode; /* bitsize 32, bitpos 480 */
  DWORD dwModemOptions; /* bitsize 32, bitpos 512 */
  DWORD dwMaxDTERate; /* bitsize 32, bitpos 544 */
  DWORD dwMaxDCERate; /* bitsize 32, bitpos 576 */
  BYTE abVariablePortion[1]; /* bitsize 8, bitpos 608 */
};
typedef struct modemdevcaps_tag /* id 324 */ MODEMDEVCAPS;
typedef struct modemdevcaps_tag /* id 324 */ *PMODEMDEVCAPS;
typedef struct modemdevcaps_tag /* id 324 */ *LPMODEMDEVCAPS;
struct modemsettings_tag { /* size 48 id 325 */
  DWORD dwActualSize; /* bitsize 32, bitpos 0 */
  DWORD dwRequiredSize; /* bitsize 32, bitpos 32 */
  DWORD dwDevSpecificOffset; /* bitsize 32, bitpos 64 */
  DWORD dwDevSpecificSize; /* bitsize 32, bitpos 96 */
  DWORD dwCallSetupFailTimer; /* bitsize 32, bitpos 128 */
  DWORD dwInactivityTimeout; /* bitsize 32, bitpos 160 */
  DWORD dwSpeakerVolume; /* bitsize 32, bitpos 192 */
  DWORD dwSpeakerMode; /* bitsize 32, bitpos 224 */
  DWORD dwPreferredModemOptions; /* bitsize 32, bitpos 256 */
  DWORD dwNegotiatedModemOptions; /* bitsize 32, bitpos 288 */
  DWORD dwNegotiatedDCERate; /* bitsize 32, bitpos 320 */
  BYTE abVariablePortion[1]; /* bitsize 8, bitpos 352 */
};
typedef struct modemsettings_tag /* id 325 */ MODEMSETTINGS;
typedef struct modemsettings_tag /* id 325 */ *PMODEMSETTINGS;
typedef struct modemsettings_tag /* id 325 */ *LPMODEMSETTINGS;
struct tagMONCBSTRUCT { /* size 124 id 326 */
  UINT cb; /* bitsize 32, bitpos 0 */
  DWORD dwTime; /* bitsize 32, bitpos 32 */
  HANDLE hTask; /* bitsize 32, bitpos 64 */
  DWORD dwRet; /* bitsize 32, bitpos 96 */
  UINT wType; /* bitsize 32, bitpos 128 */
  UINT wFmt; /* bitsize 32, bitpos 160 */
  HCONV hConv; /* bitsize 32, bitpos 192 */
  HSZ hsz1; /* bitsize 32, bitpos 224 */
  HSZ hsz2; /* bitsize 32, bitpos 256 */
  HDDEDATA hData; /* bitsize 32, bitpos 288 */
  DWORD dwData1; /* bitsize 32, bitpos 320 */
  DWORD dwData2; /* bitsize 32, bitpos 352 */
  CONVCONTEXT cc; /* bitsize 320, bitpos 384 */
  DWORD cbData; /* bitsize 32, bitpos 704 */
  DWORD Data[8]; /* bitsize 256, bitpos 736 */
};
typedef struct tagMONCBSTRUCT /* id 326 */ MONCBSTRUCT;
struct tagMONCONVSTRUCT { /* size 32 id 327 */
  UINT cb; /* bitsize 32, bitpos 0 */
  WINBOOL fConnect; /* bitsize 32, bitpos 32 */
  DWORD dwTime; /* bitsize 32, bitpos 64 */
  HANDLE hTask; /* bitsize 32, bitpos 96 */
  HSZ hszSvc; /* bitsize 32, bitpos 128 */
  HSZ hszTopic; /* bitsize 32, bitpos 160 */
  HCONV hConvClient; /* bitsize 32, bitpos 192 */
  HCONV hConvServer; /* bitsize 32, bitpos 224 */
};
typedef struct tagMONCONVSTRUCT /* id 327 */ MONCONVSTRUCT;
struct tagMONERRSTRUCT { /* size 16 id 328 */
  UINT cb; /* bitsize 32, bitpos 0 */
  UINT wLastError; /* bitsize 32, bitpos 32 */
  DWORD dwTime; /* bitsize 32, bitpos 64 */
  HANDLE hTask; /* bitsize 32, bitpos 96 */
};
typedef struct tagMONERRSTRUCT /* id 328 */ MONERRSTRUCT;
struct tagMONHSZSTRUCT { /* size 24 id 329 */
  UINT cb; /* bitsize 32, bitpos 0 */
  WINBOOL fsAction; /* bitsize 32, bitpos 32 */
  DWORD dwTime; /* bitsize 32, bitpos 64 */
  HSZ hsz; /* bitsize 32, bitpos 96 */
  HANDLE hTask; /* bitsize 32, bitpos 128 */
  TCHAR str[1]; /* bitsize 8, bitpos 160 */
};
typedef struct tagMONHSZSTRUCT /* id 329 */ MONHSZSTRUCT;
struct _MONITOR_INFO_1 { /* size 4 id 330 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
};
typedef struct _MONITOR_INFO_1 /* id 330 */ MONITOR_INFO_1;
struct _MONITOR_INFO_2 { /* size 12 id 331 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
  LPTSTR pEnvironment; /* bitsize 32, bitpos 32 */
  LPTSTR pDLLName; /* bitsize 32, bitpos 64 */
};
typedef struct _MONITOR_INFO_2 /* id 331 */ MONITOR_INFO_2;
struct tagMONLINKSTRUCT { /* size 48 id 332 */
  UINT cb; /* bitsize 32, bitpos 0 */
  DWORD dwTime; /* bitsize 32, bitpos 32 */
  HANDLE hTask; /* bitsize 32, bitpos 64 */
  WINBOOL fEstablished; /* bitsize 32, bitpos 96 */
  WINBOOL fNoData; /* bitsize 32, bitpos 128 */
  HSZ hszSvc; /* bitsize 32, bitpos 160 */
  HSZ hszTopic; /* bitsize 32, bitpos 192 */
  HSZ hszItem; /* bitsize 32, bitpos 224 */
  UINT wFmt; /* bitsize 32, bitpos 256 */
  WINBOOL fServer; /* bitsize 32, bitpos 288 */
  HCONV hConvServer; /* bitsize 32, bitpos 320 */
  HCONV hConvClient; /* bitsize 32, bitpos 352 */
};
typedef struct tagMONLINKSTRUCT /* id 332 */ MONLINKSTRUCT;
struct tagMONMSGSTRUCT { /* size 72 id 333 */
  UINT cb; /* bitsize 32, bitpos 0 */
  HWND hwndTo; /* bitsize 32, bitpos 32 */
  DWORD dwTime; /* bitsize 32, bitpos 64 */
  HANDLE hTask; /* bitsize 32, bitpos 96 */
  UINT wMsg; /* bitsize 32, bitpos 128 */
  WPARAM wParam; /* bitsize 32, bitpos 160 */
  LPARAM lParam; /* bitsize 32, bitpos 192 */
  DDEML_MSG_HOOK_DATA dmhd; /* bitsize 352, bitpos 224 */
};
typedef struct tagMONMSGSTRUCT /* id 333 */ MONMSGSTRUCT;
struct tagMOUSEHOOKSTRUCT { /* size 20 id 334 */
  POINT pt; /* bitsize 64, bitpos 0 */
  HWND hwnd; /* bitsize 32, bitpos 64 */
  UINT wHitTestCode; /* bitsize 32, bitpos 96 */
  DWORD dwExtraInfo; /* bitsize 32, bitpos 128 */
};
typedef struct tagMOUSEHOOKSTRUCT /* id 334 */ MOUSEHOOKSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT /* id 334 */ *PMOUSEHOOKSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT /* id 334 */ *LPMOUSEHOOKSTRUCT;
struct _MOUSEKEYS { /* size 28 id 335 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iMaxSpeed; /* bitsize 32, bitpos 64 */
  DWORD iTimeToMaxSpeed; /* bitsize 32, bitpos 96 */
  DWORD iCtrlSpeed; /* bitsize 32, bitpos 128 */
  DWORD dwReserved1; /* bitsize 32, bitpos 160 */
  DWORD dwReserved2; /* bitsize 32, bitpos 192 */
};
typedef struct _MOUSEKEYS /* id 335 */ MOUSEKEYS;
struct tagMSG { /* size 28 id 13 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  UINT message; /* bitsize 32, bitpos 32 */
  WPARAM wParam; /* bitsize 32, bitpos 64 */
  LPARAM lParam; /* bitsize 32, bitpos 96 */
  DWORD time; /* bitsize 32, bitpos 128 */
  POINT pt; /* bitsize 64, bitpos 160 */
};
typedef struct tagMSG /* id 13 */ MSG;
typedef struct tagMSG /* id 13 */ *LPMSG;
typedef void (*MSGBOXCALLBACK) (/* unknown */);
typedef struct %anon21 MSGBOXPARAMS;
typedef struct %anon21 *PMSGBOXPARAMS;
typedef struct %anon21 *LPMSGBOXPARAMS;
struct _msgfilter { /* size 24 id 336 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  UINT msg; /* bitsize 32, bitpos 96 */
  WPARAM wParam; /* bitsize 32, bitpos 128 */
  LPARAM lParam; /* bitsize 32, bitpos 160 */
};
typedef struct _msgfilter /* id 336 */ MSGFILTER;
struct tagMULTIKEYHELP { /* size 8 id 337 */
  DWORD mkSize; /* bitsize 32, bitpos 0 */
  TCHAR mkKeylist; /* bitsize 8, bitpos 32 */
  TCHAR szKeyphrase[1]; /* bitsize 8, bitpos 40 */
};
typedef struct tagMULTIKEYHELP /* id 337 */ MULTIKEYHELP;
struct _NAME_BUFFER { /* size 18 id 338 */
  UCHAR name[16]; /* bitsize 128, bitpos 0 */
  UCHAR name_num; /* bitsize 8, bitpos 128 */
  UCHAR name_flags; /* bitsize 8, bitpos 136 */
};
typedef struct _NAME_BUFFER /* id 338 */ NAME_BUFFER;
struct _NCB { /* size 64 id 339 */
  UCHAR ncb_command; /* bitsize 8, bitpos 0 */
  UCHAR ncb_retcode; /* bitsize 8, bitpos 8 */
  UCHAR ncb_lsn; /* bitsize 8, bitpos 16 */
  UCHAR ncb_num; /* bitsize 8, bitpos 24 */
  PUCHAR ncb_buffer; /* bitsize 32, bitpos 32 */
  WORD ncb_length; /* bitsize 16, bitpos 64 */
  UCHAR ncb_callname[16]; /* bitsize 128, bitpos 80 */
  UCHAR ncb_name[16]; /* bitsize 128, bitpos 208 */
  UCHAR ncb_rto; /* bitsize 8, bitpos 336 */
  UCHAR ncb_sto; /* bitsize 8, bitpos 344 */
  void (*ncb_post) (/* unknown */); /* bitsize 32, bitpos 352 */
  UCHAR ncb_lana_num; /* bitsize 8, bitpos 384 */
  UCHAR ncb_cmd_cplt; /* bitsize 8, bitpos 392 */
  UCHAR ncb_reserve[10]; /* bitsize 80, bitpos 400 */
  HANDLE ncb_event; /* bitsize 32, bitpos 480 */
};
typedef struct _NCB /* id 339 */ NCB;
struct _NCCALCSIZE_PARAMS { /* size 52 id 340 */
  RECT rgrc[3]; /* bitsize 384, bitpos 0 */
  PWINDOWPOS lppos; /* bitsize 32, bitpos 384 */
};
typedef struct _NCCALCSIZE_PARAMS /* id 340 */ NCCALCSIZE_PARAMS;
struct _NDDESHAREINFO { /* size 48 id 341 */
  LONG lRevision; /* bitsize 32, bitpos 0 */
  LPTSTR lpszShareName; /* bitsize 32, bitpos 32 */
  LONG lShareType; /* bitsize 32, bitpos 64 */
  LPTSTR lpszAppTopicList; /* bitsize 32, bitpos 96 */
  LONG fSharedFlag; /* bitsize 32, bitpos 128 */
  LONG fService; /* bitsize 32, bitpos 160 */
  LONG fStartAppFlag; /* bitsize 32, bitpos 192 */
  LONG nCmdShow; /* bitsize 32, bitpos 224 */
  LONG qModifyId[2]; /* bitsize 64, bitpos 256 */
  LONG cNumItems; /* bitsize 32, bitpos 320 */
  LPTSTR lpszItemList; /* bitsize 32, bitpos 352 */
};
typedef struct _NDDESHAREINFO /* id 341 */ NDDESHAREINFO;
struct _NETRESOURCE { /* size 32 id 55 */
  DWORD dwScope; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
  DWORD dwDisplayType; /* bitsize 32, bitpos 64 */
  DWORD dwUsage; /* bitsize 32, bitpos 96 */
  LPTSTR lpLocalName; /* bitsize 32, bitpos 128 */
  LPTSTR lpRemoteName; /* bitsize 32, bitpos 160 */
  LPTSTR lpComment; /* bitsize 32, bitpos 192 */
  LPTSTR lpProvider; /* bitsize 32, bitpos 224 */
};
typedef struct _NETRESOURCE /* id 55 */ NETRESOURCE;
typedef struct _NETRESOURCE /* id 55 */ *LPNETRESOURCE;
struct tagNEWCPLINFO { /* size 244 id 342 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD dwHelpContext; /* bitsize 32, bitpos 64 */
  LONG lData; /* bitsize 32, bitpos 96 */
  HICON hIcon; /* bitsize 32, bitpos 128 */
  TCHAR szName[32]; /* bitsize 256, bitpos 160 */
  TCHAR szInfo[64]; /* bitsize 512, bitpos 416 */
  TCHAR szHelpFile[128]; /* bitsize 1024, bitpos 928 */
};
typedef struct tagNEWCPLINFO /* id 342 */ NEWCPLINFO;
struct tagNEWTEXTMETRIC { /* size 72 id 343 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BCHAR tmFirstChar; /* bitsize 8, bitpos 352 */
  BCHAR tmLastChar; /* bitsize 8, bitpos 360 */
  BCHAR tmDefaultChar; /* bitsize 8, bitpos 368 */
  BCHAR tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
  DWORD ntmFlags; /* bitsize 32, bitpos 448 */
  UINT ntmSizeEM; /* bitsize 32, bitpos 480 */
  UINT ntmCellHeight; /* bitsize 32, bitpos 512 */
  UINT ntmAvgWidth; /* bitsize 32, bitpos 544 */
};
typedef struct tagNEWTEXTMETRIC /* id 343 */ NEWTEXTMETRIC;
struct tagNEWTEXTMETRICEX { /* size 96 id 344 */
  NEWTEXTMETRIC ntmentm; /* bitsize 576, bitpos 0 */
  FONTSIGNATURE ntmeFontSignature; /* bitsize 192, bitpos 576 */
};
typedef struct tagNEWTEXTMETRICEX /* id 344 */ NEWTEXTMETRICEX;
struct tagNM_LISTVIEW { /* size 44 id 345 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  int iItem; /* bitsize 32, bitpos 96 */
  int iSubItem; /* bitsize 32, bitpos 128 */
  UINT uNewState; /* bitsize 32, bitpos 160 */
  UINT uOldState; /* bitsize 32, bitpos 192 */
  UINT uChanged; /* bitsize 32, bitpos 224 */
  POINT ptAction; /* bitsize 64, bitpos 256 */
  LPARAM lParam; /* bitsize 32, bitpos 320 */
};
typedef struct tagNM_LISTVIEW /* id 345 */ NM_LISTVIEW;
typedef struct _TREEITEM /* id 0 */ *HTREEITEM;
struct _TV_ITEM { /* size 40 id 346 */
  UINT mask; /* bitsize 32, bitpos 0 */
  HTREEITEM hItem; /* bitsize 32, bitpos 32 */
  UINT state; /* bitsize 32, bitpos 64 */
  UINT stateMask; /* bitsize 32, bitpos 96 */
  LPTSTR pszText; /* bitsize 32, bitpos 128 */
  int cchTextMax; /* bitsize 32, bitpos 160 */
  int iImage; /* bitsize 32, bitpos 192 */
  int iSelectedImage; /* bitsize 32, bitpos 224 */
  int cChildren; /* bitsize 32, bitpos 256 */
  LPARAM lParam; /* bitsize 32, bitpos 288 */
};
typedef struct _TV_ITEM /* id 346 */ TV_ITEM;
typedef struct _TV_ITEM /* id 346 */ *LPTV_ITEM;
struct _NM_TREEVIEW { /* size 104 id 347 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  UINT action; /* bitsize 32, bitpos 96 */
  TV_ITEM itemOld; /* bitsize 320, bitpos 128 */
  TV_ITEM itemNew; /* bitsize 320, bitpos 448 */
  POINT ptDrag; /* bitsize 64, bitpos 768 */
};
typedef struct _NM_TREEVIEW /* id 347 */ NM_TREEVIEW;
typedef NM_TREEVIEW *LPNM_TREEVIEW;
struct _NM_UPDOWN { /* size 20 id 348 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  int iPos; /* bitsize 32, bitpos 96 */
  int iDelta; /* bitsize 32, bitpos 128 */
};
typedef struct _NM_UPDOWN /* id 348 */ NM_UPDOWNW;
struct tagNONCLIENTMETRICS { /* size 340 id 349 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  int iBorderWidth; /* bitsize 32, bitpos 32 */
  int iScrollWidth; /* bitsize 32, bitpos 64 */
  int iScrollHeight; /* bitsize 32, bitpos 96 */
  int iCaptionWidth; /* bitsize 32, bitpos 128 */
  int iCaptionHeight; /* bitsize 32, bitpos 160 */
  LOGFONT lfCaptionFont; /* bitsize 480, bitpos 192 */
  int iSmCaptionWidth; /* bitsize 32, bitpos 672 */
  int iSmCaptionHeight; /* bitsize 32, bitpos 704 */
  LOGFONT lfSmCaptionFont; /* bitsize 480, bitpos 736 */
  int iMenuWidth; /* bitsize 32, bitpos 1216 */
  int iMenuHeight; /* bitsize 32, bitpos 1248 */
  LOGFONT lfMenuFont; /* bitsize 480, bitpos 1280 */
  LOGFONT lfStatusFont; /* bitsize 480, bitpos 1760 */
  LOGFONT lfMessageFont; /* bitsize 480, bitpos 2240 */
};
typedef struct tagNONCLIENTMETRICS /* id 349 */ NONCLIENTMETRICS;
typedef struct tagNONCLIENTMETRICS /* id 349 */ *LPNONCLIENTMETRICS;
struct _SERVICE_ADDRESS { /* size 24 id 350 */
  DWORD dwAddressType; /* bitsize 32, bitpos 0 */
  DWORD dwAddressFlags; /* bitsize 32, bitpos 32 */
  DWORD dwAddressLength; /* bitsize 32, bitpos 64 */
  DWORD dwPrincipalLength; /* bitsize 32, bitpos 96 */
  BYTE *lpAddress; /* bitsize 32, bitpos 128 */
  BYTE *lpPrincipal; /* bitsize 32, bitpos 160 */
};
typedef struct _SERVICE_ADDRESS /* id 350 */ SERVICE_ADDRESS;
struct _SERVICE_ADDRESSES { /* size 28 id 351 */
  DWORD dwAddressCount; /* bitsize 32, bitpos 0 */
  SERVICE_ADDRESS Addresses[1]; /* bitsize 192, bitpos 32 */
};
typedef struct _SERVICE_ADDRESSES /* id 351 */ SERVICE_ADDRESSES;
typedef struct _SERVICE_ADDRESSES /* id 351 */ *LPSERVICE_ADDRESSES;
struct _GUID { /* size 16 id 352 */
  long unsigned int Data1; /* bitsize 32, bitpos 0 */
  short unsigned int Data2; /* bitsize 16, bitpos 32 */
  short unsigned int Data3; /* bitsize 16, bitpos 48 */
  unsigned char Data4[8]; /* bitsize 64, bitpos 64 */
};
typedef struct _GUID /* id 352 */ GUID;
typedef struct _GUID /* id 352 */ *LPGUID;
typedef GUID CLSID;
typedef GUID *LPCLSID;
struct _SERVICE_INFO { /* size 44 id 353 */
  LPGUID lpServiceType; /* bitsize 32, bitpos 0 */
  LPTSTR lpServiceName; /* bitsize 32, bitpos 32 */
  LPTSTR lpComment; /* bitsize 32, bitpos 64 */
  LPTSTR lpLocale; /* bitsize 32, bitpos 96 */
  DWORD dwDisplayHint; /* bitsize 32, bitpos 128 */
  DWORD dwVersion; /* bitsize 32, bitpos 160 */
  DWORD dwTime; /* bitsize 32, bitpos 192 */
  LPTSTR lpMachineName; /* bitsize 32, bitpos 224 */
  LPSERVICE_ADDRESSES lpServiceAddress; /* bitsize 32, bitpos 256 */
  BLOB ServiceSpecificInfo; /* bitsize 64, bitpos 288 */
};
typedef struct _SERVICE_INFO /* id 353 */ SERVICE_INFO;
struct _NS_SERVICE_INFO { /* size 48 id 354 */
  DWORD dwNameSpace; /* bitsize 32, bitpos 0 */
  SERVICE_INFO ServiceInfo; /* bitsize 352, bitpos 32 */
};
typedef struct _NS_SERVICE_INFO /* id 354 */ NS_SERVICE_INFO;
struct _numberfmt { /* size 24 id 49 */
  UINT NumDigits; /* bitsize 32, bitpos 0 */
  UINT LeadingZero; /* bitsize 32, bitpos 32 */
  UINT Grouping; /* bitsize 32, bitpos 64 */
  LPTSTR lpDecimalSep; /* bitsize 32, bitpos 96 */
  LPTSTR lpThousandSep; /* bitsize 32, bitpos 128 */
  UINT NegativeOrder; /* bitsize 32, bitpos 160 */
};
typedef struct _numberfmt /* id 49 */ NUMBERFMT;
struct _OFSTRUCT { /* size 136 id 355 */
  BYTE cBytes; /* bitsize 8, bitpos 0 */
  BYTE fFixedDisk; /* bitsize 8, bitpos 8 */
  WORD nErrCode; /* bitsize 16, bitpos 16 */
  WORD Reserved1; /* bitsize 16, bitpos 32 */
  WORD Reserved2; /* bitsize 16, bitpos 48 */
  CHAR szPathName[128]; /* bitsize 1024, bitpos 64 */
};
typedef struct _OFSTRUCT /* id 355 */ OFSTRUCT;
typedef struct _OFSTRUCT /* id 355 */ *LPOFSTRUCT;
struct tagOFNA { /* size 76 id 36 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 64 */
  LPCSTR lpstrFilter; /* bitsize 32, bitpos 96 */
  LPSTR lpstrCustomFilter; /* bitsize 32, bitpos 128 */
  DWORD nMaxCustFilter; /* bitsize 32, bitpos 160 */
  DWORD nFilterIndex; /* bitsize 32, bitpos 192 */
  LPSTR lpstrFile; /* bitsize 32, bitpos 224 */
  DWORD nMaxFile; /* bitsize 32, bitpos 256 */
  LPSTR lpstrFileTitle; /* bitsize 32, bitpos 288 */
  DWORD nMaxFileTitle; /* bitsize 32, bitpos 320 */
  LPCSTR lpstrInitialDir; /* bitsize 32, bitpos 352 */
  LPCSTR lpstrTitle; /* bitsize 32, bitpos 384 */
  DWORD Flags; /* bitsize 32, bitpos 416 */
  WORD nFileOffset; /* bitsize 16, bitpos 448 */
  WORD nFileExtension; /* bitsize 16, bitpos 464 */
  LPCSTR lpstrDefExt; /* bitsize 32, bitpos 480 */
  DWORD lCustData; /* bitsize 32, bitpos 512 */
  LPOFNHOOKPROC lpfnHook; /* bitsize 32, bitpos 544 */
  LPCSTR lpTemplateName; /* bitsize 32, bitpos 576 */
};
typedef struct tagOFNA /* id 36 */ OPENFILENAMEA;
typedef struct tagOFNA /* id 36 */ *LPOPENFILENAMEA;
struct tagOFNW { /* size 76 id 356 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 64 */
  LPCWSTR lpstrFilter; /* bitsize 32, bitpos 96 */
  LPWSTR lpstrCustomFilter; /* bitsize 32, bitpos 128 */
  DWORD nMaxCustFilter; /* bitsize 32, bitpos 160 */
  DWORD nFilterIndex; /* bitsize 32, bitpos 192 */
  LPWSTR lpstrFile; /* bitsize 32, bitpos 224 */
  DWORD nMaxFile; /* bitsize 32, bitpos 256 */
  LPWSTR lpstrFileTitle; /* bitsize 32, bitpos 288 */
  DWORD nMaxFileTitle; /* bitsize 32, bitpos 320 */
  LPCWSTR lpstrInitialDir; /* bitsize 32, bitpos 352 */
  LPCWSTR lpstrTitle; /* bitsize 32, bitpos 384 */
  DWORD Flags; /* bitsize 32, bitpos 416 */
  WORD nFileOffset; /* bitsize 16, bitpos 448 */
  WORD nFileExtension; /* bitsize 16, bitpos 464 */
  LPCWSTR lpstrDefExt; /* bitsize 32, bitpos 480 */
  DWORD lCustData; /* bitsize 32, bitpos 512 */
  LPOFNHOOKPROC lpfnHook; /* bitsize 32, bitpos 544 */
  LPCWSTR lpTemplateName; /* bitsize 32, bitpos 576 */
};
typedef struct tagOFNW /* id 356 */ OPENFILENAMEW;
typedef struct tagOFNW /* id 356 */ *LPOPENFILENAMEW;
typedef OPENFILENAMEA OPENFILENAME;
typedef OPENFILENAME *LPOPENFILENAME;
struct _OFNOTIFY { /* size 20 id 357 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  LPOPENFILENAME lpOFN; /* bitsize 32, bitpos 96 */
  LPTSTR pszFile; /* bitsize 32, bitpos 128 */
};
typedef struct _OFNOTIFY /* id 357 */ OFNOTIFY;
typedef struct _OFNOTIFY /* id 357 */ *LPOFNOTIFY;
struct _OSVERSIONINFO { /* size 148 id 45 */
  DWORD dwOSVersionInfoSize; /* bitsize 32, bitpos 0 */
  DWORD dwMajorVersion; /* bitsize 32, bitpos 32 */
  DWORD dwMinorVersion; /* bitsize 32, bitpos 64 */
  DWORD dwBuildNumber; /* bitsize 32, bitpos 96 */
  DWORD dwPlatformId; /* bitsize 32, bitpos 128 */
  TCHAR szCSDVersion[128]; /* bitsize 1024, bitpos 160 */
};
typedef struct _OSVERSIONINFO /* id 45 */ OSVERSIONINFO;
typedef struct _OSVERSIONINFO /* id 45 */ *POSVERSIONINFO;
typedef struct _OSVERSIONINFO /* id 45 */ *LPOSVERSIONINFO;
struct tagTEXTMETRIC { /* size 56 id 30 */
  LONG tmHeight; /* bitsize 32, bitpos 0 */
  LONG tmAscent; /* bitsize 32, bitpos 32 */
  LONG tmDescent; /* bitsize 32, bitpos 64 */
  LONG tmInternalLeading; /* bitsize 32, bitpos 96 */
  LONG tmExternalLeading; /* bitsize 32, bitpos 128 */
  LONG tmAveCharWidth; /* bitsize 32, bitpos 160 */
  LONG tmMaxCharWidth; /* bitsize 32, bitpos 192 */
  LONG tmWeight; /* bitsize 32, bitpos 224 */
  LONG tmOverhang; /* bitsize 32, bitpos 256 */
  LONG tmDigitizedAspectX; /* bitsize 32, bitpos 288 */
  LONG tmDigitizedAspectY; /* bitsize 32, bitpos 320 */
  BCHAR tmFirstChar; /* bitsize 8, bitpos 352 */
  BCHAR tmLastChar; /* bitsize 8, bitpos 360 */
  BCHAR tmDefaultChar; /* bitsize 8, bitpos 368 */
  BCHAR tmBreakChar; /* bitsize 8, bitpos 376 */
  BYTE tmItalic; /* bitsize 8, bitpos 384 */
  BYTE tmUnderlined; /* bitsize 8, bitpos 392 */
  BYTE tmStruckOut; /* bitsize 8, bitpos 400 */
  BYTE tmPitchAndFamily; /* bitsize 8, bitpos 408 */
  BYTE tmCharSet; /* bitsize 8, bitpos 416 */
};
typedef struct tagTEXTMETRIC /* id 30 */ TEXTMETRIC;
typedef struct tagTEXTMETRIC /* id 30 */ *LPTEXTMETRIC;
struct _OUTLINETEXTMETRIC { /* size 212 id 27 */
  UINT otmSize; /* bitsize 32, bitpos 0 */
  TEXTMETRIC otmTextMetrics; /* bitsize 448, bitpos 32 */
  BYTE otmFiller; /* bitsize 8, bitpos 480 */
  PANOSE otmPanoseNumber; /* bitsize 80, bitpos 488 */
  UINT otmfsSelection; /* bitsize 32, bitpos 576 */
  UINT otmfsType; /* bitsize 32, bitpos 608 */
  int otmsCharSlopeRise; /* bitsize 32, bitpos 640 */
  int otmsCharSlopeRun; /* bitsize 32, bitpos 672 */
  int otmItalicAngle; /* bitsize 32, bitpos 704 */
  UINT otmEMSquare; /* bitsize 32, bitpos 736 */
  int otmAscent; /* bitsize 32, bitpos 768 */
  int otmDescent; /* bitsize 32, bitpos 800 */
  UINT otmLineGap; /* bitsize 32, bitpos 832 */
  UINT otmsCapEmHeight; /* bitsize 32, bitpos 864 */
  UINT otmsXHeight; /* bitsize 32, bitpos 896 */
  RECT otmrcFontBox; /* bitsize 128, bitpos 928 */
  int otmMacAscent; /* bitsize 32, bitpos 1056 */
  int otmMacDescent; /* bitsize 32, bitpos 1088 */
  UINT otmMacLineGap; /* bitsize 32, bitpos 1120 */
  UINT otmusMinimumPPEM; /* bitsize 32, bitpos 1152 */
  POINT otmptSubscriptSize; /* bitsize 64, bitpos 1184 */
  POINT otmptSubscriptOffset; /* bitsize 64, bitpos 1248 */
  POINT otmptSuperscriptSize; /* bitsize 64, bitpos 1312 */
  POINT otmptSuperscriptOffset; /* bitsize 64, bitpos 1376 */
  UINT otmsStrikeoutSize; /* bitsize 32, bitpos 1440 */
  int otmsStrikeoutPosition; /* bitsize 32, bitpos 1472 */
  int otmsUnderscoreSize; /* bitsize 32, bitpos 1504 */
  int otmsUnderscorePosition; /* bitsize 32, bitpos 1536 */
  PSTR otmpFamilyName; /* bitsize 32, bitpos 1568 */
  PSTR otmpFaceName; /* bitsize 32, bitpos 1600 */
  PSTR otmpStyleName; /* bitsize 32, bitpos 1632 */
  PSTR otmpFullName; /* bitsize 32, bitpos 1664 */
};
typedef struct _OUTLINETEXTMETRIC /* id 27 */ OUTLINETEXTMETRIC;
typedef struct _OUTLINETEXTMETRIC /* id 27 */ *LPOUTLINETEXTMETRIC;
struct _OVERLAPPED { /* size 20 id 358 */
  DWORD Internal; /* bitsize 32, bitpos 0 */
  DWORD InternalHigh; /* bitsize 32, bitpos 32 */
  DWORD Offset; /* bitsize 32, bitpos 64 */
  DWORD OffsetHigh; /* bitsize 32, bitpos 96 */
  HANDLE hEvent; /* bitsize 32, bitpos 128 */
};
typedef struct _OVERLAPPED /* id 358 */ OVERLAPPED;
typedef struct _OVERLAPPED /* id 358 */ *LPOVERLAPPED;
struct tagPSD { /* size 84 id 41 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HGLOBAL hDevMode; /* bitsize 32, bitpos 64 */
  HGLOBAL hDevNames; /* bitsize 32, bitpos 96 */
  DWORD Flags; /* bitsize 32, bitpos 128 */
  POINT ptPaperSize; /* bitsize 64, bitpos 160 */
  RECT rtMinMargin; /* bitsize 128, bitpos 224 */
  RECT rtMargin; /* bitsize 128, bitpos 352 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 480 */
  LPARAM lCustData; /* bitsize 32, bitpos 512 */
  LPPAGESETUPHOOK lpfnPageSetupHook; /* bitsize 32, bitpos 544 */
  LPPAGEPAINTHOOK lpfnPagePaintHook; /* bitsize 32, bitpos 576 */
  LPCTSTR lpPageSetupTemplateName; /* bitsize 32, bitpos 608 */
  HGLOBAL hPageSetupTemplate; /* bitsize 32, bitpos 640 */
};
typedef struct tagPSD /* id 41 */ PAGESETUPDLG;
typedef struct tagPSD /* id 41 */ *LPPAGESETUPDLG;
struct tagPAINTSTRUCT { /* size 64 id 359 */
  HDC hdc; /* bitsize 32, bitpos 0 */
  WINBOOL fErase; /* bitsize 32, bitpos 32 */
  RECT rcPaint; /* bitsize 128, bitpos 64 */
  WINBOOL fRestore; /* bitsize 32, bitpos 192 */
  WINBOOL fIncUpdate; /* bitsize 32, bitpos 224 */
  BYTE rgbReserved[32]; /* bitsize 256, bitpos 256 */
};
typedef struct tagPAINTSTRUCT /* id 359 */ PAINTSTRUCT;
typedef struct tagPAINTSTRUCT /* id 359 */ *LPPAINTSTRUCT;
struct _paraformat { /* size 156 id 360 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwMask; /* bitsize 32, bitpos 32 */
  WORD wNumbering; /* bitsize 16, bitpos 64 */
  WORD wReserved; /* bitsize 16, bitpos 80 */
  LONG dxStartIndent; /* bitsize 32, bitpos 96 */
  LONG dxRightIndent; /* bitsize 32, bitpos 128 */
  LONG dxOffset; /* bitsize 32, bitpos 160 */
  WORD wAlignment; /* bitsize 16, bitpos 192 */
  SHORT cTabCount; /* bitsize 16, bitpos 208 */
  LONG rgxTabs[32]; /* bitsize 1024, bitpos 224 */
};
typedef struct _paraformat /* id 360 */ PARAFORMAT;
struct _PERF_COUNTER_BLOCK { /* size 4 id 361 */
  DWORD ByteLength; /* bitsize 32, bitpos 0 */
};
typedef struct _PERF_COUNTER_BLOCK /* id 361 */ PERF_COUNTER_BLOCK;
struct _PERF_COUNTER_DEFINITION { /* size 40 id 362 */
  DWORD ByteLength; /* bitsize 32, bitpos 0 */
  DWORD CounterNameTitleIndex; /* bitsize 32, bitpos 32 */
  LPWSTR CounterNameTitle; /* bitsize 32, bitpos 64 */
  DWORD CounterHelpTitleIndex; /* bitsize 32, bitpos 96 */
  LPWSTR CounterHelpTitle; /* bitsize 32, bitpos 128 */
  DWORD DefaultScale; /* bitsize 32, bitpos 160 */
  DWORD DetailLevel; /* bitsize 32, bitpos 192 */
  DWORD CounterType; /* bitsize 32, bitpos 224 */
  DWORD CounterSize; /* bitsize 32, bitpos 256 */
  DWORD CounterOffset; /* bitsize 32, bitpos 288 */
};
typedef struct _PERF_COUNTER_DEFINITION /* id 362 */ PERF_COUNTER_DEFINITION;
struct _PERF_DATA_BLOCK { /* size 84 id 363 */
  WCHAR Signature[4]; /* bitsize 64, bitpos 0 */
  DWORD LittleEndian; /* bitsize 32, bitpos 64 */
  DWORD Version; /* bitsize 32, bitpos 96 */
  DWORD Revision; /* bitsize 32, bitpos 128 */
  DWORD TotalByteLength; /* bitsize 32, bitpos 160 */
  DWORD HeaderLength; /* bitsize 32, bitpos 192 */
  DWORD NumObjectTypes; /* bitsize 32, bitpos 224 */
  DWORD DefaultObject; /* bitsize 32, bitpos 256 */
  SYSTEMTIME SystemTime; /* bitsize 128, bitpos 288 */
  LARGE_INTEGER PerfTime; /* bitsize 64, bitpos 416 */
  LARGE_INTEGER PerfFreq; /* bitsize 64, bitpos 480 */
  LARGE_INTEGER PerfTime100nSec; /* bitsize 64, bitpos 544 */
  DWORD SystemNameLength; /* bitsize 32, bitpos 608 */
  DWORD SystemNameOffset; /* bitsize 32, bitpos 640 */
};
typedef struct _PERF_DATA_BLOCK /* id 363 */ PERF_DATA_BLOCK;
struct _PERF_INSTANCE_DEFINITION { /* size 24 id 364 */
  DWORD ByteLength; /* bitsize 32, bitpos 0 */
  DWORD ParentObjectTitleIndex; /* bitsize 32, bitpos 32 */
  DWORD ParentObjectInstance; /* bitsize 32, bitpos 64 */
  DWORD UniqueID; /* bitsize 32, bitpos 96 */
  DWORD NameOffset; /* bitsize 32, bitpos 128 */
  DWORD NameLength; /* bitsize 32, bitpos 160 */
};
typedef struct _PERF_INSTANCE_DEFINITION /* id 364 */ PERF_INSTANCE_DEFINITION;
struct _PERF_OBJECT_TYPE { /* size 64 id 365 */
  DWORD TotalByteLength; /* bitsize 32, bitpos 0 */
  DWORD DefinitionLength; /* bitsize 32, bitpos 32 */
  DWORD HeaderLength; /* bitsize 32, bitpos 64 */
  DWORD ObjectNameTitleIndex; /* bitsize 32, bitpos 96 */
  LPWSTR ObjectNameTitle; /* bitsize 32, bitpos 128 */
  DWORD ObjectHelpTitleIndex; /* bitsize 32, bitpos 160 */
  LPWSTR ObjectHelpTitle; /* bitsize 32, bitpos 192 */
  DWORD DetailLevel; /* bitsize 32, bitpos 224 */
  DWORD NumCounters; /* bitsize 32, bitpos 256 */
  DWORD DefaultCounter; /* bitsize 32, bitpos 288 */
  DWORD NumInstances; /* bitsize 32, bitpos 320 */
  DWORD CodePage; /* bitsize 32, bitpos 352 */
  LARGE_INTEGER PerfTime; /* bitsize 64, bitpos 384 */
  LARGE_INTEGER PerfFreq; /* bitsize 64, bitpos 448 */
};
typedef struct _PERF_OBJECT_TYPE /* id 365 */ PERF_OBJECT_TYPE;
struct _POLYTEXT { /* size 40 id 32 */
  int x; /* bitsize 32, bitpos 0 */
  int y; /* bitsize 32, bitpos 32 */
  UINT n; /* bitsize 32, bitpos 64 */
  LPCTSTR lpstr; /* bitsize 32, bitpos 96 */
  UINT uiFlags; /* bitsize 32, bitpos 128 */
  RECT rcl; /* bitsize 128, bitpos 160 */
  int *pdx; /* bitsize 32, bitpos 288 */
};
typedef struct _POLYTEXT /* id 32 */ POLYTEXT;
struct _PORT_INFO_1 { /* size 4 id 366 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
};
typedef struct _PORT_INFO_1 /* id 366 */ PORT_INFO_1;
struct _PORT_INFO_2 { /* size 20 id 367 */
  LPSTR pPortName; /* bitsize 32, bitpos 0 */
  LPSTR pMonitorName; /* bitsize 32, bitpos 32 */
  LPSTR pDescription; /* bitsize 32, bitpos 64 */
  DWORD fPortType; /* bitsize 32, bitpos 96 */
  DWORD Reserved; /* bitsize 32, bitpos 128 */
};
typedef struct _PORT_INFO_2 /* id 367 */ PORT_INFO_2;
struct _PREVENT_MEDIA_REMOVAL { /* size 1 id 368 */
  BOOLEAN PreventMediaRemoval; /* bitsize 8, bitpos 0 */
};
typedef struct _PREVENT_MEDIA_REMOVAL /* id 368 */ PREVENT_MEDIA_REMOVAL;
struct tagPD { /* size 66 id 40 */
  DWORD lStructSize; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  HANDLE hDevMode; /* bitsize 32, bitpos 64 */
  HANDLE hDevNames; /* bitsize 32, bitpos 96 */
  HDC hDC; /* bitsize 32, bitpos 128 */
  DWORD Flags; /* bitsize 32, bitpos 160 */
  WORD nFromPage; /* bitsize 16, bitpos 192 */
  WORD nToPage; /* bitsize 16, bitpos 208 */
  WORD nMinPage; /* bitsize 16, bitpos 224 */
  WORD nMaxPage; /* bitsize 16, bitpos 240 */
  WORD nCopies; /* bitsize 16, bitpos 256 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 272 */
  DWORD lCustData; /* bitsize 32, bitpos 304 */
  LPPRINTHOOKPROC lpfnPrintHook; /* bitsize 32, bitpos 336 */
  LPSETUPHOOKPROC lpfnSetupHook; /* bitsize 32, bitpos 368 */
  LPCTSTR lpPrintTemplateName; /* bitsize 32, bitpos 400 */
  LPCTSTR lpSetupTemplateName; /* bitsize 32, bitpos 432 */
  HANDLE hPrintTemplate; /* bitsize 32, bitpos 464 */
  HANDLE hSetupTemplate; /* bitsize 32, bitpos 496 */
};
typedef struct tagPD /* id 40 */ PRINTDLG;
typedef struct tagPD /* id 40 */ *LPPRINTDLG;
struct _PRINTER_DEFAULTS { /* size 12 id 65 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 0 */
  LPDEVMODE pDevMode; /* bitsize 32, bitpos 32 */
  ACCESS_MASK DesiredAccess; /* bitsize 32, bitpos 64 */
};
typedef struct _PRINTER_DEFAULTS /* id 65 */ PRINTER_DEFAULTS;
typedef struct _PRINTER_DEFAULTS /* id 65 */ *PPRINTER_DEFAULTS;
typedef struct _PRINTER_DEFAULTS /* id 65 */ *LPPRINTER_DEFAULTS;
typedef PRINTER_DEFAULTS PRINTER_DEFAULTSA;
typedef PPRINTER_DEFAULTS PPRINTER_DEFAULTSA;
typedef LPPRINTER_DEFAULTS LPPRINTER_DEFAULTSA;
struct _PRINTER_INFO_1 { /* size 16 id 369 */
  DWORD Flags; /* bitsize 32, bitpos 0 */
  LPTSTR pDescription; /* bitsize 32, bitpos 32 */
  LPTSTR pName; /* bitsize 32, bitpos 64 */
  LPTSTR pComment; /* bitsize 32, bitpos 96 */
};
typedef struct _PRINTER_INFO_1 /* id 369 */ PRINTER_INFO_1;
typedef struct _PRINTER_INFO_1 /* id 369 */ *PPRINTER_INFO_1;
typedef struct _PRINTER_INFO_1 /* id 369 */ *LPPRINTER_INFO_1;
struct _PRINTER_INFO_2 { /* size 84 id 370 */
  LPTSTR pServerName; /* bitsize 32, bitpos 0 */
  LPTSTR pPrinterName; /* bitsize 32, bitpos 32 */
  LPTSTR pShareName; /* bitsize 32, bitpos 64 */
  LPTSTR pPortName; /* bitsize 32, bitpos 96 */
  LPTSTR pDriverName; /* bitsize 32, bitpos 128 */
  LPTSTR pComment; /* bitsize 32, bitpos 160 */
  LPTSTR pLocation; /* bitsize 32, bitpos 192 */
  LPDEVMODE pDevMode; /* bitsize 32, bitpos 224 */
  LPTSTR pSepFile; /* bitsize 32, bitpos 256 */
  LPTSTR pPrintProcessor; /* bitsize 32, bitpos 288 */
  LPTSTR pDatatype; /* bitsize 32, bitpos 320 */
  LPTSTR pParameters; /* bitsize 32, bitpos 352 */
  PSECURITY_DESCRIPTOR pSecurityDescriptor; /* bitsize 32, bitpos 384 */
  DWORD Attributes; /* bitsize 32, bitpos 416 */
  DWORD Priority; /* bitsize 32, bitpos 448 */
  DWORD DefaultPriority; /* bitsize 32, bitpos 480 */
  DWORD StartTime; /* bitsize 32, bitpos 512 */
  DWORD UntilTime; /* bitsize 32, bitpos 544 */
  DWORD Status; /* bitsize 32, bitpos 576 */
  DWORD cJobs; /* bitsize 32, bitpos 608 */
  DWORD AveragePPM; /* bitsize 32, bitpos 640 */
};
typedef struct _PRINTER_INFO_2 /* id 370 */ PRINTER_INFO_2;
struct _PRINTER_INFO_3 { /* size 4 id 371 */
  PSECURITY_DESCRIPTOR pSecurityDescriptor; /* bitsize 32, bitpos 0 */
};
typedef struct _PRINTER_INFO_3 /* id 371 */ PRINTER_INFO_3;
struct _PRINTER_INFO_4 { /* size 12 id 372 */
  LPTSTR pPrinterName; /* bitsize 32, bitpos 0 */
  LPTSTR pServerName; /* bitsize 32, bitpos 32 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
};
typedef struct _PRINTER_INFO_4 /* id 372 */ PRINTER_INFO_4;
struct _PRINTER_INFO_5 { /* size 20 id 373 */
  LPTSTR pPrinterName; /* bitsize 32, bitpos 0 */
  LPTSTR pPortName; /* bitsize 32, bitpos 32 */
  DWORD Attributes; /* bitsize 32, bitpos 64 */
  DWORD DeviceNotSelectedTimeout; /* bitsize 32, bitpos 96 */
  DWORD TransmissionRetryTimeout; /* bitsize 32, bitpos 128 */
};
typedef struct _PRINTER_INFO_5 /* id 373 */ PRINTER_INFO_5;
struct _PRINTER_NOTIFY_INFO_DATA { /* size 20 id 374 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD Field; /* bitsize 16, bitpos 16 */
  DWORD Reserved; /* bitsize 32, bitpos 32 */
  DWORD Id; /* bitsize 32, bitpos 64 */
  union %anon375 { /* size 8 */
    DWORD adwData[2]; /* bitsize 64, bitpos 0 */
    struct %anon376 { /* size 8 */
      DWORD cbBuf; /* bitsize 32, bitpos 0 */
      LPVOID pBuf; /* bitsize 32, bitpos 32 */
    } Data; /* bitsize 64, bitpos 0 */
  } NotifyData; /* bitsize 64, bitpos 96 */
};
typedef struct _PRINTER_NOTIFY_INFO_DATA /* id 374 */ PRINTER_NOTIFY_INFO_DATA;
struct _PRINTER_NOTIFY_INFO { /* size 32 id 377 */
  DWORD Version; /* bitsize 32, bitpos 0 */
  DWORD Flags; /* bitsize 32, bitpos 32 */
  DWORD Count; /* bitsize 32, bitpos 64 */
  PRINTER_NOTIFY_INFO_DATA aData[1]; /* bitsize 160, bitpos 96 */
};
typedef struct _PRINTER_NOTIFY_INFO /* id 377 */ PRINTER_NOTIFY_INFO;
struct _PRINTER_NOTIFY_OPTIONS_TYPE { /* size 20 id 378 */
  WORD Type; /* bitsize 16, bitpos 0 */
  WORD Reserved0; /* bitsize 16, bitpos 16 */
  DWORD Reserved1; /* bitsize 32, bitpos 32 */
  DWORD Reserved2; /* bitsize 32, bitpos 64 */
  DWORD Count; /* bitsize 32, bitpos 96 */
  PWORD pFields; /* bitsize 32, bitpos 128 */
};
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE /* id 378 */ PRINTER_NOTIFY_OPTIONS_TYPE;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE /* id 378 */ *PPRINTER_NOTIFY_OPTIONS_TYPE;
struct _PRINTER_NOTIFY_OPTIONS { /* size 16 id 379 */
  DWORD Version; /* bitsize 32, bitpos 0 */
  DWORD Flags; /* bitsize 32, bitpos 32 */
  DWORD Count; /* bitsize 32, bitpos 64 */
  PPRINTER_NOTIFY_OPTIONS_TYPE pTypes; /* bitsize 32, bitpos 96 */
};
typedef struct _PRINTER_NOTIFY_OPTIONS /* id 379 */ PRINTER_NOTIFY_OPTIONS;
struct _PRINTPROCESSOR_INFO_1 { /* size 4 id 380 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
};
typedef struct _PRINTPROCESSOR_INFO_1 /* id 380 */ PRINTPROCESSOR_INFO_1;
struct _PRIVILEGE_SET { /* size 20 id 7 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  DWORD Control; /* bitsize 32, bitpos 32 */
  LUID_AND_ATTRIBUTES Privilege[1]; /* bitsize 96, bitpos 64 */
};
typedef struct _PRIVILEGE_SET /* id 7 */ PRIVILEGE_SET;
typedef struct _PRIVILEGE_SET /* id 7 */ *PPRIVILEGE_SET;
typedef struct _PRIVILEGE_SET /* id 7 */ *LPPRIVILEGE_SET;
struct _PROCESS_HEAP_ENTRY { /* size 32 id 381 */
  PVOID lpData; /* bitsize 32, bitpos 0 */
  DWORD cbData; /* bitsize 32, bitpos 32 */
  BYTE cbOverhead; /* bitsize 8, bitpos 64 */
  BYTE iRegionIndex; /* bitsize 8, bitpos 72 */
  WORD wFlags; /* bitsize 16, bitpos 80 */
  DWORD dwCommittedSize; /* bitsize 32, bitpos 96 */
  DWORD dwUnCommittedSize; /* bitsize 32, bitpos 128 */
  LPVOID lpFirstBlock; /* bitsize 32, bitpos 160 */
  LPVOID lpLastBlock; /* bitsize 32, bitpos 192 */
  HANDLE hMem; /* bitsize 32, bitpos 224 */
};
typedef struct _PROCESS_HEAP_ENTRY /* id 381 */ PROCESS_HEAPENTRY;
typedef struct _PROCESS_HEAP_ENTRY /* id 381 */ *LPPROCESS_HEAP_ENTRY;
struct _PROCESS_INFORMATION { /* size 16 id 43 */
  HANDLE hProcess; /* bitsize 32, bitpos 0 */
  HANDLE hThread; /* bitsize 32, bitpos 32 */
  DWORD dwProcessId; /* bitsize 32, bitpos 64 */
  DWORD dwThreadId; /* bitsize 32, bitpos 96 */
};
typedef struct _PROCESS_INFORMATION /* id 43 */ PROCESS_INFORMATION;
typedef struct _PROCESS_INFORMATION /* id 43 */ *LPPROCESS_INFORMATION;
typedef UINT (*LPFNPSPCALLBACK) (/* unknown */);
struct _PROPSHEETPAGE { /* size 40 id 382 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 64 */
  union %anon383 { /* size 4 */
    LPCTSTR pszTemplate; /* bitsize 32, bitpos 0 */
    LPCDLGTEMPLATE pResource; /* bitsize 32, bitpos 0 */
  } u1; /* bitsize 32, bitpos 96 */
  union %anon384 { /* size 4 */
    HICON hIcon; /* bitsize 32, bitpos 0 */
    LPCTSTR pszIcon; /* bitsize 32, bitpos 0 */
  } u2; /* bitsize 32, bitpos 128 */
  LPCTSTR pszTitle; /* bitsize 32, bitpos 160 */
  DLGPROC pfnDlgProc; /* bitsize 32, bitpos 192 */
  LPARAM lParam; /* bitsize 32, bitpos 224 */
  LPFNPSPCALLBACK pfnCallback; /* bitsize 32, bitpos 256 */
  UINT *pcRefParent; /* bitsize 32, bitpos 288 */
};
typedef struct _PROPSHEETPAGE /* id 382 */ PROPSHEETPAGE;
typedef struct _PROPSHEETPAGE /* id 382 */ *LPPROPSHEETPAGE;
typedef PROPSHEETPAGE *LPCPROPSHEETPAGE;
typedef struct _PSP /* id 0 */ *HPROPSHEETPAGE;
struct _PROPSHEETHEADER { /* size 40 id 35 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  HWND hwndParent; /* bitsize 32, bitpos 64 */
  HINSTANCE hInstance; /* bitsize 32, bitpos 96 */
  union %anon384 { /* size 4 */
    HICON hIcon; /* bitsize 32, bitpos 0 */
    LPCTSTR pszIcon; /* bitsize 32, bitpos 0 */
  } u1; /* bitsize 32, bitpos 128 */
  LPCTSTR pszCaption; /* bitsize 32, bitpos 160 */
  UINT nPages; /* bitsize 32, bitpos 192 */
  union %anon385 { /* size 4 */
    UINT nStartPage; /* bitsize 32, bitpos 0 */
    LPCTSTR pStartPage; /* bitsize 32, bitpos 0 */
  } u2; /* bitsize 32, bitpos 224 */
  union %anon386 { /* size 4 */
    LPCPROPSHEETPAGE ppsp; /* bitsize 32, bitpos 0 */
    HPROPSHEETPAGE *phpage; /* bitsize 32, bitpos 0 */
  } u3; /* bitsize 32, bitpos 256 */
  PFNPROPSHEETCALLBACK pfnCallback; /* bitsize 32, bitpos 288 */
};
typedef struct _PROPSHEETHEADER /* id 35 */ PROPSHEETHEADER;
typedef struct _PROPSHEETHEADER /* id 35 */ *LPPROPSHEETHEADER;
typedef PROPSHEETHEADER *LPCPROPSHEETHEADER;
typedef WINBOOL (*LPFNADDPROPSHEETPAGE) (/* unknown */);
typedef WINBOOL (*LPFNADDPROPSHEETPAGES) (/* unknown */);
struct _PROTOCOL_INFO { /* size 32 id 387 */
  DWORD dwServiceFlags; /* bitsize 32, bitpos 0 */
  INT iAddressFamily; /* bitsize 32, bitpos 32 */
  INT iMaxSockAddr; /* bitsize 32, bitpos 64 */
  INT iMinSockAddr; /* bitsize 32, bitpos 96 */
  INT iSocketType; /* bitsize 32, bitpos 128 */
  INT iProtocol; /* bitsize 32, bitpos 160 */
  DWORD dwMessageSize; /* bitsize 32, bitpos 192 */
  LPTSTR lpProtocol; /* bitsize 32, bitpos 224 */
};
typedef struct _PROTOCOL_INFO /* id 387 */ PROTOCOL_INFO;
struct _PROVIDOR_INFO_1 { /* size 12 id 388 */
  LPTSTR pName; /* bitsize 32, bitpos 0 */
  LPTSTR pEnvironment; /* bitsize 32, bitpos 32 */
  LPTSTR pDLLName; /* bitsize 32, bitpos 64 */
};
typedef struct _PROVIDOR_INFO_1 /* id 388 */ PROVIDOR_INFO_1;
struct _PSHNOTIFY { /* size 16 id 389 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  LPARAM lParam; /* bitsize 32, bitpos 96 */
};
typedef struct _PSHNOTIFY /* id 389 */ PSHNOTIFY;
typedef struct _PSHNOTIFY /* id 389 */ *LPPSHNOTIFY;
struct _punctuation { /* size 8 id 390 */
  UINT iSize; /* bitsize 32, bitpos 0 */
  LPSTR szPunctuation; /* bitsize 32, bitpos 32 */
};
typedef struct _punctuation /* id 390 */ PUNCTUATION;
struct _QUERY_SERVICE_CONFIG { /* size 36 id 61 */
  DWORD dwServiceType; /* bitsize 32, bitpos 0 */
  DWORD dwStartType; /* bitsize 32, bitpos 32 */
  DWORD dwErrorControl; /* bitsize 32, bitpos 64 */
  LPTSTR lpBinaryPathName; /* bitsize 32, bitpos 96 */
  LPTSTR lpLoadOrderGroup; /* bitsize 32, bitpos 128 */
  DWORD dwTagId; /* bitsize 32, bitpos 160 */
  LPTSTR lpDependencies; /* bitsize 32, bitpos 192 */
  LPTSTR lpServiceStartName; /* bitsize 32, bitpos 224 */
  LPTSTR lpDisplayName; /* bitsize 32, bitpos 256 */
};
typedef struct _QUERY_SERVICE_CONFIG /* id 61 */ QUERY_SERVICE_CONFIG;
typedef struct _QUERY_SERVICE_CONFIG /* id 61 */ *LPQUERY_SERVICE_CONFIG;
struct _QUERY_SERVICE_LOCK_STATUS { /* size 12 id 62 */
  DWORD fIsLocked; /* bitsize 32, bitpos 0 */
  LPTSTR lpLockOwner; /* bitsize 32, bitpos 32 */
  DWORD dwLockDuration; /* bitsize 32, bitpos 64 */
};
typedef struct _QUERY_SERVICE_LOCK_STATUS /* id 62 */ QUERY_SERVICE_LOCK_STATUS;
typedef struct _QUERY_SERVICE_LOCK_STATUS /* id 62 */ *LPQUERY_SERVICE_LOCK_STATUS;
struct _RASAMB { /* size 28 id 391 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwError; /* bitsize 32, bitpos 32 */
  TCHAR szNetBiosError[17]; /* bitsize 136, bitpos 64 */
  BYTE bLana; /* bitsize 8, bitpos 200 */
};
typedef struct _RASAMB /* id 391 */ RASAMB;
struct _RASCONN { /* size 412 id 392 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  HRASCONN hrasconn; /* bitsize 32, bitpos 32 */
  TCHAR szEntryName[257]; /* bitsize 2056, bitpos 64 */
  CHAR szDeviceType[17]; /* bitsize 136, bitpos 2120 */
  CHAR szDeviceName[129]; /* bitsize 1032, bitpos 2256 */
};
typedef struct _RASCONN /* id 392 */ RASCONN;
struct _RASCONNSTATUS { /* size 160 id 393 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  RASCONNSTATE rasconnstate; /* bitsize 32, bitpos 32 */
  DWORD dwError; /* bitsize 32, bitpos 64 */
  TCHAR szDeviceType[17]; /* bitsize 136, bitpos 96 */
  TCHAR szDeviceName[129]; /* bitsize 1032, bitpos 232 */
};
typedef struct _RASCONNSTATUS /* id 393 */ RASCONNSTATUS;
struct _RASDIALEXTENSIONS { /* size 16 id 394 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwfOptions; /* bitsize 32, bitpos 32 */
  HWND hwndParent; /* bitsize 32, bitpos 64 */
  DWORD reserved; /* bitsize 32, bitpos 96 */
};
typedef struct _RASDIALEXTENSIONS /* id 394 */ RASDIALEXTENSIONS;
struct _RASDIALPARAMS { /* size 1052 id 395 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  TCHAR szEntryName[257]; /* bitsize 2056, bitpos 32 */
  TCHAR szPhoneNumber[129]; /* bitsize 1032, bitpos 2088 */
  TCHAR szCallbackNumber[129]; /* bitsize 1032, bitpos 3120 */
  TCHAR szUserName[257]; /* bitsize 2056, bitpos 4152 */
  TCHAR szPassword[257]; /* bitsize 2056, bitpos 6208 */
  TCHAR szDomain[16]; /* bitsize 128, bitpos 8264 */
};
typedef struct _RASDIALPARAMS /* id 395 */ RASDIALPARAMS;
struct _RASENTRYNAME { /* size 264 id 396 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  TCHAR szEntryName[257]; /* bitsize 2056, bitpos 32 */
};
typedef struct _RASENTRYNAME /* id 396 */ RASENTRYNAME;
struct _RASPPPIP { /* size 24 id 397 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwError; /* bitsize 32, bitpos 32 */
  TCHAR szIpAddress[16]; /* bitsize 128, bitpos 64 */
};
typedef struct _RASPPPIP /* id 397 */ RASPPPIP;
struct _RASPPPIPX { /* size 32 id 398 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwError; /* bitsize 32, bitpos 32 */
  TCHAR szIpxAddress[22]; /* bitsize 176, bitpos 64 */
};
typedef struct _RASPPPIPX /* id 398 */ RASPPPIPX;
struct _RASPPPNBF { /* size 48 id 399 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD dwError; /* bitsize 32, bitpos 32 */
  DWORD dwNetBiosError; /* bitsize 32, bitpos 64 */
  TCHAR szNetBiosError[17]; /* bitsize 136, bitpos 96 */
  TCHAR szWorkstationName[17]; /* bitsize 136, bitpos 232 */
  BYTE bLana; /* bitsize 8, bitpos 368 */
};
typedef struct _RASPPPNBF /* id 399 */ RASPPPNBF;
struct _RASTERIZER_STATUS { /* size 6 id 400 */
  short int nSize; /* bitsize 16, bitpos 0 */
  short int wFlags; /* bitsize 16, bitpos 16 */
  short int nLanguageID; /* bitsize 16, bitpos 32 */
};
typedef struct _RASTERIZER_STATUS /* id 400 */ RASTERIZER_STATUS;
typedef struct _RASTERIZER_STATUS /* id 400 */ *LPRASTERIZER_STATUS;
struct _REASSIGN_BLOCKS { /* size 8 id 401 */
  WORD Reserved; /* bitsize 16, bitpos 0 */
  WORD Count; /* bitsize 16, bitpos 16 */
  DWORD BlockNumber[1]; /* bitsize 32, bitpos 32 */
};
typedef struct _REASSIGN_BLOCKS /* id 401 */ REASSIGN_BLOCKS;
struct _REMOTE_NAME_INFO { /* size 12 id 402 */
  LPTSTR lpUniversalName; /* bitsize 32, bitpos 0 */
  LPTSTR lpConnectionName; /* bitsize 32, bitpos 32 */
  LPTSTR lpRemainingPath; /* bitsize 32, bitpos 64 */
};
typedef struct _REMOTE_NAME_INFO /* id 402 */ REMOTE_NAME_INFO;
struct _repastespecial { /* size 8 id 403 */
  DWORD dwAspect; /* bitsize 32, bitpos 0 */
  DWORD dwParam; /* bitsize 32, bitpos 32 */
};
typedef struct _repastespecial /* id 403 */ REPASTESPECIAL;
struct _reqresize { /* size 28 id 404 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  RECT rc; /* bitsize 128, bitpos 96 */
};
typedef struct _reqresize /* id 404 */ REQRESIZE;
struct _RGNDATAHEADER { /* size 32 id 405 */
  DWORD dwSize; /* bitsize 32, bitpos 0 */
  DWORD iType; /* bitsize 32, bitpos 32 */
  DWORD nCount; /* bitsize 32, bitpos 64 */
  DWORD nRgnSize; /* bitsize 32, bitpos 96 */
  RECT rcBound; /* bitsize 128, bitpos 128 */
};
typedef struct _RGNDATAHEADER /* id 405 */ RGNDATAHEADER;
struct _RGNDATA { /* size 36 id 406 */
  RGNDATAHEADER rdh; /* bitsize 256, bitpos 0 */
  char Buffer[1]; /* bitsize 8, bitpos 256 */
};
typedef struct _RGNDATA /* id 406 */ RGNDATA;
typedef struct _RGNDATA /* id 406 */ *LPRGNDATA;
struct tagSCROLLINFO { /* size 28 id 407 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT fMask; /* bitsize 32, bitpos 32 */
  int nMin; /* bitsize 32, bitpos 64 */
  int nMax; /* bitsize 32, bitpos 96 */
  UINT nPage; /* bitsize 32, bitpos 128 */
  int nPos; /* bitsize 32, bitpos 160 */
  int nTrackPos; /* bitsize 32, bitpos 192 */
};
typedef struct tagSCROLLINFO /* id 407 */ SCROLLINFO;
typedef struct tagSCROLLINFO /* id 407 */ *LPSCROLLINFO;
typedef SCROLLINFO *LPCSCROLLINFO;
struct _SECURITY_ATTRIBUTES { /* size 12 id 2 */
  DWORD nLength; /* bitsize 32, bitpos 0 */
  LPVOID lpSecurityDescriptor; /* bitsize 32, bitpos 32 */
  WINBOOL bInheritHandle; /* bitsize 32, bitpos 64 */
};
typedef struct _SECURITY_ATTRIBUTES /* id 2 */ SECURITY_ATTRIBUTES;
typedef struct _SECURITY_ATTRIBUTES /* id 2 */ *LPSECURITY_ATTRIBUTES;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
struct _selchange { /* size 24 id 408 */
  NMHDR nmhdr; /* bitsize 96, bitpos 0 */
  CHARRANGE chrg; /* bitsize 64, bitpos 96 */
  WORD seltyp; /* bitsize 16, bitpos 160 */
};
typedef struct _selchange /* id 408 */ SELCHANGE;
struct tagSERIALKEYS { /* size 24 id 409 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  LPSTR lpszActivePort; /* bitsize 32, bitpos 64 */
  LPSTR lpszPort; /* bitsize 32, bitpos 96 */
  DWORD iBaudRate; /* bitsize 32, bitpos 128 */
  DWORD iPortState; /* bitsize 32, bitpos 160 */
};
typedef struct tagSERIALKEYS /* id 409 */ SERIALKEYS;
typedef struct tagSERIALKEYS /* id 409 */ *LPSERIALKEYS;
struct _SERVICE_TABLE_ENTRY { /* size 8 id 63 */
  LPTSTR lpServiceName; /* bitsize 32, bitpos 0 */
  LPSERVICE_MAIN_FUNCTION lpServiceProc; /* bitsize 32, bitpos 32 */
};
typedef struct _SERVICE_TABLE_ENTRY /* id 63 */ SERVICE_TABLE_ENTRY;
typedef struct _SERVICE_TABLE_ENTRY /* id 63 */ *LPSERVICE_TABLE_ENTRY;
struct _SERVICE_TYPE_VALUE_ABS { /* size 20 id 410 */
  DWORD dwNameSpace; /* bitsize 32, bitpos 0 */
  DWORD dwValueType; /* bitsize 32, bitpos 32 */
  DWORD dwValueSize; /* bitsize 32, bitpos 64 */
  LPTSTR lpValueName; /* bitsize 32, bitpos 96 */
  PVOID lpValue; /* bitsize 32, bitpos 128 */
};
typedef struct _SERVICE_TYPE_VALUE_ABS /* id 410 */ SERVICE_TYPE_VALUE_ABS;
struct _SERVICE_TYPE_INFO_ABS { /* size 28 id 411 */
  LPTSTR lpTypeName; /* bitsize 32, bitpos 0 */
  DWORD dwValueCount; /* bitsize 32, bitpos 32 */
  SERVICE_TYPE_VALUE_ABS Values[1]; /* bitsize 160, bitpos 64 */
};
typedef struct _SERVICE_TYPE_INFO_ABS /* id 411 */ SERVICE_TYPE_INFO_ABS;
struct _SESSION_BUFFER { /* size 36 id 412 */
  UCHAR lsn; /* bitsize 8, bitpos 0 */
  UCHAR state; /* bitsize 8, bitpos 8 */
  UCHAR local_name[16]; /* bitsize 128, bitpos 16 */
  UCHAR remote_name[16]; /* bitsize 128, bitpos 144 */
  UCHAR rcvs_outstanding; /* bitsize 8, bitpos 272 */
  UCHAR sends_outstanding; /* bitsize 8, bitpos 280 */
};
typedef struct _SESSION_BUFFER /* id 412 */ SESSION_BUFFER;
struct _SESSION_HEADER { /* size 4 id 413 */
  UCHAR sess_name; /* bitsize 8, bitpos 0 */
  UCHAR num_sess; /* bitsize 8, bitpos 8 */
  UCHAR rcv_dg_outstanding; /* bitsize 8, bitpos 16 */
  UCHAR rcv_any_outstanding; /* bitsize 8, bitpos 24 */
};
typedef struct _SESSION_HEADER /* id 413 */ SESSION_HEADER;
struct _SET_PARTITION_INFORMATION { /* size 1 id 414 */
  BYTE PartitionType; /* bitsize 8, bitpos 0 */
};
typedef struct _SET_PARTITION_INFORMATION /* id 414 */ SET_PARTITION_INFORMATION;
enum tagSHCONTF { SHCONTF_FOLDERS = 32, SHCONTF_NONFOLDERS = 64, SHCONTF_INCLUDEHIDDEN = 128 };
typedef enum tagSHCONTF SHCONTF;
struct _SHFILEINFO { /* size 352 id 415 */
  HICON hIcon; /* bitsize 32, bitpos 0 */
  int iIcon; /* bitsize 32, bitpos 32 */
  DWORD dwAttributes; /* bitsize 32, bitpos 64 */
  char szDisplayName[260]; /* bitsize 2080, bitpos 96 */
  char szTypeName[80]; /* bitsize 640, bitpos 2176 */
};
typedef struct _SHFILEINFO /* id 415 */ SHFILEINFO;
typedef WORD FILEOP_FLAGS;
struct _SHFILEOPSTRUCT { /* size 32 id 416 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  UINT wFunc; /* bitsize 32, bitpos 32 */
  LPCSTR pFrom; /* bitsize 32, bitpos 64 */
  LPCSTR pTo; /* bitsize 32, bitpos 96 */
  FILEOP_FLAGS fFlags; /* bitsize 16, bitpos 128 */
  WINBOOL fAnyOperationsAborted; /* bitsize 32, bitpos 160 */
  LPVOID hNameMappings; /* bitsize 32, bitpos 192 */
  LPCSTR lpszProgressTitle; /* bitsize 32, bitpos 224 */
};
typedef struct _SHFILEOPSTRUCT /* id 416 */ SHFILEOPSTRUCT;
typedef struct _SHFILEOPSTRUCT /* id 416 */ *LPSHFILEOPSTRUCT;
enum tagSHGDN { SHGDN_NORMAL, SHGDN_INFOLDER, SHGDN_FORPARSING = 32768 };
typedef enum tagSHGDN SHGNO;
struct _SHNAMEMAPPING { /* size 16 id 417 */
  LPSTR pszOldPath; /* bitsize 32, bitpos 0 */
  LPSTR pszNewPath; /* bitsize 32, bitpos 32 */
  int cchOldPath; /* bitsize 32, bitpos 64 */
  int cchNewPath; /* bitsize 32, bitpos 96 */
};
typedef struct _SHNAMEMAPPING /* id 417 */ SHNAMEMAPPING;
typedef struct _SHNAMEMAPPING /* id 417 */ *LPSHNAMEMAPPING;
struct _SID_AND_ATTRIBUTES { /* size 8 id 418 */
  PSID Sid; /* bitsize 32, bitpos 0 */
  DWORD Attributes; /* bitsize 32, bitpos 32 */
};
typedef struct _SID_AND_ATTRIBUTES /* id 418 */ SID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
struct _SINGLE_LIST_ENTRY { /* size 4 id 419 */
  struct _SINGLE_LIST_ENTRY /* id 419 */ *Next; /* bitsize 32, bitpos 0 */
};
typedef struct _SINGLE_LIST_ENTRY /* id 419 */ SINGLE_LIST_ENTRY;
struct tagSOUNDSENTRY { /* size 48 id 420 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD iFSTextEffect; /* bitsize 32, bitpos 64 */
  DWORD iFSTextEffectMSec; /* bitsize 32, bitpos 96 */
  DWORD iFSTextEffectColorBits; /* bitsize 32, bitpos 128 */
  DWORD iFSGrafEffect; /* bitsize 32, bitpos 160 */
  DWORD iFSGrafEffectMSec; /* bitsize 32, bitpos 192 */
  DWORD iFSGrafEffectColor; /* bitsize 32, bitpos 224 */
  DWORD iWindowsEffect; /* bitsize 32, bitpos 256 */
  DWORD iWindowsEffectMSec; /* bitsize 32, bitpos 288 */
  LPTSTR lpszWindowsEffectDLL; /* bitsize 32, bitpos 320 */
  DWORD iWindowsEffectOrdinal; /* bitsize 32, bitpos 352 */
};
typedef struct tagSOUNDSENTRY /* id 420 */ SOUNDSENTRY;
typedef struct tagSOUNDSENTRY /* id 420 */ *LPSOUNDSENTRY;
struct tagSTARTUPINFOA { /* size 68 id 42 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  LPSTR lpReserved; /* bitsize 32, bitpos 32 */
  LPSTR lpDesktop; /* bitsize 32, bitpos 64 */
  LPSTR lpTitle; /* bitsize 32, bitpos 96 */
  DWORD dwX; /* bitsize 32, bitpos 128 */
  DWORD dwY; /* bitsize 32, bitpos 160 */
  DWORD dwXSize; /* bitsize 32, bitpos 192 */
  DWORD dwYSize; /* bitsize 32, bitpos 224 */
  DWORD dwXCountChars; /* bitsize 32, bitpos 256 */
  DWORD dwYCountChars; /* bitsize 32, bitpos 288 */
  DWORD dwFillAttribute; /* bitsize 32, bitpos 320 */
  DWORD dwFlags; /* bitsize 32, bitpos 352 */
  WORD wShowWindow; /* bitsize 16, bitpos 384 */
  WORD cbReserved2; /* bitsize 16, bitpos 400 */
  LPBYTE lpReserved2; /* bitsize 32, bitpos 416 */
  HANDLE hStdInput; /* bitsize 32, bitpos 448 */
  HANDLE hStdOutput; /* bitsize 32, bitpos 480 */
  HANDLE hStdError; /* bitsize 32, bitpos 512 */
};
typedef struct tagSTARTUPINFOA /* id 42 */ STARTUPINFOA;
typedef struct tagSTARTUPINFOA /* id 42 */ *PSTARTUPINFOA;
typedef struct tagSTARTUPINFOA /* id 42 */ *LPSTARTUPINFOA;
struct tagSTARTUPINFOW { /* size 68 id 421 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  LPWSTR lpReserved; /* bitsize 32, bitpos 32 */
  LPWSTR lpDesktop; /* bitsize 32, bitpos 64 */
  LPWSTR lpTitle; /* bitsize 32, bitpos 96 */
  DWORD dwX; /* bitsize 32, bitpos 128 */
  DWORD dwY; /* bitsize 32, bitpos 160 */
  DWORD dwXSize; /* bitsize 32, bitpos 192 */
  DWORD dwYSize; /* bitsize 32, bitpos 224 */
  DWORD dwXCountChars; /* bitsize 32, bitpos 256 */
  DWORD dwYCountChars; /* bitsize 32, bitpos 288 */
  DWORD dwFillAttribute; /* bitsize 32, bitpos 320 */
  DWORD dwFlags; /* bitsize 32, bitpos 352 */
  WORD wShowWindow; /* bitsize 16, bitpos 384 */
  WORD cbReserved2; /* bitsize 16, bitpos 400 */
  LPBYTE lpReserved2; /* bitsize 32, bitpos 416 */
  HANDLE hStdInput; /* bitsize 32, bitpos 448 */
  HANDLE hStdOutput; /* bitsize 32, bitpos 480 */
  HANDLE hStdError; /* bitsize 32, bitpos 512 */
};
typedef struct tagSTARTUPINFOW /* id 421 */ STARTUPINFOW;
typedef struct tagSTARTUPINFOW /* id 421 */ *PSTARTUPINFOW;
typedef struct tagSTARTUPINFOW /* id 421 */ *LPSTARTUPINFOW;
typedef STARTUPINFOA STARTUPINFO;
typedef PSTARTUPINFOA PSTARTUPINFO;
typedef LPSTARTUPINFOA LPSTARTUPINFO;
struct tagSTICKYKEYS { /* size 8 id 422 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
};
typedef struct tagSTICKYKEYS /* id 422 */ STICKYKEYS;
typedef struct tagSTICKYKEYS /* id 422 */ *LPSTICKYKEYS;
struct _STRRET { /* size 264 id 423 */
  UINT uType; /* bitsize 32, bitpos 0 */
  union %anon424 { /* size 260 */
    LPWSTR pOleStr; /* bitsize 32, bitpos 0 */
    UINT uOffset; /* bitsize 32, bitpos 0 */
    char cStr[260]; /* bitsize 2080, bitpos 0 */
  } DUMMYUNIONNAME; /* bitsize 2080, bitpos 32 */
};
typedef struct _STRRET /* id 423 */ STRRET;
typedef struct _STRRET /* id 423 */ *LPSTRRET;
struct _tagSTYLEBUF { /* size 36 id 425 */
  DWORD dwStyle; /* bitsize 32, bitpos 0 */
  CHAR szDescription[32]; /* bitsize 256, bitpos 32 */
};
typedef struct _tagSTYLEBUF /* id 425 */ STYLEBUF;
typedef struct _tagSTYLEBUF /* id 425 */ *LPSTYLEBUF;
struct tagSTYLESTRUCT { /* size 8 id 426 */
  DWORD styleOld; /* bitsize 32, bitpos 0 */
  DWORD styleNew; /* bitsize 32, bitpos 32 */
};
typedef struct tagSTYLESTRUCT /* id 426 */ STYLESTRUCT;
typedef struct tagSTYLESTRUCT /* id 426 */ *LPSTYLESTRUCT;
struct _SYSTEM_AUDIT_ACE { /* size 12 id 427 */
  ACE_HEADER Header; /* bitsize 32, bitpos 0 */
  ACCESS_MASK Mask; /* bitsize 32, bitpos 32 */
  DWORD SidStart; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_AUDIT_ACE /* id 427 */ SYSTEM_AUDIT_ACE;
struct _SYSTEM_INFO { /* size 36 id 428 */
  union %anon429 { /* size 4 */
    DWORD dwOemID; /* bitsize 32, bitpos 0 */
    struct %anon430 { /* size 4 */
      WORD wProcessorArchitecture; /* bitsize 16, bitpos 0 */
      WORD wReserved; /* bitsize 16, bitpos 16 */
    } s; /* bitsize 32, bitpos 0 */
  } u; /* bitsize 32, bitpos 0 */
  DWORD dwPageSize; /* bitsize 32, bitpos 32 */
  LPVOID lpMinimumApplicationAddress; /* bitsize 32, bitpos 64 */
  LPVOID lpMaximumApplicationAddress; /* bitsize 32, bitpos 96 */
  DWORD dwActiveProcessorMask; /* bitsize 32, bitpos 128 */
  DWORD dwNumberOfProcessors; /* bitsize 32, bitpos 160 */
  DWORD dwProcessorType; /* bitsize 32, bitpos 192 */
  DWORD dwAllocationGranularity; /* bitsize 32, bitpos 224 */
  WORD wProcessorLevel; /* bitsize 16, bitpos 256 */
  WORD wProcessorRevision; /* bitsize 16, bitpos 272 */
};
typedef struct _SYSTEM_INFO /* id 428 */ SYSTEM_INFO;
typedef struct _SYSTEM_INFO /* id 428 */ *LPSYSTEM_INFO;
struct _SYSTEM_POWER_STATUS { /* size 12 id 431 */
  BYTE ACLineStatus; /* bitsize 8, bitpos 0 */
  BYTE BatteryFlag; /* bitsize 8, bitpos 8 */
  BYTE BatteryLifePercent; /* bitsize 8, bitpos 16 */
  BYTE Reserved1; /* bitsize 8, bitpos 24 */
  DWORD BatteryLifeTime; /* bitsize 32, bitpos 32 */
  DWORD BatteryFullLifeTime; /* bitsize 32, bitpos 64 */
};
typedef struct _SYSTEM_POWER_STATUS /* id 431 */ SYSTEM_POWER_STATUS;
typedef struct _SYSTEM_POWER_STATUS /* id 431 */ *LPSYSTEM_POWER_STATUS;
struct _TAPE_ERASE { /* size 4 id 432 */
  ULONG Type; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_ERASE /* id 432 */ TAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS { /* size 32 id 433 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  ULONG DefaultBlockSize; /* bitsize 32, bitpos 32 */
  ULONG MaximumBlockSize; /* bitsize 32, bitpos 64 */
  ULONG MinimumBlockSize; /* bitsize 32, bitpos 96 */
  ULONG MaximumPartitionCount; /* bitsize 32, bitpos 128 */
  ULONG FeaturesLow; /* bitsize 32, bitpos 160 */
  ULONG FeaturesHigh; /* bitsize 32, bitpos 192 */
  ULONG EOTWarningZoneSize; /* bitsize 32, bitpos 224 */
};
typedef struct _TAPE_GET_DRIVE_PARAMETERS /* id 433 */ TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS { /* size 32 id 434 */
  LARGE_INTEGER Capacity; /* bitsize 64, bitpos 0 */
  LARGE_INTEGER Remaining; /* bitsize 64, bitpos 64 */
  DWORD BlockSize; /* bitsize 32, bitpos 128 */
  DWORD PartitionCount; /* bitsize 32, bitpos 160 */
  BOOLEAN WriteProtected; /* bitsize 8, bitpos 192 */
  BOOLEAN reserved[7]; /* bitsize 56, bitpos 200 */
};
typedef struct _TAPE_GET_MEDIA_PARAMETERS /* id 434 */ TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION { /* size 16 id 435 */
  ULONG Type; /* bitsize 32, bitpos 0 */
  ULONG Partition; /* bitsize 32, bitpos 32 */
  ULONG OffsetLow; /* bitsize 32, bitpos 64 */
  ULONG OffsetHigh; /* bitsize 32, bitpos 96 */
};
typedef struct _TAPE_GET_POSITION /* id 435 */ TAPE_GET_POSITION;
struct _TAPE_PREPARE { /* size 4 id 436 */
  ULONG Operation; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_PREPARE /* id 436 */ TAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS { /* size 8 id 437 */
  BOOLEAN ECC; /* bitsize 8, bitpos 0 */
  BOOLEAN Compression; /* bitsize 8, bitpos 8 */
  BOOLEAN DataPadding; /* bitsize 8, bitpos 16 */
  BOOLEAN ReportSetmarks; /* bitsize 8, bitpos 24 */
  ULONG EOTWarningZoneSize; /* bitsize 32, bitpos 32 */
};
typedef struct _TAPE_SET_DRIVE_PARAMETERS /* id 437 */ TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS { /* size 4 id 438 */
  ULONG BlockSize; /* bitsize 32, bitpos 0 */
};
typedef struct _TAPE_SET_MEDIA_PARAMETERS /* id 438 */ TAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION { /* size 16 id 439 */
  ULONG Method; /* bitsize 32, bitpos 0 */
  ULONG Partition; /* bitsize 32, bitpos 32 */
  ULONG OffsetLow; /* bitsize 32, bitpos 64 */
  ULONG OffsetHigh; /* bitsize 32, bitpos 96 */
};
typedef struct _TAPE_SET_POSITION /* id 439 */ TAPE_SET_POSITION;
struct _TAPE_WRITE_MARKS { /* size 8 id 440 */
  ULONG Type; /* bitsize 32, bitpos 0 */
  ULONG Count; /* bitsize 32, bitpos 32 */
};
typedef struct _TAPE_WRITE_MARKS /* id 440 */ TAPE_WRITE_MARKS;
typedef struct %anon441 { /* size 8 */
  HINSTANCE hInst; /* bitsize 32, bitpos 0 */
  UINT nID; /* bitsize 32, bitpos 32 */
} TBADDBITMAP;
typedef struct %anon441 *LPTBADDBITMAP;
struct _TBBUTTON { /* size 20 id 442 */
  int iBitmap; /* bitsize 32, bitpos 0 */
  int idCommand; /* bitsize 32, bitpos 32 */
  BYTE fsState; /* bitsize 8, bitpos 64 */
  BYTE fsStyle; /* bitsize 8, bitpos 72 */
  DWORD dwData; /* bitsize 32, bitpos 96 */
  int iString; /* bitsize 32, bitpos 128 */
};
typedef struct _TBBUTTON /* id 442 */ TBBUTTON;
typedef struct _TBBUTTON /* id 442 */ *PTBBUTTON;
typedef struct _TBBUTTON /* id 442 */ *LPTBBUTTON;
typedef TBBUTTON *LPCTBBUTTON;
typedef struct %anon443 { /* size 44 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  int iItem; /* bitsize 32, bitpos 96 */
  TBBUTTON tbButton; /* bitsize 160, bitpos 128 */
  int cchText; /* bitsize 32, bitpos 288 */
  LPTSTR pszText; /* bitsize 32, bitpos 320 */
} TBNOTIFY;
typedef struct %anon443 *LPTBNOTIFY;
typedef struct %anon444 { /* size 12 */
  HKEY hkr; /* bitsize 32, bitpos 0 */
  LPCTSTR pszSubKey; /* bitsize 32, bitpos 32 */
  LPCTSTR pszValueName; /* bitsize 32, bitpos 64 */
} TBSAVEPARAMS;
struct _TC_HITTESTINFO { /* size 12 id 445 */
  POINT pt; /* bitsize 64, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 64 */
};
typedef struct _TC_HITTESTINFO /* id 445 */ TC_HITTESTINFO;
struct _TC_ITEM { /* size 28 id 446 */
  UINT mask; /* bitsize 32, bitpos 0 */
  UINT lpReserved1; /* bitsize 32, bitpos 32 */
  UINT lpReserved2; /* bitsize 32, bitpos 64 */
  LPTSTR pszText; /* bitsize 32, bitpos 96 */
  int cchTextMax; /* bitsize 32, bitpos 128 */
  int iImage; /* bitsize 32, bitpos 160 */
  LPARAM lParam; /* bitsize 32, bitpos 192 */
};
typedef struct _TC_ITEM /* id 446 */ TC_ITEM;
struct _TC_ITEMHEADER { /* size 24 id 447 */
  UINT mask; /* bitsize 32, bitpos 0 */
  UINT lpReserved1; /* bitsize 32, bitpos 32 */
  UINT lpReserved2; /* bitsize 32, bitpos 64 */
  LPTSTR pszText; /* bitsize 32, bitpos 96 */
  int cchTextMax; /* bitsize 32, bitpos 128 */
  int iImage; /* bitsize 32, bitpos 160 */
};
typedef struct _TC_ITEMHEADER /* id 447 */ TC_ITEMHEADER;
struct _TC_KEYDOWN { /* size 20 id 448 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  WORD wVKey; /* bitsize 16, bitpos 96 */
  UINT flags; /* bitsize 32, bitpos 128 */
};
typedef struct _TC_KEYDOWN /* id 448 */ TC_KEYDOWN;
struct _textrange { /* size 12 id 449 */
  CHARRANGE chrg; /* bitsize 64, bitpos 0 */
  LPSTR lpstrText; /* bitsize 32, bitpos 64 */
};
typedef struct _textrange /* id 449 */ TEXTRANGE;
struct _TIME_ZONE_INFORMATION { /* size 172 id 450 */
  LONG Bias; /* bitsize 32, bitpos 0 */
  WCHAR StandardName[32]; /* bitsize 512, bitpos 32 */
  SYSTEMTIME StandardDate; /* bitsize 128, bitpos 544 */
  LONG StandardBias; /* bitsize 32, bitpos 672 */
  WCHAR DaylightName[32]; /* bitsize 512, bitpos 704 */
  SYSTEMTIME DaylightDate; /* bitsize 128, bitpos 1216 */
  LONG DaylightBias; /* bitsize 32, bitpos 1344 */
};
typedef struct _TIME_ZONE_INFORMATION /* id 450 */ TIME_ZONE_INFORMATION;
typedef struct _TIME_ZONE_INFORMATION /* id 450 */ *LPTIME_ZONE_INFORMATION;
struct tagTOGGLEKEYS { /* size 8 id 451 */
  DWORD cbSize; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
};
typedef struct tagTOGGLEKEYS /* id 451 */ TOGGLEKEYS;
struct _TOKEN_SOURCE { /* size 16 id 452 */
  CHAR SourceName[8]; /* bitsize 64, bitpos 0 */
  LUID SourceIdentifier; /* bitsize 64, bitpos 64 */
};
typedef struct _TOKEN_SOURCE /* id 452 */ TOKEN_SOURCE;
struct _TOKEN_CONTROL { /* size 40 id 453 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LUID ModifiedId; /* bitsize 64, bitpos 128 */
  TOKEN_SOURCE TokenSource; /* bitsize 128, bitpos 192 */
};
typedef struct _TOKEN_CONTROL /* id 453 */ TOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL { /* size 4 id 454 */
  PACL DefaultDacl; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_DEFAULT_DACL /* id 454 */ TOKEN_DEFAULT_DACL;
struct _TOKEN_GROUPS { /* size 12 id 455 */
  DWORD GroupCount; /* bitsize 32, bitpos 0 */
  SID_AND_ATTRIBUTES Groups[1]; /* bitsize 64, bitpos 32 */
};
typedef struct _TOKEN_GROUPS /* id 455 */ TOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 455 */ *PTOKEN_GROUPS;
typedef struct _TOKEN_GROUPS /* id 455 */ *LPTOKEN_GROUPS;
struct _TOKEN_OWNER { /* size 4 id 456 */
  PSID Owner; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_OWNER /* id 456 */ TOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP { /* size 4 id 457 */
  PSID PrimaryGroup; /* bitsize 32, bitpos 0 */
};
typedef struct _TOKEN_PRIMARY_GROUP /* id 457 */ TOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES { /* size 16 id 458 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 0 */
  LUID_AND_ATTRIBUTES Privileges[1]; /* bitsize 96, bitpos 32 */
};
typedef struct _TOKEN_PRIVILEGES /* id 458 */ TOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 458 */ *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_PRIVILEGES /* id 458 */ *LPTOKEN_PRIVILEGES;
struct _TOKEN_STATISTICS { /* size 56 id 459 */
  LUID TokenId; /* bitsize 64, bitpos 0 */
  LUID AuthenticationId; /* bitsize 64, bitpos 64 */
  LARGE_INTEGER ExpirationTime; /* bitsize 64, bitpos 128 */
  TOKEN_TYPE TokenType; /* bitsize 32, bitpos 192 */
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; /* bitsize 32, bitpos 224 */
  DWORD DynamicCharged; /* bitsize 32, bitpos 256 */
  DWORD DynamicAvailable; /* bitsize 32, bitpos 288 */
  DWORD GroupCount; /* bitsize 32, bitpos 320 */
  DWORD PrivilegeCount; /* bitsize 32, bitpos 352 */
  LUID ModifiedId; /* bitsize 64, bitpos 384 */
};
typedef struct _TOKEN_STATISTICS /* id 459 */ TOKEN_STATISTICS;
struct _TOKEN_USER { /* size 8 id 460 */
  SID_AND_ATTRIBUTES User; /* bitsize 64, bitpos 0 */
};
typedef struct _TOKEN_USER /* id 460 */ TOKEN_USER;
typedef struct %anon461 { /* size 40 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT uFlags; /* bitsize 32, bitpos 32 */
  HWND hwnd; /* bitsize 32, bitpos 64 */
  UINT uId; /* bitsize 32, bitpos 96 */
  RECT rect; /* bitsize 128, bitpos 128 */
  HINSTANCE hinst; /* bitsize 32, bitpos 256 */
  LPTSTR lpszText; /* bitsize 32, bitpos 288 */
} TOOLINFO;
typedef struct %anon461 *PTOOLINFO;
typedef struct %anon461 *LPTOOLINFO;
typedef struct %anon462 { /* size 104 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  LPTSTR lpszText; /* bitsize 32, bitpos 96 */
  char szText[80]; /* bitsize 640, bitpos 128 */
  HINSTANCE hinst; /* bitsize 32, bitpos 768 */
  UINT uFlags; /* bitsize 32, bitpos 800 */
} TOOLTIPTEXT;
typedef struct %anon462 *LPTOOLTIPTEXT;
struct tagTPMPARAMS { /* size 20 id 463 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  RECT rcExclude; /* bitsize 128, bitpos 32 */
};
typedef struct tagTPMPARAMS /* id 463 */ TPMPARAMS;
typedef struct tagTPMPARAMS /* id 463 */ *LPTPMPARAMS;
struct _TRANSMIT_FILE_BUFFERS { /* size 16 id 464 */
  PVOID Head; /* bitsize 32, bitpos 0 */
  DWORD HeadLength; /* bitsize 32, bitpos 32 */
  PVOID Tail; /* bitsize 32, bitpos 64 */
  DWORD TailLength; /* bitsize 32, bitpos 96 */
};
typedef struct _TRANSMIT_FILE_BUFFERS /* id 464 */ TRANSMIT_FILE_BUFFERS;
struct _TT_HITTESTINFO { /* size 52 id 465 */
  HWND hwnd; /* bitsize 32, bitpos 0 */
  POINT pt; /* bitsize 64, bitpos 32 */
  TOOLINFO ti; /* bitsize 320, bitpos 96 */
};
typedef struct _TT_HITTESTINFO /* id 465 */ TTHITTESTINFO;
typedef struct _TT_HITTESTINFO /* id 465 */ *LPHITTESTINFO;
struct tagTTPOLYCURVE { /* size 12 id 466 */
  WORD wType; /* bitsize 16, bitpos 0 */
  WORD cpfx; /* bitsize 16, bitpos 16 */
  POINTFX apfx[1]; /* bitsize 64, bitpos 32 */
};
typedef struct tagTTPOLYCURVE /* id 466 */ TTPOLYCURVE;
typedef struct tagTTPOLYCURVE /* id 466 */ *LPTTPOLYCURVE;
struct _TTPOLYGONHEADER { /* size 16 id 467 */
  DWORD cb; /* bitsize 32, bitpos 0 */
  DWORD dwType; /* bitsize 32, bitpos 32 */
  POINTFX pfxStart; /* bitsize 64, bitpos 64 */
};
typedef struct _TTPOLYGONHEADER /* id 467 */ TTPOLYGONHEADER;
typedef struct _TTPOLYGONHEADER /* id 467 */ *LPTTPOLYGONHEADER;
struct _TV_DISPINFO { /* size 52 id 468 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  TV_ITEM item; /* bitsize 320, bitpos 96 */
};
typedef struct _TV_DISPINFO /* id 468 */ TV_DISPINFO;
struct _TVHITTESTINFO { /* size 16 id 469 */
  POINT pt; /* bitsize 64, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 64 */
  HTREEITEM hItem; /* bitsize 32, bitpos 96 */
};
typedef struct _TVHITTESTINFO /* id 469 */ TV_HITTESTINFO;
typedef struct _TVHITTESTINFO /* id 469 */ *LPTV_HITTESTINFO;
struct _TV_INSERTSTRUCT { /* size 48 id 470 */
  HTREEITEM hParent; /* bitsize 32, bitpos 0 */
  HTREEITEM hInsertAfter; /* bitsize 32, bitpos 32 */
  TV_ITEM item; /* bitsize 320, bitpos 64 */
};
typedef struct _TV_INSERTSTRUCT /* id 470 */ TV_INSERTSTRUCT;
typedef struct _TV_INSERTSTRUCT /* id 470 */ *LPTV_INSERTSTRUCT;
struct _TV_KEYDOWN { /* size 20 id 471 */
  NMHDR hdr; /* bitsize 96, bitpos 0 */
  WORD wVKey; /* bitsize 16, bitpos 96 */
  UINT flags; /* bitsize 32, bitpos 128 */
};
typedef struct _TV_KEYDOWN /* id 471 */ TV_KEYDOWN;
struct _TV_SORTCB { /* size 12 id 472 */
  HTREEITEM hParent; /* bitsize 32, bitpos 0 */
  PFNTVCOMPARE lpfnCompare; /* bitsize 32, bitpos 32 */
  LPARAM lParam; /* bitsize 32, bitpos 64 */
};
typedef struct _TV_SORTCB /* id 472 */ TV_SORTCB;
typedef struct _TV_SORTCB /* id 472 */ *LPTV_SORTCB;
typedef struct %anon473 { /* size 8 */
  UINT nSec; /* bitsize 32, bitpos 0 */
  UINT nInc; /* bitsize 32, bitpos 32 */
} UDACCEL;
struct _ULARGE_INTEGER { /* size 8 id 3 */
  DWORD LowPart; /* bitsize 32, bitpos 0 */
  DWORD HighPart; /* bitsize 32, bitpos 32 */
};
typedef struct _ULARGE_INTEGER /* id 3 */ ULARGE_INTEGER;
typedef struct _ULARGE_INTEGER /* id 3 */ *PULARGE_INTEGER;
struct _UNIVERSAL_NAME_INFO { /* size 4 id 474 */
  LPTSTR lpUniversalName; /* bitsize 32, bitpos 0 */
};
typedef struct _UNIVERSAL_NAME_INFO /* id 474 */ UNIVERSAL_NAME_INFO;
struct tagUSEROBJECTFLAGS { /* size 12 id 475 */
  WINBOOL fInherit; /* bitsize 32, bitpos 0 */
  WINBOOL fReserved; /* bitsize 32, bitpos 32 */
  DWORD dwFlags; /* bitsize 32, bitpos 64 */
};
typedef struct tagUSEROBJECTFLAGS /* id 475 */ USEROBJECTFLAGS;
struct value_ent { /* size 16 id 47 */
  LPTSTR ve_valuename; /* bitsize 32, bitpos 0 */
  DWORD ve_valuelen; /* bitsize 32, bitpos 32 */
  DWORD ve_valueptr; /* bitsize 32, bitpos 64 */
  DWORD ve_type; /* bitsize 32, bitpos 96 */
};
typedef struct value_ent /* id 47 */ VALENT;
typedef struct value_ent /* id 47 */ *PVALENT;
struct _VERIFY_INFORMATION { /* size 12 id 476 */
  LARGE_INTEGER StartingOffset; /* bitsize 64, bitpos 0 */
  DWORD Length; /* bitsize 32, bitpos 64 */
};
typedef struct _VERIFY_INFORMATION /* id 476 */ VERIFY_INFORMATION;
struct _VS_FIXEDFILEINFO { /* size 52 id 477 */
  DWORD dwSignature; /* bitsize 32, bitpos 0 */
  DWORD dwStrucVersion; /* bitsize 32, bitpos 32 */
  DWORD dwFileVersionMS; /* bitsize 32, bitpos 64 */
  DWORD dwFileVersionLS; /* bitsize 32, bitpos 96 */
  DWORD dwProductVersionMS; /* bitsize 32, bitpos 128 */
  DWORD dwProductVersionLS; /* bitsize 32, bitpos 160 */
  DWORD dwFileFlagsMask; /* bitsize 32, bitpos 192 */
  DWORD dwFileFlags; /* bitsize 32, bitpos 224 */
  DWORD dwFileOS; /* bitsize 32, bitpos 256 */
  DWORD dwFileType; /* bitsize 32, bitpos 288 */
  DWORD dwFileSubtype; /* bitsize 32, bitpos 320 */
  DWORD dwFileDateMS; /* bitsize 32, bitpos 352 */
  DWORD dwFileDateLS; /* bitsize 32, bitpos 384 */
};
typedef struct _VS_FIXEDFILEINFO /* id 477 */ VS_FIXEDFILEINFO;
struct _WIN32_FIND_DATAA { /* size 320 id 44 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 256 */
  DWORD dwReserved0; /* bitsize 32, bitpos 288 */
  DWORD dwReserved1; /* bitsize 32, bitpos 320 */
  CHAR cFileName[260]; /* bitsize 2080, bitpos 352 */
  CHAR cAlternateFileName[14]; /* bitsize 112, bitpos 2432 */
};
typedef struct _WIN32_FIND_DATAA /* id 44 */ WIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAA /* id 44 */ *LPWIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAA /* id 44 */ *PWIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW { /* size 592 id 478 */
  DWORD dwFileAttributes; /* bitsize 32, bitpos 0 */
  FILETIME ftCreationTime; /* bitsize 64, bitpos 32 */
  FILETIME ftLastAccessTime; /* bitsize 64, bitpos 96 */
  FILETIME ftLastWriteTime; /* bitsize 64, bitpos 160 */
  DWORD nFileSizeHigh; /* bitsize 32, bitpos 224 */
  DWORD nFileSizeLow; /* bitsize 32, bitpos 256 */
  DWORD dwReserved0; /* bitsize 32, bitpos 288 */
  DWORD dwReserved1; /* bitsize 32, bitpos 320 */
  WCHAR cFileName[260]; /* bitsize 4160, bitpos 352 */
  WCHAR cAlternateFileName[14]; /* bitsize 224, bitpos 4512 */
};
typedef struct _WIN32_FIND_DATAW /* id 478 */ WIN32_FIND_DATAW;
typedef struct _WIN32_FIND_DATAW /* id 478 */ *LPWIN32_FIND_DATAW;
typedef struct _WIN32_FIND_DATAW /* id 478 */ *PWIN32_FIND_DATAW;
typedef WIN32_FIND_DATAA WIN32_FIND_DATA;
typedef WIN32_FIND_DATA *LPWIN32_FIND_DATA;
typedef WIN32_FIND_DATA *PWIN32_FIND_DATA;
struct _WIN32_STREAM_ID { /* size 24 id 479 */
  DWORD dwStreamId; /* bitsize 32, bitpos 0 */
  DWORD dwStreamAttributes; /* bitsize 32, bitpos 32 */
  LARGE_INTEGER Size; /* bitsize 64, bitpos 64 */
  DWORD dwStreamNameSize; /* bitsize 32, bitpos 128 */
  WCHAR *cStreamName; /* bitsize 32, bitpos 160 */
};
typedef struct _WIN32_STREAM_ID /* id 479 */ WIN32_STREAM_ID;
struct _WINDOWPLACEMENT { /* size 44 id 480 */
  UINT length; /* bitsize 32, bitpos 0 */
  UINT flags; /* bitsize 32, bitpos 32 */
  UINT showCmd; /* bitsize 32, bitpos 64 */
  POINT ptMinPosition; /* bitsize 64, bitpos 96 */
  POINT ptMaxPosition; /* bitsize 64, bitpos 160 */
  RECT rcNormalPosition; /* bitsize 128, bitpos 224 */
};
typedef struct _WINDOWPLACEMENT /* id 480 */ WINDOWPLACEMENT;
struct _WNDCLASSA { /* size 40 id 14 */
  UINT style; /* bitsize 32, bitpos 0 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 32 */
  int cbClsExtra; /* bitsize 32, bitpos 64 */
  int cbWndExtra; /* bitsize 32, bitpos 96 */
  HANDLE hInstance; /* bitsize 32, bitpos 128 */
  HICON hIcon; /* bitsize 32, bitpos 160 */
  HCURSOR hCursor; /* bitsize 32, bitpos 192 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 224 */
  LPCSTR lpszMenuName; /* bitsize 32, bitpos 256 */
  LPCSTR lpszClassName; /* bitsize 32, bitpos 288 */
};
typedef struct _WNDCLASSA /* id 14 */ WNDCLASSA;
typedef struct _WNDCLASSA /* id 14 */ *LPWNDCLASSA;
struct _WNDCLASSW { /* size 40 id 481 */
  UINT style; /* bitsize 32, bitpos 0 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 32 */
  int cbClsExtra; /* bitsize 32, bitpos 64 */
  int cbWndExtra; /* bitsize 32, bitpos 96 */
  HANDLE hInstance; /* bitsize 32, bitpos 128 */
  HICON hIcon; /* bitsize 32, bitpos 160 */
  HCURSOR hCursor; /* bitsize 32, bitpos 192 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 224 */
  LPCWSTR lpszMenuName; /* bitsize 32, bitpos 256 */
  LPCWSTR lpszClassName; /* bitsize 32, bitpos 288 */
};
typedef struct _WNDCLASSW /* id 481 */ WNDCLASSW;
typedef struct _WNDCLASSW /* id 481 */ *LPWNDCLASSW;
typedef WNDCLASSA WNDCLASS;
typedef WNDCLASS *LPWNDCLASS;
struct _WNDCLASSEXA { /* size 48 id 15 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT style; /* bitsize 32, bitpos 32 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 64 */
  int cbClsExtra; /* bitsize 32, bitpos 96 */
  int cbWndExtra; /* bitsize 32, bitpos 128 */
  HANDLE hInstance; /* bitsize 32, bitpos 160 */
  HICON hIcon; /* bitsize 32, bitpos 192 */
  HCURSOR hCursor; /* bitsize 32, bitpos 224 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 256 */
  LPCSTR lpszMenuName; /* bitsize 32, bitpos 288 */
  LPCSTR lpszClassName; /* bitsize 32, bitpos 320 */
  HICON hIconSm; /* bitsize 32, bitpos 352 */
};
typedef struct _WNDCLASSEXA /* id 15 */ WNDCLASSEXA;
typedef struct _WNDCLASSEXA /* id 15 */ *LPWNDCLASSEXA;
struct _WNDCLASSEXW { /* size 48 id 482 */
  UINT cbSize; /* bitsize 32, bitpos 0 */
  UINT style; /* bitsize 32, bitpos 32 */
  WNDPROC lpfnWndProc; /* bitsize 32, bitpos 64 */
  int cbClsExtra; /* bitsize 32, bitpos 96 */
  int cbWndExtra; /* bitsize 32, bitpos 128 */
  HANDLE hInstance; /* bitsize 32, bitpos 160 */
  HICON hIcon; /* bitsize 32, bitpos 192 */
  HCURSOR hCursor; /* bitsize 32, bitpos 224 */
  HBRUSH hbrBackground; /* bitsize 32, bitpos 256 */
  LPCWSTR lpszMenuName; /* bitsize 32, bitpos 288 */
  LPCWSTR lpszClassName; /* bitsize 32, bitpos 320 */
  HICON hIconSm; /* bitsize 32, bitpos 352 */
};
typedef struct _WNDCLASSEXW /* id 482 */ WNDCLASSEXW;
typedef struct _WNDCLASSEXW /* id 482 */ *LPWNDCLASSEXW;
typedef WNDCLASSEXA WNDCLASSEX;
typedef WNDCLASSEXA *LPWNDCLASSEX;
struct _CONNECTDLGSTRUCT { /* size 20 id 56 */
  DWORD cbStructure; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  LPNETRESOURCE lpConnRes; /* bitsize 32, bitpos 64 */
  DWORD dwFlags; /* bitsize 32, bitpos 96 */
  DWORD dwDevNum; /* bitsize 32, bitpos 128 */
};
typedef struct _CONNECTDLGSTRUCT /* id 56 */ CONNECTDLGSTRUCT;
typedef struct _CONNECTDLGSTRUCT /* id 56 */ *LPCONNECTDLGSTRUCT;
struct _DISCDLGSTRUCT { /* size 20 id 57 */
  DWORD cbStructure; /* bitsize 32, bitpos 0 */
  HWND hwndOwner; /* bitsize 32, bitpos 32 */
  LPTSTR lpLocalName; /* bitsize 32, bitpos 64 */
  LPTSTR lpRemoteName; /* bitsize 32, bitpos 96 */
  DWORD dwFlags; /* bitsize 32, bitpos 128 */
};
typedef struct _DISCDLGSTRUCT /* id 57 */ DISCDLGSTRUCT;
typedef struct _DISCDLGSTRUCT /* id 57 */ *LPDISCDLGSTRUCT;
struct _NETINFOSTRUCT { /* size 32 id 58 */
  DWORD cbStructure; /* bitsize 32, bitpos 0 */
  DWORD dwProviderVersion; /* bitsize 32, bitpos 32 */
  DWORD dwStatus; /* bitsize 32, bitpos 64 */
  DWORD dwCharacteristics; /* bitsize 32, bitpos 96 */
  DWORD dwHandle; /* bitsize 32, bitpos 128 */
  WORD wNetType; /* bitsize 16, bitpos 160 */
  DWORD dwPrinters; /* bitsize 32, bitpos 192 */
  DWORD dwDrives; /* bitsize 32, bitpos 224 */
};
typedef struct _NETINFOSTRUCT /* id 58 */ NETINFOSTRUCT;
typedef struct _NETINFOSTRUCT /* id 58 */ *LPNETINFOSTRUCT;
struct _NETCONNECTINFOSTRUCT { /* size 20 id 59 */
  DWORD cbStructure; /* bitsize 32, bitpos 0 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  DWORD dwSpeed; /* bitsize 32, bitpos 64 */
  DWORD dwDelay; /* bitsize 32, bitpos 96 */
  DWORD dwOptDataSize; /* bitsize 32, bitpos 128 */
};
typedef struct _NETCONNECTINFOSTRUCT /* id 59 */ NETCONNECTINFOSTRUCT;
typedef struct _NETCONNECTINFOSTRUCT /* id 59 */ *LPNETCONNECTINFOSTRUCT;
typedef int (*ENUMMETAFILEPROC) (/* unknown */);
typedef int (*ENHMETAFILEPROC) (/* unknown */);
typedef int (*ENUMFONTSPROC) (/* unknown */);
typedef int (*FONTENUMPROC) (/* unknown */);
typedef int (*FONTENUMEXPROC) (/* unknown */);
typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE) (/* unknown */);
struct _POINTFLOAT { /* size 8 id 483 */
  FLOAT x; /* bitsize 32, bitpos 0 */
  FLOAT y; /* bitsize 32, bitpos 32 */
};
typedef struct _POINTFLOAT /* id 483 */ POINTFLOAT;
typedef struct _POINTFLOAT /* id 483 */ *PPOINTFLOAT;
struct _GLYPHMETRICSFLOAT { /* size 24 id 64 */
  FLOAT gmfBlackBoxX; /* bitsize 32, bitpos 0 */
  FLOAT gmfBlackBoxY; /* bitsize 32, bitpos 32 */
  POINTFLOAT gmfptGlyphOrigin; /* bitsize 64, bitpos 64 */
  FLOAT gmfCellIncX; /* bitsize 32, bitpos 128 */
  FLOAT gmfCellIncY; /* bitsize 32, bitpos 160 */
};
typedef struct _GLYPHMETRICSFLOAT /* id 64 */ GLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 64 */ *PGLYPHMETRICSFLOAT;
typedef struct _GLYPHMETRICSFLOAT /* id 64 */ *LPGLYPHMETRICSFLOAT;
struct tagLAYERPLANEDESCRIPTOR { /* size 32 id 484 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerPlane; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  COLORREF crTransparent; /* bitsize 32, bitpos 224 */
};
typedef struct tagLAYERPLANEDESCRIPTOR /* id 484 */ LAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 484 */ *PLAYERPLANEDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR /* id 484 */ *LPLAYERPLANEDESCRIPTOR;
struct tagPIXELFORMATDESCRIPTOR { /* size 40 id 485 */
  WORD nSize; /* bitsize 16, bitpos 0 */
  WORD nVersion; /* bitsize 16, bitpos 16 */
  DWORD dwFlags; /* bitsize 32, bitpos 32 */
  BYTE iPixelType; /* bitsize 8, bitpos 64 */
  BYTE cColorBits; /* bitsize 8, bitpos 72 */
  BYTE cRedBits; /* bitsize 8, bitpos 80 */
  BYTE cRedShift; /* bitsize 8, bitpos 88 */
  BYTE cGreenBits; /* bitsize 8, bitpos 96 */
  BYTE cGreenShift; /* bitsize 8, bitpos 104 */
  BYTE cBlueBits; /* bitsize 8, bitpos 112 */
  BYTE cBlueShift; /* bitsize 8, bitpos 120 */
  BYTE cAlphaBits; /* bitsize 8, bitpos 128 */
  BYTE cAlphaShift; /* bitsize 8, bitpos 136 */
  BYTE cAccumBits; /* bitsize 8, bitpos 144 */
  BYTE cAccumRedBits; /* bitsize 8, bitpos 152 */
  BYTE cAccumGreenBits; /* bitsize 8, bitpos 160 */
  BYTE cAccumBlueBits; /* bitsize 8, bitpos 168 */
  BYTE cAccumAlphaBits; /* bitsize 8, bitpos 176 */
  BYTE cDepthBits; /* bitsize 8, bitpos 184 */
  BYTE cStencilBits; /* bitsize 8, bitpos 192 */
  BYTE cAuxBuffers; /* bitsize 8, bitpos 200 */
  BYTE iLayerType; /* bitsize 8, bitpos 208 */
  BYTE bReserved; /* bitsize 8, bitpos 216 */
  DWORD dwLayerMask; /* bitsize 32, bitpos 224 */
  DWORD dwVisibleMask; /* bitsize 32, bitpos 256 */
  DWORD dwDamageMask; /* bitsize 32, bitpos 288 */
};
typedef struct tagPIXELFORMATDESCRIPTOR /* id 485 */ PIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 485 */ *PPIXELFORMATDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR /* id 485 */ *LPPIXELFORMATDESCRIPTOR;
typedef struct %anon486 { /* size 96 */
  LPWSTR usri2_name; /* bitsize 32, bitpos 0 */
  LPWSTR usri2_password; /* bitsize 32, bitpos 32 */
  DWORD usri2_password_age; /* bitsize 32, bitpos 64 */
  DWORD usri2_priv; /* bitsize 32, bitpos 96 */
  LPWSTR usri2_home_dir; /* bitsize 32, bitpos 128 */
  LPWSTR usri2_comment; /* bitsize 32, bitpos 160 */
  DWORD usri2_flags; /* bitsize 32, bitpos 192 */
  LPWSTR usri2_script_path; /* bitsize 32, bitpos 224 */
  DWORD usri2_auth_flags; /* bitsize 32, bitpos 256 */
  LPWSTR usri2_full_name; /* bitsize 32, bitpos 288 */
  LPWSTR usri2_usr_comment; /* bitsize 32, bitpos 320 */
  LPWSTR usri2_parms; /* bitsize 32, bitpos 352 */
  LPWSTR usri2_workstations; /* bitsize 32, bitpos 384 */
  DWORD usri2_last_logon; /* bitsize 32, bitpos 416 */
  DWORD usri2_last_logoff; /* bitsize 32, bitpos 448 */
  DWORD usri2_acct_expires; /* bitsize 32, bitpos 480 */
  DWORD usri2_max_storage; /* bitsize 32, bitpos 512 */
  DWORD usri2_units_per_week; /* bitsize 32, bitpos 544 */
  PBYTE usri2_logon_hours; /* bitsize 32, bitpos 576 */
  DWORD usri2_bad_pw_count; /* bitsize 32, bitpos 608 */
  DWORD usri2_num_logons; /* bitsize 32, bitpos 640 */
  LPWSTR usri2_logon_server; /* bitsize 32, bitpos 672 */
  DWORD usri2_country_code; /* bitsize 32, bitpos 704 */
  DWORD usri2_code_page; /* bitsize 32, bitpos 736 */
} USER_INFO_2;
typedef struct %anon486 *PUSER_INFO_2;
typedef struct %anon486 *LPUSER_INFO_2;
typedef struct %anon487 { /* size 4 */
  LPWSTR usri0_name; /* bitsize 32, bitpos 0 */
} USER_INFO_0;
typedef struct %anon487 *PUSER_INFO_0;
typedef struct %anon487 *LPUSER_INFO_0;
typedef struct %anon488 { /* size 116 */
  LPWSTR usri3_name; /* bitsize 32, bitpos 0 */
  LPWSTR usri3_password; /* bitsize 32, bitpos 32 */
  DWORD usri3_password_age; /* bitsize 32, bitpos 64 */
  DWORD usri3_priv; /* bitsize 32, bitpos 96 */
  LPWSTR usri3_home_dir; /* bitsize 32, bitpos 128 */
  LPWSTR usri3_comment; /* bitsize 32, bitpos 160 */
  DWORD usri3_flags; /* bitsize 32, bitpos 192 */
  LPWSTR usri3_script_path; /* bitsize 32, bitpos 224 */
  DWORD usri3_auth_flags; /* bitsize 32, bitpos 256 */
  LPWSTR usri3_full_name; /* bitsize 32, bitpos 288 */
  LPWSTR usri3_usr_comment; /* bitsize 32, bitpos 320 */
  LPWSTR usri3_parms; /* bitsize 32, bitpos 352 */
  LPWSTR usri3_workstations; /* bitsize 32, bitpos 384 */
  DWORD usri3_last_logon; /* bitsize 32, bitpos 416 */
  DWORD usri3_last_logoff; /* bitsize 32, bitpos 448 */
  DWORD usri3_acct_expires; /* bitsize 32, bitpos 480 */
  DWORD usri3_max_storage; /* bitsize 32, bitpos 512 */
  DWORD usri3_units_per_week; /* bitsize 32, bitpos 544 */
  PBYTE usri3_logon_hours; /* bitsize 32, bitpos 576 */
  DWORD usri3_bad_pw_count; /* bitsize 32, bitpos 608 */
  DWORD usri3_num_logons; /* bitsize 32, bitpos 640 */
  LPWSTR usri3_logon_server; /* bitsize 32, bitpos 672 */
  DWORD usri3_country_code; /* bitsize 32, bitpos 704 */
  DWORD usri3_code_page; /* bitsize 32, bitpos 736 */
  DWORD usri3_user_id; /* bitsize 32, bitpos 768 */
  DWORD usri3_primary_group_id; /* bitsize 32, bitpos 800 */
  LPWSTR usri3_profile; /* bitsize 32, bitpos 832 */
  LPWSTR usri3_home_dir_drive; /* bitsize 32, bitpos 864 */
  DWORD usri3_password_expired; /* bitsize 32, bitpos 896 */
} USER_INFO_3;
typedef struct %anon488 *PUSER_INFO_3;
typedef struct %anon488 *LPUSER_INFO_3;
typedef struct %anon489 { /* size 16 */
  LPWSTR grpi2_name; /* bitsize 32, bitpos 0 */
  LPWSTR grpi2_comment; /* bitsize 32, bitpos 32 */
  DWORD grpi2_group_id; /* bitsize 32, bitpos 64 */
  DWORD grpi2_attributes; /* bitsize 32, bitpos 96 */
} GROUP_INFO_2;
typedef struct %anon489 *PGROUP_INFO_2;
typedef struct %anon490 { /* size 4 */
  LPWSTR lgrpi0_name; /* bitsize 32, bitpos 0 */
} LOCALGROUP_INFO_0;
typedef struct %anon490 *PLOCALGROUP_INFO_0;
typedef struct %anon490 *LPLOCALGROUP_INFO_0;
struct tagIMAGE_DOS_HEADER { /* size 64 id 491 */
  WORD e_magic; /* bitsize 16, bitpos 0 */
  WORD e_cblp; /* bitsize 16, bitpos 16 */
  WORD e_cp; /* bitsize 16, bitpos 32 */
  WORD e_crlc; /* bitsize 16, bitpos 48 */
  WORD e_cparhdr; /* bitsize 16, bitpos 64 */
  WORD e_minalloc; /* bitsize 16, bitpos 80 */
  WORD e_maxalloc; /* bitsize 16, bitpos 96 */
  WORD e_ss; /* bitsize 16, bitpos 112 */
  WORD e_sp; /* bitsize 16, bitpos 128 */
  WORD e_csum; /* bitsize 16, bitpos 144 */
  WORD e_ip; /* bitsize 16, bitpos 160 */
  WORD e_cs; /* bitsize 16, bitpos 176 */
  WORD e_lfarlc; /* bitsize 16, bitpos 192 */
  WORD e_ovno; /* bitsize 16, bitpos 208 */
  WORD e_res[4]; /* bitsize 64, bitpos 224 */
  WORD e_oemid; /* bitsize 16, bitpos 288 */
  WORD e_oeminfo; /* bitsize 16, bitpos 304 */
  WORD e_res2[10]; /* bitsize 160, bitpos 320 */
  LONG e_lfanew; /* bitsize 32, bitpos 480 */
};
typedef struct tagIMAGE_DOS_HEADER /* id 491 */ IMAGE_DOS_HEADER;
typedef struct tagIMAGE_DOS_HEADER /* id 491 */ *PIMAGE_DOS_HEADER;
struct tagIMAGE_OS2_HEADER { /* size 64 id 492 */
  WORD ne_magic; /* bitsize 16, bitpos 0 */
  CHAR ne_ver; /* bitsize 8, bitpos 16 */
  CHAR ne_rev; /* bitsize 8, bitpos 24 */
  WORD ne_enttab; /* bitsize 16, bitpos 32 */
  WORD ne_cbenttab; /* bitsize 16, bitpos 48 */
  LONG ne_crc; /* bitsize 32, bitpos 64 */
  WORD ne_flags; /* bitsize 16, bitpos 96 */
  WORD ne_autodata; /* bitsize 16, bitpos 112 */
  WORD ne_heap; /* bitsize 16, bitpos 128 */
  WORD ne_stack; /* bitsize 16, bitpos 144 */
  LONG ne_csip; /* bitsize 32, bitpos 160 */
  LONG ne_sssp; /* bitsize 32, bitpos 192 */
  WORD ne_cseg; /* bitsize 16, bitpos 224 */
  WORD ne_cmod; /* bitsize 16, bitpos 240 */
  WORD ne_cbnrestab; /* bitsize 16, bitpos 256 */
  WORD ne_segtab; /* bitsize 16, bitpos 272 */
  WORD ne_rsrctab; /* bitsize 16, bitpos 288 */
  WORD ne_restab; /* bitsize 16, bitpos 304 */
  WORD ne_modtab; /* bitsize 16, bitpos 320 */
  WORD ne_imptab; /* bitsize 16, bitpos 336 */
  LONG ne_nrestab; /* bitsize 32, bitpos 352 */
  WORD ne_cmovent; /* bitsize 16, bitpos 384 */
  WORD ne_align; /* bitsize 16, bitpos 400 */
  WORD ne_cres; /* bitsize 16, bitpos 416 */
  BYTE ne_exetyp; /* bitsize 8, bitpos 432 */
  BYTE ne_flagsothers; /* bitsize 8, bitpos 440 */
  WORD ne_pretthunks; /* bitsize 16, bitpos 448 */
  WORD ne_psegrefbytes; /* bitsize 16, bitpos 464 */
  WORD ne_swaparea; /* bitsize 16, bitpos 480 */
  WORD ne_expver; /* bitsize 16, bitpos 496 */
};
typedef struct tagIMAGE_OS2_HEADER /* id 492 */ IMAGE_OS2_HEADER;
typedef struct tagIMAGE_OS2_HEADER /* id 492 */ *PIMAGE_OS2_HEADER;
struct tagIMAGE_VXD_HEADER { /* size 196 id 493 */
  WORD e32_magic; /* bitsize 16, bitpos 0 */
  BYTE e32_border; /* bitsize 8, bitpos 16 */
  BYTE e32_worder; /* bitsize 8, bitpos 24 */
  DWORD e32_level; /* bitsize 32, bitpos 32 */
  WORD e32_cpu; /* bitsize 16, bitpos 64 */
  WORD e32_os; /* bitsize 16, bitpos 80 */
  DWORD e32_ver; /* bitsize 32, bitpos 96 */
  DWORD e32_mflags; /* bitsize 32, bitpos 128 */
  DWORD e32_mpages; /* bitsize 32, bitpos 160 */
  DWORD e32_startobj; /* bitsize 32, bitpos 192 */
  DWORD e32_eip; /* bitsize 32, bitpos 224 */
  DWORD e32_stackobj; /* bitsize 32, bitpos 256 */
  DWORD e32_esp; /* bitsize 32, bitpos 288 */
  DWORD e32_pagesize; /* bitsize 32, bitpos 320 */
  DWORD e32_lastpagesize; /* bitsize 32, bitpos 352 */
  DWORD e32_fixupsize; /* bitsize 32, bitpos 384 */
  DWORD e32_fisupsum; /* bitsize 32, bitpos 416 */
  DWORD e32_ldrsize; /* bitsize 32, bitpos 448 */
  DWORD e32_ldrsum; /* bitsize 32, bitpos 480 */
  DWORD e32_objtab; /* bitsize 32, bitpos 512 */
  DWORD e32_objcnt; /* bitsize 32, bitpos 544 */
  DWORD e32_objmap; /* bitsize 32, bitpos 576 */
  DWORD e32_itermap; /* bitsize 32, bitpos 608 */
  DWORD e32_rsrctab; /* bitsize 32, bitpos 640 */
  DWORD e32_rsrccnt; /* bitsize 32, bitpos 672 */
  DWORD e32_restab; /* bitsize 32, bitpos 704 */
  DWORD e32_enttab; /* bitsize 32, bitpos 736 */
  DWORD e32_dirtab; /* bitsize 32, bitpos 768 */
  DWORD e32_dircnt; /* bitsize 32, bitpos 800 */
  DWORD e32_fpagetab; /* bitsize 32, bitpos 832 */
  DWORD e32_frectab; /* bitsize 32, bitpos 864 */
  DWORD e32_impmod; /* bitsize 32, bitpos 896 */
  DWORD e32_impmodcnt; /* bitsize 32, bitpos 928 */
  DWORD e32_impproc; /* bitsize 32, bitpos 960 */
  DWORD e32_pagesum; /* bitsize 32, bitpos 992 */
  DWORD e32_datapage; /* bitsize 32, bitpos 1024 */
  DWORD e32_preload; /* bitsize 32, bitpos 1056 */
  DWORD e32_nrestab; /* bitsize 32, bitpos 1088 */
  DWORD e32_cbnrestab; /* bitsize 32, bitpos 1120 */
  DWORD e32_nressum; /* bitsize 32, bitpos 1152 */
  DWORD e32_autodata; /* bitsize 32, bitpos 1184 */
  DWORD e32_debuginfo; /* bitsize 32, bitpos 1216 */
  DWORD e32_debuglen; /* bitsize 32, bitpos 1248 */
  DWORD e32_instpreload; /* bitsize 32, bitpos 1280 */
  DWORD e32_instdemand; /* bitsize 32, bitpos 1312 */
  DWORD e32_heapsize; /* bitsize 32, bitpos 1344 */
  BYTE e32_res3[12]; /* bitsize 96, bitpos 1376 */
  DWORD e32_winresoff; /* bitsize 32, bitpos 1472 */
  DWORD e32_winreslen; /* bitsize 32, bitpos 1504 */
  WORD e32_devid; /* bitsize 16, bitpos 1536 */
  WORD e32_ddkver; /* bitsize 16, bitpos 1552 */
};
typedef struct tagIMAGE_VXD_HEADER /* id 493 */ IMAGE_VXD_HEADER;
typedef struct tagIMAGE_VXD_HEADER /* id 493 */ *PIMAGE_VXD_HEADER;
